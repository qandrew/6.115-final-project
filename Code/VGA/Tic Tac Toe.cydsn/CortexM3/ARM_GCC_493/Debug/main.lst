ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.main,"ax",%progbits
  19              		.align	2
  20              		.global	main
  21              		.thumb
  22              		.thumb_func
  23              		.type	main, %function
  24              	main:
  25              	.LFB63:
  26              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  *
   3:.\main.c      ****  * Copyright Andrew MIT 6.115, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF MIT 6.115.
   9:.\main.c      ****  *
  10:.\main.c      ****  * This file is necessary for your project to build.
  11:.\main.c      ****  * Please do not delete it.
  12:.\main.c      ****  *
  13:.\main.c      ****  * ========================================
  14:.\main.c      **** */
  15:.\main.c      **** 
  16:.\main.c      **** #include <device.h>
  17:.\main.c      **** #include <unistd.h>
  18:.\main.c      **** 
  19:.\main.c      **** // files I made
  20:.\main.c      **** #include <disp.h>
  21:.\main.c      **** #include <tic_tac_all.h>
  22:.\main.c      **** #include <8051_read.h>
  23:.\main.c      **** 
  24:.\main.c      **** //methods in main
  25:.\main.c      **** void main_play_ttc(); //the two player one
  26:.\main.c      **** void main_play_tta_ai(); //ai vs ai
  27:.\main.c      **** void main_test_disp(); // just test the databus
  28:.\main.c      **** 
  29:.\main.c      **** void main_flashing_tta();
  30:.\main.c      **** 
  31:.\main.c      **** void main()
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 2


  32:.\main.c      **** {	    
  27              		.loc 1 32 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  33:.\main.c      ****     
  34:.\main.c      ****     //main_play_ttc() ; // take out inverter and connection to 7430, run keypad with cap
  35:.\main.c      ****     //main_play_tta_ai(); // take out inverter, run keypad with cap
  36:.\main.c      ****     //main_test_disp();
  37:.\main.c      ****     main_flashing_tta();
  37              		.loc 1 37 0
  38 0004 FFF7FEFF 		bl	main_flashing_tta
  39              	.L2:
  38:.\main.c      ****     
  39:.\main.c      ****     
  40:.\main.c      ****     
  41:.\main.c      ****     for(;;){} //pause
  40              		.loc 1 41 0 discriminator 1
  41 0008 FEE7     		b	.L2
  42              		.cfi_endproc
  43              	.LFE63:
  44              		.size	main, .-main
  45 000a 00BF     		.section	.rodata
  46              		.align	2
  47              	.LC0:
  48 0000 50303A20 		.ascii	"P0: \000"
  48      00
  49 0005 000000   		.align	2
  50              	.LC1:
  51 0008 47414D45 		.ascii	"GAME OVER!\000"
  51      204F5645 
  51      522100
  52              		.section	.text.main_flashing_tta,"ax",%progbits
  53              		.align	2
  54              		.global	main_flashing_tta
  55              		.thumb
  56              		.thumb_func
  57              		.type	main_flashing_tta, %function
  58              	main_flashing_tta:
  59              	.LFB64:
  42:.\main.c      **** }
  43:.\main.c      **** 
  44:.\main.c      **** void main_flashing_tta(){
  60              		.loc 1 44 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 2200
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 80B5     		push	{r7, lr}
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 7, -8
  67              		.cfi_offset 14, -4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 3


  68 0002 ADF50A6D 		sub	sp, sp, #2208
  69              		.cfi_def_cfa_offset 2216
  70 0006 02AF     		add	r7, sp, #8
  71              		.cfi_def_cfa 7, 2208
  45:.\main.c      ****     // this is the function compatible with the cap sensor input
  46:.\main.c      ****     LCD_Start();					    // initialize lcd
  72              		.loc 1 46 0
  73 0008 FFF7FEFF 		bl	LCD_Start
  47:.\main.c      ****     LCD_ClearDisplay();
  74              		.loc 1 47 0
  75 000c 0120     		movs	r0, #1
  76 000e FFF7FEFF 		bl	LCD_WriteControl
  48:.\main.c      ****     UART_Start();                       // initialize UART
  77              		.loc 1 48 0
  78 0012 FFF7FEFF 		bl	UART_Start
  49:.\main.c      ****     UART_PutChar(0x81); // init connection; set to 16x12 image 
  79              		.loc 1 49 0
  80 0016 8120     		movs	r0, #129
  81 0018 FFF7FEFF 		bl	UART_PutChar
  50:.\main.c      ****     
  51:.\main.c      ****     struct disp_grid_81 disp; 
  52:.\main.c      ****     disp_grid_init(&disp,0x3F); // init our display grid matrix to white  
  82              		.loc 1 52 0
  83 001c 07F28453 		addw	r3, r7, #1412
  84 0020 1846     		mov	r0, r3
  85 0022 3F21     		movs	r1, #63
  86 0024 FFF7FEFF 		bl	disp_grid_init
  53:.\main.c      ****     disp_grid_transmit(&disp);
  87              		.loc 1 53 0
  88 0028 07F28453 		addw	r3, r7, #1412
  89 002c 1846     		mov	r0, r3
  90 002e FFF7FEFF 		bl	disp_grid_transmit
  54:.\main.c      ****     
  55:.\main.c      ****     struct tic_tac_ai tta;
  56:.\main.c      ****     tta_init(&tta,4,3,false,true); //first bool for player 1, second bool for player 2. true means 
  91              		.loc 1 56 0
  92 0032 3A46     		mov	r2, r7
  93 0034 0123     		movs	r3, #1
  94 0036 0093     		str	r3, [sp]
  95 0038 1046     		mov	r0, r2
  96 003a 0421     		movs	r1, #4
  97 003c 0322     		movs	r2, #3
  98 003e 0023     		movs	r3, #0
  99 0040 FFF7FEFF 		bl	tta_init
  57:.\main.c      ****     disp_grid_init_ttc(&disp, tta.game.grid);
 100              		.loc 1 57 0
 101 0044 07F28452 		addw	r2, r7, #1412
 102 0048 3B46     		mov	r3, r7
 103 004a 03F28443 		addw	r3, r3, #1156
 104 004e 1046     		mov	r0, r2
 105 0050 1946     		mov	r1, r3
 106 0052 FFF7FEFF 		bl	disp_grid_init_ttc
  58:.\main.c      ****     disp_grid_draw_xia(&disp,26,16,0x30); // draw xia
 107              		.loc 1 58 0
 108 0056 07F28453 		addw	r3, r7, #1412
 109 005a 1846     		mov	r0, r3
 110 005c 1A21     		movs	r1, #26
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 4


 111 005e 1022     		movs	r2, #16
 112 0060 3023     		movs	r3, #48
 113 0062 FFF7FEFF 		bl	disp_grid_draw_xia
  59:.\main.c      ****     disp_grid_transmit(&disp);
 114              		.loc 1 59 0
 115 0066 07F28453 		addw	r3, r7, #1412
 116 006a 1846     		mov	r0, r3
 117 006c FFF7FEFF 		bl	disp_grid_transmit
  60:.\main.c      ****     
  61:.\main.c      ****     int x,y,z, count; uint8 Values; uint8 Values_prev;
  62:.\main.c      ****     Values_prev = Pin0_Read();
 118              		.loc 1 62 0
 119 0070 FFF7FEFF 		bl	Pin0_Read
 120 0074 0346     		mov	r3, r0
 121 0076 87F88738 		strb	r3, [r7, #2183]
  63:.\main.c      ****     x = 0; y = 0; z = 0; //test value
 122              		.loc 1 63 0
 123 007a 0023     		movs	r3, #0
 124 007c C7F89438 		str	r3, [r7, #2196]
 125 0080 0023     		movs	r3, #0
 126 0082 C7F89038 		str	r3, [r7, #2192]
 127 0086 0023     		movs	r3, #0
 128 0088 C7F88C38 		str	r3, [r7, #2188]
  64:.\main.c      ****     count = 0;
 129              		.loc 1 64 0
 130 008c 0023     		movs	r3, #0
 131 008e C7F88838 		str	r3, [r7, #2184]
  65:.\main.c      ****     
  66:.\main.c      ****     uint8 red_flash; //the temporary location flasher
  67:.\main.c      ****     uint8 other_val;
  68:.\main.c      ****     other_val = disp_grid_ttc_getval(&disp,z*16 + y*4 + x); // get the nonred val
 132              		.loc 1 68 0
 133 0092 D7F88C38 		ldr	r3, [r7, #2188]
 134 0096 9A00     		lsls	r2, r3, #2
 135 0098 D7F89038 		ldr	r3, [r7, #2192]
 136 009c 1344     		add	r3, r3, r2
 137 009e 9A00     		lsls	r2, r3, #2
 138 00a0 D7F89438 		ldr	r3, [r7, #2196]
 139 00a4 1344     		add	r3, r3, r2
 140 00a6 07F28452 		addw	r2, r7, #1412
 141 00aa 1046     		mov	r0, r2
 142 00ac 1946     		mov	r1, r3
 143 00ae FFF7FEFF 		bl	disp_grid_ttc_getval
 144 00b2 0346     		mov	r3, r0
 145 00b4 87F88638 		strb	r3, [r7, #2182]
  69:.\main.c      ****     red_flash = 0x30; //map to color red
 146              		.loc 1 69 0
 147 00b8 3023     		movs	r3, #48
 148 00ba 87F88538 		strb	r3, [r7, #2181]
  70:.\main.c      ****     
  71:.\main.c      ****     tta_step(&disp,&tta,x,y,z); //AI Increment also 
 149              		.loc 1 71 0
 150 00be 07F28451 		addw	r1, r7, #1412
 151 00c2 3A46     		mov	r2, r7
 152 00c4 D7F88C38 		ldr	r3, [r7, #2188]
 153 00c8 0093     		str	r3, [sp]
 154 00ca 0846     		mov	r0, r1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 5


 155 00cc 1146     		mov	r1, r2
 156 00ce D7F89428 		ldr	r2, [r7, #2196]
 157 00d2 D7F89038 		ldr	r3, [r7, #2192]
 158 00d6 FFF7FEFF 		bl	tta_step
  72:.\main.c      ****     
  73:.\main.c      ****     while (tta.game.game_not_won == 0){
 159              		.loc 1 73 0
 160 00da 00E1     		b	.L4
 161              	.L15:
  74:.\main.c      **** //        Values = read_from_8255(Values); //read and print
  75:.\main.c      ****         
  76:.\main.c      ****         LCD_ClearDisplay();
 162              		.loc 1 76 0
 163 00dc 0120     		movs	r0, #1
 164 00de FFF7FEFF 		bl	LCD_WriteControl
  77:.\main.c      ****         
  78:.\main.c      ****         LCD_Position(0,0); //move back to top row
 165              		.loc 1 78 0
 166 00e2 0020     		movs	r0, #0
 167 00e4 0021     		movs	r1, #0
 168 00e6 FFF7FEFF 		bl	LCD_Position
  79:.\main.c      ****         Values = Pin0_Read(); //next, read a new value
 169              		.loc 1 79 0
 170 00ea FFF7FEFF 		bl	Pin0_Read
 171 00ee 0346     		mov	r3, r0
 172 00f0 87F88438 		strb	r3, [r7, #2180]
  80:.\main.c      ****         LCD_PrintString("P0: ");
 173              		.loc 1 80 0
 174 00f4 8248     		ldr	r0, .L16
 175 00f6 FFF7FEFF 		bl	LCD_PrintString
  81:.\main.c      ****         LCD_PrintNumber(Values); //print value I am getting
 176              		.loc 1 81 0
 177 00fa 97F88438 		ldrb	r3, [r7, #2180]	@ zero_extendqisi2
 178 00fe 1846     		mov	r0, r3
 179 0100 FFF7FEFF 		bl	LCD_PrintU32Number
  82:.\main.c      ****         
  83:.\main.c      ****         if (Values != Values_prev){
 180              		.loc 1 83 0
 181 0104 97F88428 		ldrb	r2, [r7, #2180]	@ zero_extendqisi2
 182 0108 97F88738 		ldrb	r3, [r7, #2183]	@ zero_extendqisi2
 183 010c 9A42     		cmp	r2, r3
 184 010e 00F0B080 		beq	.L5
  84:.\main.c      ****             Values_prev = Values; //we don't want nonconsect
 185              		.loc 1 84 0
 186 0112 97F88438 		ldrb	r3, [r7, #2180]
 187 0116 87F88738 		strb	r3, [r7, #2183]
  85:.\main.c      ****             if (Values != 0){
 188              		.loc 1 85 0
 189 011a 97F88438 		ldrb	r3, [r7, #2180]	@ zero_extendqisi2
 190 011e 002B     		cmp	r3, #0
 191 0120 00F0A780 		beq	.L5
  86:.\main.c      ****                 if (Values == 32){
 192              		.loc 1 86 0
 193 0124 97F88438 		ldrb	r3, [r7, #2180]	@ zero_extendqisi2
 194 0128 202B     		cmp	r3, #32
 195 012a 2FD1     		bne	.L6
  87:.\main.c      ****                     tta_step(&disp,&tta,x,y,z); //increment a turn
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 6


 196              		.loc 1 87 0
 197 012c 07F28451 		addw	r1, r7, #1412
 198 0130 3A46     		mov	r2, r7
 199 0132 D7F88C38 		ldr	r3, [r7, #2188]
 200 0136 0093     		str	r3, [sp]
 201 0138 0846     		mov	r0, r1
 202 013a 1146     		mov	r1, r2
 203 013c D7F89428 		ldr	r2, [r7, #2196]
 204 0140 D7F89038 		ldr	r3, [r7, #2192]
 205 0144 FFF7FEFF 		bl	tta_step
  88:.\main.c      ****                     tta_step(&disp,&tta,x,y,z); //AI Increment also 
 206              		.loc 1 88 0
 207 0148 07F28451 		addw	r1, r7, #1412
 208 014c 3A46     		mov	r2, r7
 209 014e D7F88C38 		ldr	r3, [r7, #2188]
 210 0152 0093     		str	r3, [sp]
 211 0154 0846     		mov	r0, r1
 212 0156 1146     		mov	r1, r2
 213 0158 D7F89428 		ldr	r2, [r7, #2196]
 214 015c D7F89038 		ldr	r3, [r7, #2192]
 215 0160 FFF7FEFF 		bl	tta_step
  89:.\main.c      ****                     other_val = disp_grid_ttc_getval(&disp,z*16 + y*4 + x); // get the nonred val
 216              		.loc 1 89 0
 217 0164 D7F88C38 		ldr	r3, [r7, #2188]
 218 0168 9A00     		lsls	r2, r3, #2
 219 016a D7F89038 		ldr	r3, [r7, #2192]
 220 016e 1344     		add	r3, r3, r2
 221 0170 9A00     		lsls	r2, r3, #2
 222 0172 D7F89438 		ldr	r3, [r7, #2196]
 223 0176 1344     		add	r3, r3, r2
 224 0178 07F28452 		addw	r2, r7, #1412
 225 017c 1046     		mov	r0, r2
 226 017e 1946     		mov	r1, r3
 227 0180 FFF7FEFF 		bl	disp_grid_ttc_getval
 228 0184 0346     		mov	r3, r0
 229 0186 87F88638 		strb	r3, [r7, #2182]
 230 018a 72E0     		b	.L5
 231              	.L6:
  90:.\main.c      ****                 }
  91:.\main.c      ****                 else{
  92:.\main.c      ****                     disp_grid_ttc_place_value(&disp,z*16 + y*4 + x,other_val);
 232              		.loc 1 92 0
 233 018c D7F88C38 		ldr	r3, [r7, #2188]
 234 0190 9A00     		lsls	r2, r3, #2
 235 0192 D7F89038 		ldr	r3, [r7, #2192]
 236 0196 1344     		add	r3, r3, r2
 237 0198 9A00     		lsls	r2, r3, #2
 238 019a D7F89438 		ldr	r3, [r7, #2196]
 239 019e 1A44     		add	r2, r2, r3
 240 01a0 07F28451 		addw	r1, r7, #1412
 241 01a4 97F88638 		ldrb	r3, [r7, #2182]	@ zero_extendqisi2
 242 01a8 0846     		mov	r0, r1
 243 01aa 1146     		mov	r1, r2
 244 01ac 1A46     		mov	r2, r3
 245 01ae FFF7FEFF 		bl	disp_grid_ttc_place_value
  93:.\main.c      ****                     if (Values == 16 && y != 0){ // up
 246              		.loc 1 93 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 7


 247 01b2 97F88438 		ldrb	r3, [r7, #2180]	@ zero_extendqisi2
 248 01b6 102B     		cmp	r3, #16
 249 01b8 09D1     		bne	.L7
 250              		.loc 1 93 0 is_stmt 0 discriminator 1
 251 01ba D7F89038 		ldr	r3, [r7, #2192]
 252 01be 002B     		cmp	r3, #0
 253 01c0 05D0     		beq	.L7
  94:.\main.c      ****                     y--;
 254              		.loc 1 94 0 is_stmt 1
 255 01c2 D7F89038 		ldr	r3, [r7, #2192]
 256 01c6 013B     		subs	r3, r3, #1
 257 01c8 C7F89038 		str	r3, [r7, #2192]
 258 01cc 3EE0     		b	.L8
 259              	.L7:
  95:.\main.c      ****                     }
  96:.\main.c      ****                     else if (Values == 8 && y != 3){ // down
 260              		.loc 1 96 0
 261 01ce 97F88438 		ldrb	r3, [r7, #2180]	@ zero_extendqisi2
 262 01d2 082B     		cmp	r3, #8
 263 01d4 09D1     		bne	.L9
 264              		.loc 1 96 0 is_stmt 0 discriminator 1
 265 01d6 D7F89038 		ldr	r3, [r7, #2192]
 266 01da 032B     		cmp	r3, #3
 267 01dc 05D0     		beq	.L9
  97:.\main.c      ****                         y++;
 268              		.loc 1 97 0 is_stmt 1
 269 01de D7F89038 		ldr	r3, [r7, #2192]
 270 01e2 0133     		adds	r3, r3, #1
 271 01e4 C7F89038 		str	r3, [r7, #2192]
 272 01e8 30E0     		b	.L8
 273              	.L9:
  98:.\main.c      ****                     }
  99:.\main.c      ****                     else if (Values == 4 && x != 0){ // left
 274              		.loc 1 99 0
 275 01ea 97F88438 		ldrb	r3, [r7, #2180]	@ zero_extendqisi2
 276 01ee 042B     		cmp	r3, #4
 277 01f0 09D1     		bne	.L10
 278              		.loc 1 99 0 is_stmt 0 discriminator 1
 279 01f2 D7F89438 		ldr	r3, [r7, #2196]
 280 01f6 002B     		cmp	r3, #0
 281 01f8 05D0     		beq	.L10
 100:.\main.c      ****                         x--;
 282              		.loc 1 100 0 is_stmt 1
 283 01fa D7F89438 		ldr	r3, [r7, #2196]
 284 01fe 013B     		subs	r3, r3, #1
 285 0200 C7F89438 		str	r3, [r7, #2196]
 286 0204 22E0     		b	.L8
 287              	.L10:
 101:.\main.c      ****                     }
 102:.\main.c      ****                     else if (Values == 2 && x != 3){ // right
 288              		.loc 1 102 0
 289 0206 97F88438 		ldrb	r3, [r7, #2180]	@ zero_extendqisi2
 290 020a 022B     		cmp	r3, #2
 291 020c 09D1     		bne	.L11
 292              		.loc 1 102 0 is_stmt 0 discriminator 1
 293 020e D7F89438 		ldr	r3, [r7, #2196]
 294 0212 032B     		cmp	r3, #3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 8


 295 0214 05D0     		beq	.L11
 103:.\main.c      ****                         x++;
 296              		.loc 1 103 0 is_stmt 1
 297 0216 D7F89438 		ldr	r3, [r7, #2196]
 298 021a 0133     		adds	r3, r3, #1
 299 021c C7F89438 		str	r3, [r7, #2196]
 300 0220 14E0     		b	.L8
 301              	.L11:
 104:.\main.c      ****                     }
 105:.\main.c      ****                     else if (Values == 1){ // level shift
 302              		.loc 1 105 0
 303 0222 97F88438 		ldrb	r3, [r7, #2180]	@ zero_extendqisi2
 304 0226 012B     		cmp	r3, #1
 305 0228 10D1     		bne	.L8
 106:.\main.c      ****                         z++;
 306              		.loc 1 106 0
 307 022a D7F88C38 		ldr	r3, [r7, #2188]
 308 022e 0133     		adds	r3, r3, #1
 309 0230 C7F88C38 		str	r3, [r7, #2188]
 107:.\main.c      ****                         z = z % 4;
 310              		.loc 1 107 0
 311 0234 D7F88C28 		ldr	r2, [r7, #2188]
 312 0238 324B     		ldr	r3, .L16+4
 313 023a 1340     		ands	r3, r3, r2
 314 023c 002B     		cmp	r3, #0
 315 023e 03DA     		bge	.L12
 316 0240 013B     		subs	r3, r3, #1
 317 0242 63F00303 		orn	r3, r3, #3
 318 0246 0133     		adds	r3, r3, #1
 319              	.L12:
 320 0248 C7F88C38 		str	r3, [r7, #2188]
 321              	.L8:
 108:.\main.c      ****                     }
 109:.\main.c      ****                     other_val = disp_grid_ttc_getval(&disp,z*16 + y*4 + x); // get the nonred val
 322              		.loc 1 109 0
 323 024c D7F88C38 		ldr	r3, [r7, #2188]
 324 0250 9A00     		lsls	r2, r3, #2
 325 0252 D7F89038 		ldr	r3, [r7, #2192]
 326 0256 1344     		add	r3, r3, r2
 327 0258 9A00     		lsls	r2, r3, #2
 328 025a D7F89438 		ldr	r3, [r7, #2196]
 329 025e 1344     		add	r3, r3, r2
 330 0260 07F28452 		addw	r2, r7, #1412
 331 0264 1046     		mov	r0, r2
 332 0266 1946     		mov	r1, r3
 333 0268 FFF7FEFF 		bl	disp_grid_ttc_getval
 334 026c 0346     		mov	r3, r0
 335 026e 87F88638 		strb	r3, [r7, #2182]
 336              	.L5:
 110:.\main.c      ****                 }
 111:.\main.c      ****             }
 112:.\main.c      ****         }
 113:.\main.c      ****         
 114:.\main.c      ****         if (count == 0){ //decide print
 337              		.loc 1 114 0
 338 0272 D7F88838 		ldr	r3, [r7, #2184]
 339 0276 002B     		cmp	r3, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 9


 340 0278 16D1     		bne	.L13
 115:.\main.c      ****             count = 1;
 341              		.loc 1 115 0
 342 027a 0123     		movs	r3, #1
 343 027c C7F88838 		str	r3, [r7, #2184]
 116:.\main.c      ****             disp_grid_ttc_place_value(&disp,z*16 + y*4 + x,red_flash);
 344              		.loc 1 116 0
 345 0280 D7F88C38 		ldr	r3, [r7, #2188]
 346 0284 9A00     		lsls	r2, r3, #2
 347 0286 D7F89038 		ldr	r3, [r7, #2192]
 348 028a 1344     		add	r3, r3, r2
 349 028c 9A00     		lsls	r2, r3, #2
 350 028e D7F89438 		ldr	r3, [r7, #2196]
 351 0292 1A44     		add	r2, r2, r3
 352 0294 07F28451 		addw	r1, r7, #1412
 353 0298 97F88538 		ldrb	r3, [r7, #2181]	@ zero_extendqisi2
 354 029c 0846     		mov	r0, r1
 355 029e 1146     		mov	r1, r2
 356 02a0 1A46     		mov	r2, r3
 357 02a2 FFF7FEFF 		bl	disp_grid_ttc_place_value
 358 02a6 15E0     		b	.L14
 359              	.L13:
 117:.\main.c      ****         }
 118:.\main.c      ****         else{
 119:.\main.c      ****             count = 0;
 360              		.loc 1 119 0
 361 02a8 0023     		movs	r3, #0
 362 02aa C7F88838 		str	r3, [r7, #2184]
 120:.\main.c      ****             disp_grid_ttc_place_value(&disp,z*16 + y*4 + x,other_val);
 363              		.loc 1 120 0
 364 02ae D7F88C38 		ldr	r3, [r7, #2188]
 365 02b2 9A00     		lsls	r2, r3, #2
 366 02b4 D7F89038 		ldr	r3, [r7, #2192]
 367 02b8 1344     		add	r3, r3, r2
 368 02ba 9A00     		lsls	r2, r3, #2
 369 02bc D7F89438 		ldr	r3, [r7, #2196]
 370 02c0 1A44     		add	r2, r2, r3
 371 02c2 07F28451 		addw	r1, r7, #1412
 372 02c6 97F88638 		ldrb	r3, [r7, #2182]	@ zero_extendqisi2
 373 02ca 0846     		mov	r0, r1
 374 02cc 1146     		mov	r1, r2
 375 02ce 1A46     		mov	r2, r3
 376 02d0 FFF7FEFF 		bl	disp_grid_ttc_place_value
 377              	.L14:
 121:.\main.c      ****         }
 122:.\main.c      ****         disp_grid_transmit(&disp);
 378              		.loc 1 122 0
 379 02d4 07F28453 		addw	r3, r7, #1412
 380 02d8 1846     		mov	r0, r3
 381 02da FFF7FEFF 		bl	disp_grid_transmit
 382              	.L4:
  73:.\main.c      **** //        Values = read_from_8255(Values); //read and print
 383              		.loc 1 73 0
 384 02de 3B46     		mov	r3, r7
 385 02e0 D3F88034 		ldr	r3, [r3, #1152]
 386 02e4 002B     		cmp	r3, #0
 387 02e6 3FF4F9AE 		beq	.L15
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 10


 123:.\main.c      ****     }
 124:.\main.c      ****     LCD_ClearDisplay();
 388              		.loc 1 124 0
 389 02ea 0120     		movs	r0, #1
 390 02ec FFF7FEFF 		bl	LCD_WriteControl
 125:.\main.c      ****     LCD_PrintString("GAME OVER!");   
 391              		.loc 1 125 0
 392 02f0 0548     		ldr	r0, .L16+8
 393 02f2 FFF7FEFF 		bl	LCD_PrintString
 126:.\main.c      ****     
 127:.\main.c      **** }
 394              		.loc 1 127 0
 395 02f6 07F69807 		addw	r7, r7, #2200
 396              		.cfi_def_cfa_offset 8
 397 02fa BD46     		mov	sp, r7
 398              		.cfi_def_cfa_register 13
 399              		@ sp needed
 400 02fc 80BD     		pop	{r7, pc}
 401              	.L17:
 402 02fe 00BF     		.align	2
 403              	.L16:
 404 0300 00000000 		.word	.LC0
 405 0304 03000080 		.word	-2147483645
 406 0308 08000000 		.word	.LC1
 407              		.cfi_endproc
 408              	.LFE64:
 409              		.size	main_flashing_tta, .-main_flashing_tta
 410              		.section	.rodata
 411 0013 00       		.align	2
 412              	.LC2:
 413 0014 50333A20 		.ascii	"P3: \000"
 413      00
 414 0019 000000   		.align	2
 415              	.LC3:
 416 001c 20484558 		.ascii	" HEX: \000"
 416      3A2000
 417              		.section	.text.main_test_disp,"ax",%progbits
 418              		.align	2
 419              		.global	main_test_disp
 420              		.thumb
 421              		.thumb_func
 422              		.type	main_test_disp, %function
 423              	main_test_disp:
 424              	.LFB65:
 128:.\main.c      **** 
 129:.\main.c      **** void main_test_disp(){
 425              		.loc 1 129 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429 0000 80B5     		push	{r7, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0002 82B0     		sub	sp, sp, #8
 434              		.cfi_def_cfa_offset 16
 435 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 11


 436              		.cfi_def_cfa_register 7
 130:.\main.c      ****     LCD_Start();					    // initialize lcd
 437              		.loc 1 130 0
 438 0006 FFF7FEFF 		bl	LCD_Start
 439              	.L19:
 131:.\main.c      ****     uint8 current;
 132:.\main.c      ****     for (;;){
 133:.\main.c      ****         LCD_ClearDisplay();
 440              		.loc 1 133 0 discriminator 1
 441 000a 0120     		movs	r0, #1
 442 000c FFF7FEFF 		bl	LCD_WriteControl
 134:.\main.c      ****         
 135:.\main.c      ****         LCD_Position(0,0); //move back to top row
 443              		.loc 1 135 0 discriminator 1
 444 0010 0020     		movs	r0, #0
 445 0012 0021     		movs	r1, #0
 446 0014 FFF7FEFF 		bl	LCD_Position
 136:.\main.c      ****         current = Pin0_Read(); //next, read a new value
 447              		.loc 1 136 0 discriminator 1
 448 0018 FFF7FEFF 		bl	Pin0_Read
 449 001c 0346     		mov	r3, r0
 450 001e FB71     		strb	r3, [r7, #7]
 137:.\main.c      ****         LCD_PrintString("P0: ");
 451              		.loc 1 137 0 discriminator 1
 452 0020 1048     		ldr	r0, .L20
 453 0022 FFF7FEFF 		bl	LCD_PrintString
 138:.\main.c      ****         LCD_PrintNumber(current); //print value I am getting
 454              		.loc 1 138 0 discriminator 1
 455 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 456 0028 1846     		mov	r0, r3
 457 002a FFF7FEFF 		bl	LCD_PrintU32Number
 139:.\main.c      ****         
 140:.\main.c      ****         LCD_Position(1,0); //move to bot row
 458              		.loc 1 140 0 discriminator 1
 459 002e 0120     		movs	r0, #1
 460 0030 0021     		movs	r1, #0
 461 0032 FFF7FEFF 		bl	LCD_Position
 141:.\main.c      ****         current = Pin3_Read(); //next, read a new value
 462              		.loc 1 141 0 discriminator 1
 463 0036 FFF7FEFF 		bl	Pin3_Read
 464 003a 0346     		mov	r3, r0
 465 003c FB71     		strb	r3, [r7, #7]
 142:.\main.c      ****         LCD_PrintString("P3: ");
 466              		.loc 1 142 0 discriminator 1
 467 003e 0A48     		ldr	r0, .L20+4
 468 0040 FFF7FEFF 		bl	LCD_PrintString
 143:.\main.c      ****         LCD_PutChar(current); //print ascii value
 469              		.loc 1 143 0 discriminator 1
 470 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 471 0046 1846     		mov	r0, r3
 472 0048 FFF7FEFF 		bl	LCD_PutChar
 144:.\main.c      ****         LCD_PrintString(" HEX: ");
 473              		.loc 1 144 0 discriminator 1
 474 004c 0748     		ldr	r0, .L20+8
 475 004e FFF7FEFF 		bl	LCD_PrintString
 145:.\main.c      ****         LCD_PrintNumber(current); //print value I am getting
 476              		.loc 1 145 0 discriminator 1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 12


 477 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 478 0054 1846     		mov	r0, r3
 479 0056 FFF7FEFF 		bl	LCD_PrintU32Number
 146:.\main.c      ****         
 147:.\main.c      ****         waiter(4);
 480              		.loc 1 147 0 discriminator 1
 481 005a 0420     		movs	r0, #4
 482 005c FFF7FEFF 		bl	waiter
 148:.\main.c      ****     }
 483              		.loc 1 148 0 discriminator 1
 484 0060 D3E7     		b	.L19
 485              	.L21:
 486 0062 00BF     		.align	2
 487              	.L20:
 488 0064 00000000 		.word	.LC0
 489 0068 14000000 		.word	.LC2
 490 006c 1C000000 		.word	.LC3
 491              		.cfi_endproc
 492              	.LFE65:
 493              		.size	main_test_disp, .-main_test_disp
 494              		.section	.text.main_play_tta_ai,"ax",%progbits
 495              		.align	2
 496              		.global	main_play_tta_ai
 497              		.thumb
 498              		.thumb_func
 499              		.type	main_play_tta_ai, %function
 500              	main_play_tta_ai:
 501              	.LFB66:
 149:.\main.c      **** }
 150:.\main.c      **** 
 151:.\main.c      **** void main_play_tta_ai(){
 502              		.loc 1 151 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 2200
 505              		@ frame_needed = 1, uses_anonymous_args = 0
 506 0000 80B5     		push	{r7, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 7, -8
 509              		.cfi_offset 14, -4
 510 0002 ADF50A6D 		sub	sp, sp, #2208
 511              		.cfi_def_cfa_offset 2216
 512 0006 02AF     		add	r7, sp, #8
 513              		.cfi_def_cfa 7, 2208
 152:.\main.c      ****     LCD_Start();					    // initialize lcd
 514              		.loc 1 152 0
 515 0008 FFF7FEFF 		bl	LCD_Start
 153:.\main.c      ****     LCD_ClearDisplay();
 516              		.loc 1 153 0
 517 000c 0120     		movs	r0, #1
 518 000e FFF7FEFF 		bl	LCD_WriteControl
 154:.\main.c      ****     UART_Start();                       // initialize UART
 519              		.loc 1 154 0
 520 0012 FFF7FEFF 		bl	UART_Start
 155:.\main.c      ****     UART_PutChar(0x81); // init connection; set to 16x12 image 
 521              		.loc 1 155 0
 522 0016 8120     		movs	r0, #129
 523 0018 FFF7FEFF 		bl	UART_PutChar
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 13


 156:.\main.c      ****     
 157:.\main.c      ****     struct disp_grid_81 disp; 
 158:.\main.c      ****     disp_grid_init(&disp,0x3F); // init our display grid matrix to white  
 524              		.loc 1 158 0
 525 001c 07F5B163 		add	r3, r7, #1416
 526 0020 1846     		mov	r0, r3
 527 0022 3F21     		movs	r1, #63
 528 0024 FFF7FEFF 		bl	disp_grid_init
 159:.\main.c      ****     disp_grid_transmit(&disp);
 529              		.loc 1 159 0
 530 0028 07F5B163 		add	r3, r7, #1416
 531 002c 1846     		mov	r0, r3
 532 002e FFF7FEFF 		bl	disp_grid_transmit
 160:.\main.c      ****     
 161:.\main.c      ****     int x,y,z; uint8 Values; 
 162:.\main.c      ****     
 163:.\main.c      ****     struct tic_tac_ai tta;
 164:.\main.c      ****     tta_init(&tta,4,3,true,false); //first bool for player 1, second bool for player 2
 533              		.loc 1 164 0
 534 0032 3A1D     		adds	r2, r7, #4
 535 0034 0023     		movs	r3, #0
 536 0036 0093     		str	r3, [sp]
 537 0038 1046     		mov	r0, r2
 538 003a 0421     		movs	r1, #4
 539 003c 0322     		movs	r2, #3
 540 003e 0123     		movs	r3, #1
 541 0040 FFF7FEFF 		bl	tta_init
 165:.\main.c      ****     disp_grid_init_ttc(&disp, tta.game.grid);
 542              		.loc 1 165 0
 543 0044 07F5B162 		add	r2, r7, #1416
 544 0048 3B1D     		adds	r3, r7, #4
 545 004a 03F28443 		addw	r3, r3, #1156
 546 004e 1046     		mov	r0, r2
 547 0050 1946     		mov	r1, r3
 548 0052 FFF7FEFF 		bl	disp_grid_init_ttc
 166:.\main.c      ****     disp_grid_draw_xia(&disp,26,16,0x30); // draw xia
 549              		.loc 1 166 0
 550 0056 07F5B163 		add	r3, r7, #1416
 551 005a 1846     		mov	r0, r3
 552 005c 1A21     		movs	r1, #26
 553 005e 1022     		movs	r2, #16
 554 0060 3023     		movs	r3, #48
 555 0062 FFF7FEFF 		bl	disp_grid_draw_xia
 167:.\main.c      ****     disp_grid_transmit(&disp);
 556              		.loc 1 167 0
 557 0066 07F5B163 		add	r3, r7, #1416
 558 006a 1846     		mov	r0, r3
 559 006c FFF7FEFF 		bl	disp_grid_transmit
 168:.\main.c      ****     
 169:.\main.c      ****     while (tta.game.game_not_won == 0){
 560              		.loc 1 169 0
 561 0070 38E0     		b	.L23
 562              	.L25:
 170:.\main.c      ****         Values = read_from_8255(Values); //read and print
 563              		.loc 1 170 0
 564 0072 97F88B38 		ldrb	r3, [r7, #2187]	@ zero_extendqisi2
 565 0076 1846     		mov	r0, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 14


 566 0078 FFF7FEFF 		bl	read_from_8255
 567 007c 0346     		mov	r3, r0
 568 007e 87F88B38 		strb	r3, [r7, #2187]
 171:.\main.c      ****         if (Values >= 0 && Values <= 63){ //integer value
 569              		.loc 1 171 0
 570 0082 97F88B38 		ldrb	r3, [r7, #2187]	@ zero_extendqisi2
 571 0086 3F2B     		cmp	r3, #63
 572 0088 19D8     		bhi	.L24
 172:.\main.c      ****             z = Values / 16;
 573              		.loc 1 172 0
 574 008a 97F88B38 		ldrb	r3, [r7, #2187]	@ zero_extendqisi2
 575 008e 1B09     		lsrs	r3, r3, #4
 576 0090 DBB2     		uxtb	r3, r3
 577 0092 C7F88C38 		str	r3, [r7, #2188]
 173:.\main.c      ****             x = Values % 4; //get row value
 578              		.loc 1 173 0
 579 0096 97F88B38 		ldrb	r3, [r7, #2187]	@ zero_extendqisi2
 580 009a 03F00303 		and	r3, r3, #3
 581 009e C7F89438 		str	r3, [r7, #2196]
 174:.\main.c      ****             y = Values / 4 - z*4; // 
 582              		.loc 1 174 0
 583 00a2 97F88B38 		ldrb	r3, [r7, #2187]	@ zero_extendqisi2
 584 00a6 9B08     		lsrs	r3, r3, #2
 585 00a8 DBB2     		uxtb	r3, r3
 586 00aa 1946     		mov	r1, r3
 587 00ac D7F88C28 		ldr	r2, [r7, #2188]
 588 00b0 1346     		mov	r3, r2
 589 00b2 9B07     		lsls	r3, r3, #30
 590 00b4 9B1A     		subs	r3, r3, r2
 591 00b6 9B00     		lsls	r3, r3, #2
 592 00b8 0B44     		add	r3, r3, r1
 593 00ba C7F89038 		str	r3, [r7, #2192]
 594              	.L24:
 175:.\main.c      **** //            LCD_ClearDisplay();
 176:.\main.c      **** //            LCD_PrintNumber(Values);
 177:.\main.c      **** //            LCD_PrintString(" x");
 178:.\main.c      **** //            LCD_PrintNumber(x);
 179:.\main.c      **** //            LCD_PrintString(" y");
 180:.\main.c      **** //            LCD_PrintNumber(y);
 181:.\main.c      **** //            LCD_PrintString(" z");
 182:.\main.c      **** //            LCD_PrintNumber(z);
 183:.\main.c      ****         }
 184:.\main.c      ****         tta_step(&disp,&tta,x,y,z); //increment a turn
 595              		.loc 1 184 0
 596 00be 07F5B161 		add	r1, r7, #1416
 597 00c2 3A1D     		adds	r2, r7, #4
 598 00c4 D7F88C38 		ldr	r3, [r7, #2188]
 599 00c8 0093     		str	r3, [sp]
 600 00ca 0846     		mov	r0, r1
 601 00cc 1146     		mov	r1, r2
 602 00ce D7F89428 		ldr	r2, [r7, #2196]
 603 00d2 D7F89038 		ldr	r3, [r7, #2192]
 604 00d6 FFF7FEFF 		bl	tta_step
 185:.\main.c      ****         disp_grid_transmit(&disp);
 605              		.loc 1 185 0
 606 00da 07F5B163 		add	r3, r7, #1416
 607 00de 1846     		mov	r0, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 15


 608 00e0 FFF7FEFF 		bl	disp_grid_transmit
 609              	.L23:
 169:.\main.c      ****         Values = read_from_8255(Values); //read and print
 610              		.loc 1 169 0
 611 00e4 3B1D     		adds	r3, r7, #4
 612 00e6 D3F88034 		ldr	r3, [r3, #1152]
 613 00ea 002B     		cmp	r3, #0
 614 00ec C1D0     		beq	.L25
 186:.\main.c      ****     }
 187:.\main.c      ****     LCD_ClearDisplay();
 615              		.loc 1 187 0
 616 00ee 0120     		movs	r0, #1
 617 00f0 FFF7FEFF 		bl	LCD_WriteControl
 188:.\main.c      ****     LCD_PrintString("GAME OVER!");   
 618              		.loc 1 188 0
 619 00f4 0348     		ldr	r0, .L26
 620 00f6 FFF7FEFF 		bl	LCD_PrintString
 189:.\main.c      ****     
 190:.\main.c      **** }
 621              		.loc 1 190 0
 622 00fa 07F69807 		addw	r7, r7, #2200
 623              		.cfi_def_cfa_offset 8
 624 00fe BD46     		mov	sp, r7
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 0100 80BD     		pop	{r7, pc}
 628              	.L27:
 629 0102 00BF     		.align	2
 630              	.L26:
 631 0104 08000000 		.word	.LC1
 632              		.cfi_endproc
 633              	.LFE66:
 634              		.size	main_play_tta_ai, .-main_play_tta_ai
 635              		.section	.rodata
 636 0023 00       		.align	2
 637              	.LC4:
 638 0024 207800   		.ascii	" x\000"
 639 0027 00       		.align	2
 640              	.LC5:
 641 0028 207900   		.ascii	" y\000"
 642 002b 00       		.align	2
 643              	.LC6:
 644 002c 207A00   		.ascii	" z\000"
 645 002f 00       		.section	.text.main_play_ttc,"ax",%progbits
 646              		.align	2
 647              		.global	main_play_ttc
 648              		.thumb
 649              		.thumb_func
 650              		.type	main_play_ttc, %function
 651              	main_play_ttc:
 652              	.LFB67:
 191:.\main.c      **** 
 192:.\main.c      **** void main_play_ttc(){
 653              		.loc 1 192 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 1064
 656              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 16


 657 0000 80B5     		push	{r7, lr}
 658              		.cfi_def_cfa_offset 8
 659              		.cfi_offset 7, -8
 660              		.cfi_offset 14, -4
 661 0002 ADF5866D 		sub	sp, sp, #1072
 662              		.cfi_def_cfa_offset 1080
 663 0006 02AF     		add	r7, sp, #8
 664              		.cfi_def_cfa 7, 1072
 193:.\main.c      ****     LCD_Start();					    // initialize lcd
 665              		.loc 1 193 0
 666 0008 FFF7FEFF 		bl	LCD_Start
 194:.\main.c      ****     LCD_ClearDisplay();
 667              		.loc 1 194 0
 668 000c 0120     		movs	r0, #1
 669 000e FFF7FEFF 		bl	LCD_WriteControl
 195:.\main.c      ****     UART_Start();                       // initialize UART
 670              		.loc 1 195 0
 671 0012 FFF7FEFF 		bl	UART_Start
 196:.\main.c      ****     UART_PutChar(0x81); // init connection; set to 16x12 image 
 672              		.loc 1 196 0
 673 0016 8120     		movs	r0, #129
 674 0018 FFF7FEFF 		bl	UART_PutChar
 197:.\main.c      ****     
 198:.\main.c      ****     struct disp_grid_81 disp; 
 199:.\main.c      ****     disp_grid_init(&disp,0x3F); // init our display grid matrix to white  
 675              		.loc 1 199 0
 676 001c 07F58C73 		add	r3, r7, #280
 677 0020 1846     		mov	r0, r3
 678 0022 3F21     		movs	r1, #63
 679 0024 FFF7FEFF 		bl	disp_grid_init
 200:.\main.c      ****     disp_grid_transmit(&disp);
 680              		.loc 1 200 0
 681 0028 07F58C73 		add	r3, r7, #280
 682 002c 1846     		mov	r0, r3
 683 002e FFF7FEFF 		bl	disp_grid_transmit
 201:.\main.c      ****     
 202:.\main.c      ****     struct tic_tac_toe lolz;
 203:.\main.c      ****  	ttc_init(&lolz,4,3);    
 684              		.loc 1 203 0
 685 0032 3B1D     		adds	r3, r7, #4
 686 0034 1846     		mov	r0, r3
 687 0036 0421     		movs	r1, #4
 688 0038 0322     		movs	r2, #3
 689 003a FFF7FEFF 		bl	ttc_init
 204:.\main.c      ****     disp_grid_init_ttc(&disp,lolz.grid); // init the board
 690              		.loc 1 204 0
 691 003e 07F58C72 		add	r2, r7, #280
 692 0042 3B1D     		adds	r3, r7, #4
 693 0044 1433     		adds	r3, r3, #20
 694 0046 1046     		mov	r0, r2
 695 0048 1946     		mov	r1, r3
 696 004a FFF7FEFF 		bl	disp_grid_init_ttc
 205:.\main.c      ****     disp_grid_draw_xia(&disp,26,16,0x30); // draw xia
 697              		.loc 1 205 0
 698 004e 07F58C73 		add	r3, r7, #280
 699 0052 1846     		mov	r0, r3
 700 0054 1A21     		movs	r1, #26
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 17


 701 0056 1022     		movs	r2, #16
 702 0058 3023     		movs	r3, #48
 703 005a FFF7FEFF 		bl	disp_grid_draw_xia
 206:.\main.c      ****     disp_grid_transmit(&disp);
 704              		.loc 1 206 0
 705 005e 07F58C73 		add	r3, r7, #280
 706 0062 1846     		mov	r0, r3
 707 0064 FFF7FEFF 		bl	disp_grid_transmit
 207:.\main.c      ****     
 208:.\main.c      ****     int x,y,z; int Values;
 209:.\main.c      ****     
 210:.\main.c      ****     while (lolz.game_not_won == 0){
 708              		.loc 1 210 0
 709 0068 74E0     		b	.L29
 710              	.L34:
 211:.\main.c      ****         //Values = read_from_8255(Values);
 212:.\main.c      ****         Values = Pin3_Read();
 711              		.loc 1 212 0
 712 006a FFF7FEFF 		bl	Pin3_Read
 713 006e 0346     		mov	r3, r0
 714 0070 C7F81834 		str	r3, [r7, #1048]
 213:.\main.c      ****         if (Values >= 0 && Values <= 63){ //integer value
 715              		.loc 1 213 0
 716 0074 D7F81834 		ldr	r3, [r7, #1048]
 717 0078 002B     		cmp	r3, #0
 718 007a 4BDB     		blt	.L30
 719              		.loc 1 213 0 is_stmt 0 discriminator 1
 720 007c D7F81834 		ldr	r3, [r7, #1048]
 721 0080 3F2B     		cmp	r3, #63
 722 0082 47DC     		bgt	.L30
 214:.\main.c      ****             z = Values / 16;
 723              		.loc 1 214 0 is_stmt 1
 724 0084 D7F81834 		ldr	r3, [r7, #1048]
 725 0088 002B     		cmp	r3, #0
 726 008a 00DA     		bge	.L31
 727 008c 0F33     		adds	r3, r3, #15
 728              	.L31:
 729 008e 1B11     		asrs	r3, r3, #4
 730 0090 C7F81C34 		str	r3, [r7, #1052]
 215:.\main.c      ****             x = Values % 4; //get row value
 731              		.loc 1 215 0
 732 0094 D7F81824 		ldr	r2, [r7, #1048]
 733 0098 374B     		ldr	r3, .L35
 734 009a 1340     		ands	r3, r3, r2
 735 009c 002B     		cmp	r3, #0
 736 009e 03DA     		bge	.L32
 737 00a0 013B     		subs	r3, r3, #1
 738 00a2 63F00303 		orn	r3, r3, #3
 739 00a6 0133     		adds	r3, r3, #1
 740              	.L32:
 741 00a8 C7F82434 		str	r3, [r7, #1060]
 216:.\main.c      ****             y = Values / 4 - z*4; // 
 742              		.loc 1 216 0
 743 00ac D7F81834 		ldr	r3, [r7, #1048]
 744 00b0 002B     		cmp	r3, #0
 745 00b2 00DA     		bge	.L33
 746 00b4 0333     		adds	r3, r3, #3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 18


 747              	.L33:
 748 00b6 9B10     		asrs	r3, r3, #2
 749 00b8 1946     		mov	r1, r3
 750 00ba D7F81C24 		ldr	r2, [r7, #1052]
 751 00be 1346     		mov	r3, r2
 752 00c0 9B07     		lsls	r3, r3, #30
 753 00c2 9B1A     		subs	r3, r3, r2
 754 00c4 9B00     		lsls	r3, r3, #2
 755 00c6 0B44     		add	r3, r3, r1
 756 00c8 C7F82034 		str	r3, [r7, #1056]
 217:.\main.c      ****             LCD_ClearDisplay();
 757              		.loc 1 217 0
 758 00cc 0120     		movs	r0, #1
 759 00ce FFF7FEFF 		bl	LCD_WriteControl
 218:.\main.c      ****             LCD_PrintNumber(Values);
 760              		.loc 1 218 0
 761 00d2 D7F81834 		ldr	r3, [r7, #1048]
 762 00d6 9BB2     		uxth	r3, r3
 763 00d8 1846     		mov	r0, r3
 764 00da FFF7FEFF 		bl	LCD_PrintU32Number
 219:.\main.c      ****             LCD_PrintString(" x");
 765              		.loc 1 219 0
 766 00de 2748     		ldr	r0, .L35+4
 767 00e0 FFF7FEFF 		bl	LCD_PrintString
 220:.\main.c      ****             LCD_PrintNumber(x);
 768              		.loc 1 220 0
 769 00e4 D7F82434 		ldr	r3, [r7, #1060]
 770 00e8 9BB2     		uxth	r3, r3
 771 00ea 1846     		mov	r0, r3
 772 00ec FFF7FEFF 		bl	LCD_PrintU32Number
 221:.\main.c      ****             LCD_PrintString(" y");
 773              		.loc 1 221 0
 774 00f0 2348     		ldr	r0, .L35+8
 775 00f2 FFF7FEFF 		bl	LCD_PrintString
 222:.\main.c      ****             LCD_PrintNumber(y);
 776              		.loc 1 222 0
 777 00f6 D7F82034 		ldr	r3, [r7, #1056]
 778 00fa 9BB2     		uxth	r3, r3
 779 00fc 1846     		mov	r0, r3
 780 00fe FFF7FEFF 		bl	LCD_PrintU32Number
 223:.\main.c      ****             LCD_PrintString(" z");
 781              		.loc 1 223 0
 782 0102 2048     		ldr	r0, .L35+12
 783 0104 FFF7FEFF 		bl	LCD_PrintString
 224:.\main.c      ****             LCD_PrintNumber(z);
 784              		.loc 1 224 0
 785 0108 D7F81C34 		ldr	r3, [r7, #1052]
 786 010c 9BB2     		uxth	r3, r3
 787 010e 1846     		mov	r0, r3
 788 0110 FFF7FEFF 		bl	LCD_PrintU32Number
 789              	.L30:
 225:.\main.c      ****         }
 226:.\main.c      ****         if (ttc_get_grid(&lolz,x,y,z) == 0){ // has not been accessed
 790              		.loc 1 226 0
 791 0114 3B1D     		adds	r3, r7, #4
 792 0116 1846     		mov	r0, r3
 793 0118 D7F82414 		ldr	r1, [r7, #1060]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 19


 794 011c D7F82024 		ldr	r2, [r7, #1056]
 795 0120 D7F81C34 		ldr	r3, [r7, #1052]
 796 0124 FFF7FEFF 		bl	ttc_get_grid
 797 0128 0346     		mov	r3, r0
 798 012a 002B     		cmp	r3, #0
 799 012c 12D1     		bne	.L29
 227:.\main.c      ****             ttc_step(&disp,&lolz,x,y,z); // step & print
 800              		.loc 1 227 0
 801 012e 07F58C71 		add	r1, r7, #280
 802 0132 3A1D     		adds	r2, r7, #4
 803 0134 D7F81C34 		ldr	r3, [r7, #1052]
 804 0138 0093     		str	r3, [sp]
 805 013a 0846     		mov	r0, r1
 806 013c 1146     		mov	r1, r2
 807 013e D7F82424 		ldr	r2, [r7, #1060]
 808 0142 D7F82034 		ldr	r3, [r7, #1056]
 809 0146 FFF7FEFF 		bl	ttc_step
 228:.\main.c      ****             disp_grid_transmit(&disp);
 810              		.loc 1 228 0
 811 014a 07F58C73 		add	r3, r7, #280
 812 014e 1846     		mov	r0, r3
 813 0150 FFF7FEFF 		bl	disp_grid_transmit
 814              	.L29:
 210:.\main.c      ****         //Values = read_from_8255(Values);
 815              		.loc 1 210 0
 816 0154 3B1D     		adds	r3, r7, #4
 817 0156 1B69     		ldr	r3, [r3, #16]
 818 0158 002B     		cmp	r3, #0
 819 015a 86D0     		beq	.L34
 229:.\main.c      ****         }
 230:.\main.c      ****         
 231:.\main.c      ****     }
 232:.\main.c      ****     LCD_ClearDisplay();
 820              		.loc 1 232 0
 821 015c 0120     		movs	r0, #1
 822 015e FFF7FEFF 		bl	LCD_WriteControl
 233:.\main.c      ****     LCD_Position(0,0); //move to bot row
 823              		.loc 1 233 0
 824 0162 0020     		movs	r0, #0
 825 0164 0021     		movs	r1, #0
 826 0166 FFF7FEFF 		bl	LCD_Position
 234:.\main.c      ****     LCD_PrintString("GAME OVER!");    
 827              		.loc 1 234 0
 828 016a 0748     		ldr	r0, .L35+16
 829 016c FFF7FEFF 		bl	LCD_PrintString
 235:.\main.c      ****     
 236:.\main.c      **** }
 830              		.loc 1 236 0
 831 0170 07F58567 		add	r7, r7, #1064
 832              		.cfi_def_cfa_offset 8
 833 0174 BD46     		mov	sp, r7
 834              		.cfi_def_cfa_register 13
 835              		@ sp needed
 836 0176 80BD     		pop	{r7, pc}
 837              	.L36:
 838              		.align	2
 839              	.L35:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 20


 840 0178 03000080 		.word	-2147483645
 841 017c 24000000 		.word	.LC4
 842 0180 28000000 		.word	.LC5
 843 0184 2C000000 		.word	.LC6
 844 0188 08000000 		.word	.LC1
 845              		.cfi_endproc
 846              	.LFE67:
 847              		.size	main_play_ttc, .-main_play_ttc
 848              		.text
 849              	.Letext0:
 850              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 851              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 852              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 853              		.file 5 "./disp.h"
 854              		.file 6 "./tic_tac_all.h"
 855              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 856              		.section	.debug_info,"",%progbits
 857              	.Ldebug_info0:
 858 0000 91030000 		.4byte	0x391
 859 0004 0400     		.2byte	0x4
 860 0006 00000000 		.4byte	.Ldebug_abbrev0
 861 000a 04       		.byte	0x4
 862 000b 01       		.uleb128 0x1
 863 000c A1000000 		.4byte	.LASF47
 864 0010 01       		.byte	0x1
 865 0011 61010000 		.4byte	.LASF48
 866 0015 26000000 		.4byte	.LASF49
 867 0019 00000000 		.4byte	.Ldebug_ranges0+0
 868 001d 00000000 		.4byte	0
 869 0021 00000000 		.4byte	.Ldebug_line0
 870 0025 02       		.uleb128 0x2
 871 0026 01       		.byte	0x1
 872 0027 06       		.byte	0x6
 873 0028 C8020000 		.4byte	.LASF0
 874 002c 02       		.uleb128 0x2
 875 002d 01       		.byte	0x1
 876 002e 08       		.byte	0x8
 877 002f 9C010000 		.4byte	.LASF1
 878 0033 02       		.uleb128 0x2
 879 0034 02       		.byte	0x2
 880 0035 05       		.byte	0x5
 881 0036 BE010000 		.4byte	.LASF2
 882 003a 02       		.uleb128 0x2
 883 003b 02       		.byte	0x2
 884 003c 07       		.byte	0x7
 885 003d 7C010000 		.4byte	.LASF3
 886 0041 03       		.uleb128 0x3
 887 0042 8B000000 		.4byte	.LASF9
 888 0046 02       		.byte	0x2
 889 0047 3F       		.byte	0x3f
 890 0048 4C000000 		.4byte	0x4c
 891 004c 02       		.uleb128 0x2
 892 004d 04       		.byte	0x4
 893 004e 05       		.byte	0x5
 894 004f A7020000 		.4byte	.LASF4
 895 0053 02       		.uleb128 0x2
 896 0054 04       		.byte	0x4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 21


 897 0055 07       		.byte	0x7
 898 0056 6A010000 		.4byte	.LASF5
 899 005a 02       		.uleb128 0x2
 900 005b 08       		.byte	0x8
 901 005c 05       		.byte	0x5
 902 005d 4E010000 		.4byte	.LASF6
 903 0061 02       		.uleb128 0x2
 904 0062 08       		.byte	0x8
 905 0063 07       		.byte	0x7
 906 0064 08020000 		.4byte	.LASF7
 907 0068 04       		.uleb128 0x4
 908 0069 04       		.byte	0x4
 909 006a 05       		.byte	0x5
 910 006b 696E7400 		.ascii	"int\000"
 911 006f 02       		.uleb128 0x2
 912 0070 04       		.byte	0x4
 913 0071 07       		.byte	0x7
 914 0072 FB010000 		.4byte	.LASF8
 915 0076 03       		.uleb128 0x3
 916 0077 4C020000 		.4byte	.LASF10
 917 007b 03       		.byte	0x3
 918 007c 2C       		.byte	0x2c
 919 007d 41000000 		.4byte	0x41
 920 0081 05       		.uleb128 0x5
 921 0082 86020000 		.4byte	.LASF11
 922 0086 04       		.byte	0x4
 923 0087 3801     		.2byte	0x138
 924 0089 2C000000 		.4byte	0x2c
 925 008d 05       		.uleb128 0x5
 926 008e D6010000 		.4byte	.LASF12
 927 0092 04       		.byte	0x4
 928 0093 3901     		.2byte	0x139
 929 0095 3A000000 		.4byte	0x3a
 930 0099 02       		.uleb128 0x2
 931 009a 04       		.byte	0x4
 932 009b 04       		.byte	0x4
 933 009c 3E010000 		.4byte	.LASF13
 934 00a0 02       		.uleb128 0x2
 935 00a1 08       		.byte	0x8
 936 00a2 04       		.byte	0x4
 937 00a3 B0010000 		.4byte	.LASF14
 938 00a7 02       		.uleb128 0x2
 939 00a8 01       		.byte	0x1
 940 00a9 08       		.byte	0x8
 941 00aa 5D020000 		.4byte	.LASF15
 942 00ae 02       		.uleb128 0x2
 943 00af 04       		.byte	0x4
 944 00b0 07       		.byte	0x7
 945 00b1 54020000 		.4byte	.LASF16
 946 00b5 06       		.uleb128 0x6
 947 00b6 3F020000 		.4byte	.LASF18
 948 00ba 0003     		.2byte	0x300
 949 00bc 05       		.byte	0x5
 950 00bd 15       		.byte	0x15
 951 00be CF000000 		.4byte	0xcf
 952 00c2 07       		.uleb128 0x7
 953 00c3 62020000 		.4byte	.LASF20
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 22


 954 00c7 05       		.byte	0x5
 955 00c8 16       		.byte	0x16
 956 00c9 CF000000 		.4byte	0xcf
 957 00cd 00       		.byte	0
 958 00ce 00       		.byte	0
 959 00cf 08       		.uleb128 0x8
 960 00d0 81000000 		.4byte	0x81
 961 00d4 E5000000 		.4byte	0xe5
 962 00d8 09       		.uleb128 0x9
 963 00d9 AE000000 		.4byte	0xae
 964 00dd 1F       		.byte	0x1f
 965 00de 09       		.uleb128 0x9
 966 00df AE000000 		.4byte	0xae
 967 00e3 17       		.byte	0x17
 968 00e4 00       		.byte	0
 969 00e5 02       		.uleb128 0x2
 970 00e6 08       		.byte	0x8
 971 00e7 04       		.byte	0x4
 972 00e8 B0020000 		.4byte	.LASF17
 973 00ec 06       		.uleb128 0x6
 974 00ed 95000000 		.4byte	.LASF19
 975 00f1 1401     		.2byte	0x114
 976 00f3 06       		.byte	0x6
 977 00f4 20       		.byte	0x20
 978 00f5 42010000 		.4byte	0x142
 979 00f9 07       		.uleb128 0x7
 980 00fa 5C010000 		.4byte	.LASF21
 981 00fe 06       		.byte	0x6
 982 00ff 21       		.byte	0x21
 983 0100 68000000 		.4byte	0x68
 984 0104 00       		.byte	0
 985 0105 07       		.uleb128 0x7
 986 0106 2F010000 		.4byte	.LASF22
 987 010a 06       		.byte	0x6
 988 010b 22       		.byte	0x22
 989 010c 68000000 		.4byte	0x68
 990 0110 04       		.byte	0x4
 991 0111 07       		.uleb128 0x7
 992 0112 B7010000 		.4byte	.LASF23
 993 0116 06       		.byte	0x6
 994 0117 24       		.byte	0x24
 995 0118 68000000 		.4byte	0x68
 996 011c 08       		.byte	0x8
 997 011d 07       		.uleb128 0x7
 998 011e 00000000 		.4byte	.LASF24
 999 0122 06       		.byte	0x6
 1000 0123 25       		.byte	0x25
 1001 0124 68000000 		.4byte	0x68
 1002 0128 0C       		.byte	0xc
 1003 0129 07       		.uleb128 0x7
 1004 012a 9A020000 		.4byte	.LASF25
 1005 012e 06       		.byte	0x6
 1006 012f 26       		.byte	0x26
 1007 0130 68000000 		.4byte	0x68
 1008 0134 10       		.byte	0x10
 1009 0135 07       		.uleb128 0x7
 1010 0136 10000000 		.4byte	.LASF26
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 23


 1011 013a 06       		.byte	0x6
 1012 013b 28       		.byte	0x28
 1013 013c 42010000 		.4byte	0x142
 1014 0140 14       		.byte	0x14
 1015 0141 00       		.byte	0
 1016 0142 08       		.uleb128 0x8
 1017 0143 68000000 		.4byte	0x68
 1018 0147 52010000 		.4byte	0x152
 1019 014b 09       		.uleb128 0x9
 1020 014c AE000000 		.4byte	0xae
 1021 0150 3F       		.byte	0x3f
 1022 0151 00       		.byte	0
 1023 0152 0A       		.uleb128 0xa
 1024 0153 616900   		.ascii	"ai\000"
 1025 0156 3402     		.2byte	0x234
 1026 0158 06       		.byte	0x6
 1027 0159 3B       		.byte	0x3b
 1028 015a 84010000 		.4byte	0x184
 1029 015e 07       		.uleb128 0x7
 1030 015f DD010000 		.4byte	.LASF27
 1031 0163 06       		.byte	0x6
 1032 0164 3C       		.byte	0x3c
 1033 0165 68000000 		.4byte	0x68
 1034 0169 00       		.byte	0
 1035 016a 07       		.uleb128 0x7
 1036 016b E7010000 		.4byte	.LASF28
 1037 016f 06       		.byte	0x6
 1038 0170 3D       		.byte	0x3d
 1039 0171 42010000 		.4byte	0x142
 1040 0175 04       		.byte	0x4
 1041 0176 0B       		.uleb128 0xb
 1042 0177 AA010000 		.4byte	.LASF29
 1043 017b 06       		.byte	0x6
 1044 017c 3E       		.byte	0x3e
 1045 017d 84010000 		.4byte	0x184
 1046 0181 0401     		.2byte	0x104
 1047 0183 00       		.byte	0
 1048 0184 08       		.uleb128 0x8
 1049 0185 68000000 		.4byte	0x68
 1050 0189 94010000 		.4byte	0x194
 1051 018d 09       		.uleb128 0x9
 1052 018e AE000000 		.4byte	0xae
 1053 0192 4B       		.byte	0x4b
 1054 0193 00       		.byte	0
 1055 0194 06       		.uleb128 0x6
 1056 0195 05000000 		.4byte	.LASF30
 1057 0199 8405     		.2byte	0x584
 1058 019b 06       		.byte	0x6
 1059 019c 4C       		.byte	0x4c
 1060 019d D4010000 		.4byte	0x1d4
 1061 01a1 07       		.uleb128 0x7
 1062 01a2 94020000 		.4byte	.LASF31
 1063 01a6 06       		.byte	0x6
 1064 01a7 4D       		.byte	0x4d
 1065 01a8 D4010000 		.4byte	0x1d4
 1066 01ac 00       		.byte	0
 1067 01ad 07       		.uleb128 0x7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 24


 1068 01ae D4020000 		.4byte	.LASF32
 1069 01b2 06       		.byte	0x6
 1070 01b3 4E       		.byte	0x4e
 1071 01b4 52010000 		.4byte	0x152
 1072 01b8 08       		.byte	0x8
 1073 01b9 0B       		.uleb128 0xb
 1074 01ba D9020000 		.4byte	.LASF33
 1075 01be 06       		.byte	0x6
 1076 01bf 4F       		.byte	0x4f
 1077 01c0 52010000 		.4byte	0x152
 1078 01c4 3C02     		.2byte	0x23c
 1079 01c6 0B       		.uleb128 0xb
 1080 01c7 39010000 		.4byte	.LASF34
 1081 01cb 06       		.byte	0x6
 1082 01cc 50       		.byte	0x50
 1083 01cd EC000000 		.4byte	0xec
 1084 01d1 7004     		.2byte	0x470
 1085 01d3 00       		.byte	0
 1086 01d4 08       		.uleb128 0x8
 1087 01d5 68000000 		.4byte	0x68
 1088 01d9 E4010000 		.4byte	0x1e4
 1089 01dd 09       		.uleb128 0x9
 1090 01de AE000000 		.4byte	0xae
 1091 01e2 01       		.byte	0x1
 1092 01e3 00       		.byte	0
 1093 01e4 0C       		.uleb128 0xc
 1094 01e5 33020000 		.4byte	.LASF50
 1095 01e9 01       		.byte	0x1
 1096 01ea 1F       		.byte	0x1f
 1097 01eb 00000000 		.4byte	.LFB63
 1098 01ef 0A000000 		.4byte	.LFE63-.LFB63
 1099 01f3 01       		.uleb128 0x1
 1100 01f4 9C       		.byte	0x9c
 1101 01f5 0D       		.uleb128 0xd
 1102 01f6 69020000 		.4byte	.LASF41
 1103 01fa 01       		.byte	0x1
 1104 01fb 2C       		.byte	0x2c
 1105 01fc 00000000 		.4byte	.LFB64
 1106 0200 0C030000 		.4byte	.LFE64-.LFB64
 1107 0204 01       		.uleb128 0x1
 1108 0205 9C       		.byte	0x9c
 1109 0206 93020000 		.4byte	0x293
 1110 020a 0E       		.uleb128 0xe
 1111 020b 2E020000 		.4byte	.LASF35
 1112 020f 01       		.byte	0x1
 1113 0210 33       		.byte	0x33
 1114 0211 B5000000 		.4byte	0xb5
 1115 0215 03       		.uleb128 0x3
 1116 0216 91       		.byte	0x91
 1117 0217 E479     		.sleb128 -796
 1118 0219 0F       		.uleb128 0xf
 1119 021a 74746100 		.ascii	"tta\000"
 1120 021e 01       		.byte	0x1
 1121 021f 37       		.byte	0x37
 1122 0220 94010000 		.4byte	0x194
 1123 0224 03       		.uleb128 0x3
 1124 0225 91       		.byte	0x91
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 25


 1125 0226 E06E     		.sleb128 -2208
 1126 0228 0F       		.uleb128 0xf
 1127 0229 7800     		.ascii	"x\000"
 1128 022b 01       		.byte	0x1
 1129 022c 3D       		.byte	0x3d
 1130 022d 68000000 		.4byte	0x68
 1131 0231 02       		.uleb128 0x2
 1132 0232 91       		.byte	0x91
 1133 0233 74       		.sleb128 -12
 1134 0234 0F       		.uleb128 0xf
 1135 0235 7900     		.ascii	"y\000"
 1136 0237 01       		.byte	0x1
 1137 0238 3D       		.byte	0x3d
 1138 0239 68000000 		.4byte	0x68
 1139 023d 02       		.uleb128 0x2
 1140 023e 91       		.byte	0x91
 1141 023f 70       		.sleb128 -16
 1142 0240 0F       		.uleb128 0xf
 1143 0241 7A00     		.ascii	"z\000"
 1144 0243 01       		.byte	0x1
 1145 0244 3D       		.byte	0x3d
 1146 0245 68000000 		.4byte	0x68
 1147 0249 02       		.uleb128 0x2
 1148 024a 91       		.byte	0x91
 1149 024b 6C       		.sleb128 -20
 1150 024c 0E       		.uleb128 0xe
 1151 024d 7B020000 		.4byte	.LASF36
 1152 0251 01       		.byte	0x1
 1153 0252 3D       		.byte	0x3d
 1154 0253 68000000 		.4byte	0x68
 1155 0257 02       		.uleb128 0x2
 1156 0258 91       		.byte	0x91
 1157 0259 68       		.sleb128 -24
 1158 025a 0E       		.uleb128 0xe
 1159 025b 38020000 		.4byte	.LASF37
 1160 025f 01       		.byte	0x1
 1161 0260 3D       		.byte	0x3d
 1162 0261 81000000 		.4byte	0x81
 1163 0265 02       		.uleb128 0x2
 1164 0266 91       		.byte	0x91
 1165 0267 64       		.sleb128 -28
 1166 0268 0E       		.uleb128 0xe
 1167 0269 BC020000 		.4byte	.LASF38
 1168 026d 01       		.byte	0x1
 1169 026e 3D       		.byte	0x3d
 1170 026f 81000000 		.4byte	0x81
 1171 0273 02       		.uleb128 0x2
 1172 0274 91       		.byte	0x91
 1173 0275 67       		.sleb128 -25
 1174 0276 0E       		.uleb128 0xe
 1175 0277 F1010000 		.4byte	.LASF39
 1176 027b 01       		.byte	0x1
 1177 027c 42       		.byte	0x42
 1178 027d 81000000 		.4byte	0x81
 1179 0281 02       		.uleb128 0x2
 1180 0282 91       		.byte	0x91
 1181 0283 65       		.sleb128 -27
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 26


 1182 0284 0E       		.uleb128 0xe
 1183 0285 44010000 		.4byte	.LASF40
 1184 0289 01       		.byte	0x1
 1185 028a 43       		.byte	0x43
 1186 028b 81000000 		.4byte	0x81
 1187 028f 02       		.uleb128 0x2
 1188 0290 91       		.byte	0x91
 1189 0291 66       		.sleb128 -26
 1190 0292 00       		.byte	0
 1191 0293 0D       		.uleb128 0xd
 1192 0294 1F020000 		.4byte	.LASF42
 1193 0298 01       		.byte	0x1
 1194 0299 81       		.byte	0x81
 1195 029a 00000000 		.4byte	.LFB65
 1196 029e 70000000 		.4byte	.LFE65-.LFB65
 1197 02a2 01       		.uleb128 0x1
 1198 02a3 9C       		.byte	0x9c
 1199 02a4 B7020000 		.4byte	0x2b7
 1200 02a8 0E       		.uleb128 0xe
 1201 02a9 8C020000 		.4byte	.LASF43
 1202 02ad 01       		.byte	0x1
 1203 02ae 83       		.byte	0x83
 1204 02af 81000000 		.4byte	0x81
 1205 02b3 02       		.uleb128 0x2
 1206 02b4 91       		.byte	0x91
 1207 02b5 77       		.sleb128 -9
 1208 02b6 00       		.byte	0
 1209 02b7 0D       		.uleb128 0xd
 1210 02b8 15000000 		.4byte	.LASF44
 1211 02bc 01       		.byte	0x1
 1212 02bd 97       		.byte	0x97
 1213 02be 00000000 		.4byte	.LFB66
 1214 02c2 08010000 		.4byte	.LFE66-.LFB66
 1215 02c6 01       		.uleb128 0x1
 1216 02c7 9C       		.byte	0x9c
 1217 02c8 1D030000 		.4byte	0x31d
 1218 02cc 0E       		.uleb128 0xe
 1219 02cd 2E020000 		.4byte	.LASF35
 1220 02d1 01       		.byte	0x1
 1221 02d2 9D       		.byte	0x9d
 1222 02d3 B5000000 		.4byte	0xb5
 1223 02d7 03       		.uleb128 0x3
 1224 02d8 91       		.byte	0x91
 1225 02d9 E879     		.sleb128 -792
 1226 02db 0F       		.uleb128 0xf
 1227 02dc 7800     		.ascii	"x\000"
 1228 02de 01       		.byte	0x1
 1229 02df A1       		.byte	0xa1
 1230 02e0 68000000 		.4byte	0x68
 1231 02e4 02       		.uleb128 0x2
 1232 02e5 91       		.byte	0x91
 1233 02e6 74       		.sleb128 -12
 1234 02e7 0F       		.uleb128 0xf
 1235 02e8 7900     		.ascii	"y\000"
 1236 02ea 01       		.byte	0x1
 1237 02eb A1       		.byte	0xa1
 1238 02ec 68000000 		.4byte	0x68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 27


 1239 02f0 02       		.uleb128 0x2
 1240 02f1 91       		.byte	0x91
 1241 02f2 70       		.sleb128 -16
 1242 02f3 0F       		.uleb128 0xf
 1243 02f4 7A00     		.ascii	"z\000"
 1244 02f6 01       		.byte	0x1
 1245 02f7 A1       		.byte	0xa1
 1246 02f8 68000000 		.4byte	0x68
 1247 02fc 02       		.uleb128 0x2
 1248 02fd 91       		.byte	0x91
 1249 02fe 6C       		.sleb128 -20
 1250 02ff 0E       		.uleb128 0xe
 1251 0300 38020000 		.4byte	.LASF37
 1252 0304 01       		.byte	0x1
 1253 0305 A1       		.byte	0xa1
 1254 0306 81000000 		.4byte	0x81
 1255 030a 02       		.uleb128 0x2
 1256 030b 91       		.byte	0x91
 1257 030c 6B       		.sleb128 -21
 1258 030d 0F       		.uleb128 0xf
 1259 030e 74746100 		.ascii	"tta\000"
 1260 0312 01       		.byte	0x1
 1261 0313 A3       		.byte	0xa3
 1262 0314 94010000 		.4byte	0x194
 1263 0318 03       		.uleb128 0x3
 1264 0319 91       		.byte	0x91
 1265 031a E46E     		.sleb128 -2204
 1266 031c 00       		.byte	0
 1267 031d 0D       		.uleb128 0xd
 1268 031e C8010000 		.4byte	.LASF45
 1269 0322 01       		.byte	0x1
 1270 0323 C0       		.byte	0xc0
 1271 0324 00000000 		.4byte	.LFB67
 1272 0328 8C010000 		.4byte	.LFE67-.LFB67
 1273 032c 01       		.uleb128 0x1
 1274 032d 9C       		.byte	0x9c
 1275 032e 83030000 		.4byte	0x383
 1276 0332 0E       		.uleb128 0xe
 1277 0333 2E020000 		.4byte	.LASF35
 1278 0337 01       		.byte	0x1
 1279 0338 C6       		.byte	0xc6
 1280 0339 B5000000 		.4byte	0xb5
 1281 033d 03       		.uleb128 0x3
 1282 033e 91       		.byte	0x91
 1283 033f E879     		.sleb128 -792
 1284 0341 0E       		.uleb128 0xe
 1285 0342 81020000 		.4byte	.LASF46
 1286 0346 01       		.byte	0x1
 1287 0347 CA       		.byte	0xca
 1288 0348 EC000000 		.4byte	0xec
 1289 034c 03       		.uleb128 0x3
 1290 034d 91       		.byte	0x91
 1291 034e D477     		.sleb128 -1068
 1292 0350 0F       		.uleb128 0xf
 1293 0351 7800     		.ascii	"x\000"
 1294 0353 01       		.byte	0x1
 1295 0354 D0       		.byte	0xd0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 28


 1296 0355 68000000 		.4byte	0x68
 1297 0359 02       		.uleb128 0x2
 1298 035a 91       		.byte	0x91
 1299 035b 74       		.sleb128 -12
 1300 035c 0F       		.uleb128 0xf
 1301 035d 7900     		.ascii	"y\000"
 1302 035f 01       		.byte	0x1
 1303 0360 D0       		.byte	0xd0
 1304 0361 68000000 		.4byte	0x68
 1305 0365 02       		.uleb128 0x2
 1306 0366 91       		.byte	0x91
 1307 0367 70       		.sleb128 -16
 1308 0368 0F       		.uleb128 0xf
 1309 0369 7A00     		.ascii	"z\000"
 1310 036b 01       		.byte	0x1
 1311 036c D0       		.byte	0xd0
 1312 036d 68000000 		.4byte	0x68
 1313 0371 02       		.uleb128 0x2
 1314 0372 91       		.byte	0x91
 1315 0373 6C       		.sleb128 -20
 1316 0374 0E       		.uleb128 0xe
 1317 0375 38020000 		.4byte	.LASF37
 1318 0379 01       		.byte	0x1
 1319 037a D0       		.byte	0xd0
 1320 037b 68000000 		.4byte	0x68
 1321 037f 02       		.uleb128 0x2
 1322 0380 91       		.byte	0x91
 1323 0381 68       		.sleb128 -24
 1324 0382 00       		.byte	0
 1325 0383 10       		.uleb128 0x10
 1326 0384 8F010000 		.4byte	.LASF51
 1327 0388 07       		.byte	0x7
 1328 0389 5506     		.2byte	0x655
 1329 038b 8F030000 		.4byte	0x38f
 1330 038f 11       		.uleb128 0x11
 1331 0390 76000000 		.4byte	0x76
 1332 0394 00       		.byte	0
 1333              		.section	.debug_abbrev,"",%progbits
 1334              	.Ldebug_abbrev0:
 1335 0000 01       		.uleb128 0x1
 1336 0001 11       		.uleb128 0x11
 1337 0002 01       		.byte	0x1
 1338 0003 25       		.uleb128 0x25
 1339 0004 0E       		.uleb128 0xe
 1340 0005 13       		.uleb128 0x13
 1341 0006 0B       		.uleb128 0xb
 1342 0007 03       		.uleb128 0x3
 1343 0008 0E       		.uleb128 0xe
 1344 0009 1B       		.uleb128 0x1b
 1345 000a 0E       		.uleb128 0xe
 1346 000b 55       		.uleb128 0x55
 1347 000c 17       		.uleb128 0x17
 1348 000d 11       		.uleb128 0x11
 1349 000e 01       		.uleb128 0x1
 1350 000f 10       		.uleb128 0x10
 1351 0010 17       		.uleb128 0x17
 1352 0011 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 29


 1353 0012 00       		.byte	0
 1354 0013 02       		.uleb128 0x2
 1355 0014 24       		.uleb128 0x24
 1356 0015 00       		.byte	0
 1357 0016 0B       		.uleb128 0xb
 1358 0017 0B       		.uleb128 0xb
 1359 0018 3E       		.uleb128 0x3e
 1360 0019 0B       		.uleb128 0xb
 1361 001a 03       		.uleb128 0x3
 1362 001b 0E       		.uleb128 0xe
 1363 001c 00       		.byte	0
 1364 001d 00       		.byte	0
 1365 001e 03       		.uleb128 0x3
 1366 001f 16       		.uleb128 0x16
 1367 0020 00       		.byte	0
 1368 0021 03       		.uleb128 0x3
 1369 0022 0E       		.uleb128 0xe
 1370 0023 3A       		.uleb128 0x3a
 1371 0024 0B       		.uleb128 0xb
 1372 0025 3B       		.uleb128 0x3b
 1373 0026 0B       		.uleb128 0xb
 1374 0027 49       		.uleb128 0x49
 1375 0028 13       		.uleb128 0x13
 1376 0029 00       		.byte	0
 1377 002a 00       		.byte	0
 1378 002b 04       		.uleb128 0x4
 1379 002c 24       		.uleb128 0x24
 1380 002d 00       		.byte	0
 1381 002e 0B       		.uleb128 0xb
 1382 002f 0B       		.uleb128 0xb
 1383 0030 3E       		.uleb128 0x3e
 1384 0031 0B       		.uleb128 0xb
 1385 0032 03       		.uleb128 0x3
 1386 0033 08       		.uleb128 0x8
 1387 0034 00       		.byte	0
 1388 0035 00       		.byte	0
 1389 0036 05       		.uleb128 0x5
 1390 0037 16       		.uleb128 0x16
 1391 0038 00       		.byte	0
 1392 0039 03       		.uleb128 0x3
 1393 003a 0E       		.uleb128 0xe
 1394 003b 3A       		.uleb128 0x3a
 1395 003c 0B       		.uleb128 0xb
 1396 003d 3B       		.uleb128 0x3b
 1397 003e 05       		.uleb128 0x5
 1398 003f 49       		.uleb128 0x49
 1399 0040 13       		.uleb128 0x13
 1400 0041 00       		.byte	0
 1401 0042 00       		.byte	0
 1402 0043 06       		.uleb128 0x6
 1403 0044 13       		.uleb128 0x13
 1404 0045 01       		.byte	0x1
 1405 0046 03       		.uleb128 0x3
 1406 0047 0E       		.uleb128 0xe
 1407 0048 0B       		.uleb128 0xb
 1408 0049 05       		.uleb128 0x5
 1409 004a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 30


 1410 004b 0B       		.uleb128 0xb
 1411 004c 3B       		.uleb128 0x3b
 1412 004d 0B       		.uleb128 0xb
 1413 004e 01       		.uleb128 0x1
 1414 004f 13       		.uleb128 0x13
 1415 0050 00       		.byte	0
 1416 0051 00       		.byte	0
 1417 0052 07       		.uleb128 0x7
 1418 0053 0D       		.uleb128 0xd
 1419 0054 00       		.byte	0
 1420 0055 03       		.uleb128 0x3
 1421 0056 0E       		.uleb128 0xe
 1422 0057 3A       		.uleb128 0x3a
 1423 0058 0B       		.uleb128 0xb
 1424 0059 3B       		.uleb128 0x3b
 1425 005a 0B       		.uleb128 0xb
 1426 005b 49       		.uleb128 0x49
 1427 005c 13       		.uleb128 0x13
 1428 005d 38       		.uleb128 0x38
 1429 005e 0B       		.uleb128 0xb
 1430 005f 00       		.byte	0
 1431 0060 00       		.byte	0
 1432 0061 08       		.uleb128 0x8
 1433 0062 01       		.uleb128 0x1
 1434 0063 01       		.byte	0x1
 1435 0064 49       		.uleb128 0x49
 1436 0065 13       		.uleb128 0x13
 1437 0066 01       		.uleb128 0x1
 1438 0067 13       		.uleb128 0x13
 1439 0068 00       		.byte	0
 1440 0069 00       		.byte	0
 1441 006a 09       		.uleb128 0x9
 1442 006b 21       		.uleb128 0x21
 1443 006c 00       		.byte	0
 1444 006d 49       		.uleb128 0x49
 1445 006e 13       		.uleb128 0x13
 1446 006f 2F       		.uleb128 0x2f
 1447 0070 0B       		.uleb128 0xb
 1448 0071 00       		.byte	0
 1449 0072 00       		.byte	0
 1450 0073 0A       		.uleb128 0xa
 1451 0074 13       		.uleb128 0x13
 1452 0075 01       		.byte	0x1
 1453 0076 03       		.uleb128 0x3
 1454 0077 08       		.uleb128 0x8
 1455 0078 0B       		.uleb128 0xb
 1456 0079 05       		.uleb128 0x5
 1457 007a 3A       		.uleb128 0x3a
 1458 007b 0B       		.uleb128 0xb
 1459 007c 3B       		.uleb128 0x3b
 1460 007d 0B       		.uleb128 0xb
 1461 007e 01       		.uleb128 0x1
 1462 007f 13       		.uleb128 0x13
 1463 0080 00       		.byte	0
 1464 0081 00       		.byte	0
 1465 0082 0B       		.uleb128 0xb
 1466 0083 0D       		.uleb128 0xd
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 31


 1467 0084 00       		.byte	0
 1468 0085 03       		.uleb128 0x3
 1469 0086 0E       		.uleb128 0xe
 1470 0087 3A       		.uleb128 0x3a
 1471 0088 0B       		.uleb128 0xb
 1472 0089 3B       		.uleb128 0x3b
 1473 008a 0B       		.uleb128 0xb
 1474 008b 49       		.uleb128 0x49
 1475 008c 13       		.uleb128 0x13
 1476 008d 38       		.uleb128 0x38
 1477 008e 05       		.uleb128 0x5
 1478 008f 00       		.byte	0
 1479 0090 00       		.byte	0
 1480 0091 0C       		.uleb128 0xc
 1481 0092 2E       		.uleb128 0x2e
 1482 0093 00       		.byte	0
 1483 0094 3F       		.uleb128 0x3f
 1484 0095 19       		.uleb128 0x19
 1485 0096 03       		.uleb128 0x3
 1486 0097 0E       		.uleb128 0xe
 1487 0098 3A       		.uleb128 0x3a
 1488 0099 0B       		.uleb128 0xb
 1489 009a 3B       		.uleb128 0x3b
 1490 009b 0B       		.uleb128 0xb
 1491 009c 11       		.uleb128 0x11
 1492 009d 01       		.uleb128 0x1
 1493 009e 12       		.uleb128 0x12
 1494 009f 06       		.uleb128 0x6
 1495 00a0 40       		.uleb128 0x40
 1496 00a1 18       		.uleb128 0x18
 1497 00a2 9642     		.uleb128 0x2116
 1498 00a4 19       		.uleb128 0x19
 1499 00a5 00       		.byte	0
 1500 00a6 00       		.byte	0
 1501 00a7 0D       		.uleb128 0xd
 1502 00a8 2E       		.uleb128 0x2e
 1503 00a9 01       		.byte	0x1
 1504 00aa 3F       		.uleb128 0x3f
 1505 00ab 19       		.uleb128 0x19
 1506 00ac 03       		.uleb128 0x3
 1507 00ad 0E       		.uleb128 0xe
 1508 00ae 3A       		.uleb128 0x3a
 1509 00af 0B       		.uleb128 0xb
 1510 00b0 3B       		.uleb128 0x3b
 1511 00b1 0B       		.uleb128 0xb
 1512 00b2 11       		.uleb128 0x11
 1513 00b3 01       		.uleb128 0x1
 1514 00b4 12       		.uleb128 0x12
 1515 00b5 06       		.uleb128 0x6
 1516 00b6 40       		.uleb128 0x40
 1517 00b7 18       		.uleb128 0x18
 1518 00b8 9642     		.uleb128 0x2116
 1519 00ba 19       		.uleb128 0x19
 1520 00bb 01       		.uleb128 0x1
 1521 00bc 13       		.uleb128 0x13
 1522 00bd 00       		.byte	0
 1523 00be 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 32


 1524 00bf 0E       		.uleb128 0xe
 1525 00c0 34       		.uleb128 0x34
 1526 00c1 00       		.byte	0
 1527 00c2 03       		.uleb128 0x3
 1528 00c3 0E       		.uleb128 0xe
 1529 00c4 3A       		.uleb128 0x3a
 1530 00c5 0B       		.uleb128 0xb
 1531 00c6 3B       		.uleb128 0x3b
 1532 00c7 0B       		.uleb128 0xb
 1533 00c8 49       		.uleb128 0x49
 1534 00c9 13       		.uleb128 0x13
 1535 00ca 02       		.uleb128 0x2
 1536 00cb 18       		.uleb128 0x18
 1537 00cc 00       		.byte	0
 1538 00cd 00       		.byte	0
 1539 00ce 0F       		.uleb128 0xf
 1540 00cf 34       		.uleb128 0x34
 1541 00d0 00       		.byte	0
 1542 00d1 03       		.uleb128 0x3
 1543 00d2 08       		.uleb128 0x8
 1544 00d3 3A       		.uleb128 0x3a
 1545 00d4 0B       		.uleb128 0xb
 1546 00d5 3B       		.uleb128 0x3b
 1547 00d6 0B       		.uleb128 0xb
 1548 00d7 49       		.uleb128 0x49
 1549 00d8 13       		.uleb128 0x13
 1550 00d9 02       		.uleb128 0x2
 1551 00da 18       		.uleb128 0x18
 1552 00db 00       		.byte	0
 1553 00dc 00       		.byte	0
 1554 00dd 10       		.uleb128 0x10
 1555 00de 34       		.uleb128 0x34
 1556 00df 00       		.byte	0
 1557 00e0 03       		.uleb128 0x3
 1558 00e1 0E       		.uleb128 0xe
 1559 00e2 3A       		.uleb128 0x3a
 1560 00e3 0B       		.uleb128 0xb
 1561 00e4 3B       		.uleb128 0x3b
 1562 00e5 05       		.uleb128 0x5
 1563 00e6 49       		.uleb128 0x49
 1564 00e7 13       		.uleb128 0x13
 1565 00e8 3F       		.uleb128 0x3f
 1566 00e9 19       		.uleb128 0x19
 1567 00ea 3C       		.uleb128 0x3c
 1568 00eb 19       		.uleb128 0x19
 1569 00ec 00       		.byte	0
 1570 00ed 00       		.byte	0
 1571 00ee 11       		.uleb128 0x11
 1572 00ef 35       		.uleb128 0x35
 1573 00f0 00       		.byte	0
 1574 00f1 49       		.uleb128 0x49
 1575 00f2 13       		.uleb128 0x13
 1576 00f3 00       		.byte	0
 1577 00f4 00       		.byte	0
 1578 00f5 00       		.byte	0
 1579              		.section	.debug_aranges,"",%progbits
 1580 0000 3C000000 		.4byte	0x3c
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 33


 1581 0004 0200     		.2byte	0x2
 1582 0006 00000000 		.4byte	.Ldebug_info0
 1583 000a 04       		.byte	0x4
 1584 000b 00       		.byte	0
 1585 000c 0000     		.2byte	0
 1586 000e 0000     		.2byte	0
 1587 0010 00000000 		.4byte	.LFB63
 1588 0014 0A000000 		.4byte	.LFE63-.LFB63
 1589 0018 00000000 		.4byte	.LFB64
 1590 001c 0C030000 		.4byte	.LFE64-.LFB64
 1591 0020 00000000 		.4byte	.LFB65
 1592 0024 70000000 		.4byte	.LFE65-.LFB65
 1593 0028 00000000 		.4byte	.LFB66
 1594 002c 08010000 		.4byte	.LFE66-.LFB66
 1595 0030 00000000 		.4byte	.LFB67
 1596 0034 8C010000 		.4byte	.LFE67-.LFB67
 1597 0038 00000000 		.4byte	0
 1598 003c 00000000 		.4byte	0
 1599              		.section	.debug_ranges,"",%progbits
 1600              	.Ldebug_ranges0:
 1601 0000 00000000 		.4byte	.LFB63
 1602 0004 0A000000 		.4byte	.LFE63
 1603 0008 00000000 		.4byte	.LFB64
 1604 000c 0C030000 		.4byte	.LFE64
 1605 0010 00000000 		.4byte	.LFB65
 1606 0014 70000000 		.4byte	.LFE65
 1607 0018 00000000 		.4byte	.LFB66
 1608 001c 08010000 		.4byte	.LFE66
 1609 0020 00000000 		.4byte	.LFB67
 1610 0024 8C010000 		.4byte	.LFE67
 1611 0028 00000000 		.4byte	0
 1612 002c 00000000 		.4byte	0
 1613              		.section	.debug_line,"",%progbits
 1614              	.Ldebug_line0:
 1615 0000 A5020000 		.section	.debug_str,"MS",%progbits,1
 1615      02006801 
 1615      00000201 
 1615      FB0E0D00 
 1615      01010101 
 1616              	.LASF24:
 1617 0000 7475726E 		.ascii	"turn\000"
 1617      00
 1618              	.LASF30:
 1619 0005 7469635F 		.ascii	"tic_tac_ai\000"
 1619      7461635F 
 1619      616900
 1620              	.LASF26:
 1621 0010 67726964 		.ascii	"grid\000"
 1621      00
 1622              	.LASF44:
 1623 0015 6D61696E 		.ascii	"main_play_tta_ai\000"
 1623      5F706C61 
 1623      795F7474 
 1623      615F6169 
 1623      00
 1624              	.LASF49:
 1625 0026 433A5C55 		.ascii	"C:\\Users\\Andrew\\Dropbox (Personal)\\MIT\\MIT 201"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 34


 1625      73657273 
 1625      5C416E64 
 1625      7265775C 
 1625      44726F70 
 1626 0054 36205370 		.ascii	"6 Spring\\6115\\Final Project\\Code\\VGA\\Tic Tac T"
 1626      72696E67 
 1626      5C363131 
 1626      355C4669 
 1626      6E616C20 
 1627 0082 6F652E63 		.ascii	"oe.cydsn\000"
 1627      7964736E 
 1627      00
 1628              	.LASF9:
 1629 008b 5F5F696E 		.ascii	"__int32_t\000"
 1629      7433325F 
 1629      7400
 1630              	.LASF19:
 1631 0095 7469635F 		.ascii	"tic_tac_toe\000"
 1631      7461635F 
 1631      746F6500 
 1632              	.LASF47:
 1633 00a1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1633      4320342E 
 1633      392E3320 
 1633      32303135 
 1633      30333033 
 1634 00d4 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1634      20726576 
 1634      6973696F 
 1634      6E203232 
 1634      31323230 
 1635 0107 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1635      66756E63 
 1635      74696F6E 
 1635      2D736563 
 1635      74696F6E 
 1636              	.LASF22:
 1637 012f 64696D65 		.ascii	"dimension\000"
 1637      6E73696F 
 1637      6E00
 1638              	.LASF34:
 1639 0139 67616D65 		.ascii	"game\000"
 1639      00
 1640              	.LASF13:
 1641 013e 666C6F61 		.ascii	"float\000"
 1641      7400
 1642              	.LASF40:
 1643 0144 6F746865 		.ascii	"other_val\000"
 1643      725F7661 
 1643      6C00
 1644              	.LASF6:
 1645 014e 6C6F6E67 		.ascii	"long long int\000"
 1645      206C6F6E 
 1645      6720696E 
 1645      7400
 1646              	.LASF21:
 1647 015c 73697A65 		.ascii	"size\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 35


 1647      00
 1648              	.LASF48:
 1649 0161 2E5C6D61 		.ascii	".\\main.c\000"
 1649      696E2E63 
 1649      00
 1650              	.LASF5:
 1651 016a 6C6F6E67 		.ascii	"long unsigned int\000"
 1651      20756E73 
 1651      69676E65 
 1651      6420696E 
 1651      7400
 1652              	.LASF3:
 1653 017c 73686F72 		.ascii	"short unsigned int\000"
 1653      7420756E 
 1653      7369676E 
 1653      65642069 
 1653      6E7400
 1654              	.LASF51:
 1655 018f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1655      52784275 
 1655      66666572 
 1655      00
 1656              	.LASF1:
 1657 019c 756E7369 		.ascii	"unsigned char\000"
 1657      676E6564 
 1657      20636861 
 1657      7200
 1658              	.LASF29:
 1659 01aa 64696167 		.ascii	"diags\000"
 1659      7300
 1660              	.LASF14:
 1661 01b0 646F7562 		.ascii	"double\000"
 1661      6C6500
 1662              	.LASF23:
 1663 01b7 706C6179 		.ascii	"player\000"
 1663      657200
 1664              	.LASF2:
 1665 01be 73686F72 		.ascii	"short int\000"
 1665      7420696E 
 1665      7400
 1666              	.LASF45:
 1667 01c8 6D61696E 		.ascii	"main_play_ttc\000"
 1667      5F706C61 
 1667      795F7474 
 1667      6300
 1668              	.LASF12:
 1669 01d6 75696E74 		.ascii	"uint16\000"
 1669      313600
 1670              	.LASF27:
 1671 01dd 706C6179 		.ascii	"player_id\000"
 1671      65725F69 
 1671      6400
 1672              	.LASF28:
 1673 01e7 67726964 		.ascii	"grid_eval\000"
 1673      5F657661 
 1673      6C00
 1674              	.LASF39:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 36


 1675 01f1 7265645F 		.ascii	"red_flash\000"
 1675      666C6173 
 1675      6800
 1676              	.LASF8:
 1677 01fb 756E7369 		.ascii	"unsigned int\000"
 1677      676E6564 
 1677      20696E74 
 1677      00
 1678              	.LASF7:
 1679 0208 6C6F6E67 		.ascii	"long long unsigned int\000"
 1679      206C6F6E 
 1679      6720756E 
 1679      7369676E 
 1679      65642069 
 1680              	.LASF42:
 1681 021f 6D61696E 		.ascii	"main_test_disp\000"
 1681      5F746573 
 1681      745F6469 
 1681      737000
 1682              	.LASF35:
 1683 022e 64697370 		.ascii	"disp\000"
 1683      00
 1684              	.LASF50:
 1685 0233 6D61696E 		.ascii	"main\000"
 1685      00
 1686              	.LASF37:
 1687 0238 56616C75 		.ascii	"Values\000"
 1687      657300
 1688              	.LASF18:
 1689 023f 64697370 		.ascii	"disp_grid_81\000"
 1689      5F677269 
 1689      645F3831 
 1689      00
 1690              	.LASF10:
 1691 024c 696E7433 		.ascii	"int32_t\000"
 1691      325F7400 
 1692              	.LASF16:
 1693 0254 73697A65 		.ascii	"sizetype\000"
 1693      74797065 
 1693      00
 1694              	.LASF15:
 1695 025d 63686172 		.ascii	"char\000"
 1695      00
 1696              	.LASF20:
 1697 0262 6D617472 		.ascii	"matrix\000"
 1697      697800
 1698              	.LASF41:
 1699 0269 6D61696E 		.ascii	"main_flashing_tta\000"
 1699      5F666C61 
 1699      7368696E 
 1699      675F7474 
 1699      6100
 1700              	.LASF36:
 1701 027b 636F756E 		.ascii	"count\000"
 1701      7400
 1702              	.LASF46:
 1703 0281 6C6F6C7A 		.ascii	"lolz\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccBvbRAh.s 			page 37


 1703      00
 1704              	.LASF11:
 1705 0286 75696E74 		.ascii	"uint8\000"
 1705      3800
 1706              	.LASF43:
 1707 028c 63757272 		.ascii	"current\000"
 1707      656E7400 
 1708              	.LASF31:
 1709 0294 69735F61 		.ascii	"is_ai\000"
 1709      6900
 1710              	.LASF25:
 1711 029a 67616D65 		.ascii	"game_not_won\000"
 1711      5F6E6F74 
 1711      5F776F6E 
 1711      00
 1712              	.LASF4:
 1713 02a7 6C6F6E67 		.ascii	"long int\000"
 1713      20696E74 
 1713      00
 1714              	.LASF17:
 1715 02b0 6C6F6E67 		.ascii	"long double\000"
 1715      20646F75 
 1715      626C6500 
 1716              	.LASF38:
 1717 02bc 56616C75 		.ascii	"Values_prev\000"
 1717      65735F70 
 1717      72657600 
 1718              	.LASF0:
 1719 02c8 7369676E 		.ascii	"signed char\000"
 1719      65642063 
 1719      68617200 
 1720              	.LASF32:
 1721 02d4 61695F31 		.ascii	"ai_1\000"
 1721      00
 1722              	.LASF33:
 1723 02d9 61695F32 		.ascii	"ai_2\000"
 1723      00
 1724              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
