ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"tic_tac_all.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ttc_init,"ax",%progbits
  19              		.align	2
  20              		.global	ttc_init
  21              		.thumb
  22              		.thumb_func
  23              		.type	ttc_init, %function
  24              	ttc_init:
  25              	.LFB63:
  26              		.file 1 ".\\tic_tac_all.c"
   1:.\tic_tac_all.c **** /* ========================================
   2:.\tic_tac_all.c ****  *
   3:.\tic_tac_all.c ****  * Copyright HUDING ENTERPRISES, 2016
   4:.\tic_tac_all.c ****  * All Rights Reserved
   5:.\tic_tac_all.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\tic_tac_all.c ****  *
   7:.\tic_tac_all.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\tic_tac_all.c ****  * WHICH IS THE PROPERTY OF Andrew Xia.
   9:.\tic_tac_all.c ****  *
  10:.\tic_tac_all.c ****  * ========================================
  11:.\tic_tac_all.c **** */
  12:.\tic_tac_all.c **** #include <stdio.h>
  13:.\tic_tac_all.c **** #include <stdlib.h>
  14:.\tic_tac_all.c **** #include <string.h>
  15:.\tic_tac_all.c **** #include <math.h>
  16:.\tic_tac_all.c **** #include <time.h>
  17:.\tic_tac_all.c **** 
  18:.\tic_tac_all.c **** typedef int bool;
  19:.\tic_tac_all.c **** #define true 1
  20:.\tic_tac_all.c **** #define false 0
  21:.\tic_tac_all.c **** 
  22:.\tic_tac_all.c **** #ifndef DEVICE_H
  23:.\tic_tac_all.c **** #define DEVICE_H
  24:.\tic_tac_all.c **** #include <project.h>
  25:.\tic_tac_all.c **** 
  26:.\tic_tac_all.c **** #endif
  27:.\tic_tac_all.c **** 
  28:.\tic_tac_all.c **** struct tic_tac_toe{
  29:.\tic_tac_all.c **** 	int size;
  30:.\tic_tac_all.c **** 	int dimension;
  31:.\tic_tac_all.c **** 	// grid = {'A','B','A'}; // make this an array of length 64
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 2


  32:.\tic_tac_all.c **** 	int player; // 1 is player A, -1 is player B
  33:.\tic_tac_all.c **** 	int turn;
  34:.\tic_tac_all.c **** 	int game_not_won;
  35:.\tic_tac_all.c **** 	// int grid_eval[]; //this keeps track of scores of all diagonals
  36:.\tic_tac_all.c **** 	int grid[64]; // a usually size 64 grid containing our board
  37:.\tic_tac_all.c **** 	// if don't specify grid size, could get memory overlap
  38:.\tic_tac_all.c **** };
  39:.\tic_tac_all.c **** 
  40:.\tic_tac_all.c **** void ttc_init(struct tic_tac_toe* t, int size, int dimension){
  27              		.loc 1 40 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 87B0     		sub	sp, sp, #28
  36              		.cfi_def_cfa_offset 32
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 B960     		str	r1, [r7, #8]
  41 000a 7A60     		str	r2, [r7, #4]
  41:.\tic_tac_all.c **** 	t->size = size;
  42              		.loc 1 41 0
  43 000c FB68     		ldr	r3, [r7, #12]
  44 000e BA68     		ldr	r2, [r7, #8]
  45 0010 1A60     		str	r2, [r3]
  42:.\tic_tac_all.c **** 	t->dimension = dimension;
  46              		.loc 1 42 0
  47 0012 FB68     		ldr	r3, [r7, #12]
  48 0014 7A68     		ldr	r2, [r7, #4]
  49 0016 5A60     		str	r2, [r3, #4]
  43:.\tic_tac_all.c **** 	if (dimension == 3){
  50              		.loc 1 43 0
  51 0018 7B68     		ldr	r3, [r7, #4]
  52 001a 032B     		cmp	r3, #3
  53 001c 18D1     		bne	.L2
  54              	.LBB2:
  44:.\tic_tac_all.c **** 		int i;
  45:.\tic_tac_all.c **** 		int num = size*size*size;
  55              		.loc 1 45 0
  56 001e BB68     		ldr	r3, [r7, #8]
  57 0020 BA68     		ldr	r2, [r7, #8]
  58 0022 02FB03F3 		mul	r3, r2, r3
  59 0026 BA68     		ldr	r2, [r7, #8]
  60 0028 02FB03F3 		mul	r3, r2, r3
  61 002c 3B61     		str	r3, [r7, #16]
  46:.\tic_tac_all.c **** 		for (i = 0; i < num;i++){
  62              		.loc 1 46 0
  63 002e 0023     		movs	r3, #0
  64 0030 7B61     		str	r3, [r7, #20]
  65 0032 09E0     		b	.L3
  66              	.L4:
  47:.\tic_tac_all.c **** 			t->grid[i] = 0;
  67              		.loc 1 47 0 discriminator 3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 3


  68 0034 FA68     		ldr	r2, [r7, #12]
  69 0036 7B69     		ldr	r3, [r7, #20]
  70 0038 0433     		adds	r3, r3, #4
  71 003a 9B00     		lsls	r3, r3, #2
  72 003c 1344     		add	r3, r3, r2
  73 003e 0022     		movs	r2, #0
  74 0040 5A60     		str	r2, [r3, #4]
  46:.\tic_tac_all.c **** 		for (i = 0; i < num;i++){
  75              		.loc 1 46 0 discriminator 3
  76 0042 7B69     		ldr	r3, [r7, #20]
  77 0044 0133     		adds	r3, r3, #1
  78 0046 7B61     		str	r3, [r7, #20]
  79              	.L3:
  46:.\tic_tac_all.c **** 		for (i = 0; i < num;i++){
  80              		.loc 1 46 0 is_stmt 0 discriminator 1
  81 0048 7A69     		ldr	r2, [r7, #20]
  82 004a 3B69     		ldr	r3, [r7, #16]
  83 004c 9A42     		cmp	r2, r3
  84 004e F1DB     		blt	.L4
  85              	.L2:
  86              	.LBE2:
  48:.\tic_tac_all.c **** 		}
  49:.\tic_tac_all.c **** 	}
  50:.\tic_tac_all.c **** 	t->player = 1; // default to player 1
  87              		.loc 1 50 0 is_stmt 1
  88 0050 FB68     		ldr	r3, [r7, #12]
  89 0052 0122     		movs	r2, #1
  90 0054 9A60     		str	r2, [r3, #8]
  51:.\tic_tac_all.c **** 	t->game_not_won = 0;
  91              		.loc 1 51 0
  92 0056 FB68     		ldr	r3, [r7, #12]
  93 0058 0022     		movs	r2, #0
  94 005a 1A61     		str	r2, [r3, #16]
  52:.\tic_tac_all.c **** 	t->turn = 1;
  95              		.loc 1 52 0
  96 005c FB68     		ldr	r3, [r7, #12]
  97 005e 0122     		movs	r2, #1
  98 0060 DA60     		str	r2, [r3, #12]
  53:.\tic_tac_all.c **** };
  99              		.loc 1 53 0
 100 0062 1C37     		adds	r7, r7, #28
 101              		.cfi_def_cfa_offset 4
 102 0064 BD46     		mov	sp, r7
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0066 5DF8047B 		ldr	r7, [sp], #4
 106              		.cfi_restore 7
 107              		.cfi_def_cfa_offset 0
 108 006a 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE63:
 111              		.size	ttc_init, .-ttc_init
 112              		.section	.text.ttc_set_grid,"ax",%progbits
 113              		.align	2
 114              		.global	ttc_set_grid
 115              		.thumb
 116              		.thumb_func
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 4


 117              		.type	ttc_set_grid, %function
 118              	ttc_set_grid:
 119              	.LFB64:
  54:.\tic_tac_all.c **** 
  55:.\tic_tac_all.c **** int ttc_set_grid(struct tic_tac_toe* t, int x, int y, int z, int value){
 120              		.loc 1 55 0
 121              		.cfi_startproc
 122              		@ args = 4, pretend = 0, frame = 24
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125 0000 80B4     		push	{r7}
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 7, -4
 128 0002 87B0     		sub	sp, sp, #28
 129              		.cfi_def_cfa_offset 32
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 132 0006 F860     		str	r0, [r7, #12]
 133 0008 B960     		str	r1, [r7, #8]
 134 000a 7A60     		str	r2, [r7, #4]
 135 000c 3B60     		str	r3, [r7]
  56:.\tic_tac_all.c **** 	int loc = z*16 + y*4 + x;
 136              		.loc 1 56 0
 137 000e 3B68     		ldr	r3, [r7]
 138 0010 9A00     		lsls	r2, r3, #2
 139 0012 7B68     		ldr	r3, [r7, #4]
 140 0014 1344     		add	r3, r3, r2
 141 0016 9A00     		lsls	r2, r3, #2
 142 0018 BB68     		ldr	r3, [r7, #8]
 143 001a 1344     		add	r3, r3, r2
 144 001c 7B61     		str	r3, [r7, #20]
  57:.\tic_tac_all.c **** 	t->grid[loc] = value;
 145              		.loc 1 57 0
 146 001e FA68     		ldr	r2, [r7, #12]
 147 0020 7B69     		ldr	r3, [r7, #20]
 148 0022 0433     		adds	r3, r3, #4
 149 0024 9B00     		lsls	r3, r3, #2
 150 0026 1344     		add	r3, r3, r2
 151 0028 3A6A     		ldr	r2, [r7, #32]
 152 002a 5A60     		str	r2, [r3, #4]
  58:.\tic_tac_all.c **** 	// printf("\nSet Value %i %i %i %i",x,y,z,value); 
  59:.\tic_tac_all.c **** 	return 1; // return 1 to show completed properly
 153              		.loc 1 59 0
 154 002c 0123     		movs	r3, #1
  60:.\tic_tac_all.c **** }
 155              		.loc 1 60 0
 156 002e 1846     		mov	r0, r3
 157 0030 1C37     		adds	r7, r7, #28
 158              		.cfi_def_cfa_offset 4
 159 0032 BD46     		mov	sp, r7
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 0034 5DF8047B 		ldr	r7, [sp], #4
 163              		.cfi_restore 7
 164              		.cfi_def_cfa_offset 0
 165 0038 7047     		bx	lr
 166              		.cfi_endproc
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 5


 167              	.LFE64:
 168              		.size	ttc_set_grid, .-ttc_set_grid
 169 003a 00BF     		.section	.text.ttc_get_grid,"ax",%progbits
 170              		.align	2
 171              		.global	ttc_get_grid
 172              		.thumb
 173              		.thumb_func
 174              		.type	ttc_get_grid, %function
 175              	ttc_get_grid:
 176              	.LFB65:
  61:.\tic_tac_all.c **** 
  62:.\tic_tac_all.c **** int ttc_get_grid(struct tic_tac_toe* t, int x, int y, int z){
 177              		.loc 1 62 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 24
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182 0000 80B4     		push	{r7}
 183              		.cfi_def_cfa_offset 4
 184              		.cfi_offset 7, -4
 185 0002 87B0     		sub	sp, sp, #28
 186              		.cfi_def_cfa_offset 32
 187 0004 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
 189 0006 F860     		str	r0, [r7, #12]
 190 0008 B960     		str	r1, [r7, #8]
 191 000a 7A60     		str	r2, [r7, #4]
 192 000c 3B60     		str	r3, [r7]
  63:.\tic_tac_all.c **** 	int loc = z*16 + y*4 + x;
 193              		.loc 1 63 0
 194 000e 3B68     		ldr	r3, [r7]
 195 0010 9A00     		lsls	r2, r3, #2
 196 0012 7B68     		ldr	r3, [r7, #4]
 197 0014 1344     		add	r3, r3, r2
 198 0016 9A00     		lsls	r2, r3, #2
 199 0018 BB68     		ldr	r3, [r7, #8]
 200 001a 1344     		add	r3, r3, r2
 201 001c 7B61     		str	r3, [r7, #20]
  64:.\tic_tac_all.c **** 	int ret = t->grid[loc];
 202              		.loc 1 64 0
 203 001e FA68     		ldr	r2, [r7, #12]
 204 0020 7B69     		ldr	r3, [r7, #20]
 205 0022 0433     		adds	r3, r3, #4
 206 0024 9B00     		lsls	r3, r3, #2
 207 0026 1344     		add	r3, r3, r2
 208 0028 5B68     		ldr	r3, [r3, #4]
 209 002a 3B61     		str	r3, [r7, #16]
  65:.\tic_tac_all.c **** 	// printf("\nGet Value %i %i %i %i",x,y,z,ret); 
  66:.\tic_tac_all.c **** 	return ret;
 210              		.loc 1 66 0
 211 002c 3B69     		ldr	r3, [r7, #16]
  67:.\tic_tac_all.c **** }
 212              		.loc 1 67 0
 213 002e 1846     		mov	r0, r3
 214 0030 1C37     		adds	r7, r7, #28
 215              		.cfi_def_cfa_offset 4
 216 0032 BD46     		mov	sp, r7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 6


 217              		.cfi_def_cfa_register 13
 218              		@ sp needed
 219 0034 5DF8047B 		ldr	r7, [sp], #4
 220              		.cfi_restore 7
 221              		.cfi_def_cfa_offset 0
 222 0038 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE65:
 225              		.size	ttc_get_grid, .-ttc_get_grid
 226 003a 00BF     		.section	.rodata
 227              		.align	2
 228              	.LC0:
 229 0000 0A4F7574 		.ascii	"\012Out of bounds %i %i %i\000"
 229      206F6620 
 229      626F756E 
 229      64732025 
 229      69202569 
 230              		.align	2
 231              	.LC1:
 232 0018 0A506F73 		.ascii	"\012Position already occupied %i %i %i\000"
 232      6974696F 
 232      6E20616C 
 232      72656164 
 232      79206F63 
 233              		.section	.text.ttc_check_valid,"ax",%progbits
 234              		.align	2
 235              		.global	ttc_check_valid
 236              		.thumb
 237              		.thumb_func
 238              		.type	ttc_check_valid, %function
 239              	ttc_check_valid:
 240              	.LFB66:
  68:.\tic_tac_all.c **** 
  69:.\tic_tac_all.c **** int ttc_check_valid(struct tic_tac_toe* t, int x, int y, int z){
 241              		.loc 1 69 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 24
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0000 80B5     		push	{r7, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 86B0     		sub	sp, sp, #24
 250              		.cfi_def_cfa_offset 32
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 253 0006 F860     		str	r0, [r7, #12]
 254 0008 B960     		str	r1, [r7, #8]
 255 000a 7A60     		str	r2, [r7, #4]
 256 000c 3B60     		str	r3, [r7]
  70:.\tic_tac_all.c **** 	int loc = z*16 + y*4 + x;
 257              		.loc 1 70 0
 258 000e 3B68     		ldr	r3, [r7]
 259 0010 9A00     		lsls	r2, r3, #2
 260 0012 7B68     		ldr	r3, [r7, #4]
 261 0014 1344     		add	r3, r3, r2
 262 0016 9A00     		lsls	r2, r3, #2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 7


 263 0018 BB68     		ldr	r3, [r7, #8]
 264 001a 1344     		add	r3, r3, r2
 265 001c 7B61     		str	r3, [r7, #20]
  71:.\tic_tac_all.c **** 	if (x < 0 || y < 0 || z < 0){
 266              		.loc 1 71 0
 267 001e BB68     		ldr	r3, [r7, #8]
 268 0020 002B     		cmp	r3, #0
 269 0022 05DB     		blt	.L10
 270              		.loc 1 71 0 is_stmt 0 discriminator 1
 271 0024 7B68     		ldr	r3, [r7, #4]
 272 0026 002B     		cmp	r3, #0
 273 0028 02DB     		blt	.L10
 274              		.loc 1 71 0 discriminator 2
 275 002a 3B68     		ldr	r3, [r7]
 276 002c 002B     		cmp	r3, #0
 277 002e 07DA     		bge	.L11
 278              	.L10:
  72:.\tic_tac_all.c **** 		printf("\nOut of bounds %i %i %i",x,y,z); 
 279              		.loc 1 72 0 is_stmt 1
 280 0030 1948     		ldr	r0, .L16
 281 0032 B968     		ldr	r1, [r7, #8]
 282 0034 7A68     		ldr	r2, [r7, #4]
 283 0036 3B68     		ldr	r3, [r7]
 284 0038 FFF7FEFF 		bl	printf
  73:.\tic_tac_all.c **** 		return 0;
 285              		.loc 1 73 0
 286 003c 0023     		movs	r3, #0
 287 003e 27E0     		b	.L12
 288              	.L11:
  74:.\tic_tac_all.c **** 	}
  75:.\tic_tac_all.c **** 	else if (x >= t->size || y >= t->size || z >= t->size){
 289              		.loc 1 75 0
 290 0040 FB68     		ldr	r3, [r7, #12]
 291 0042 1A68     		ldr	r2, [r3]
 292 0044 BB68     		ldr	r3, [r7, #8]
 293 0046 9A42     		cmp	r2, r3
 294 0048 09DD     		ble	.L13
 295              		.loc 1 75 0 is_stmt 0 discriminator 1
 296 004a FB68     		ldr	r3, [r7, #12]
 297 004c 1A68     		ldr	r2, [r3]
 298 004e 7B68     		ldr	r3, [r7, #4]
 299 0050 9A42     		cmp	r2, r3
 300 0052 04DD     		ble	.L13
 301              		.loc 1 75 0 discriminator 2
 302 0054 FB68     		ldr	r3, [r7, #12]
 303 0056 1A68     		ldr	r2, [r3]
 304 0058 3B68     		ldr	r3, [r7]
 305 005a 9A42     		cmp	r2, r3
 306 005c 07DC     		bgt	.L14
 307              	.L13:
  76:.\tic_tac_all.c **** 		printf("\nOut of bounds %i %i %i",x,y,z); 
 308              		.loc 1 76 0 is_stmt 1
 309 005e 0E48     		ldr	r0, .L16
 310 0060 B968     		ldr	r1, [r7, #8]
 311 0062 7A68     		ldr	r2, [r7, #4]
 312 0064 3B68     		ldr	r3, [r7]
 313 0066 FFF7FEFF 		bl	printf
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 8


  77:.\tic_tac_all.c **** 		return 0;
 314              		.loc 1 77 0
 315 006a 0023     		movs	r3, #0
 316 006c 10E0     		b	.L12
 317              	.L14:
  78:.\tic_tac_all.c **** 	}
  79:.\tic_tac_all.c **** 	else if (t->grid[loc] != 0){ // already occupied position
 318              		.loc 1 79 0
 319 006e FA68     		ldr	r2, [r7, #12]
 320 0070 7B69     		ldr	r3, [r7, #20]
 321 0072 0433     		adds	r3, r3, #4
 322 0074 9B00     		lsls	r3, r3, #2
 323 0076 1344     		add	r3, r3, r2
 324 0078 5B68     		ldr	r3, [r3, #4]
 325 007a 002B     		cmp	r3, #0
 326 007c 07D0     		beq	.L15
  80:.\tic_tac_all.c **** 		printf("\nPosition already occupied %i %i %i",x,y,z); 
 327              		.loc 1 80 0
 328 007e 0748     		ldr	r0, .L16+4
 329 0080 B968     		ldr	r1, [r7, #8]
 330 0082 7A68     		ldr	r2, [r7, #4]
 331 0084 3B68     		ldr	r3, [r7]
 332 0086 FFF7FEFF 		bl	printf
  81:.\tic_tac_all.c **** 		return 0;
 333              		.loc 1 81 0
 334 008a 0023     		movs	r3, #0
 335 008c 00E0     		b	.L12
 336              	.L15:
  82:.\tic_tac_all.c **** 	}
  83:.\tic_tac_all.c **** 	else{
  84:.\tic_tac_all.c **** 		return 1; //free position
 337              		.loc 1 84 0
 338 008e 0123     		movs	r3, #1
 339              	.L12:
  85:.\tic_tac_all.c **** 	}
  86:.\tic_tac_all.c **** 
  87:.\tic_tac_all.c **** }
 340              		.loc 1 87 0
 341 0090 1846     		mov	r0, r3
 342 0092 1837     		adds	r7, r7, #24
 343              		.cfi_def_cfa_offset 8
 344 0094 BD46     		mov	sp, r7
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 0096 80BD     		pop	{r7, pc}
 348              	.L17:
 349              		.align	2
 350              	.L16:
 351 0098 00000000 		.word	.LC0
 352 009c 18000000 		.word	.LC1
 353              		.cfi_endproc
 354              	.LFE66:
 355              		.size	ttc_check_valid, .-ttc_check_valid
 356              		.section	.text.ttc_change_player,"ax",%progbits
 357              		.align	2
 358              		.global	ttc_change_player
 359              		.thumb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 9


 360              		.thumb_func
 361              		.type	ttc_change_player, %function
 362              	ttc_change_player:
 363              	.LFB67:
  88:.\tic_tac_all.c **** 
  89:.\tic_tac_all.c **** void ttc_change_player(struct tic_tac_toe* t){
 364              		.loc 1 89 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 7, -4
 372 0002 83B0     		sub	sp, sp, #12
 373              		.cfi_def_cfa_offset 16
 374 0004 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
 376 0006 7860     		str	r0, [r7, #4]
  90:.\tic_tac_all.c **** 	if (t->player == 1){
 377              		.loc 1 90 0
 378 0008 7B68     		ldr	r3, [r7, #4]
 379 000a 9B68     		ldr	r3, [r3, #8]
 380 000c 012B     		cmp	r3, #1
 381 000e 04D1     		bne	.L19
  91:.\tic_tac_all.c **** 		t->player = -1;
 382              		.loc 1 91 0
 383 0010 7B68     		ldr	r3, [r7, #4]
 384 0012 4FF0FF32 		mov	r2, #-1
 385 0016 9A60     		str	r2, [r3, #8]
 386 0018 07E0     		b	.L20
 387              	.L19:
  92:.\tic_tac_all.c **** 	}
  93:.\tic_tac_all.c **** 	else if (t-> player == -1){
 388              		.loc 1 93 0
 389 001a 7B68     		ldr	r3, [r7, #4]
 390 001c 9B68     		ldr	r3, [r3, #8]
 391 001e B3F1FF3F 		cmp	r3, #-1
 392 0022 02D1     		bne	.L20
  94:.\tic_tac_all.c **** 		t->player = 1;
 393              		.loc 1 94 0
 394 0024 7B68     		ldr	r3, [r7, #4]
 395 0026 0122     		movs	r2, #1
 396 0028 9A60     		str	r2, [r3, #8]
 397              	.L20:
  95:.\tic_tac_all.c **** 	}
  96:.\tic_tac_all.c **** 	t->turn++;
 398              		.loc 1 96 0
 399 002a 7B68     		ldr	r3, [r7, #4]
 400 002c DB68     		ldr	r3, [r3, #12]
 401 002e 5A1C     		adds	r2, r3, #1
 402 0030 7B68     		ldr	r3, [r7, #4]
 403 0032 DA60     		str	r2, [r3, #12]
  97:.\tic_tac_all.c **** }
 404              		.loc 1 97 0
 405 0034 0C37     		adds	r7, r7, #12
 406              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 10


 407 0036 BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 0038 5DF8047B 		ldr	r7, [sp], #4
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 003c 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE67:
 416              		.size	ttc_change_player, .-ttc_change_player
 417 003e 00BF     		.section	.rodata
 418              		.align	2
 419              	.LC2:
 420 003c 0A456E74 		.ascii	"\012Enter a position: \000"
 420      65722061 
 420      20706F73 
 420      6974696F 
 420      6E3A2000 
 421              		.align	2
 422              	.LC3:
 423 0050 257300   		.ascii	"%s\000"
 424 0053 00       		.align	2
 425              	.LC4:
 426 0054 456E7465 		.ascii	"Entered %i %i %i\000"
 426      72656420 
 426      25692025 
 426      69202569 
 426      00
 427              		.section	.text.ttc_take_input,"ax",%progbits
 428              		.align	2
 429              		.global	ttc_take_input
 430              		.thumb
 431              		.thumb_func
 432              		.type	ttc_take_input, %function
 433              	ttc_take_input:
 434              	.LFB68:
  98:.\tic_tac_all.c **** 
  99:.\tic_tac_all.c **** int * ttc_take_input(){ 
 435              		.loc 1 99 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 8
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439 0000 80B5     		push	{r7, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 82B0     		sub	sp, sp, #8
 444              		.cfi_def_cfa_offset 16
 445 0004 00AF     		add	r7, sp, #0
 446              		.cfi_def_cfa_register 7
 100:.\tic_tac_all.c **** 	// take a user input, return x y z array pointer
 101:.\tic_tac_all.c **** 	printf("\nEnter a position: ");
 447              		.loc 1 101 0
 448 0006 1148     		ldr	r0, .L23
 449 0008 FFF7FEFF 		bl	printf
 102:.\tic_tac_all.c **** 	char str2[3];
 103:.\tic_tac_all.c **** 	scanf("%s", str2);
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 11


 450              		.loc 1 103 0
 451 000c 3B1D     		adds	r3, r7, #4
 452 000e 1048     		ldr	r0, .L23+4
 453 0010 1946     		mov	r1, r3
 454 0012 FFF7FEFF 		bl	scanf
 104:.\tic_tac_all.c **** 	static int ret[3];
 105:.\tic_tac_all.c **** 	ret[0] = str2[0]-48; //without atoi, we get ascii value
 455              		.loc 1 105 0
 456 0016 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 457 0018 303B     		subs	r3, r3, #48
 458 001a 0E4A     		ldr	r2, .L23+8
 459 001c 1360     		str	r3, [r2]
 106:.\tic_tac_all.c **** 	ret[1] = str2[1]-48; //or can do ascii conversion
 460              		.loc 1 106 0
 461 001e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 462 0020 303B     		subs	r3, r3, #48
 463 0022 0C4A     		ldr	r2, .L23+8
 464 0024 5360     		str	r3, [r2, #4]
 107:.\tic_tac_all.c **** 	ret[2] = str2[2]-48; // int temp = atoi(str2);
 465              		.loc 1 107 0
 466 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 467 0028 303B     		subs	r3, r3, #48
 468 002a 0A4A     		ldr	r2, .L23+8
 469 002c 9360     		str	r3, [r2, #8]
 108:.\tic_tac_all.c **** 	// free(str2);
 109:.\tic_tac_all.c **** 	printf("Entered %i %i %i",ret[0],ret[1],ret[2]);
 470              		.loc 1 109 0
 471 002e 094B     		ldr	r3, .L23+8
 472 0030 1968     		ldr	r1, [r3]
 473 0032 084B     		ldr	r3, .L23+8
 474 0034 5A68     		ldr	r2, [r3, #4]
 475 0036 074B     		ldr	r3, .L23+8
 476 0038 9B68     		ldr	r3, [r3, #8]
 477 003a 0748     		ldr	r0, .L23+12
 478 003c FFF7FEFF 		bl	printf
 110:.\tic_tac_all.c **** 	return ret;
 479              		.loc 1 110 0
 480 0040 044B     		ldr	r3, .L23+8
 111:.\tic_tac_all.c **** }
 481              		.loc 1 111 0
 482 0042 1846     		mov	r0, r3
 483 0044 0837     		adds	r7, r7, #8
 484              		.cfi_def_cfa_offset 8
 485 0046 BD46     		mov	sp, r7
 486              		.cfi_def_cfa_register 13
 487              		@ sp needed
 488 0048 80BD     		pop	{r7, pc}
 489              	.L24:
 490 004a 00BF     		.align	2
 491              	.L23:
 492 004c 3C000000 		.word	.LC2
 493 0050 50000000 		.word	.LC3
 494 0054 00000000 		.word	ret.7440
 495 0058 54000000 		.word	.LC4
 496              		.cfi_endproc
 497              	.LFE68:
 498              		.size	ttc_take_input, .-ttc_take_input
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 12


 499              		.section	.rodata
 500 0065 000000   		.align	2
 501              	.LC5:
 502 0068 25692000 		.ascii	"%i \000"
 503              		.align	2
 504              	.LC6:
 505 006c 0A416674 		.ascii	"\012After turn %i player %i\012\000"
 505      65722074 
 505      75726E20 
 505      25692070 
 505      6C617965 
 506              		.section	.text.ttc_print_grid,"ax",%progbits
 507              		.align	2
 508              		.global	ttc_print_grid
 509              		.thumb
 510              		.thumb_func
 511              		.type	ttc_print_grid, %function
 512              	ttc_print_grid:
 513              	.LFB69:
 112:.\tic_tac_all.c **** 
 113:.\tic_tac_all.c **** void ttc_print_grid(struct tic_tac_toe* t){
 514              		.loc 1 113 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 16
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518 0000 80B5     		push	{r7, lr}
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 84B0     		sub	sp, sp, #16
 523              		.cfi_def_cfa_offset 24
 524 0004 00AF     		add	r7, sp, #0
 525              		.cfi_def_cfa_register 7
 526 0006 7860     		str	r0, [r7, #4]
 114:.\tic_tac_all.c **** 	// this function prints the board
 115:.\tic_tac_all.c **** 	int i;
 116:.\tic_tac_all.c **** 	for (i = 0; i < 64; i++){
 527              		.loc 1 116 0
 528 0008 0023     		movs	r3, #0
 529 000a FB60     		str	r3, [r7, #12]
 530 000c 28E0     		b	.L26
 531              	.L30:
 117:.\tic_tac_all.c **** 		if (i % 4 == 0){
 532              		.loc 1 117 0
 533 000e FB68     		ldr	r3, [r7, #12]
 534 0010 03F00303 		and	r3, r3, #3
 535 0014 002B     		cmp	r3, #0
 536 0016 02D1     		bne	.L27
 118:.\tic_tac_all.c **** 			printf("\n");
 537              		.loc 1 118 0
 538 0018 0A20     		movs	r0, #10
 539 001a FFF7FEFF 		bl	putchar
 540              	.L27:
 119:.\tic_tac_all.c **** 		}
 120:.\tic_tac_all.c **** 		if (i % 16 == 0){
 541              		.loc 1 120 0
 542 001e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 13


 543 0020 03F00F03 		and	r3, r3, #15
 544 0024 002B     		cmp	r3, #0
 545 0026 02D1     		bne	.L28
 121:.\tic_tac_all.c **** 			printf("\n");
 546              		.loc 1 121 0
 547 0028 0A20     		movs	r0, #10
 548 002a FFF7FEFF 		bl	putchar
 549              	.L28:
 122:.\tic_tac_all.c **** 		}
 123:.\tic_tac_all.c **** 		printf("%i ",t->grid[i]);
 550              		.loc 1 123 0
 551 002e 7A68     		ldr	r2, [r7, #4]
 552 0030 FB68     		ldr	r3, [r7, #12]
 553 0032 0433     		adds	r3, r3, #4
 554 0034 9B00     		lsls	r3, r3, #2
 555 0036 1344     		add	r3, r3, r2
 556 0038 5B68     		ldr	r3, [r3, #4]
 557 003a 1148     		ldr	r0, .L31
 558 003c 1946     		mov	r1, r3
 559 003e FFF7FEFF 		bl	printf
 124:.\tic_tac_all.c **** 		if (t->grid[i] != -1){
 560              		.loc 1 124 0
 561 0042 7A68     		ldr	r2, [r7, #4]
 562 0044 FB68     		ldr	r3, [r7, #12]
 563 0046 0433     		adds	r3, r3, #4
 564 0048 9B00     		lsls	r3, r3, #2
 565 004a 1344     		add	r3, r3, r2
 566 004c 5B68     		ldr	r3, [r3, #4]
 567 004e B3F1FF3F 		cmp	r3, #-1
 568 0052 02D0     		beq	.L29
 125:.\tic_tac_all.c **** 			printf(" ");
 569              		.loc 1 125 0
 570 0054 2020     		movs	r0, #32
 571 0056 FFF7FEFF 		bl	putchar
 572              	.L29:
 116:.\tic_tac_all.c **** 		if (i % 4 == 0){
 573              		.loc 1 116 0 discriminator 2
 574 005a FB68     		ldr	r3, [r7, #12]
 575 005c 0133     		adds	r3, r3, #1
 576 005e FB60     		str	r3, [r7, #12]
 577              	.L26:
 116:.\tic_tac_all.c **** 		if (i % 4 == 0){
 578              		.loc 1 116 0 is_stmt 0 discriminator 1
 579 0060 FB68     		ldr	r3, [r7, #12]
 580 0062 3F2B     		cmp	r3, #63
 581 0064 D3DD     		ble	.L30
 126:.\tic_tac_all.c **** 		}
 127:.\tic_tac_all.c **** 	}
 128:.\tic_tac_all.c **** 	printf("\nAfter turn %i player %i\n",t->turn,t->player);
 582              		.loc 1 128 0 is_stmt 1
 583 0066 7B68     		ldr	r3, [r7, #4]
 584 0068 DA68     		ldr	r2, [r3, #12]
 585 006a 7B68     		ldr	r3, [r7, #4]
 586 006c 9B68     		ldr	r3, [r3, #8]
 587 006e 0548     		ldr	r0, .L31+4
 588 0070 1146     		mov	r1, r2
 589 0072 1A46     		mov	r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 14


 590 0074 FFF7FEFF 		bl	printf
 129:.\tic_tac_all.c **** }
 591              		.loc 1 129 0
 592 0078 1037     		adds	r7, r7, #16
 593              		.cfi_def_cfa_offset 8
 594 007a BD46     		mov	sp, r7
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 007c 80BD     		pop	{r7, pc}
 598              	.L32:
 599 007e 00BF     		.align	2
 600              	.L31:
 601 0080 68000000 		.word	.LC5
 602 0084 6C000000 		.word	.LC6
 603              		.cfi_endproc
 604              	.LFE69:
 605              		.size	ttc_print_grid, .-ttc_print_grid
 606              		.section	.rodata
 607 0086 0000     		.align	2
 608              	.LC7:
 609 0088 0A506C61 		.ascii	"\012Player %i\000"
 609      79657220 
 609      256900
 610              		.section	.text.ttc_check_win,"ax",%progbits
 611              		.align	2
 612              		.global	ttc_check_win
 613              		.thumb
 614              		.thumb_func
 615              		.type	ttc_check_win, %function
 616              	ttc_check_win:
 617              	.LFB70:
 130:.\tic_tac_all.c **** 
 131:.\tic_tac_all.c **** 
 132:.\tic_tac_all.c **** int ttc_check_win(struct tic_tac_toe* t){
 618              		.loc 1 132 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 32
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622 0000 80B5     		push	{r7, lr}
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 7, -8
 625              		.cfi_offset 14, -4
 626 0002 88B0     		sub	sp, sp, #32
 627              		.cfi_def_cfa_offset 40
 628 0004 00AF     		add	r7, sp, #0
 629              		.cfi_def_cfa_register 7
 630 0006 7860     		str	r0, [r7, #4]
 133:.\tic_tac_all.c **** 	printf("\nPlayer %i",t->player);
 631              		.loc 1 133 0
 632 0008 7B68     		ldr	r3, [r7, #4]
 633 000a 9B68     		ldr	r3, [r3, #8]
 634 000c 8948     		ldr	r0, .L82
 635 000e 1946     		mov	r1, r3
 636 0010 FFF7FEFF 		bl	printf
 134:.\tic_tac_all.c **** 	int x,y,z,zp;
 135:.\tic_tac_all.c **** 	int connected;
 136:.\tic_tac_all.c **** 	for (z = 0; z < t->size; z++){
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 15


 637              		.loc 1 136 0
 638 0014 0023     		movs	r3, #0
 639 0016 7B61     		str	r3, [r7, #20]
 640 0018 84E1     		b	.L34
 641              	.L69:
 137:.\tic_tac_all.c **** 		for (y = 0; y < t->size; y++){ // flat
 642              		.loc 1 137 0
 643 001a 0023     		movs	r3, #0
 644 001c BB61     		str	r3, [r7, #24]
 645 001e 28E0     		b	.L35
 646              	.L40:
 138:.\tic_tac_all.c **** 			connected = 0;
 647              		.loc 1 138 0
 648 0020 0023     		movs	r3, #0
 649 0022 FB60     		str	r3, [r7, #12]
 139:.\tic_tac_all.c **** 			for (x = 0; x < t->size;x++){
 650              		.loc 1 139 0
 651 0024 0023     		movs	r3, #0
 652 0026 FB61     		str	r3, [r7, #28]
 653 0028 0CE0     		b	.L36
 654              	.L37:
 140:.\tic_tac_all.c **** 				connected += ttc_get_grid(t,x,y,z);
 655              		.loc 1 140 0 discriminator 3
 656 002a 7868     		ldr	r0, [r7, #4]
 657 002c F969     		ldr	r1, [r7, #28]
 658 002e BA69     		ldr	r2, [r7, #24]
 659 0030 7B69     		ldr	r3, [r7, #20]
 660 0032 FFF7FEFF 		bl	ttc_get_grid
 661 0036 0246     		mov	r2, r0
 662 0038 FB68     		ldr	r3, [r7, #12]
 663 003a 1344     		add	r3, r3, r2
 664 003c FB60     		str	r3, [r7, #12]
 139:.\tic_tac_all.c **** 			for (x = 0; x < t->size;x++){
 665              		.loc 1 139 0 discriminator 3
 666 003e FB69     		ldr	r3, [r7, #28]
 667 0040 0133     		adds	r3, r3, #1
 668 0042 FB61     		str	r3, [r7, #28]
 669              	.L36:
 139:.\tic_tac_all.c **** 			for (x = 0; x < t->size;x++){
 670              		.loc 1 139 0 is_stmt 0 discriminator 1
 671 0044 7B68     		ldr	r3, [r7, #4]
 672 0046 1A68     		ldr	r2, [r3]
 673 0048 FB69     		ldr	r3, [r7, #28]
 674 004a 9A42     		cmp	r2, r3
 675 004c EDDC     		bgt	.L37
 141:.\tic_tac_all.c **** 			}
 142:.\tic_tac_all.c **** 			if (connected == t->player*t->size){
 676              		.loc 1 142 0 is_stmt 1
 677 004e 7B68     		ldr	r3, [r7, #4]
 678 0050 9B68     		ldr	r3, [r3, #8]
 679 0052 7A68     		ldr	r2, [r7, #4]
 680 0054 1268     		ldr	r2, [r2]
 681 0056 02FB03F2 		mul	r2, r2, r3
 682 005a FB68     		ldr	r3, [r7, #12]
 683 005c 9A42     		cmp	r2, r3
 684 005e 05D1     		bne	.L38
 143:.\tic_tac_all.c **** 				t->game_not_won = t->player; //when win, set to player id
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 16


 685              		.loc 1 143 0
 686 0060 7B68     		ldr	r3, [r7, #4]
 687 0062 9A68     		ldr	r2, [r3, #8]
 688 0064 7B68     		ldr	r3, [r7, #4]
 689 0066 1A61     		str	r2, [r3, #16]
 144:.\tic_tac_all.c **** 				return 1; //there is a win
 690              		.loc 1 144 0
 691 0068 0123     		movs	r3, #1
 692 006a 03E2     		b	.L39
 693              	.L38:
 137:.\tic_tac_all.c **** 			connected = 0;
 694              		.loc 1 137 0 discriminator 2
 695 006c BB69     		ldr	r3, [r7, #24]
 696 006e 0133     		adds	r3, r3, #1
 697 0070 BB61     		str	r3, [r7, #24]
 698              	.L35:
 137:.\tic_tac_all.c **** 			connected = 0;
 699              		.loc 1 137 0 is_stmt 0 discriminator 1
 700 0072 7B68     		ldr	r3, [r7, #4]
 701 0074 1A68     		ldr	r2, [r3]
 702 0076 BB69     		ldr	r3, [r7, #24]
 703 0078 9A42     		cmp	r2, r3
 704 007a D1DC     		bgt	.L40
 145:.\tic_tac_all.c **** 			}
 146:.\tic_tac_all.c **** 		}
 147:.\tic_tac_all.c **** 		for (x = 0; x < t->size; x++){ //horiz
 705              		.loc 1 147 0 is_stmt 1
 706 007c 0023     		movs	r3, #0
 707 007e FB61     		str	r3, [r7, #28]
 708 0080 28E0     		b	.L41
 709              	.L45:
 148:.\tic_tac_all.c **** 			connected = 0;
 710              		.loc 1 148 0
 711 0082 0023     		movs	r3, #0
 712 0084 FB60     		str	r3, [r7, #12]
 149:.\tic_tac_all.c **** 			for (y = 0; y < t->size;y++){
 713              		.loc 1 149 0
 714 0086 0023     		movs	r3, #0
 715 0088 BB61     		str	r3, [r7, #24]
 716 008a 0CE0     		b	.L42
 717              	.L43:
 150:.\tic_tac_all.c **** 				connected += ttc_get_grid(t,x,y,z);
 718              		.loc 1 150 0 discriminator 3
 719 008c 7868     		ldr	r0, [r7, #4]
 720 008e F969     		ldr	r1, [r7, #28]
 721 0090 BA69     		ldr	r2, [r7, #24]
 722 0092 7B69     		ldr	r3, [r7, #20]
 723 0094 FFF7FEFF 		bl	ttc_get_grid
 724 0098 0246     		mov	r2, r0
 725 009a FB68     		ldr	r3, [r7, #12]
 726 009c 1344     		add	r3, r3, r2
 727 009e FB60     		str	r3, [r7, #12]
 149:.\tic_tac_all.c **** 			for (y = 0; y < t->size;y++){
 728              		.loc 1 149 0 discriminator 3
 729 00a0 BB69     		ldr	r3, [r7, #24]
 730 00a2 0133     		adds	r3, r3, #1
 731 00a4 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 17


 732              	.L42:
 149:.\tic_tac_all.c **** 			for (y = 0; y < t->size;y++){
 733              		.loc 1 149 0 is_stmt 0 discriminator 1
 734 00a6 7B68     		ldr	r3, [r7, #4]
 735 00a8 1A68     		ldr	r2, [r3]
 736 00aa BB69     		ldr	r3, [r7, #24]
 737 00ac 9A42     		cmp	r2, r3
 738 00ae EDDC     		bgt	.L43
 151:.\tic_tac_all.c **** 			}
 152:.\tic_tac_all.c **** 			if (connected == t->player*t->size){
 739              		.loc 1 152 0 is_stmt 1
 740 00b0 7B68     		ldr	r3, [r7, #4]
 741 00b2 9B68     		ldr	r3, [r3, #8]
 742 00b4 7A68     		ldr	r2, [r7, #4]
 743 00b6 1268     		ldr	r2, [r2]
 744 00b8 02FB03F2 		mul	r2, r2, r3
 745 00bc FB68     		ldr	r3, [r7, #12]
 746 00be 9A42     		cmp	r2, r3
 747 00c0 05D1     		bne	.L44
 153:.\tic_tac_all.c **** 				t->game_not_won = t->player; //when win, set to player id
 748              		.loc 1 153 0
 749 00c2 7B68     		ldr	r3, [r7, #4]
 750 00c4 9A68     		ldr	r2, [r3, #8]
 751 00c6 7B68     		ldr	r3, [r7, #4]
 752 00c8 1A61     		str	r2, [r3, #16]
 154:.\tic_tac_all.c **** 				return 1; //there is a win
 753              		.loc 1 154 0
 754 00ca 0123     		movs	r3, #1
 755 00cc D2E1     		b	.L39
 756              	.L44:
 147:.\tic_tac_all.c **** 			connected = 0;
 757              		.loc 1 147 0 discriminator 2
 758 00ce FB69     		ldr	r3, [r7, #28]
 759 00d0 0133     		adds	r3, r3, #1
 760 00d2 FB61     		str	r3, [r7, #28]
 761              	.L41:
 147:.\tic_tac_all.c **** 			connected = 0;
 762              		.loc 1 147 0 is_stmt 0 discriminator 1
 763 00d4 7B68     		ldr	r3, [r7, #4]
 764 00d6 1A68     		ldr	r2, [r3]
 765 00d8 FB69     		ldr	r3, [r7, #28]
 766 00da 9A42     		cmp	r2, r3
 767 00dc D1DC     		bgt	.L45
 155:.\tic_tac_all.c **** 			}
 156:.\tic_tac_all.c **** 		}
 157:.\tic_tac_all.c **** 		for (x = 0; x < t->size; x++){ //vert, where z is y coord
 768              		.loc 1 157 0 is_stmt 1
 769 00de 0023     		movs	r3, #0
 770 00e0 FB61     		str	r3, [r7, #28]
 771 00e2 28E0     		b	.L46
 772              	.L50:
 158:.\tic_tac_all.c **** 			connected = 0;
 773              		.loc 1 158 0
 774 00e4 0023     		movs	r3, #0
 775 00e6 FB60     		str	r3, [r7, #12]
 159:.\tic_tac_all.c **** 			for (zp = 0; zp < t->size;zp++){
 776              		.loc 1 159 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 18


 777 00e8 0023     		movs	r3, #0
 778 00ea 3B61     		str	r3, [r7, #16]
 779 00ec 0CE0     		b	.L47
 780              	.L48:
 160:.\tic_tac_all.c **** 				connected += ttc_get_grid(t,x,z,zp);
 781              		.loc 1 160 0 discriminator 3
 782 00ee 7868     		ldr	r0, [r7, #4]
 783 00f0 F969     		ldr	r1, [r7, #28]
 784 00f2 7A69     		ldr	r2, [r7, #20]
 785 00f4 3B69     		ldr	r3, [r7, #16]
 786 00f6 FFF7FEFF 		bl	ttc_get_grid
 787 00fa 0246     		mov	r2, r0
 788 00fc FB68     		ldr	r3, [r7, #12]
 789 00fe 1344     		add	r3, r3, r2
 790 0100 FB60     		str	r3, [r7, #12]
 159:.\tic_tac_all.c **** 			for (zp = 0; zp < t->size;zp++){
 791              		.loc 1 159 0 discriminator 3
 792 0102 3B69     		ldr	r3, [r7, #16]
 793 0104 0133     		adds	r3, r3, #1
 794 0106 3B61     		str	r3, [r7, #16]
 795              	.L47:
 159:.\tic_tac_all.c **** 			for (zp = 0; zp < t->size;zp++){
 796              		.loc 1 159 0 is_stmt 0 discriminator 1
 797 0108 7B68     		ldr	r3, [r7, #4]
 798 010a 1A68     		ldr	r2, [r3]
 799 010c 3B69     		ldr	r3, [r7, #16]
 800 010e 9A42     		cmp	r2, r3
 801 0110 EDDC     		bgt	.L48
 161:.\tic_tac_all.c **** 			}
 162:.\tic_tac_all.c **** 			if (connected == t->player*t->size){
 802              		.loc 1 162 0 is_stmt 1
 803 0112 7B68     		ldr	r3, [r7, #4]
 804 0114 9B68     		ldr	r3, [r3, #8]
 805 0116 7A68     		ldr	r2, [r7, #4]
 806 0118 1268     		ldr	r2, [r2]
 807 011a 02FB03F2 		mul	r2, r2, r3
 808 011e FB68     		ldr	r3, [r7, #12]
 809 0120 9A42     		cmp	r2, r3
 810 0122 05D1     		bne	.L49
 163:.\tic_tac_all.c **** 				t->game_not_won = t->player; //when win, set to player id
 811              		.loc 1 163 0
 812 0124 7B68     		ldr	r3, [r7, #4]
 813 0126 9A68     		ldr	r2, [r3, #8]
 814 0128 7B68     		ldr	r3, [r7, #4]
 815 012a 1A61     		str	r2, [r3, #16]
 164:.\tic_tac_all.c **** 				return 1; //there is a win
 816              		.loc 1 164 0
 817 012c 0123     		movs	r3, #1
 818 012e A1E1     		b	.L39
 819              	.L49:
 157:.\tic_tac_all.c **** 			connected = 0;
 820              		.loc 1 157 0 discriminator 2
 821 0130 FB69     		ldr	r3, [r7, #28]
 822 0132 0133     		adds	r3, r3, #1
 823 0134 FB61     		str	r3, [r7, #28]
 824              	.L46:
 157:.\tic_tac_all.c **** 			connected = 0;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 19


 825              		.loc 1 157 0 is_stmt 0 discriminator 1
 826 0136 7B68     		ldr	r3, [r7, #4]
 827 0138 1A68     		ldr	r2, [r3]
 828 013a FB69     		ldr	r3, [r7, #28]
 829 013c 9A42     		cmp	r2, r3
 830 013e D1DC     		bgt	.L50
 165:.\tic_tac_all.c **** 			}
 166:.\tic_tac_all.c **** 		}
 167:.\tic_tac_all.c **** 		connected = 0; //planar
 831              		.loc 1 167 0 is_stmt 1
 832 0140 0023     		movs	r3, #0
 833 0142 FB60     		str	r3, [r7, #12]
 168:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 834              		.loc 1 168 0
 835 0144 0023     		movs	r3, #0
 836 0146 3B61     		str	r3, [r7, #16]
 837 0148 0CE0     		b	.L51
 838              	.L52:
 169:.\tic_tac_all.c **** 			connected += ttc_get_grid(t,z,zp,zp);
 839              		.loc 1 169 0 discriminator 3
 840 014a 7868     		ldr	r0, [r7, #4]
 841 014c 7969     		ldr	r1, [r7, #20]
 842 014e 3A69     		ldr	r2, [r7, #16]
 843 0150 3B69     		ldr	r3, [r7, #16]
 844 0152 FFF7FEFF 		bl	ttc_get_grid
 845 0156 0246     		mov	r2, r0
 846 0158 FB68     		ldr	r3, [r7, #12]
 847 015a 1344     		add	r3, r3, r2
 848 015c FB60     		str	r3, [r7, #12]
 168:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 849              		.loc 1 168 0 discriminator 3
 850 015e 3B69     		ldr	r3, [r7, #16]
 851 0160 0133     		adds	r3, r3, #1
 852 0162 3B61     		str	r3, [r7, #16]
 853              	.L51:
 168:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 854              		.loc 1 168 0 is_stmt 0 discriminator 1
 855 0164 7B68     		ldr	r3, [r7, #4]
 856 0166 1A68     		ldr	r2, [r3]
 857 0168 3B69     		ldr	r3, [r7, #16]
 858 016a 9A42     		cmp	r2, r3
 859 016c EDDC     		bgt	.L52
 170:.\tic_tac_all.c **** 		}
 171:.\tic_tac_all.c **** 		if (connected == t->player*t->size){
 860              		.loc 1 171 0 is_stmt 1
 861 016e 7B68     		ldr	r3, [r7, #4]
 862 0170 9B68     		ldr	r3, [r3, #8]
 863 0172 7A68     		ldr	r2, [r7, #4]
 864 0174 1268     		ldr	r2, [r2]
 865 0176 02FB03F2 		mul	r2, r2, r3
 866 017a FB68     		ldr	r3, [r7, #12]
 867 017c 9A42     		cmp	r2, r3
 868 017e 05D1     		bne	.L53
 172:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 869              		.loc 1 172 0
 870 0180 7B68     		ldr	r3, [r7, #4]
 871 0182 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 20


 872 0184 7B68     		ldr	r3, [r7, #4]
 873 0186 1A61     		str	r2, [r3, #16]
 173:.\tic_tac_all.c **** 			return 1; //there is a win
 874              		.loc 1 173 0
 875 0188 0123     		movs	r3, #1
 876 018a 73E1     		b	.L39
 877              	.L53:
 174:.\tic_tac_all.c **** 		}
 175:.\tic_tac_all.c **** 		connected = 0; //planar
 878              		.loc 1 175 0
 879 018c 0023     		movs	r3, #0
 880 018e FB60     		str	r3, [r7, #12]
 176:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 881              		.loc 1 176 0
 882 0190 0023     		movs	r3, #0
 883 0192 3B61     		str	r3, [r7, #16]
 884 0194 0FE0     		b	.L54
 885              	.L55:
 177:.\tic_tac_all.c **** 			connected += ttc_get_grid(t,z,3-zp,zp);
 886              		.loc 1 177 0 discriminator 3
 887 0196 3B69     		ldr	r3, [r7, #16]
 888 0198 C3F10303 		rsb	r3, r3, #3
 889 019c 7868     		ldr	r0, [r7, #4]
 890 019e 7969     		ldr	r1, [r7, #20]
 891 01a0 1A46     		mov	r2, r3
 892 01a2 3B69     		ldr	r3, [r7, #16]
 893 01a4 FFF7FEFF 		bl	ttc_get_grid
 894 01a8 0246     		mov	r2, r0
 895 01aa FB68     		ldr	r3, [r7, #12]
 896 01ac 1344     		add	r3, r3, r2
 897 01ae FB60     		str	r3, [r7, #12]
 176:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 898              		.loc 1 176 0 discriminator 3
 899 01b0 3B69     		ldr	r3, [r7, #16]
 900 01b2 0133     		adds	r3, r3, #1
 901 01b4 3B61     		str	r3, [r7, #16]
 902              	.L54:
 176:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 903              		.loc 1 176 0 is_stmt 0 discriminator 1
 904 01b6 7B68     		ldr	r3, [r7, #4]
 905 01b8 1A68     		ldr	r2, [r3]
 906 01ba 3B69     		ldr	r3, [r7, #16]
 907 01bc 9A42     		cmp	r2, r3
 908 01be EADC     		bgt	.L55
 178:.\tic_tac_all.c **** 		}
 179:.\tic_tac_all.c **** 		if (connected == t->player*t->size){
 909              		.loc 1 179 0 is_stmt 1
 910 01c0 7B68     		ldr	r3, [r7, #4]
 911 01c2 9B68     		ldr	r3, [r3, #8]
 912 01c4 7A68     		ldr	r2, [r7, #4]
 913 01c6 1268     		ldr	r2, [r2]
 914 01c8 02FB03F2 		mul	r2, r2, r3
 915 01cc FB68     		ldr	r3, [r7, #12]
 916 01ce 9A42     		cmp	r2, r3
 917 01d0 05D1     		bne	.L56
 180:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 918              		.loc 1 180 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 21


 919 01d2 7B68     		ldr	r3, [r7, #4]
 920 01d4 9A68     		ldr	r2, [r3, #8]
 921 01d6 7B68     		ldr	r3, [r7, #4]
 922 01d8 1A61     		str	r2, [r3, #16]
 181:.\tic_tac_all.c **** 			return 1; //there is a win
 923              		.loc 1 181 0
 924 01da 0123     		movs	r3, #1
 925 01dc 4AE1     		b	.L39
 926              	.L56:
 182:.\tic_tac_all.c **** 		}
 183:.\tic_tac_all.c **** 		connected = 0; //frontal
 927              		.loc 1 183 0
 928 01de 0023     		movs	r3, #0
 929 01e0 FB60     		str	r3, [r7, #12]
 184:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 930              		.loc 1 184 0
 931 01e2 0023     		movs	r3, #0
 932 01e4 3B61     		str	r3, [r7, #16]
 933 01e6 0CE0     		b	.L57
 934              	.L58:
 185:.\tic_tac_all.c **** 			connected += ttc_get_grid(t,zp,z,zp);
 935              		.loc 1 185 0 discriminator 3
 936 01e8 7868     		ldr	r0, [r7, #4]
 937 01ea 3969     		ldr	r1, [r7, #16]
 938 01ec 7A69     		ldr	r2, [r7, #20]
 939 01ee 3B69     		ldr	r3, [r7, #16]
 940 01f0 FFF7FEFF 		bl	ttc_get_grid
 941 01f4 0246     		mov	r2, r0
 942 01f6 FB68     		ldr	r3, [r7, #12]
 943 01f8 1344     		add	r3, r3, r2
 944 01fa FB60     		str	r3, [r7, #12]
 184:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 945              		.loc 1 184 0 discriminator 3
 946 01fc 3B69     		ldr	r3, [r7, #16]
 947 01fe 0133     		adds	r3, r3, #1
 948 0200 3B61     		str	r3, [r7, #16]
 949              	.L57:
 184:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 950              		.loc 1 184 0 is_stmt 0 discriminator 1
 951 0202 7B68     		ldr	r3, [r7, #4]
 952 0204 1A68     		ldr	r2, [r3]
 953 0206 3B69     		ldr	r3, [r7, #16]
 954 0208 9A42     		cmp	r2, r3
 955 020a EDDC     		bgt	.L58
 186:.\tic_tac_all.c **** 		}
 187:.\tic_tac_all.c **** 		if (connected == t->player*t->size){
 956              		.loc 1 187 0 is_stmt 1
 957 020c 7B68     		ldr	r3, [r7, #4]
 958 020e 9B68     		ldr	r3, [r3, #8]
 959 0210 7A68     		ldr	r2, [r7, #4]
 960 0212 1268     		ldr	r2, [r2]
 961 0214 02FB03F2 		mul	r2, r2, r3
 962 0218 FB68     		ldr	r3, [r7, #12]
 963 021a 9A42     		cmp	r2, r3
 964 021c 05D1     		bne	.L59
 188:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 965              		.loc 1 188 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 22


 966 021e 7B68     		ldr	r3, [r7, #4]
 967 0220 9A68     		ldr	r2, [r3, #8]
 968 0222 7B68     		ldr	r3, [r7, #4]
 969 0224 1A61     		str	r2, [r3, #16]
 189:.\tic_tac_all.c **** 			return 1; //there is a win
 970              		.loc 1 189 0
 971 0226 0123     		movs	r3, #1
 972 0228 24E1     		b	.L39
 973              	.L59:
 190:.\tic_tac_all.c **** 		}
 191:.\tic_tac_all.c **** 		connected = 0; //frontal
 974              		.loc 1 191 0
 975 022a 0023     		movs	r3, #0
 976 022c FB60     		str	r3, [r7, #12]
 192:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 977              		.loc 1 192 0
 978 022e 0023     		movs	r3, #0
 979 0230 3B61     		str	r3, [r7, #16]
 980 0232 11E0     		b	.L60
 981              	.L83:
 982              		.align	2
 983              	.L82:
 984 0234 88000000 		.word	.LC7
 985              	.L61:
 193:.\tic_tac_all.c **** 			connected += ttc_get_grid(t,3-z,z,zp);
 986              		.loc 1 193 0 discriminator 3
 987 0238 7B69     		ldr	r3, [r7, #20]
 988 023a C3F10303 		rsb	r3, r3, #3
 989 023e 7868     		ldr	r0, [r7, #4]
 990 0240 1946     		mov	r1, r3
 991 0242 7A69     		ldr	r2, [r7, #20]
 992 0244 3B69     		ldr	r3, [r7, #16]
 993 0246 FFF7FEFF 		bl	ttc_get_grid
 994 024a 0246     		mov	r2, r0
 995 024c FB68     		ldr	r3, [r7, #12]
 996 024e 1344     		add	r3, r3, r2
 997 0250 FB60     		str	r3, [r7, #12]
 192:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 998              		.loc 1 192 0 discriminator 3
 999 0252 3B69     		ldr	r3, [r7, #16]
 1000 0254 0133     		adds	r3, r3, #1
 1001 0256 3B61     		str	r3, [r7, #16]
 1002              	.L60:
 192:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1003              		.loc 1 192 0 is_stmt 0 discriminator 1
 1004 0258 7B68     		ldr	r3, [r7, #4]
 1005 025a 1A68     		ldr	r2, [r3]
 1006 025c 3B69     		ldr	r3, [r7, #16]
 1007 025e 9A42     		cmp	r2, r3
 1008 0260 EADC     		bgt	.L61
 194:.\tic_tac_all.c **** 		}
 195:.\tic_tac_all.c **** 		if (connected == t->player*t->size){
 1009              		.loc 1 195 0 is_stmt 1
 1010 0262 7B68     		ldr	r3, [r7, #4]
 1011 0264 9B68     		ldr	r3, [r3, #8]
 1012 0266 7A68     		ldr	r2, [r7, #4]
 1013 0268 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 23


 1014 026a 02FB03F2 		mul	r2, r2, r3
 1015 026e FB68     		ldr	r3, [r7, #12]
 1016 0270 9A42     		cmp	r2, r3
 1017 0272 05D1     		bne	.L62
 196:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 1018              		.loc 1 196 0
 1019 0274 7B68     		ldr	r3, [r7, #4]
 1020 0276 9A68     		ldr	r2, [r3, #8]
 1021 0278 7B68     		ldr	r3, [r7, #4]
 1022 027a 1A61     		str	r2, [r3, #16]
 197:.\tic_tac_all.c **** 			return 1; //there is a win
 1023              		.loc 1 197 0
 1024 027c 0123     		movs	r3, #1
 1025 027e F9E0     		b	.L39
 1026              	.L62:
 198:.\tic_tac_all.c **** 		}
 199:.\tic_tac_all.c **** 		connected = 0; //sidal
 1027              		.loc 1 199 0
 1028 0280 0023     		movs	r3, #0
 1029 0282 FB60     		str	r3, [r7, #12]
 200:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1030              		.loc 1 200 0
 1031 0284 0023     		movs	r3, #0
 1032 0286 3B61     		str	r3, [r7, #16]
 1033 0288 0CE0     		b	.L63
 1034              	.L64:
 201:.\tic_tac_all.c **** 			connected += ttc_get_grid(t,zp,zp,z);
 1035              		.loc 1 201 0 discriminator 3
 1036 028a 7868     		ldr	r0, [r7, #4]
 1037 028c 3969     		ldr	r1, [r7, #16]
 1038 028e 3A69     		ldr	r2, [r7, #16]
 1039 0290 7B69     		ldr	r3, [r7, #20]
 1040 0292 FFF7FEFF 		bl	ttc_get_grid
 1041 0296 0246     		mov	r2, r0
 1042 0298 FB68     		ldr	r3, [r7, #12]
 1043 029a 1344     		add	r3, r3, r2
 1044 029c FB60     		str	r3, [r7, #12]
 200:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1045              		.loc 1 200 0 discriminator 3
 1046 029e 3B69     		ldr	r3, [r7, #16]
 1047 02a0 0133     		adds	r3, r3, #1
 1048 02a2 3B61     		str	r3, [r7, #16]
 1049              	.L63:
 200:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1050              		.loc 1 200 0 is_stmt 0 discriminator 1
 1051 02a4 7B68     		ldr	r3, [r7, #4]
 1052 02a6 1A68     		ldr	r2, [r3]
 1053 02a8 3B69     		ldr	r3, [r7, #16]
 1054 02aa 9A42     		cmp	r2, r3
 1055 02ac EDDC     		bgt	.L64
 202:.\tic_tac_all.c **** 		}
 203:.\tic_tac_all.c **** 		if (connected == t->player*t->size){
 1056              		.loc 1 203 0 is_stmt 1
 1057 02ae 7B68     		ldr	r3, [r7, #4]
 1058 02b0 9B68     		ldr	r3, [r3, #8]
 1059 02b2 7A68     		ldr	r2, [r7, #4]
 1060 02b4 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 24


 1061 02b6 02FB03F2 		mul	r2, r2, r3
 1062 02ba FB68     		ldr	r3, [r7, #12]
 1063 02bc 9A42     		cmp	r2, r3
 1064 02be 05D1     		bne	.L65
 204:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 1065              		.loc 1 204 0
 1066 02c0 7B68     		ldr	r3, [r7, #4]
 1067 02c2 9A68     		ldr	r2, [r3, #8]
 1068 02c4 7B68     		ldr	r3, [r7, #4]
 1069 02c6 1A61     		str	r2, [r3, #16]
 205:.\tic_tac_all.c **** 			return 1; //there is a win
 1070              		.loc 1 205 0
 1071 02c8 0123     		movs	r3, #1
 1072 02ca D3E0     		b	.L39
 1073              	.L65:
 206:.\tic_tac_all.c **** 		}
 207:.\tic_tac_all.c **** 		connected = 0; //sidal
 1074              		.loc 1 207 0
 1075 02cc 0023     		movs	r3, #0
 1076 02ce FB60     		str	r3, [r7, #12]
 208:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1077              		.loc 1 208 0
 1078 02d0 0023     		movs	r3, #0
 1079 02d2 3B61     		str	r3, [r7, #16]
 1080 02d4 0FE0     		b	.L66
 1081              	.L67:
 209:.\tic_tac_all.c **** 			connected += ttc_get_grid(t,zp,3-zp,z);
 1082              		.loc 1 209 0 discriminator 3
 1083 02d6 3B69     		ldr	r3, [r7, #16]
 1084 02d8 C3F10303 		rsb	r3, r3, #3
 1085 02dc 7868     		ldr	r0, [r7, #4]
 1086 02de 3969     		ldr	r1, [r7, #16]
 1087 02e0 1A46     		mov	r2, r3
 1088 02e2 7B69     		ldr	r3, [r7, #20]
 1089 02e4 FFF7FEFF 		bl	ttc_get_grid
 1090 02e8 0246     		mov	r2, r0
 1091 02ea FB68     		ldr	r3, [r7, #12]
 1092 02ec 1344     		add	r3, r3, r2
 1093 02ee FB60     		str	r3, [r7, #12]
 208:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1094              		.loc 1 208 0 discriminator 3
 1095 02f0 3B69     		ldr	r3, [r7, #16]
 1096 02f2 0133     		adds	r3, r3, #1
 1097 02f4 3B61     		str	r3, [r7, #16]
 1098              	.L66:
 208:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1099              		.loc 1 208 0 is_stmt 0 discriminator 1
 1100 02f6 7B68     		ldr	r3, [r7, #4]
 1101 02f8 1A68     		ldr	r2, [r3]
 1102 02fa 3B69     		ldr	r3, [r7, #16]
 1103 02fc 9A42     		cmp	r2, r3
 1104 02fe EADC     		bgt	.L67
 210:.\tic_tac_all.c **** 		}
 211:.\tic_tac_all.c **** 		if (connected == t->player*t->size){
 1105              		.loc 1 211 0 is_stmt 1
 1106 0300 7B68     		ldr	r3, [r7, #4]
 1107 0302 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 25


 1108 0304 7A68     		ldr	r2, [r7, #4]
 1109 0306 1268     		ldr	r2, [r2]
 1110 0308 02FB03F2 		mul	r2, r2, r3
 1111 030c FB68     		ldr	r3, [r7, #12]
 1112 030e 9A42     		cmp	r2, r3
 1113 0310 05D1     		bne	.L68
 212:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 1114              		.loc 1 212 0
 1115 0312 7B68     		ldr	r3, [r7, #4]
 1116 0314 9A68     		ldr	r2, [r3, #8]
 1117 0316 7B68     		ldr	r3, [r7, #4]
 1118 0318 1A61     		str	r2, [r3, #16]
 213:.\tic_tac_all.c **** 			return 1; //there is a win
 1119              		.loc 1 213 0
 1120 031a 0123     		movs	r3, #1
 1121 031c AAE0     		b	.L39
 1122              	.L68:
 136:.\tic_tac_all.c **** 		for (y = 0; y < t->size; y++){ // flat
 1123              		.loc 1 136 0 discriminator 2
 1124 031e 7B69     		ldr	r3, [r7, #20]
 1125 0320 0133     		adds	r3, r3, #1
 1126 0322 7B61     		str	r3, [r7, #20]
 1127              	.L34:
 136:.\tic_tac_all.c **** 		for (y = 0; y < t->size; y++){ // flat
 1128              		.loc 1 136 0 is_stmt 0 discriminator 1
 1129 0324 7B68     		ldr	r3, [r7, #4]
 1130 0326 1A68     		ldr	r2, [r3]
 1131 0328 7B69     		ldr	r3, [r7, #20]
 1132 032a 9A42     		cmp	r2, r3
 1133 032c 3FF775AE 		bgt	.L69
 214:.\tic_tac_all.c **** 		}
 215:.\tic_tac_all.c **** 	}
 216:.\tic_tac_all.c **** 	connected = 0; //superdiag 1
 1134              		.loc 1 216 0 is_stmt 1
 1135 0330 0023     		movs	r3, #0
 1136 0332 FB60     		str	r3, [r7, #12]
 217:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1137              		.loc 1 217 0
 1138 0334 0023     		movs	r3, #0
 1139 0336 3B61     		str	r3, [r7, #16]
 1140 0338 0CE0     		b	.L70
 1141              	.L71:
 218:.\tic_tac_all.c **** 		connected += ttc_get_grid(t,zp,zp,zp);
 1142              		.loc 1 218 0 discriminator 3
 1143 033a 7868     		ldr	r0, [r7, #4]
 1144 033c 3969     		ldr	r1, [r7, #16]
 1145 033e 3A69     		ldr	r2, [r7, #16]
 1146 0340 3B69     		ldr	r3, [r7, #16]
 1147 0342 FFF7FEFF 		bl	ttc_get_grid
 1148 0346 0246     		mov	r2, r0
 1149 0348 FB68     		ldr	r3, [r7, #12]
 1150 034a 1344     		add	r3, r3, r2
 1151 034c FB60     		str	r3, [r7, #12]
 217:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1152              		.loc 1 217 0 discriminator 3
 1153 034e 3B69     		ldr	r3, [r7, #16]
 1154 0350 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 26


 1155 0352 3B61     		str	r3, [r7, #16]
 1156              	.L70:
 217:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1157              		.loc 1 217 0 is_stmt 0 discriminator 1
 1158 0354 7B68     		ldr	r3, [r7, #4]
 1159 0356 1A68     		ldr	r2, [r3]
 1160 0358 3B69     		ldr	r3, [r7, #16]
 1161 035a 9A42     		cmp	r2, r3
 1162 035c EDDC     		bgt	.L71
 219:.\tic_tac_all.c **** 	}
 220:.\tic_tac_all.c **** 	if (connected == t->player*t->size){
 1163              		.loc 1 220 0 is_stmt 1
 1164 035e 7B68     		ldr	r3, [r7, #4]
 1165 0360 9B68     		ldr	r3, [r3, #8]
 1166 0362 7A68     		ldr	r2, [r7, #4]
 1167 0364 1268     		ldr	r2, [r2]
 1168 0366 02FB03F2 		mul	r2, r2, r3
 1169 036a FB68     		ldr	r3, [r7, #12]
 1170 036c 9A42     		cmp	r2, r3
 1171 036e 05D1     		bne	.L72
 221:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 1172              		.loc 1 221 0
 1173 0370 7B68     		ldr	r3, [r7, #4]
 1174 0372 9A68     		ldr	r2, [r3, #8]
 1175 0374 7B68     		ldr	r3, [r7, #4]
 1176 0376 1A61     		str	r2, [r3, #16]
 222:.\tic_tac_all.c **** 		return 1; //there is a win
 1177              		.loc 1 222 0
 1178 0378 0123     		movs	r3, #1
 1179 037a 7BE0     		b	.L39
 1180              	.L72:
 223:.\tic_tac_all.c **** 	}
 224:.\tic_tac_all.c **** 	connected = 0; //superdiag 2
 1181              		.loc 1 224 0
 1182 037c 0023     		movs	r3, #0
 1183 037e FB60     		str	r3, [r7, #12]
 225:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1184              		.loc 1 225 0
 1185 0380 0023     		movs	r3, #0
 1186 0382 3B61     		str	r3, [r7, #16]
 1187 0384 0FE0     		b	.L73
 1188              	.L74:
 226:.\tic_tac_all.c **** 		connected += ttc_get_grid(t,zp,3-zp,zp);
 1189              		.loc 1 226 0 discriminator 3
 1190 0386 3B69     		ldr	r3, [r7, #16]
 1191 0388 C3F10303 		rsb	r3, r3, #3
 1192 038c 7868     		ldr	r0, [r7, #4]
 1193 038e 3969     		ldr	r1, [r7, #16]
 1194 0390 1A46     		mov	r2, r3
 1195 0392 3B69     		ldr	r3, [r7, #16]
 1196 0394 FFF7FEFF 		bl	ttc_get_grid
 1197 0398 0246     		mov	r2, r0
 1198 039a FB68     		ldr	r3, [r7, #12]
 1199 039c 1344     		add	r3, r3, r2
 1200 039e FB60     		str	r3, [r7, #12]
 225:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1201              		.loc 1 225 0 discriminator 3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 27


 1202 03a0 3B69     		ldr	r3, [r7, #16]
 1203 03a2 0133     		adds	r3, r3, #1
 1204 03a4 3B61     		str	r3, [r7, #16]
 1205              	.L73:
 225:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1206              		.loc 1 225 0 is_stmt 0 discriminator 1
 1207 03a6 7B68     		ldr	r3, [r7, #4]
 1208 03a8 1A68     		ldr	r2, [r3]
 1209 03aa 3B69     		ldr	r3, [r7, #16]
 1210 03ac 9A42     		cmp	r2, r3
 1211 03ae EADC     		bgt	.L74
 227:.\tic_tac_all.c **** 	}
 228:.\tic_tac_all.c **** 	if (connected == t->player*t->size){
 1212              		.loc 1 228 0 is_stmt 1
 1213 03b0 7B68     		ldr	r3, [r7, #4]
 1214 03b2 9B68     		ldr	r3, [r3, #8]
 1215 03b4 7A68     		ldr	r2, [r7, #4]
 1216 03b6 1268     		ldr	r2, [r2]
 1217 03b8 02FB03F2 		mul	r2, r2, r3
 1218 03bc FB68     		ldr	r3, [r7, #12]
 1219 03be 9A42     		cmp	r2, r3
 1220 03c0 05D1     		bne	.L75
 229:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 1221              		.loc 1 229 0
 1222 03c2 7B68     		ldr	r3, [r7, #4]
 1223 03c4 9A68     		ldr	r2, [r3, #8]
 1224 03c6 7B68     		ldr	r3, [r7, #4]
 1225 03c8 1A61     		str	r2, [r3, #16]
 230:.\tic_tac_all.c **** 		return 1; //there is a win
 1226              		.loc 1 230 0
 1227 03ca 0123     		movs	r3, #1
 1228 03cc 52E0     		b	.L39
 1229              	.L75:
 231:.\tic_tac_all.c **** 	}
 232:.\tic_tac_all.c **** 	connected = 0; //superdiag 3
 1230              		.loc 1 232 0
 1231 03ce 0023     		movs	r3, #0
 1232 03d0 FB60     		str	r3, [r7, #12]
 233:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1233              		.loc 1 233 0
 1234 03d2 0023     		movs	r3, #0
 1235 03d4 3B61     		str	r3, [r7, #16]
 1236 03d6 0EE0     		b	.L76
 1237              	.L77:
 234:.\tic_tac_all.c **** 		connected += ttc_get_grid(t,zp,zp,3-zp);
 1238              		.loc 1 234 0 discriminator 3
 1239 03d8 3B69     		ldr	r3, [r7, #16]
 1240 03da C3F10303 		rsb	r3, r3, #3
 1241 03de 7868     		ldr	r0, [r7, #4]
 1242 03e0 3969     		ldr	r1, [r7, #16]
 1243 03e2 3A69     		ldr	r2, [r7, #16]
 1244 03e4 FFF7FEFF 		bl	ttc_get_grid
 1245 03e8 0246     		mov	r2, r0
 1246 03ea FB68     		ldr	r3, [r7, #12]
 1247 03ec 1344     		add	r3, r3, r2
 1248 03ee FB60     		str	r3, [r7, #12]
 233:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 28


 1249              		.loc 1 233 0 discriminator 3
 1250 03f0 3B69     		ldr	r3, [r7, #16]
 1251 03f2 0133     		adds	r3, r3, #1
 1252 03f4 3B61     		str	r3, [r7, #16]
 1253              	.L76:
 233:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1254              		.loc 1 233 0 is_stmt 0 discriminator 1
 1255 03f6 7B68     		ldr	r3, [r7, #4]
 1256 03f8 1A68     		ldr	r2, [r3]
 1257 03fa 3B69     		ldr	r3, [r7, #16]
 1258 03fc 9A42     		cmp	r2, r3
 1259 03fe EBDC     		bgt	.L77
 235:.\tic_tac_all.c **** 	}
 236:.\tic_tac_all.c **** 	if (connected == t->player*t->size){
 1260              		.loc 1 236 0 is_stmt 1
 1261 0400 7B68     		ldr	r3, [r7, #4]
 1262 0402 9B68     		ldr	r3, [r3, #8]
 1263 0404 7A68     		ldr	r2, [r7, #4]
 1264 0406 1268     		ldr	r2, [r2]
 1265 0408 02FB03F2 		mul	r2, r2, r3
 1266 040c FB68     		ldr	r3, [r7, #12]
 1267 040e 9A42     		cmp	r2, r3
 1268 0410 05D1     		bne	.L78
 237:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 1269              		.loc 1 237 0
 1270 0412 7B68     		ldr	r3, [r7, #4]
 1271 0414 9A68     		ldr	r2, [r3, #8]
 1272 0416 7B68     		ldr	r3, [r7, #4]
 1273 0418 1A61     		str	r2, [r3, #16]
 238:.\tic_tac_all.c **** 		return 1; //there is a win
 1274              		.loc 1 238 0
 1275 041a 0123     		movs	r3, #1
 1276 041c 2AE0     		b	.L39
 1277              	.L78:
 239:.\tic_tac_all.c **** 	}
 240:.\tic_tac_all.c **** 	connected = 0; //superdiag 4
 1278              		.loc 1 240 0
 1279 041e 0023     		movs	r3, #0
 1280 0420 FB60     		str	r3, [r7, #12]
 241:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1281              		.loc 1 241 0
 1282 0422 0023     		movs	r3, #0
 1283 0424 3B61     		str	r3, [r7, #16]
 1284 0426 10E0     		b	.L79
 1285              	.L80:
 242:.\tic_tac_all.c **** 		connected += ttc_get_grid(t,zp,3-zp,3-zp);
 1286              		.loc 1 242 0 discriminator 3
 1287 0428 3B69     		ldr	r3, [r7, #16]
 1288 042a C3F10302 		rsb	r2, r3, #3
 1289 042e 3B69     		ldr	r3, [r7, #16]
 1290 0430 C3F10303 		rsb	r3, r3, #3
 1291 0434 7868     		ldr	r0, [r7, #4]
 1292 0436 3969     		ldr	r1, [r7, #16]
 1293 0438 FFF7FEFF 		bl	ttc_get_grid
 1294 043c 0246     		mov	r2, r0
 1295 043e FB68     		ldr	r3, [r7, #12]
 1296 0440 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 29


 1297 0442 FB60     		str	r3, [r7, #12]
 241:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1298              		.loc 1 241 0 discriminator 3
 1299 0444 3B69     		ldr	r3, [r7, #16]
 1300 0446 0133     		adds	r3, r3, #1
 1301 0448 3B61     		str	r3, [r7, #16]
 1302              	.L79:
 241:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1303              		.loc 1 241 0 is_stmt 0 discriminator 1
 1304 044a 7B68     		ldr	r3, [r7, #4]
 1305 044c 1A68     		ldr	r2, [r3]
 1306 044e 3B69     		ldr	r3, [r7, #16]
 1307 0450 9A42     		cmp	r2, r3
 1308 0452 E9DC     		bgt	.L80
 243:.\tic_tac_all.c **** 	}
 244:.\tic_tac_all.c **** 	if (connected == t->player*t->size){
 1309              		.loc 1 244 0 is_stmt 1
 1310 0454 7B68     		ldr	r3, [r7, #4]
 1311 0456 9B68     		ldr	r3, [r3, #8]
 1312 0458 7A68     		ldr	r2, [r7, #4]
 1313 045a 1268     		ldr	r2, [r2]
 1314 045c 02FB03F2 		mul	r2, r2, r3
 1315 0460 FB68     		ldr	r3, [r7, #12]
 1316 0462 9A42     		cmp	r2, r3
 1317 0464 05D1     		bne	.L81
 245:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 1318              		.loc 1 245 0
 1319 0466 7B68     		ldr	r3, [r7, #4]
 1320 0468 9A68     		ldr	r2, [r3, #8]
 1321 046a 7B68     		ldr	r3, [r7, #4]
 1322 046c 1A61     		str	r2, [r3, #16]
 246:.\tic_tac_all.c **** 		return 1; //there is a win
 1323              		.loc 1 246 0
 1324 046e 0123     		movs	r3, #1
 1325 0470 00E0     		b	.L39
 1326              	.L81:
 247:.\tic_tac_all.c **** 	}
 248:.\tic_tac_all.c **** 	return 0; //no win
 1327              		.loc 1 248 0
 1328 0472 0023     		movs	r3, #0
 1329              	.L39:
 249:.\tic_tac_all.c **** }
 1330              		.loc 1 249 0
 1331 0474 1846     		mov	r0, r3
 1332 0476 2037     		adds	r7, r7, #32
 1333              		.cfi_def_cfa_offset 8
 1334 0478 BD46     		mov	sp, r7
 1335              		.cfi_def_cfa_register 13
 1336              		@ sp needed
 1337 047a 80BD     		pop	{r7, pc}
 1338              		.cfi_endproc
 1339              	.LFE70:
 1340              		.size	ttc_check_win, .-ttc_check_win
 1341              		.section	.text.ttc_step,"ax",%progbits
 1342              		.align	2
 1343              		.global	ttc_step
 1344              		.thumb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 30


 1345              		.thumb_func
 1346              		.type	ttc_step, %function
 1347              	ttc_step:
 1348              	.LFB71:
 250:.\tic_tac_all.c **** 
 251:.\tic_tac_all.c **** 
 252:.\tic_tac_all.c **** int ttc_step(struct disp_grid_81* disp, struct tic_tac_toe* t,int x, int y, int z){
 1349              		.loc 1 252 0
 1350              		.cfi_startproc
 1351              		@ args = 4, pretend = 0, frame = 16
 1352              		@ frame_needed = 1, uses_anonymous_args = 0
 1353 0000 90B5     		push	{r4, r7, lr}
 1354              		.cfi_def_cfa_offset 12
 1355              		.cfi_offset 4, -12
 1356              		.cfi_offset 7, -8
 1357              		.cfi_offset 14, -4
 1358 0002 87B0     		sub	sp, sp, #28
 1359              		.cfi_def_cfa_offset 40
 1360 0004 02AF     		add	r7, sp, #8
 1361              		.cfi_def_cfa 7, 32
 1362 0006 F860     		str	r0, [r7, #12]
 1363 0008 B960     		str	r1, [r7, #8]
 1364 000a 7A60     		str	r2, [r7, #4]
 1365 000c 3B60     		str	r3, [r7]
 253:.\tic_tac_all.c **** 	// generic take input to allow for both terminal and psoc
 254:.\tic_tac_all.c **** 	if (ttc_check_valid(t,x,y,z) == 1){
 1366              		.loc 1 254 0
 1367 000e B868     		ldr	r0, [r7, #8]
 1368 0010 7968     		ldr	r1, [r7, #4]
 1369 0012 3A68     		ldr	r2, [r7]
 1370 0014 3B6A     		ldr	r3, [r7, #32]
 1371 0016 FFF7FEFF 		bl	ttc_check_valid
 1372 001a 0346     		mov	r3, r0
 1373 001c 012B     		cmp	r3, #1
 1374 001e 23D1     		bne	.L85
 1375              	.LBB3:
 255:.\tic_tac_all.c **** 		ttc_set_grid(t,x,y,z,t->player);
 1376              		.loc 1 255 0
 1377 0020 BB68     		ldr	r3, [r7, #8]
 1378 0022 9B68     		ldr	r3, [r3, #8]
 1379 0024 0093     		str	r3, [sp]
 1380 0026 B868     		ldr	r0, [r7, #8]
 1381 0028 7968     		ldr	r1, [r7, #4]
 1382 002a 3A68     		ldr	r2, [r7]
 1383 002c 3B6A     		ldr	r3, [r7, #32]
 1384 002e FFF7FEFF 		bl	ttc_set_grid
 256:.\tic_tac_all.c **** 		// ttc_get_grid(t,x,y,z);
 257:.\tic_tac_all.c **** 		// printf("\nGot here"); 
 258:.\tic_tac_all.c **** 		ttc_check_win(t);
 1385              		.loc 1 258 0
 1386 0032 B868     		ldr	r0, [r7, #8]
 1387 0034 FFF7FEFF 		bl	ttc_check_win
 259:.\tic_tac_all.c **** 		ttc_change_player(t);
 1388              		.loc 1 259 0
 1389 0038 B868     		ldr	r0, [r7, #8]
 1390 003a FFF7FEFF 		bl	ttc_change_player
 260:.\tic_tac_all.c **** 		//ttc_print_grid(t); // on terminal
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 31


 261:.\tic_tac_all.c ****         disp_grid_ttc_place(disp,z*16+y*4+x, ttc_get_grid(t,x,y,z)); // for PSoC
 1391              		.loc 1 261 0
 1392 003e 3B6A     		ldr	r3, [r7, #32]
 1393 0040 9A00     		lsls	r2, r3, #2
 1394 0042 3B68     		ldr	r3, [r7]
 1395 0044 1344     		add	r3, r3, r2
 1396 0046 9A00     		lsls	r2, r3, #2
 1397 0048 7B68     		ldr	r3, [r7, #4]
 1398 004a D418     		adds	r4, r2, r3
 1399 004c B868     		ldr	r0, [r7, #8]
 1400 004e 7968     		ldr	r1, [r7, #4]
 1401 0050 3A68     		ldr	r2, [r7]
 1402 0052 3B6A     		ldr	r3, [r7, #32]
 1403 0054 FFF7FEFF 		bl	ttc_get_grid
 1404 0058 0346     		mov	r3, r0
 1405 005a F868     		ldr	r0, [r7, #12]
 1406 005c 2146     		mov	r1, r4
 1407 005e 1A46     		mov	r2, r3
 1408 0060 FFF7FEFF 		bl	disp_grid_ttc_place
 262:.\tic_tac_all.c **** 		return 1;
 1409              		.loc 1 262 0
 1410 0064 0123     		movs	r3, #1
 1411 0066 00E0     		b	.L86
 1412              	.L85:
 1413              	.LBE3:
 263:.\tic_tac_all.c **** 	}
 264:.\tic_tac_all.c **** 	else{
 265:.\tic_tac_all.c **** 		return 0; // did not work properly
 1414              		.loc 1 265 0
 1415 0068 0023     		movs	r3, #0
 1416              	.L86:
 266:.\tic_tac_all.c **** 	}
 267:.\tic_tac_all.c **** }
 1417              		.loc 1 267 0
 1418 006a 1846     		mov	r0, r3
 1419 006c 1437     		adds	r7, r7, #20
 1420              		.cfi_def_cfa_offset 12
 1421 006e BD46     		mov	sp, r7
 1422              		.cfi_def_cfa_register 13
 1423              		@ sp needed
 1424 0070 90BD     		pop	{r4, r7, pc}
 1425              		.cfi_endproc
 1426              	.LFE71:
 1427              		.size	ttc_step, .-ttc_step
 1428 0072 00BF     		.section	.rodata
 1429 0093 00       		.align	2
 1430              	.LC8:
 1431 0094 506C6179 		.ascii	"Player %i has won\000"
 1431      65722025 
 1431      69206861 
 1431      7320776F 
 1431      6E00
 1432              		.section	.text.ttc_play_game,"ax",%progbits
 1433              		.align	2
 1434              		.global	ttc_play_game
 1435              		.thumb
 1436              		.thumb_func
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 32


 1437              		.type	ttc_play_game, %function
 1438              	ttc_play_game:
 1439              	.LFB72:
 268:.\tic_tac_all.c **** 
 269:.\tic_tac_all.c **** int ttc_play_game(struct tic_tac_toe* t){
 1440              		.loc 1 269 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 8
 1443              		@ frame_needed = 1, uses_anonymous_args = 0
 1444 0000 80B5     		push	{r7, lr}
 1445              		.cfi_def_cfa_offset 8
 1446              		.cfi_offset 7, -8
 1447              		.cfi_offset 14, -4
 1448 0002 82B0     		sub	sp, sp, #8
 1449              		.cfi_def_cfa_offset 16
 1450 0004 00AF     		add	r7, sp, #0
 1451              		.cfi_def_cfa_register 7
 1452 0006 7860     		str	r0, [r7, #4]
 270:.\tic_tac_all.c **** 	while (t->game_not_won == 0){
 1453              		.loc 1 270 0
 1454 0008 00BF     		nop
 1455              	.L88:
 1456              		.loc 1 270 0 is_stmt 0 discriminator 1
 1457 000a 7B68     		ldr	r3, [r7, #4]
 1458 000c 1B69     		ldr	r3, [r3, #16]
 1459 000e 002B     		cmp	r3, #0
 1460 0010 FBD0     		beq	.L88
 271:.\tic_tac_all.c **** 		//ttc_play(t);
 272:.\tic_tac_all.c ****         // IMPLEMENT FOR PSOC
 273:.\tic_tac_all.c **** 	}
 274:.\tic_tac_all.c **** 	printf("Player %i has won", t->game_not_won);
 1461              		.loc 1 274 0 is_stmt 1
 1462 0012 7B68     		ldr	r3, [r7, #4]
 1463 0014 1B69     		ldr	r3, [r3, #16]
 1464 0016 0448     		ldr	r0, .L90
 1465 0018 1946     		mov	r1, r3
 1466 001a FFF7FEFF 		bl	printf
 275:.\tic_tac_all.c **** 	return 0;
 1467              		.loc 1 275 0
 1468 001e 0023     		movs	r3, #0
 276:.\tic_tac_all.c **** }
 1469              		.loc 1 276 0
 1470 0020 1846     		mov	r0, r3
 1471 0022 0837     		adds	r7, r7, #8
 1472              		.cfi_def_cfa_offset 8
 1473 0024 BD46     		mov	sp, r7
 1474              		.cfi_def_cfa_register 13
 1475              		@ sp needed
 1476 0026 80BD     		pop	{r7, pc}
 1477              	.L91:
 1478              		.align	2
 1479              	.L90:
 1480 0028 94000000 		.word	.LC8
 1481              		.cfi_endproc
 1482              	.LFE72:
 1483              		.size	ttc_play_game, .-ttc_play_game
 1484              		.section	.text.ttc_free,"ax",%progbits
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 33


 1485              		.align	2
 1486              		.global	ttc_free
 1487              		.thumb
 1488              		.thumb_func
 1489              		.type	ttc_free, %function
 1490              	ttc_free:
 1491              	.LFB73:
 277:.\tic_tac_all.c **** 
 278:.\tic_tac_all.c **** void ttc_free(struct tic_tac_toe* t){
 1492              		.loc 1 278 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 8
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
 1496 0000 80B5     		push	{r7, lr}
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 82B0     		sub	sp, sp, #8
 1501              		.cfi_def_cfa_offset 16
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 7860     		str	r0, [r7, #4]
 279:.\tic_tac_all.c **** 	free(t->grid);
 1505              		.loc 1 279 0
 1506 0008 7B68     		ldr	r3, [r7, #4]
 1507 000a 1433     		adds	r3, r3, #20
 1508 000c 1846     		mov	r0, r3
 1509 000e FFF7FEFF 		bl	free
 280:.\tic_tac_all.c **** 	free(t);
 1510              		.loc 1 280 0
 1511 0012 7868     		ldr	r0, [r7, #4]
 1512 0014 FFF7FEFF 		bl	free
 281:.\tic_tac_all.c **** }
 1513              		.loc 1 281 0
 1514 0018 0837     		adds	r7, r7, #8
 1515              		.cfi_def_cfa_offset 8
 1516 001a BD46     		mov	sp, r7
 1517              		.cfi_def_cfa_register 13
 1518              		@ sp needed
 1519 001c 80BD     		pop	{r7, pc}
 1520              		.cfi_endproc
 1521              	.LFE73:
 1522              		.size	ttc_free, .-ttc_free
 1523 001e 00BF     		.section	.text.max_array,"ax",%progbits
 1524              		.align	2
 1525              		.global	max_array
 1526              		.thumb
 1527              		.thumb_func
 1528              		.type	max_array, %function
 1529              	max_array:
 1530              	.LFB74:
 282:.\tic_tac_all.c **** 
 283:.\tic_tac_all.c **** 
 284:.\tic_tac_all.c **** ///////////////////////// AI CODE ////////////////
 285:.\tic_tac_all.c **** 
 286:.\tic_tac_all.c **** int max_array(int array[], size_t size){
 1531              		.loc 1 286 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 34


 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 24
 1534              		@ frame_needed = 1, uses_anonymous_args = 0
 1535 0000 90B5     		push	{r4, r7, lr}
 1536              		.cfi_def_cfa_offset 12
 1537              		.cfi_offset 4, -12
 1538              		.cfi_offset 7, -8
 1539              		.cfi_offset 14, -4
 1540 0002 87B0     		sub	sp, sp, #28
 1541              		.cfi_def_cfa_offset 40
 1542 0004 00AF     		add	r7, sp, #0
 1543              		.cfi_def_cfa_register 7
 1544 0006 7860     		str	r0, [r7, #4]
 1545 0008 3960     		str	r1, [r7]
 287:.\tic_tac_all.c **** 	// returns maximum index of array
 288:.\tic_tac_all.c **** 	// if there are multiple, then randomly select and return max index
 289:.\tic_tac_all.c **** 	size_t i;
 290:.\tic_tac_all.c **** 	int max = 0;
 1546              		.loc 1 290 0
 1547 000a 0023     		movs	r3, #0
 1548 000c 3B61     		str	r3, [r7, #16]
 291:.\tic_tac_all.c **** 	int *all_index = malloc(size*sizeof(int));
 1549              		.loc 1 291 0
 1550 000e 3B68     		ldr	r3, [r7]
 1551 0010 9B00     		lsls	r3, r3, #2
 1552 0012 1846     		mov	r0, r3
 1553 0014 FFF7FEFF 		bl	malloc
 1554 0018 0346     		mov	r3, r0
 1555 001a BB60     		str	r3, [r7, #8]
 292:.\tic_tac_all.c **** 	int num_index = 1;
 1556              		.loc 1 292 0
 1557 001c 0123     		movs	r3, #1
 1558 001e FB60     		str	r3, [r7, #12]
 293:.\tic_tac_all.c **** 
 294:.\tic_tac_all.c **** 	for (i = 0; i < size; i++){
 1559              		.loc 1 294 0
 1560 0020 0023     		movs	r3, #0
 1561 0022 7B61     		str	r3, [r7, #20]
 1562 0024 2DE0     		b	.L94
 1563              	.L97:
 295:.\tic_tac_all.c **** 		if (max < array[i]){
 1564              		.loc 1 295 0
 1565 0026 7B69     		ldr	r3, [r7, #20]
 1566 0028 9B00     		lsls	r3, r3, #2
 1567 002a 7A68     		ldr	r2, [r7, #4]
 1568 002c 1344     		add	r3, r3, r2
 1569 002e 1A68     		ldr	r2, [r3]
 1570 0030 3B69     		ldr	r3, [r7, #16]
 1571 0032 9A42     		cmp	r2, r3
 1572 0034 11DD     		ble	.L95
 296:.\tic_tac_all.c **** 			max = array[i];
 1573              		.loc 1 296 0
 1574 0036 7B69     		ldr	r3, [r7, #20]
 1575 0038 9B00     		lsls	r3, r3, #2
 1576 003a 7A68     		ldr	r2, [r7, #4]
 1577 003c 1344     		add	r3, r3, r2
 1578 003e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 35


 1579 0040 3B61     		str	r3, [r7, #16]
 297:.\tic_tac_all.c **** 
 298:.\tic_tac_all.c **** 			memset(all_index,0,num_index); //clear array
 1580              		.loc 1 298 0
 1581 0042 FB68     		ldr	r3, [r7, #12]
 1582 0044 B868     		ldr	r0, [r7, #8]
 1583 0046 0021     		movs	r1, #0
 1584 0048 1A46     		mov	r2, r3
 1585 004a FFF7FEFF 		bl	memset
 299:.\tic_tac_all.c **** 			all_index[0] = i;
 1586              		.loc 1 299 0
 1587 004e 7A69     		ldr	r2, [r7, #20]
 1588 0050 BB68     		ldr	r3, [r7, #8]
 1589 0052 1A60     		str	r2, [r3]
 300:.\tic_tac_all.c **** 			num_index=1;
 1590              		.loc 1 300 0
 1591 0054 0123     		movs	r3, #1
 1592 0056 FB60     		str	r3, [r7, #12]
 1593 0058 10E0     		b	.L96
 1594              	.L95:
 301:.\tic_tac_all.c **** 
 302:.\tic_tac_all.c **** 		}
 303:.\tic_tac_all.c **** 		else if (max == array[i]){
 1595              		.loc 1 303 0
 1596 005a 7B69     		ldr	r3, [r7, #20]
 1597 005c 9B00     		lsls	r3, r3, #2
 1598 005e 7A68     		ldr	r2, [r7, #4]
 1599 0060 1344     		add	r3, r3, r2
 1600 0062 1A68     		ldr	r2, [r3]
 1601 0064 3B69     		ldr	r3, [r7, #16]
 1602 0066 9A42     		cmp	r2, r3
 1603 0068 08D1     		bne	.L96
 304:.\tic_tac_all.c **** 			all_index[num_index] = i;
 1604              		.loc 1 304 0
 1605 006a FB68     		ldr	r3, [r7, #12]
 1606 006c 9B00     		lsls	r3, r3, #2
 1607 006e BA68     		ldr	r2, [r7, #8]
 1608 0070 1344     		add	r3, r3, r2
 1609 0072 7A69     		ldr	r2, [r7, #20]
 1610 0074 1A60     		str	r2, [r3]
 305:.\tic_tac_all.c **** 			num_index++;
 1611              		.loc 1 305 0
 1612 0076 FB68     		ldr	r3, [r7, #12]
 1613 0078 0133     		adds	r3, r3, #1
 1614 007a FB60     		str	r3, [r7, #12]
 1615              	.L96:
 294:.\tic_tac_all.c **** 		if (max < array[i]){
 1616              		.loc 1 294 0 discriminator 2
 1617 007c 7B69     		ldr	r3, [r7, #20]
 1618 007e 0133     		adds	r3, r3, #1
 1619 0080 7B61     		str	r3, [r7, #20]
 1620              	.L94:
 294:.\tic_tac_all.c **** 		if (max < array[i]){
 1621              		.loc 1 294 0 is_stmt 0 discriminator 1
 1622 0082 7A69     		ldr	r2, [r7, #20]
 1623 0084 3B68     		ldr	r3, [r7]
 1624 0086 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 36


 1625 0088 CDD3     		bcc	.L97
 306:.\tic_tac_all.c **** 		}
 307:.\tic_tac_all.c **** 	}
 308:.\tic_tac_all.c **** 	if (num_index == 1){
 1626              		.loc 1 308 0 is_stmt 1
 1627 008a FB68     		ldr	r3, [r7, #12]
 1628 008c 012B     		cmp	r3, #1
 1629 008e 03D1     		bne	.L98
 309:.\tic_tac_all.c **** 		num_index = all_index[0];
 1630              		.loc 1 309 0
 1631 0090 BB68     		ldr	r3, [r7, #8]
 1632 0092 1B68     		ldr	r3, [r3]
 1633 0094 FB60     		str	r3, [r7, #12]
 1634 0096 1FE0     		b	.L99
 1635              	.L98:
 310:.\tic_tac_all.c **** 	}
 311:.\tic_tac_all.c **** 	else{
 312:.\tic_tac_all.c **** 		srand(PinNoise_Read()+PinNoise_Read()*num_index); // set a random seed
 1636              		.loc 1 312 0
 1637 0098 FFF7FEFF 		bl	PinNoise_Read
 1638 009c 0346     		mov	r3, r0
 1639 009e 1C46     		mov	r4, r3
 1640 00a0 FFF7FEFF 		bl	PinNoise_Read
 1641 00a4 0346     		mov	r3, r0
 1642 00a6 1A46     		mov	r2, r3
 1643 00a8 FB68     		ldr	r3, [r7, #12]
 1644 00aa 03FB02F3 		mul	r3, r3, r2
 1645 00ae 2344     		add	r3, r3, r4
 1646 00b0 1846     		mov	r0, r3
 1647 00b2 FFF7FEFF 		bl	srand
 313:.\tic_tac_all.c **** 		max = rand() % num_index; // choose a random index
 1648              		.loc 1 313 0
 1649 00b6 FFF7FEFF 		bl	rand
 1650 00ba 0346     		mov	r3, r0
 1651 00bc FA68     		ldr	r2, [r7, #12]
 1652 00be 93FBF2F2 		sdiv	r2, r3, r2
 1653 00c2 F968     		ldr	r1, [r7, #12]
 1654 00c4 01FB02F2 		mul	r2, r1, r2
 1655 00c8 9B1A     		subs	r3, r3, r2
 1656 00ca 3B61     		str	r3, [r7, #16]
 314:.\tic_tac_all.c **** 		num_index = all_index[max];
 1657              		.loc 1 314 0
 1658 00cc 3B69     		ldr	r3, [r7, #16]
 1659 00ce 9B00     		lsls	r3, r3, #2
 1660 00d0 BA68     		ldr	r2, [r7, #8]
 1661 00d2 1344     		add	r3, r3, r2
 1662 00d4 1B68     		ldr	r3, [r3]
 1663 00d6 FB60     		str	r3, [r7, #12]
 1664              	.L99:
 315:.\tic_tac_all.c **** 	}
 316:.\tic_tac_all.c **** 	free(all_index); // free
 1665              		.loc 1 316 0
 1666 00d8 B868     		ldr	r0, [r7, #8]
 1667 00da FFF7FEFF 		bl	free
 317:.\tic_tac_all.c **** 	return num_index;
 1668              		.loc 1 317 0
 1669 00de FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 37


 318:.\tic_tac_all.c **** };
 1670              		.loc 1 318 0
 1671 00e0 1846     		mov	r0, r3
 1672 00e2 1C37     		adds	r7, r7, #28
 1673              		.cfi_def_cfa_offset 12
 1674 00e4 BD46     		mov	sp, r7
 1675              		.cfi_def_cfa_register 13
 1676              		@ sp needed
 1677 00e6 90BD     		pop	{r4, r7, pc}
 1678              		.cfi_endproc
 1679              	.LFE74:
 1680              		.size	max_array, .-max_array
 1681              		.section	.text.ai_reset,"ax",%progbits
 1682              		.align	2
 1683              		.global	ai_reset
 1684              		.thumb
 1685              		.thumb_func
 1686              		.type	ai_reset, %function
 1687              	ai_reset:
 1688              	.LFB75:
 319:.\tic_tac_all.c **** 
 320:.\tic_tac_all.c **** 
 321:.\tic_tac_all.c **** struct ai{ //structure for the AI bot
 322:.\tic_tac_all.c **** 	int player_id;
 323:.\tic_tac_all.c **** 	int grid_eval[64]; //probably should malloc this shit
 324:.\tic_tac_all.c **** 	int diags[76]; //list of all diagonals
 325:.\tic_tac_all.c **** };
 326:.\tic_tac_all.c **** 
 327:.\tic_tac_all.c **** struct tic_tac_ai{ //structure for the overall object
 328:.\tic_tac_all.c **** 	int is_ai[2];
 329:.\tic_tac_all.c **** 	struct ai ai_1;	//the ai module for player 1, with id 1
 330:.\tic_tac_all.c **** 	struct ai ai_2; //the ai module for player 2, with id -1
 331:.\tic_tac_all.c **** 	struct tic_tac_toe game;
 332:.\tic_tac_all.c **** };
 333:.\tic_tac_all.c **** 
 334:.\tic_tac_all.c **** void ai_reset(struct ai* ai){
 1689              		.loc 1 334 0
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 8
 1692              		@ frame_needed = 1, uses_anonymous_args = 0
 1693 0000 80B5     		push	{r7, lr}
 1694              		.cfi_def_cfa_offset 8
 1695              		.cfi_offset 7, -8
 1696              		.cfi_offset 14, -4
 1697 0002 82B0     		sub	sp, sp, #8
 1698              		.cfi_def_cfa_offset 16
 1699 0004 00AF     		add	r7, sp, #0
 1700              		.cfi_def_cfa_register 7
 1701 0006 7860     		str	r0, [r7, #4]
 335:.\tic_tac_all.c **** 	memset(ai->grid_eval,0,sizeof ai->grid_eval); //clear array
 1702              		.loc 1 335 0
 1703 0008 7B68     		ldr	r3, [r7, #4]
 1704 000a 0433     		adds	r3, r3, #4
 1705 000c 1846     		mov	r0, r3
 1706 000e 0021     		movs	r1, #0
 1707 0010 4FF48072 		mov	r2, #256
 1708 0014 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 38


 336:.\tic_tac_all.c **** 	memset(ai->diags,0,sizeof ai->diags); //clear array	
 1709              		.loc 1 336 0
 1710 0018 7B68     		ldr	r3, [r7, #4]
 1711 001a 03F58273 		add	r3, r3, #260
 1712 001e 1846     		mov	r0, r3
 1713 0020 0021     		movs	r1, #0
 1714 0022 4FF49872 		mov	r2, #304
 1715 0026 FFF7FEFF 		bl	memset
 337:.\tic_tac_all.c **** }
 1716              		.loc 1 337 0
 1717 002a 0837     		adds	r7, r7, #8
 1718              		.cfi_def_cfa_offset 8
 1719 002c BD46     		mov	sp, r7
 1720              		.cfi_def_cfa_register 13
 1721              		@ sp needed
 1722 002e 80BD     		pop	{r7, pc}
 1723              		.cfi_endproc
 1724              	.LFE75:
 1725              		.size	ai_reset, .-ai_reset
 1726              		.section	.text.ai_init,"ax",%progbits
 1727              		.align	2
 1728              		.global	ai_init
 1729              		.thumb
 1730              		.thumb_func
 1731              		.type	ai_init, %function
 1732              	ai_init:
 1733              	.LFB76:
 338:.\tic_tac_all.c **** 
 339:.\tic_tac_all.c **** void ai_init(struct ai* ai, int player_id, int size, int dimension){
 1734              		.loc 1 339 0
 1735              		.cfi_startproc
 1736              		@ args = 0, pretend = 0, frame = 16
 1737              		@ frame_needed = 1, uses_anonymous_args = 0
 1738 0000 80B5     		push	{r7, lr}
 1739              		.cfi_def_cfa_offset 8
 1740              		.cfi_offset 7, -8
 1741              		.cfi_offset 14, -4
 1742 0002 84B0     		sub	sp, sp, #16
 1743              		.cfi_def_cfa_offset 24
 1744 0004 00AF     		add	r7, sp, #0
 1745              		.cfi_def_cfa_register 7
 1746 0006 F860     		str	r0, [r7, #12]
 1747 0008 B960     		str	r1, [r7, #8]
 1748 000a 7A60     		str	r2, [r7, #4]
 1749 000c 3B60     		str	r3, [r7]
 340:.\tic_tac_all.c **** 	ai->player_id = player_id;
 1750              		.loc 1 340 0
 1751 000e FB68     		ldr	r3, [r7, #12]
 1752 0010 BA68     		ldr	r2, [r7, #8]
 1753 0012 1A60     		str	r2, [r3]
 341:.\tic_tac_all.c **** 	ai_reset(ai);
 1754              		.loc 1 341 0
 1755 0014 F868     		ldr	r0, [r7, #12]
 1756 0016 FFF7FEFF 		bl	ai_reset
 342:.\tic_tac_all.c **** }
 1757              		.loc 1 342 0
 1758 001a 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 39


 1759              		.cfi_def_cfa_offset 8
 1760 001c BD46     		mov	sp, r7
 1761              		.cfi_def_cfa_register 13
 1762              		@ sp needed
 1763 001e 80BD     		pop	{r7, pc}
 1764              		.cfi_endproc
 1765              	.LFE76:
 1766              		.size	ai_init, .-ai_init
 1767              		.section	.text.tta_init,"ax",%progbits
 1768              		.align	2
 1769              		.global	tta_init
 1770              		.thumb
 1771              		.thumb_func
 1772              		.type	tta_init, %function
 1773              	tta_init:
 1774              	.LFB77:
 343:.\tic_tac_all.c **** 
 344:.\tic_tac_all.c **** void tta_init(struct tic_tac_ai* ai, int size, int dimension, 
 345:.\tic_tac_all.c **** 	bool player_1, bool player_2){
 1775              		.loc 1 345 0
 1776              		.cfi_startproc
 1777              		@ args = 4, pretend = 0, frame = 16
 1778              		@ frame_needed = 1, uses_anonymous_args = 0
 1779 0000 80B5     		push	{r7, lr}
 1780              		.cfi_def_cfa_offset 8
 1781              		.cfi_offset 7, -8
 1782              		.cfi_offset 14, -4
 1783 0002 84B0     		sub	sp, sp, #16
 1784              		.cfi_def_cfa_offset 24
 1785 0004 00AF     		add	r7, sp, #0
 1786              		.cfi_def_cfa_register 7
 1787 0006 F860     		str	r0, [r7, #12]
 1788 0008 B960     		str	r1, [r7, #8]
 1789 000a 7A60     		str	r2, [r7, #4]
 1790 000c 3B60     		str	r3, [r7]
 346:.\tic_tac_all.c **** 	// the player 1 and player 2 bools determine whether we want AI or not
 347:.\tic_tac_all.c **** 	ttc_init(&ai->game,size,dimension); // init inside tic tac toe struct
 1791              		.loc 1 347 0
 1792 000e FB68     		ldr	r3, [r7, #12]
 1793 0010 03F58E63 		add	r3, r3, #1136
 1794 0014 1846     		mov	r0, r3
 1795 0016 B968     		ldr	r1, [r7, #8]
 1796 0018 7A68     		ldr	r2, [r7, #4]
 1797 001a FFF7FEFF 		bl	ttc_init
 348:.\tic_tac_all.c **** 	if (player_1 == true){
 1798              		.loc 1 348 0
 1799 001e 3B68     		ldr	r3, [r7]
 1800 0020 012B     		cmp	r3, #1
 1801 0022 0BD1     		bne	.L104
 349:.\tic_tac_all.c **** 		//printf("\nInit player %i as AI", 1);
 350:.\tic_tac_all.c **** 		ai_init(&ai->ai_1,1,size,dimension);
 1802              		.loc 1 350 0
 1803 0024 FB68     		ldr	r3, [r7, #12]
 1804 0026 0833     		adds	r3, r3, #8
 1805 0028 1846     		mov	r0, r3
 1806 002a 0121     		movs	r1, #1
 1807 002c BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 40


 1808 002e 7B68     		ldr	r3, [r7, #4]
 1809 0030 FFF7FEFF 		bl	ai_init
 351:.\tic_tac_all.c **** 		ai->is_ai[0] = 1;
 1810              		.loc 1 351 0
 1811 0034 FB68     		ldr	r3, [r7, #12]
 1812 0036 0122     		movs	r2, #1
 1813 0038 1A60     		str	r2, [r3]
 1814 003a 02E0     		b	.L105
 1815              	.L104:
 352:.\tic_tac_all.c **** 	}
 353:.\tic_tac_all.c **** 	else {
 354:.\tic_tac_all.c **** 		//printf("\nInit player %i not as AI", 1);
 355:.\tic_tac_all.c **** 		ai->is_ai[0] = 0;
 1816              		.loc 1 355 0
 1817 003c FB68     		ldr	r3, [r7, #12]
 1818 003e 0022     		movs	r2, #0
 1819 0040 1A60     		str	r2, [r3]
 1820              	.L105:
 356:.\tic_tac_all.c **** 	}
 357:.\tic_tac_all.c **** 	if (player_2 == true){
 1821              		.loc 1 357 0
 1822 0042 BB69     		ldr	r3, [r7, #24]
 1823 0044 012B     		cmp	r3, #1
 1824 0046 0DD1     		bne	.L106
 358:.\tic_tac_all.c **** 		//printf("\nInit player %i as AI", -1);
 359:.\tic_tac_all.c **** 		ai_init(&ai->ai_2,-1,size,dimension);
 1825              		.loc 1 359 0
 1826 0048 FB68     		ldr	r3, [r7, #12]
 1827 004a 03F50F73 		add	r3, r3, #572
 1828 004e 1846     		mov	r0, r3
 1829 0050 4FF0FF31 		mov	r1, #-1
 1830 0054 BA68     		ldr	r2, [r7, #8]
 1831 0056 7B68     		ldr	r3, [r7, #4]
 1832 0058 FFF7FEFF 		bl	ai_init
 360:.\tic_tac_all.c **** 		ai->is_ai[1] = 1;
 1833              		.loc 1 360 0
 1834 005c FB68     		ldr	r3, [r7, #12]
 1835 005e 0122     		movs	r2, #1
 1836 0060 5A60     		str	r2, [r3, #4]
 1837 0062 02E0     		b	.L103
 1838              	.L106:
 361:.\tic_tac_all.c **** 	}
 362:.\tic_tac_all.c **** 	else {
 363:.\tic_tac_all.c **** 		//printf("\nInit player %i not as AI", -1);
 364:.\tic_tac_all.c **** 		ai->is_ai[1] = 0;
 1839              		.loc 1 364 0
 1840 0064 FB68     		ldr	r3, [r7, #12]
 1841 0066 0022     		movs	r2, #0
 1842 0068 5A60     		str	r2, [r3, #4]
 1843              	.L103:
 365:.\tic_tac_all.c **** 	}
 366:.\tic_tac_all.c **** }
 1844              		.loc 1 366 0
 1845 006a 1037     		adds	r7, r7, #16
 1846              		.cfi_def_cfa_offset 8
 1847 006c BD46     		mov	sp, r7
 1848              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 41


 1849              		@ sp needed
 1850 006e 80BD     		pop	{r7, pc}
 1851              		.cfi_endproc
 1852              	.LFE77:
 1853              		.size	tta_init, .-tta_init
 1854              		.section	.text.ai_evaluate_board,"ax",%progbits
 1855              		.align	2
 1856              		.global	ai_evaluate_board
 1857              		.thumb
 1858              		.thumb_func
 1859              		.type	ai_evaluate_board, %function
 1860              	ai_evaluate_board:
 1861              	.LFB78:
 367:.\tic_tac_all.c **** 
 368:.\tic_tac_all.c **** int ai_evaluate_board(struct tic_tac_toe* t, struct ai* ai){
 1862              		.loc 1 368 0
 1863              		.cfi_startproc
 1864              		@ args = 0, pretend = 0, frame = 48
 1865              		@ frame_needed = 1, uses_anonymous_args = 0
 1866 0000 90B5     		push	{r4, r7, lr}
 1867              		.cfi_def_cfa_offset 12
 1868              		.cfi_offset 4, -12
 1869              		.cfi_offset 7, -8
 1870              		.cfi_offset 14, -4
 1871 0002 8DB0     		sub	sp, sp, #52
 1872              		.cfi_def_cfa_offset 64
 1873 0004 00AF     		add	r7, sp, #0
 1874              		.cfi_def_cfa_register 7
 1875 0006 7860     		str	r0, [r7, #4]
 1876 0008 3960     		str	r1, [r7]
 369:.\tic_tac_all.c **** 	// this method lets ai evaluate the board
 370:.\tic_tac_all.c **** 	ai_reset(ai);
 1877              		.loc 1 370 0
 1878 000a 3868     		ldr	r0, [r7]
 1879 000c FFF7FEFF 		bl	ai_reset
 371:.\tic_tac_all.c **** 	int x,y,z,zp;
 372:.\tic_tac_all.c **** 	int connected;
 373:.\tic_tac_all.c **** 	int empty_places[4]; //keep track of all empty places
 374:.\tic_tac_all.c **** 	int num_filled;
 375:.\tic_tac_all.c **** 	// int diag_loc;
 376:.\tic_tac_all.c **** 	for (z = 0; z < t->size; z++){
 1880              		.loc 1 376 0
 1881 0010 0023     		movs	r3, #0
 1882 0012 7B62     		str	r3, [r7, #36]
 1883 0014 67E3     		b	.L109
 1884              	.L162:
 1885              	.LBB4:
 377:.\tic_tac_all.c **** 		for (y = 0; y < t->size; y++){ // flat
 1886              		.loc 1 377 0
 1887 0016 0023     		movs	r3, #0
 1888 0018 BB62     		str	r3, [r7, #40]
 1889 001a 5DE0     		b	.L110
 1890              	.L117:
 378:.\tic_tac_all.c **** 			connected = 0;
 1891              		.loc 1 378 0
 1892 001c 0023     		movs	r3, #0
 1893 001e FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 42


 379:.\tic_tac_all.c **** 			num_filled = 0;
 1894              		.loc 1 379 0
 1895 0020 0023     		movs	r3, #0
 1896 0022 BB61     		str	r3, [r7, #24]
 380:.\tic_tac_all.c **** 			memset(empty_places,0,sizeof empty_places); //clear array
 1897              		.loc 1 380 0
 1898 0024 07F10803 		add	r3, r7, #8
 1899 0028 1846     		mov	r0, r3
 1900 002a 0021     		movs	r1, #0
 1901 002c 1022     		movs	r2, #16
 1902 002e FFF7FEFF 		bl	memset
 381:.\tic_tac_all.c **** 			for (x = 0; x < t->size;x++){
 1903              		.loc 1 381 0
 1904 0032 0023     		movs	r3, #0
 1905 0034 FB62     		str	r3, [r7, #44]
 1906 0036 2AE0     		b	.L111
 1907              	.L113:
 382:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,y,z);
 1908              		.loc 1 382 0
 1909 0038 3B68     		ldr	r3, [r7]
 1910 003a 1C68     		ldr	r4, [r3]
 1911 003c 7868     		ldr	r0, [r7, #4]
 1912 003e F96A     		ldr	r1, [r7, #44]
 1913 0040 BA6A     		ldr	r2, [r7, #40]
 1914 0042 7B6A     		ldr	r3, [r7, #36]
 1915 0044 FFF7FEFF 		bl	ttc_get_grid
 1916 0048 0346     		mov	r3, r0
 1917 004a 03FB04F3 		mul	r3, r3, r4
 1918 004e FA69     		ldr	r2, [r7, #28]
 1919 0050 1344     		add	r3, r3, r2
 1920 0052 FB61     		str	r3, [r7, #28]
 383:.\tic_tac_all.c **** 				if (ttc_get_grid(t,x,y,z) == 0){ //empty spot
 1921              		.loc 1 383 0
 1922 0054 7868     		ldr	r0, [r7, #4]
 1923 0056 F96A     		ldr	r1, [r7, #44]
 1924 0058 BA6A     		ldr	r2, [r7, #40]
 1925 005a 7B6A     		ldr	r3, [r7, #36]
 1926 005c FFF7FEFF 		bl	ttc_get_grid
 1927 0060 0346     		mov	r3, r0
 1928 0062 002B     		cmp	r3, #0
 1929 0064 10D1     		bne	.L112
 384:.\tic_tac_all.c **** 					empty_places[num_filled] = z*16 + y*4 + x; // store loc
 1930              		.loc 1 384 0
 1931 0066 7B6A     		ldr	r3, [r7, #36]
 1932 0068 9A00     		lsls	r2, r3, #2
 1933 006a BB6A     		ldr	r3, [r7, #40]
 1934 006c 1344     		add	r3, r3, r2
 1935 006e 9A00     		lsls	r2, r3, #2
 1936 0070 FB6A     		ldr	r3, [r7, #44]
 1937 0072 1A44     		add	r2, r2, r3
 1938 0074 BB69     		ldr	r3, [r7, #24]
 1939 0076 9B00     		lsls	r3, r3, #2
 1940 0078 07F13001 		add	r1, r7, #48
 1941 007c 0B44     		add	r3, r3, r1
 1942 007e 43F8282C 		str	r2, [r3, #-40]
 385:.\tic_tac_all.c **** 					num_filled++; //increment
 1943              		.loc 1 385 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 43


 1944 0082 BB69     		ldr	r3, [r7, #24]
 1945 0084 0133     		adds	r3, r3, #1
 1946 0086 BB61     		str	r3, [r7, #24]
 1947              	.L112:
 381:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,y,z);
 1948              		.loc 1 381 0 discriminator 2
 1949 0088 FB6A     		ldr	r3, [r7, #44]
 1950 008a 0133     		adds	r3, r3, #1
 1951 008c FB62     		str	r3, [r7, #44]
 1952              	.L111:
 381:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,y,z);
 1953              		.loc 1 381 0 is_stmt 0 discriminator 1
 1954 008e 7B68     		ldr	r3, [r7, #4]
 1955 0090 1A68     		ldr	r2, [r3]
 1956 0092 FB6A     		ldr	r3, [r7, #44]
 1957 0094 9A42     		cmp	r2, r3
 1958 0096 CFDC     		bgt	.L113
 386:.\tic_tac_all.c **** 				}
 387:.\tic_tac_all.c **** 			}
 388:.\tic_tac_all.c **** 			// printf("\n Flats at %i %i %i with score %i filled %i",x,y,z,connected,num_filled);
 389:.\tic_tac_all.c **** 			if (connected == t->size){
 1959              		.loc 1 389 0 is_stmt 1
 1960 0098 7B68     		ldr	r3, [r7, #4]
 1961 009a 1A68     		ldr	r2, [r3]
 1962 009c FB69     		ldr	r3, [r7, #28]
 1963 009e 9A42     		cmp	r2, r3
 1964 00a0 06D1     		bne	.L114
 390:.\tic_tac_all.c **** 				t->game_not_won = t->player; //when win, set to player id
 1965              		.loc 1 390 0
 1966 00a2 7B68     		ldr	r3, [r7, #4]
 1967 00a4 9A68     		ldr	r2, [r3, #8]
 1968 00a6 7B68     		ldr	r3, [r7, #4]
 1969 00a8 1A61     		str	r2, [r3, #16]
 391:.\tic_tac_all.c **** 				return 1; //there is a win
 1970              		.loc 1 391 0
 1971 00aa 0123     		movs	r3, #1
 1972 00ac 00F0A7BC 		b	.L183
 1973              	.L114:
 392:.\tic_tac_all.c **** 			}
 393:.\tic_tac_all.c **** 			if (abs(connected) == 4 - num_filled){
 1974              		.loc 1 393 0
 1975 00b0 FB69     		ldr	r3, [r7, #28]
 1976 00b2 83EAE372 		eor	r2, r3, r3, asr #31
 1977 00b6 A2EBE372 		sub	r2, r2, r3, asr #31
 1978 00ba BB69     		ldr	r3, [r7, #24]
 1979 00bc C3F10403 		rsb	r3, r3, #4
 1980 00c0 9A42     		cmp	r2, r3
 1981 00c2 06D1     		bne	.L116
 1982              	.LBB5:
 394:.\tic_tac_all.c **** 				// ABA0 connected = 1, but num_filled = 1, so bad
 395:.\tic_tac_all.c **** 				// A000 connected = 1, but num_filled = 3, so good
 396:.\tic_tac_all.c **** 				ai_define_score(ai,connected,empty_places);
 1983              		.loc 1 396 0
 1984 00c4 07F10803 		add	r3, r7, #8
 1985 00c8 3868     		ldr	r0, [r7]
 1986 00ca F969     		ldr	r1, [r7, #28]
 1987 00cc 1A46     		mov	r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 44


 1988 00ce FFF7FEFF 		bl	ai_define_score
 1989              	.L116:
 1990              	.LBE5:
 377:.\tic_tac_all.c **** 			connected = 0;
 1991              		.loc 1 377 0 discriminator 2
 1992 00d2 BB6A     		ldr	r3, [r7, #40]
 1993 00d4 0133     		adds	r3, r3, #1
 1994 00d6 BB62     		str	r3, [r7, #40]
 1995              	.L110:
 377:.\tic_tac_all.c **** 			connected = 0;
 1996              		.loc 1 377 0 is_stmt 0 discriminator 1
 1997 00d8 7B68     		ldr	r3, [r7, #4]
 1998 00da 1A68     		ldr	r2, [r3]
 1999 00dc BB6A     		ldr	r3, [r7, #40]
 2000 00de 9A42     		cmp	r2, r3
 2001 00e0 9CDC     		bgt	.L117
 397:.\tic_tac_all.c **** 			}
 398:.\tic_tac_all.c **** 		}
 399:.\tic_tac_all.c **** 		for (x = 0; x < t->size; x++){ // horiz
 2002              		.loc 1 399 0 is_stmt 1
 2003 00e2 0023     		movs	r3, #0
 2004 00e4 FB62     		str	r3, [r7, #44]
 2005 00e6 5DE0     		b	.L118
 2006              	.L124:
 2007              	.LBB6:
 400:.\tic_tac_all.c **** 			connected = 0;
 2008              		.loc 1 400 0
 2009 00e8 0023     		movs	r3, #0
 2010 00ea FB61     		str	r3, [r7, #28]
 401:.\tic_tac_all.c **** 			num_filled = 0;
 2011              		.loc 1 401 0
 2012 00ec 0023     		movs	r3, #0
 2013 00ee BB61     		str	r3, [r7, #24]
 402:.\tic_tac_all.c **** 			memset(empty_places,0,sizeof empty_places); //clear array
 2014              		.loc 1 402 0
 2015 00f0 07F10803 		add	r3, r7, #8
 2016 00f4 1846     		mov	r0, r3
 2017 00f6 0021     		movs	r1, #0
 2018 00f8 1022     		movs	r2, #16
 2019 00fa FFF7FEFF 		bl	memset
 403:.\tic_tac_all.c **** 			for (y = 0; y < t->size;y++){
 2020              		.loc 1 403 0
 2021 00fe 0023     		movs	r3, #0
 2022 0100 BB62     		str	r3, [r7, #40]
 2023 0102 2AE0     		b	.L119
 2024              	.L121:
 404:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,y,z);
 2025              		.loc 1 404 0
 2026 0104 3B68     		ldr	r3, [r7]
 2027 0106 1C68     		ldr	r4, [r3]
 2028 0108 7868     		ldr	r0, [r7, #4]
 2029 010a F96A     		ldr	r1, [r7, #44]
 2030 010c BA6A     		ldr	r2, [r7, #40]
 2031 010e 7B6A     		ldr	r3, [r7, #36]
 2032 0110 FFF7FEFF 		bl	ttc_get_grid
 2033 0114 0346     		mov	r3, r0
 2034 0116 03FB04F3 		mul	r3, r3, r4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 45


 2035 011a FA69     		ldr	r2, [r7, #28]
 2036 011c 1344     		add	r3, r3, r2
 2037 011e FB61     		str	r3, [r7, #28]
 405:.\tic_tac_all.c **** 				if (ttc_get_grid(t,x,y,z) == 0){  //empty spot
 2038              		.loc 1 405 0
 2039 0120 7868     		ldr	r0, [r7, #4]
 2040 0122 F96A     		ldr	r1, [r7, #44]
 2041 0124 BA6A     		ldr	r2, [r7, #40]
 2042 0126 7B6A     		ldr	r3, [r7, #36]
 2043 0128 FFF7FEFF 		bl	ttc_get_grid
 2044 012c 0346     		mov	r3, r0
 2045 012e 002B     		cmp	r3, #0
 2046 0130 10D1     		bne	.L120
 406:.\tic_tac_all.c **** 					empty_places[num_filled] = z*16 + y*4 + x; // store loc
 2047              		.loc 1 406 0
 2048 0132 7B6A     		ldr	r3, [r7, #36]
 2049 0134 9A00     		lsls	r2, r3, #2
 2050 0136 BB6A     		ldr	r3, [r7, #40]
 2051 0138 1344     		add	r3, r3, r2
 2052 013a 9A00     		lsls	r2, r3, #2
 2053 013c FB6A     		ldr	r3, [r7, #44]
 2054 013e 1A44     		add	r2, r2, r3
 2055 0140 BB69     		ldr	r3, [r7, #24]
 2056 0142 9B00     		lsls	r3, r3, #2
 2057 0144 07F13001 		add	r1, r7, #48
 2058 0148 0B44     		add	r3, r3, r1
 2059 014a 43F8282C 		str	r2, [r3, #-40]
 407:.\tic_tac_all.c **** 					num_filled++; //increment
 2060              		.loc 1 407 0
 2061 014e BB69     		ldr	r3, [r7, #24]
 2062 0150 0133     		adds	r3, r3, #1
 2063 0152 BB61     		str	r3, [r7, #24]
 2064              	.L120:
 403:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,y,z);
 2065              		.loc 1 403 0 discriminator 2
 2066 0154 BB6A     		ldr	r3, [r7, #40]
 2067 0156 0133     		adds	r3, r3, #1
 2068 0158 BB62     		str	r3, [r7, #40]
 2069              	.L119:
 403:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,y,z);
 2070              		.loc 1 403 0 is_stmt 0 discriminator 1
 2071 015a 7B68     		ldr	r3, [r7, #4]
 2072 015c 1A68     		ldr	r2, [r3]
 2073 015e BB6A     		ldr	r3, [r7, #40]
 2074 0160 9A42     		cmp	r2, r3
 2075 0162 CFDC     		bgt	.L121
 408:.\tic_tac_all.c **** 				}
 409:.\tic_tac_all.c **** 			}
 410:.\tic_tac_all.c **** 			if (connected == t->size){
 2076              		.loc 1 410 0 is_stmt 1
 2077 0164 7B68     		ldr	r3, [r7, #4]
 2078 0166 1A68     		ldr	r2, [r3]
 2079 0168 FB69     		ldr	r3, [r7, #28]
 2080 016a 9A42     		cmp	r2, r3
 2081 016c 06D1     		bne	.L122
 411:.\tic_tac_all.c **** 				t->game_not_won = t->player; //when win, set to player id
 2082              		.loc 1 411 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 46


 2083 016e 7B68     		ldr	r3, [r7, #4]
 2084 0170 9A68     		ldr	r2, [r3, #8]
 2085 0172 7B68     		ldr	r3, [r7, #4]
 2086 0174 1A61     		str	r2, [r3, #16]
 412:.\tic_tac_all.c **** 				return 1; //there is a win
 2087              		.loc 1 412 0
 2088 0176 0123     		movs	r3, #1
 2089 0178 00F041BC 		b	.L183
 2090              	.L122:
 413:.\tic_tac_all.c **** 			}
 414:.\tic_tac_all.c **** 			if (abs(connected) == 4 - num_filled)
 2091              		.loc 1 414 0
 2092 017c FB69     		ldr	r3, [r7, #28]
 2093 017e 83EAE372 		eor	r2, r3, r3, asr #31
 2094 0182 A2EBE372 		sub	r2, r2, r3, asr #31
 2095 0186 BB69     		ldr	r3, [r7, #24]
 2096 0188 C3F10403 		rsb	r3, r3, #4
 2097 018c 9A42     		cmp	r2, r3
 2098 018e 06D1     		bne	.L123
 415:.\tic_tac_all.c **** 				ai_define_score(ai,connected,empty_places);
 2099              		.loc 1 415 0
 2100 0190 07F10803 		add	r3, r7, #8
 2101 0194 3868     		ldr	r0, [r7]
 2102 0196 F969     		ldr	r1, [r7, #28]
 2103 0198 1A46     		mov	r2, r3
 2104 019a FFF7FEFF 		bl	ai_define_score
 2105              	.L123:
 2106              	.LBE6:
 399:.\tic_tac_all.c **** 			connected = 0;
 2107              		.loc 1 399 0 discriminator 2
 2108 019e FB6A     		ldr	r3, [r7, #44]
 2109 01a0 0133     		adds	r3, r3, #1
 2110 01a2 FB62     		str	r3, [r7, #44]
 2111              	.L118:
 399:.\tic_tac_all.c **** 			connected = 0;
 2112              		.loc 1 399 0 is_stmt 0 discriminator 1
 2113 01a4 7B68     		ldr	r3, [r7, #4]
 2114 01a6 1A68     		ldr	r2, [r3]
 2115 01a8 FB6A     		ldr	r3, [r7, #44]
 2116 01aa 9A42     		cmp	r2, r3
 2117 01ac 9CDC     		bgt	.L124
 416:.\tic_tac_all.c **** 		}
 417:.\tic_tac_all.c **** 		for (x = 0; x < t->size; x++){ // vert, where z is y coord, zp is z coord
 2118              		.loc 1 417 0 is_stmt 1
 2119 01ae 0023     		movs	r3, #0
 2120 01b0 FB62     		str	r3, [r7, #44]
 2121 01b2 5CE0     		b	.L125
 2122              	.L131:
 2123              	.LBB7:
 418:.\tic_tac_all.c **** 			connected = 0;
 2124              		.loc 1 418 0
 2125 01b4 0023     		movs	r3, #0
 2126 01b6 FB61     		str	r3, [r7, #28]
 419:.\tic_tac_all.c **** 			num_filled = 0;
 2127              		.loc 1 419 0
 2128 01b8 0023     		movs	r3, #0
 2129 01ba BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 47


 420:.\tic_tac_all.c **** 			memset(empty_places,0,sizeof empty_places); //clear array
 2130              		.loc 1 420 0
 2131 01bc 07F10803 		add	r3, r7, #8
 2132 01c0 1846     		mov	r0, r3
 2133 01c2 0021     		movs	r1, #0
 2134 01c4 1022     		movs	r2, #16
 2135 01c6 FFF7FEFF 		bl	memset
 421:.\tic_tac_all.c **** 			for (zp = 0; zp < t->size;zp++){
 2136              		.loc 1 421 0
 2137 01ca 0023     		movs	r3, #0
 2138 01cc 3B62     		str	r3, [r7, #32]
 2139 01ce 2AE0     		b	.L126
 2140              	.L128:
 422:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,z,zp);
 2141              		.loc 1 422 0
 2142 01d0 3B68     		ldr	r3, [r7]
 2143 01d2 1C68     		ldr	r4, [r3]
 2144 01d4 7868     		ldr	r0, [r7, #4]
 2145 01d6 F96A     		ldr	r1, [r7, #44]
 2146 01d8 7A6A     		ldr	r2, [r7, #36]
 2147 01da 3B6A     		ldr	r3, [r7, #32]
 2148 01dc FFF7FEFF 		bl	ttc_get_grid
 2149 01e0 0346     		mov	r3, r0
 2150 01e2 03FB04F3 		mul	r3, r3, r4
 2151 01e6 FA69     		ldr	r2, [r7, #28]
 2152 01e8 1344     		add	r3, r3, r2
 2153 01ea FB61     		str	r3, [r7, #28]
 423:.\tic_tac_all.c **** 				if (ttc_get_grid(t,x,z,zp) == 0){  //empty spot
 2154              		.loc 1 423 0
 2155 01ec 7868     		ldr	r0, [r7, #4]
 2156 01ee F96A     		ldr	r1, [r7, #44]
 2157 01f0 7A6A     		ldr	r2, [r7, #36]
 2158 01f2 3B6A     		ldr	r3, [r7, #32]
 2159 01f4 FFF7FEFF 		bl	ttc_get_grid
 2160 01f8 0346     		mov	r3, r0
 2161 01fa 002B     		cmp	r3, #0
 2162 01fc 10D1     		bne	.L127
 424:.\tic_tac_all.c **** 					empty_places[num_filled] = zp*16 + z*4 + x; // store loc
 2163              		.loc 1 424 0
 2164 01fe 3B6A     		ldr	r3, [r7, #32]
 2165 0200 9A00     		lsls	r2, r3, #2
 2166 0202 7B6A     		ldr	r3, [r7, #36]
 2167 0204 1344     		add	r3, r3, r2
 2168 0206 9A00     		lsls	r2, r3, #2
 2169 0208 FB6A     		ldr	r3, [r7, #44]
 2170 020a 1A44     		add	r2, r2, r3
 2171 020c BB69     		ldr	r3, [r7, #24]
 2172 020e 9B00     		lsls	r3, r3, #2
 2173 0210 07F13001 		add	r1, r7, #48
 2174 0214 0B44     		add	r3, r3, r1
 2175 0216 43F8282C 		str	r2, [r3, #-40]
 425:.\tic_tac_all.c **** 					num_filled++; //increment
 2176              		.loc 1 425 0
 2177 021a BB69     		ldr	r3, [r7, #24]
 2178 021c 0133     		adds	r3, r3, #1
 2179 021e BB61     		str	r3, [r7, #24]
 2180              	.L127:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 48


 421:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,z,zp);
 2181              		.loc 1 421 0 discriminator 2
 2182 0220 3B6A     		ldr	r3, [r7, #32]
 2183 0222 0133     		adds	r3, r3, #1
 2184 0224 3B62     		str	r3, [r7, #32]
 2185              	.L126:
 421:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,z,zp);
 2186              		.loc 1 421 0 is_stmt 0 discriminator 1
 2187 0226 7B68     		ldr	r3, [r7, #4]
 2188 0228 1A68     		ldr	r2, [r3]
 2189 022a 3B6A     		ldr	r3, [r7, #32]
 2190 022c 9A42     		cmp	r2, r3
 2191 022e CFDC     		bgt	.L128
 426:.\tic_tac_all.c **** 				}
 427:.\tic_tac_all.c **** 			}
 428:.\tic_tac_all.c **** 			if (connected == t->size){
 2192              		.loc 1 428 0 is_stmt 1
 2193 0230 7B68     		ldr	r3, [r7, #4]
 2194 0232 1A68     		ldr	r2, [r3]
 2195 0234 FB69     		ldr	r3, [r7, #28]
 2196 0236 9A42     		cmp	r2, r3
 2197 0238 05D1     		bne	.L129
 429:.\tic_tac_all.c **** 				t->game_not_won = t->player; //when win, set to player id
 2198              		.loc 1 429 0
 2199 023a 7B68     		ldr	r3, [r7, #4]
 2200 023c 9A68     		ldr	r2, [r3, #8]
 2201 023e 7B68     		ldr	r3, [r7, #4]
 2202 0240 1A61     		str	r2, [r3, #16]
 430:.\tic_tac_all.c **** 				return 1; //there is a win
 2203              		.loc 1 430 0
 2204 0242 0123     		movs	r3, #1
 2205 0244 DBE3     		b	.L183
 2206              	.L129:
 431:.\tic_tac_all.c **** 			}
 432:.\tic_tac_all.c **** 			if (abs(connected) == 4 - num_filled)
 2207              		.loc 1 432 0
 2208 0246 FB69     		ldr	r3, [r7, #28]
 2209 0248 83EAE372 		eor	r2, r3, r3, asr #31
 2210 024c A2EBE372 		sub	r2, r2, r3, asr #31
 2211 0250 BB69     		ldr	r3, [r7, #24]
 2212 0252 C3F10403 		rsb	r3, r3, #4
 2213 0256 9A42     		cmp	r2, r3
 2214 0258 06D1     		bne	.L130
 433:.\tic_tac_all.c **** 				ai_define_score(ai,connected,empty_places);
 2215              		.loc 1 433 0
 2216 025a 07F10803 		add	r3, r7, #8
 2217 025e 3868     		ldr	r0, [r7]
 2218 0260 F969     		ldr	r1, [r7, #28]
 2219 0262 1A46     		mov	r2, r3
 2220 0264 FFF7FEFF 		bl	ai_define_score
 2221              	.L130:
 2222              	.LBE7:
 417:.\tic_tac_all.c **** 			connected = 0;
 2223              		.loc 1 417 0 discriminator 2
 2224 0268 FB6A     		ldr	r3, [r7, #44]
 2225 026a 0133     		adds	r3, r3, #1
 2226 026c FB62     		str	r3, [r7, #44]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 49


 2227              	.L125:
 417:.\tic_tac_all.c **** 			connected = 0;
 2228              		.loc 1 417 0 is_stmt 0 discriminator 1
 2229 026e 7B68     		ldr	r3, [r7, #4]
 2230 0270 1A68     		ldr	r2, [r3]
 2231 0272 FB6A     		ldr	r3, [r7, #44]
 2232 0274 9A42     		cmp	r2, r3
 2233 0276 9DDC     		bgt	.L131
 434:.\tic_tac_all.c **** 		}
 435:.\tic_tac_all.c **** 
 436:.\tic_tac_all.c **** 		// planar
 437:.\tic_tac_all.c **** 		connected = 0;
 2234              		.loc 1 437 0 is_stmt 1
 2235 0278 0023     		movs	r3, #0
 2236 027a FB61     		str	r3, [r7, #28]
 438:.\tic_tac_all.c **** 		num_filled = 0;
 2237              		.loc 1 438 0
 2238 027c 0023     		movs	r3, #0
 2239 027e BB61     		str	r3, [r7, #24]
 439:.\tic_tac_all.c **** 		memset(empty_places,0,sizeof empty_places); //clear array
 2240              		.loc 1 439 0
 2241 0280 07F10803 		add	r3, r7, #8
 2242 0284 1846     		mov	r0, r3
 2243 0286 0021     		movs	r1, #0
 2244 0288 1022     		movs	r2, #16
 2245 028a FFF7FEFF 		bl	memset
 440:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){
 2246              		.loc 1 440 0
 2247 028e 0023     		movs	r3, #0
 2248 0290 3B62     		str	r3, [r7, #32]
 2249 0292 2AE0     		b	.L132
 2250              	.L134:
 441:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,zp,z);
 2251              		.loc 1 441 0
 2252 0294 3B68     		ldr	r3, [r7]
 2253 0296 1C68     		ldr	r4, [r3]
 2254 0298 7868     		ldr	r0, [r7, #4]
 2255 029a 396A     		ldr	r1, [r7, #32]
 2256 029c 3A6A     		ldr	r2, [r7, #32]
 2257 029e 7B6A     		ldr	r3, [r7, #36]
 2258 02a0 FFF7FEFF 		bl	ttc_get_grid
 2259 02a4 0346     		mov	r3, r0
 2260 02a6 03FB04F3 		mul	r3, r3, r4
 2261 02aa FA69     		ldr	r2, [r7, #28]
 2262 02ac 1344     		add	r3, r3, r2
 2263 02ae FB61     		str	r3, [r7, #28]
 442:.\tic_tac_all.c **** 			if (ttc_get_grid(t,zp,zp,z) == 0){  //empty spot
 2264              		.loc 1 442 0
 2265 02b0 7868     		ldr	r0, [r7, #4]
 2266 02b2 396A     		ldr	r1, [r7, #32]
 2267 02b4 3A6A     		ldr	r2, [r7, #32]
 2268 02b6 7B6A     		ldr	r3, [r7, #36]
 2269 02b8 FFF7FEFF 		bl	ttc_get_grid
 2270 02bc 0346     		mov	r3, r0
 2271 02be 002B     		cmp	r3, #0
 2272 02c0 10D1     		bne	.L133
 443:.\tic_tac_all.c **** 				empty_places[num_filled] = z*16 + zp*4 + zp; // store loc
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 50


 2273              		.loc 1 443 0
 2274 02c2 7B6A     		ldr	r3, [r7, #36]
 2275 02c4 9A00     		lsls	r2, r3, #2
 2276 02c6 3B6A     		ldr	r3, [r7, #32]
 2277 02c8 1344     		add	r3, r3, r2
 2278 02ca 9A00     		lsls	r2, r3, #2
 2279 02cc 3B6A     		ldr	r3, [r7, #32]
 2280 02ce 1A44     		add	r2, r2, r3
 2281 02d0 BB69     		ldr	r3, [r7, #24]
 2282 02d2 9B00     		lsls	r3, r3, #2
 2283 02d4 07F13001 		add	r1, r7, #48
 2284 02d8 0B44     		add	r3, r3, r1
 2285 02da 43F8282C 		str	r2, [r3, #-40]
 444:.\tic_tac_all.c **** 				num_filled++; //increment
 2286              		.loc 1 444 0
 2287 02de BB69     		ldr	r3, [r7, #24]
 2288 02e0 0133     		adds	r3, r3, #1
 2289 02e2 BB61     		str	r3, [r7, #24]
 2290              	.L133:
 440:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,zp,z);
 2291              		.loc 1 440 0 discriminator 2
 2292 02e4 3B6A     		ldr	r3, [r7, #32]
 2293 02e6 0133     		adds	r3, r3, #1
 2294 02e8 3B62     		str	r3, [r7, #32]
 2295              	.L132:
 440:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,zp,z);
 2296              		.loc 1 440 0 is_stmt 0 discriminator 1
 2297 02ea 7B68     		ldr	r3, [r7, #4]
 2298 02ec 1A68     		ldr	r2, [r3]
 2299 02ee 3B6A     		ldr	r3, [r7, #32]
 2300 02f0 9A42     		cmp	r2, r3
 2301 02f2 CFDC     		bgt	.L134
 445:.\tic_tac_all.c **** 			}
 446:.\tic_tac_all.c **** 		}
 447:.\tic_tac_all.c **** 		if (connected == t->size){
 2302              		.loc 1 447 0 is_stmt 1
 2303 02f4 7B68     		ldr	r3, [r7, #4]
 2304 02f6 1A68     		ldr	r2, [r3]
 2305 02f8 FB69     		ldr	r3, [r7, #28]
 2306 02fa 9A42     		cmp	r2, r3
 2307 02fc 05D1     		bne	.L135
 448:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 2308              		.loc 1 448 0
 2309 02fe 7B68     		ldr	r3, [r7, #4]
 2310 0300 9A68     		ldr	r2, [r3, #8]
 2311 0302 7B68     		ldr	r3, [r7, #4]
 2312 0304 1A61     		str	r2, [r3, #16]
 449:.\tic_tac_all.c **** 			return 1; //there is a win
 2313              		.loc 1 449 0
 2314 0306 0123     		movs	r3, #1
 2315 0308 79E3     		b	.L183
 2316              	.L135:
 450:.\tic_tac_all.c **** 		}
 451:.\tic_tac_all.c **** 		if (abs(connected) == 4 - num_filled)
 2317              		.loc 1 451 0
 2318 030a FB69     		ldr	r3, [r7, #28]
 2319 030c 83EAE372 		eor	r2, r3, r3, asr #31
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 51


 2320 0310 A2EBE372 		sub	r2, r2, r3, asr #31
 2321 0314 BB69     		ldr	r3, [r7, #24]
 2322 0316 C3F10403 		rsb	r3, r3, #4
 2323 031a 9A42     		cmp	r2, r3
 2324 031c 06D1     		bne	.L136
 452:.\tic_tac_all.c **** 			ai_define_score(ai,connected,empty_places);
 2325              		.loc 1 452 0
 2326 031e 07F10803 		add	r3, r7, #8
 2327 0322 3868     		ldr	r0, [r7]
 2328 0324 F969     		ldr	r1, [r7, #28]
 2329 0326 1A46     		mov	r2, r3
 2330 0328 FFF7FEFF 		bl	ai_define_score
 2331              	.L136:
 453:.\tic_tac_all.c **** 		// planar
 454:.\tic_tac_all.c **** 		connected = 0;
 2332              		.loc 1 454 0
 2333 032c 0023     		movs	r3, #0
 2334 032e FB61     		str	r3, [r7, #28]
 455:.\tic_tac_all.c **** 		num_filled = 0;
 2335              		.loc 1 455 0
 2336 0330 0023     		movs	r3, #0
 2337 0332 BB61     		str	r3, [r7, #24]
 456:.\tic_tac_all.c **** 		memset(empty_places,0,sizeof empty_places); //clear array
 2338              		.loc 1 456 0
 2339 0334 07F10803 		add	r3, r7, #8
 2340 0338 1846     		mov	r0, r3
 2341 033a 0021     		movs	r1, #0
 2342 033c 1022     		movs	r2, #16
 2343 033e FFF7FEFF 		bl	memset
 457:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){
 2344              		.loc 1 457 0
 2345 0342 0023     		movs	r3, #0
 2346 0344 3B62     		str	r3, [r7, #32]
 2347 0346 32E0     		b	.L137
 2348              	.L139:
 458:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,3-zp,z);
 2349              		.loc 1 458 0
 2350 0348 3B68     		ldr	r3, [r7]
 2351 034a 1C68     		ldr	r4, [r3]
 2352 034c 3B6A     		ldr	r3, [r7, #32]
 2353 034e C3F10303 		rsb	r3, r3, #3
 2354 0352 7868     		ldr	r0, [r7, #4]
 2355 0354 396A     		ldr	r1, [r7, #32]
 2356 0356 1A46     		mov	r2, r3
 2357 0358 7B6A     		ldr	r3, [r7, #36]
 2358 035a FFF7FEFF 		bl	ttc_get_grid
 2359 035e 0346     		mov	r3, r0
 2360 0360 03FB04F3 		mul	r3, r3, r4
 2361 0364 FA69     		ldr	r2, [r7, #28]
 2362 0366 1344     		add	r3, r3, r2
 2363 0368 FB61     		str	r3, [r7, #28]
 459:.\tic_tac_all.c **** 			if (ttc_get_grid(t,zp,3-zp,z) == 0){  //empty spot
 2364              		.loc 1 459 0
 2365 036a 3B6A     		ldr	r3, [r7, #32]
 2366 036c C3F10303 		rsb	r3, r3, #3
 2367 0370 7868     		ldr	r0, [r7, #4]
 2368 0372 396A     		ldr	r1, [r7, #32]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 52


 2369 0374 1A46     		mov	r2, r3
 2370 0376 7B6A     		ldr	r3, [r7, #36]
 2371 0378 FFF7FEFF 		bl	ttc_get_grid
 2372 037c 0346     		mov	r3, r0
 2373 037e 002B     		cmp	r3, #0
 2374 0380 12D1     		bne	.L138
 460:.\tic_tac_all.c **** 				empty_places[num_filled] = z*16 + (3-zp)*4 + zp; // store loc
 2375              		.loc 1 460 0
 2376 0382 7B6A     		ldr	r3, [r7, #36]
 2377 0384 9A00     		lsls	r2, r3, #2
 2378 0386 3B6A     		ldr	r3, [r7, #32]
 2379 0388 C3F10303 		rsb	r3, r3, #3
 2380 038c 1344     		add	r3, r3, r2
 2381 038e 9A00     		lsls	r2, r3, #2
 2382 0390 3B6A     		ldr	r3, [r7, #32]
 2383 0392 1A44     		add	r2, r2, r3
 2384 0394 BB69     		ldr	r3, [r7, #24]
 2385 0396 9B00     		lsls	r3, r3, #2
 2386 0398 07F13001 		add	r1, r7, #48
 2387 039c 0B44     		add	r3, r3, r1
 2388 039e 43F8282C 		str	r2, [r3, #-40]
 461:.\tic_tac_all.c **** 				num_filled++; //increment
 2389              		.loc 1 461 0
 2390 03a2 BB69     		ldr	r3, [r7, #24]
 2391 03a4 0133     		adds	r3, r3, #1
 2392 03a6 BB61     		str	r3, [r7, #24]
 2393              	.L138:
 457:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,3-zp,z);
 2394              		.loc 1 457 0 discriminator 2
 2395 03a8 3B6A     		ldr	r3, [r7, #32]
 2396 03aa 0133     		adds	r3, r3, #1
 2397 03ac 3B62     		str	r3, [r7, #32]
 2398              	.L137:
 457:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,3-zp,z);
 2399              		.loc 1 457 0 is_stmt 0 discriminator 1
 2400 03ae 7B68     		ldr	r3, [r7, #4]
 2401 03b0 1A68     		ldr	r2, [r3]
 2402 03b2 3B6A     		ldr	r3, [r7, #32]
 2403 03b4 9A42     		cmp	r2, r3
 2404 03b6 C7DC     		bgt	.L139
 462:.\tic_tac_all.c **** 			}
 463:.\tic_tac_all.c **** 		}
 464:.\tic_tac_all.c **** 		if (connected == t->size){
 2405              		.loc 1 464 0 is_stmt 1
 2406 03b8 7B68     		ldr	r3, [r7, #4]
 2407 03ba 1A68     		ldr	r2, [r3]
 2408 03bc FB69     		ldr	r3, [r7, #28]
 2409 03be 9A42     		cmp	r2, r3
 2410 03c0 05D1     		bne	.L140
 465:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 2411              		.loc 1 465 0
 2412 03c2 7B68     		ldr	r3, [r7, #4]
 2413 03c4 9A68     		ldr	r2, [r3, #8]
 2414 03c6 7B68     		ldr	r3, [r7, #4]
 2415 03c8 1A61     		str	r2, [r3, #16]
 466:.\tic_tac_all.c **** 			return 1; //there is a win
 2416              		.loc 1 466 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 53


 2417 03ca 0123     		movs	r3, #1
 2418 03cc 17E3     		b	.L183
 2419              	.L140:
 467:.\tic_tac_all.c **** 		}
 468:.\tic_tac_all.c **** 		if (abs(connected) == 4 - num_filled)
 2420              		.loc 1 468 0
 2421 03ce FB69     		ldr	r3, [r7, #28]
 2422 03d0 83EAE372 		eor	r2, r3, r3, asr #31
 2423 03d4 A2EBE372 		sub	r2, r2, r3, asr #31
 2424 03d8 BB69     		ldr	r3, [r7, #24]
 2425 03da C3F10403 		rsb	r3, r3, #4
 2426 03de 9A42     		cmp	r2, r3
 2427 03e0 06D1     		bne	.L141
 469:.\tic_tac_all.c **** 			ai_define_score(ai,connected,empty_places);
 2428              		.loc 1 469 0
 2429 03e2 07F10803 		add	r3, r7, #8
 2430 03e6 3868     		ldr	r0, [r7]
 2431 03e8 F969     		ldr	r1, [r7, #28]
 2432 03ea 1A46     		mov	r2, r3
 2433 03ec FFF7FEFF 		bl	ai_define_score
 2434              	.L141:
 470:.\tic_tac_all.c **** 
 471:.\tic_tac_all.c **** 		// frontal
 472:.\tic_tac_all.c **** 		connected = 0;
 2435              		.loc 1 472 0
 2436 03f0 0023     		movs	r3, #0
 2437 03f2 FB61     		str	r3, [r7, #28]
 473:.\tic_tac_all.c **** 		num_filled = 0;
 2438              		.loc 1 473 0
 2439 03f4 0023     		movs	r3, #0
 2440 03f6 BB61     		str	r3, [r7, #24]
 474:.\tic_tac_all.c **** 		memset(empty_places,0,sizeof empty_places); //clear array
 2441              		.loc 1 474 0
 2442 03f8 07F10803 		add	r3, r7, #8
 2443 03fc 1846     		mov	r0, r3
 2444 03fe 0021     		movs	r1, #0
 2445 0400 1022     		movs	r2, #16
 2446 0402 FFF7FEFF 		bl	memset
 475:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){
 2447              		.loc 1 475 0
 2448 0406 0023     		movs	r3, #0
 2449 0408 3B62     		str	r3, [r7, #32]
 2450 040a 2AE0     		b	.L142
 2451              	.L144:
 476:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,z,zp,zp);
 2452              		.loc 1 476 0
 2453 040c 3B68     		ldr	r3, [r7]
 2454 040e 1C68     		ldr	r4, [r3]
 2455 0410 7868     		ldr	r0, [r7, #4]
 2456 0412 796A     		ldr	r1, [r7, #36]
 2457 0414 3A6A     		ldr	r2, [r7, #32]
 2458 0416 3B6A     		ldr	r3, [r7, #32]
 2459 0418 FFF7FEFF 		bl	ttc_get_grid
 2460 041c 0346     		mov	r3, r0
 2461 041e 03FB04F3 		mul	r3, r3, r4
 2462 0422 FA69     		ldr	r2, [r7, #28]
 2463 0424 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 54


 2464 0426 FB61     		str	r3, [r7, #28]
 477:.\tic_tac_all.c **** 			if (ttc_get_grid(t,z,zp,zp) == 0){  //empty spot
 2465              		.loc 1 477 0
 2466 0428 7868     		ldr	r0, [r7, #4]
 2467 042a 796A     		ldr	r1, [r7, #36]
 2468 042c 3A6A     		ldr	r2, [r7, #32]
 2469 042e 3B6A     		ldr	r3, [r7, #32]
 2470 0430 FFF7FEFF 		bl	ttc_get_grid
 2471 0434 0346     		mov	r3, r0
 2472 0436 002B     		cmp	r3, #0
 2473 0438 10D1     		bne	.L143
 478:.\tic_tac_all.c **** 				empty_places[num_filled] = z + zp*4 + zp*16; // store loc
 2474              		.loc 1 478 0
 2475 043a 3B6A     		ldr	r3, [r7, #32]
 2476 043c 9A00     		lsls	r2, r3, #2
 2477 043e 7B6A     		ldr	r3, [r7, #36]
 2478 0440 1A44     		add	r2, r2, r3
 2479 0442 3B6A     		ldr	r3, [r7, #32]
 2480 0444 1B01     		lsls	r3, r3, #4
 2481 0446 1A44     		add	r2, r2, r3
 2482 0448 BB69     		ldr	r3, [r7, #24]
 2483 044a 9B00     		lsls	r3, r3, #2
 2484 044c 07F13001 		add	r1, r7, #48
 2485 0450 0B44     		add	r3, r3, r1
 2486 0452 43F8282C 		str	r2, [r3, #-40]
 479:.\tic_tac_all.c **** 				num_filled++; //increment
 2487              		.loc 1 479 0
 2488 0456 BB69     		ldr	r3, [r7, #24]
 2489 0458 0133     		adds	r3, r3, #1
 2490 045a BB61     		str	r3, [r7, #24]
 2491              	.L143:
 475:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,z,zp,zp);
 2492              		.loc 1 475 0 discriminator 2
 2493 045c 3B6A     		ldr	r3, [r7, #32]
 2494 045e 0133     		adds	r3, r3, #1
 2495 0460 3B62     		str	r3, [r7, #32]
 2496              	.L142:
 475:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,z,zp,zp);
 2497              		.loc 1 475 0 is_stmt 0 discriminator 1
 2498 0462 7B68     		ldr	r3, [r7, #4]
 2499 0464 1A68     		ldr	r2, [r3]
 2500 0466 3B6A     		ldr	r3, [r7, #32]
 2501 0468 9A42     		cmp	r2, r3
 2502 046a CFDC     		bgt	.L144
 480:.\tic_tac_all.c **** 			}
 481:.\tic_tac_all.c **** 		}
 482:.\tic_tac_all.c **** 		if (connected == t->size){
 2503              		.loc 1 482 0 is_stmt 1
 2504 046c 7B68     		ldr	r3, [r7, #4]
 2505 046e 1A68     		ldr	r2, [r3]
 2506 0470 FB69     		ldr	r3, [r7, #28]
 2507 0472 9A42     		cmp	r2, r3
 2508 0474 05D1     		bne	.L145
 483:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 2509              		.loc 1 483 0
 2510 0476 7B68     		ldr	r3, [r7, #4]
 2511 0478 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 55


 2512 047a 7B68     		ldr	r3, [r7, #4]
 2513 047c 1A61     		str	r2, [r3, #16]
 484:.\tic_tac_all.c **** 			return 1; //there is a win
 2514              		.loc 1 484 0
 2515 047e 0123     		movs	r3, #1
 2516 0480 BDE2     		b	.L183
 2517              	.L145:
 485:.\tic_tac_all.c **** 		}
 486:.\tic_tac_all.c **** 		if (abs(connected) == 4 - num_filled)
 2518              		.loc 1 486 0
 2519 0482 FB69     		ldr	r3, [r7, #28]
 2520 0484 83EAE372 		eor	r2, r3, r3, asr #31
 2521 0488 A2EBE372 		sub	r2, r2, r3, asr #31
 2522 048c BB69     		ldr	r3, [r7, #24]
 2523 048e C3F10403 		rsb	r3, r3, #4
 2524 0492 9A42     		cmp	r2, r3
 2525 0494 06D1     		bne	.L146
 487:.\tic_tac_all.c **** 			ai_define_score(ai,connected,empty_places);
 2526              		.loc 1 487 0
 2527 0496 07F10803 		add	r3, r7, #8
 2528 049a 3868     		ldr	r0, [r7]
 2529 049c F969     		ldr	r1, [r7, #28]
 2530 049e 1A46     		mov	r2, r3
 2531 04a0 FFF7FEFF 		bl	ai_define_score
 2532              	.L146:
 488:.\tic_tac_all.c **** 		// frontal
 489:.\tic_tac_all.c **** 		connected = 0;
 2533              		.loc 1 489 0
 2534 04a4 0023     		movs	r3, #0
 2535 04a6 FB61     		str	r3, [r7, #28]
 490:.\tic_tac_all.c **** 		num_filled = 0;
 2536              		.loc 1 490 0
 2537 04a8 0023     		movs	r3, #0
 2538 04aa BB61     		str	r3, [r7, #24]
 491:.\tic_tac_all.c **** 		memset(empty_places,0,sizeof empty_places); //clear array
 2539              		.loc 1 491 0
 2540 04ac 07F10803 		add	r3, r7, #8
 2541 04b0 1846     		mov	r0, r3
 2542 04b2 0021     		movs	r1, #0
 2543 04b4 1022     		movs	r2, #16
 2544 04b6 FFF7FEFF 		bl	memset
 492:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){
 2545              		.loc 1 492 0
 2546 04ba 0023     		movs	r3, #0
 2547 04bc 3B62     		str	r3, [r7, #32]
 2548 04be 32E0     		b	.L147
 2549              	.L149:
 493:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,z,3-zp,zp);
 2550              		.loc 1 493 0
 2551 04c0 3B68     		ldr	r3, [r7]
 2552 04c2 1C68     		ldr	r4, [r3]
 2553 04c4 3B6A     		ldr	r3, [r7, #32]
 2554 04c6 C3F10303 		rsb	r3, r3, #3
 2555 04ca 7868     		ldr	r0, [r7, #4]
 2556 04cc 796A     		ldr	r1, [r7, #36]
 2557 04ce 1A46     		mov	r2, r3
 2558 04d0 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 56


 2559 04d2 FFF7FEFF 		bl	ttc_get_grid
 2560 04d6 0346     		mov	r3, r0
 2561 04d8 03FB04F3 		mul	r3, r3, r4
 2562 04dc FA69     		ldr	r2, [r7, #28]
 2563 04de 1344     		add	r3, r3, r2
 2564 04e0 FB61     		str	r3, [r7, #28]
 494:.\tic_tac_all.c **** 			if (ttc_get_grid(t,z,3-zp,zp) == 0){  //empty spot
 2565              		.loc 1 494 0
 2566 04e2 3B6A     		ldr	r3, [r7, #32]
 2567 04e4 C3F10303 		rsb	r3, r3, #3
 2568 04e8 7868     		ldr	r0, [r7, #4]
 2569 04ea 796A     		ldr	r1, [r7, #36]
 2570 04ec 1A46     		mov	r2, r3
 2571 04ee 3B6A     		ldr	r3, [r7, #32]
 2572 04f0 FFF7FEFF 		bl	ttc_get_grid
 2573 04f4 0346     		mov	r3, r0
 2574 04f6 002B     		cmp	r3, #0
 2575 04f8 12D1     		bne	.L148
 495:.\tic_tac_all.c **** 				empty_places[num_filled] = z + (3-zp)*4 + zp*16; // store loc
 2576              		.loc 1 495 0
 2577 04fa 3B6A     		ldr	r3, [r7, #32]
 2578 04fc C3F10303 		rsb	r3, r3, #3
 2579 0500 9A00     		lsls	r2, r3, #2
 2580 0502 7B6A     		ldr	r3, [r7, #36]
 2581 0504 1A44     		add	r2, r2, r3
 2582 0506 3B6A     		ldr	r3, [r7, #32]
 2583 0508 1B01     		lsls	r3, r3, #4
 2584 050a 1A44     		add	r2, r2, r3
 2585 050c BB69     		ldr	r3, [r7, #24]
 2586 050e 9B00     		lsls	r3, r3, #2
 2587 0510 07F13001 		add	r1, r7, #48
 2588 0514 0B44     		add	r3, r3, r1
 2589 0516 43F8282C 		str	r2, [r3, #-40]
 496:.\tic_tac_all.c **** 				num_filled++; //increment
 2590              		.loc 1 496 0
 2591 051a BB69     		ldr	r3, [r7, #24]
 2592 051c 0133     		adds	r3, r3, #1
 2593 051e BB61     		str	r3, [r7, #24]
 2594              	.L148:
 492:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,z,3-zp,zp);
 2595              		.loc 1 492 0 discriminator 2
 2596 0520 3B6A     		ldr	r3, [r7, #32]
 2597 0522 0133     		adds	r3, r3, #1
 2598 0524 3B62     		str	r3, [r7, #32]
 2599              	.L147:
 492:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,z,3-zp,zp);
 2600              		.loc 1 492 0 is_stmt 0 discriminator 1
 2601 0526 7B68     		ldr	r3, [r7, #4]
 2602 0528 1A68     		ldr	r2, [r3]
 2603 052a 3B6A     		ldr	r3, [r7, #32]
 2604 052c 9A42     		cmp	r2, r3
 2605 052e C7DC     		bgt	.L149
 497:.\tic_tac_all.c **** 			}
 498:.\tic_tac_all.c **** 		}
 499:.\tic_tac_all.c **** 		if (connected == t->size){
 2606              		.loc 1 499 0 is_stmt 1
 2607 0530 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 57


 2608 0532 1A68     		ldr	r2, [r3]
 2609 0534 FB69     		ldr	r3, [r7, #28]
 2610 0536 9A42     		cmp	r2, r3
 2611 0538 05D1     		bne	.L150
 500:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 2612              		.loc 1 500 0
 2613 053a 7B68     		ldr	r3, [r7, #4]
 2614 053c 9A68     		ldr	r2, [r3, #8]
 2615 053e 7B68     		ldr	r3, [r7, #4]
 2616 0540 1A61     		str	r2, [r3, #16]
 501:.\tic_tac_all.c **** 			return 1; //there is a win
 2617              		.loc 1 501 0
 2618 0542 0123     		movs	r3, #1
 2619 0544 5BE2     		b	.L183
 2620              	.L150:
 502:.\tic_tac_all.c **** 		}
 503:.\tic_tac_all.c **** 		if (abs(connected) == 4 - num_filled)
 2621              		.loc 1 503 0
 2622 0546 FB69     		ldr	r3, [r7, #28]
 2623 0548 83EAE372 		eor	r2, r3, r3, asr #31
 2624 054c A2EBE372 		sub	r2, r2, r3, asr #31
 2625 0550 BB69     		ldr	r3, [r7, #24]
 2626 0552 C3F10403 		rsb	r3, r3, #4
 2627 0556 9A42     		cmp	r2, r3
 2628 0558 06D1     		bne	.L151
 504:.\tic_tac_all.c **** 			ai_define_score(ai,connected,empty_places);
 2629              		.loc 1 504 0
 2630 055a 07F10803 		add	r3, r7, #8
 2631 055e 3868     		ldr	r0, [r7]
 2632 0560 F969     		ldr	r1, [r7, #28]
 2633 0562 1A46     		mov	r2, r3
 2634 0564 FFF7FEFF 		bl	ai_define_score
 2635              	.L151:
 505:.\tic_tac_all.c **** 
 506:.\tic_tac_all.c **** 		// sidal
 507:.\tic_tac_all.c **** 		connected = 0;
 2636              		.loc 1 507 0
 2637 0568 0023     		movs	r3, #0
 2638 056a FB61     		str	r3, [r7, #28]
 508:.\tic_tac_all.c **** 		num_filled = 0;
 2639              		.loc 1 508 0
 2640 056c 0023     		movs	r3, #0
 2641 056e BB61     		str	r3, [r7, #24]
 509:.\tic_tac_all.c **** 		memset(empty_places,0,sizeof empty_places); //clear array
 2642              		.loc 1 509 0
 2643 0570 07F10803 		add	r3, r7, #8
 2644 0574 1846     		mov	r0, r3
 2645 0576 0021     		movs	r1, #0
 2646 0578 1022     		movs	r2, #16
 2647 057a FFF7FEFF 		bl	memset
 510:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){
 2648              		.loc 1 510 0
 2649 057e 0023     		movs	r3, #0
 2650 0580 3B62     		str	r3, [r7, #32]
 2651 0582 2AE0     		b	.L152
 2652              	.L154:
 511:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,z,zp);
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 58


 2653              		.loc 1 511 0
 2654 0584 3B68     		ldr	r3, [r7]
 2655 0586 1C68     		ldr	r4, [r3]
 2656 0588 7868     		ldr	r0, [r7, #4]
 2657 058a 396A     		ldr	r1, [r7, #32]
 2658 058c 7A6A     		ldr	r2, [r7, #36]
 2659 058e 3B6A     		ldr	r3, [r7, #32]
 2660 0590 FFF7FEFF 		bl	ttc_get_grid
 2661 0594 0346     		mov	r3, r0
 2662 0596 03FB04F3 		mul	r3, r3, r4
 2663 059a FA69     		ldr	r2, [r7, #28]
 2664 059c 1344     		add	r3, r3, r2
 2665 059e FB61     		str	r3, [r7, #28]
 512:.\tic_tac_all.c **** 			if (ttc_get_grid(t,zp,z,zp) == 0){  //empty spot
 2666              		.loc 1 512 0
 2667 05a0 7868     		ldr	r0, [r7, #4]
 2668 05a2 396A     		ldr	r1, [r7, #32]
 2669 05a4 7A6A     		ldr	r2, [r7, #36]
 2670 05a6 3B6A     		ldr	r3, [r7, #32]
 2671 05a8 FFF7FEFF 		bl	ttc_get_grid
 2672 05ac 0346     		mov	r3, r0
 2673 05ae 002B     		cmp	r3, #0
 2674 05b0 10D1     		bne	.L153
 513:.\tic_tac_all.c **** 				empty_places[num_filled] = zp + z*4 + zp*16; // store loc
 2675              		.loc 1 513 0
 2676 05b2 7B6A     		ldr	r3, [r7, #36]
 2677 05b4 9A00     		lsls	r2, r3, #2
 2678 05b6 3B6A     		ldr	r3, [r7, #32]
 2679 05b8 1A44     		add	r2, r2, r3
 2680 05ba 3B6A     		ldr	r3, [r7, #32]
 2681 05bc 1B01     		lsls	r3, r3, #4
 2682 05be 1A44     		add	r2, r2, r3
 2683 05c0 BB69     		ldr	r3, [r7, #24]
 2684 05c2 9B00     		lsls	r3, r3, #2
 2685 05c4 07F13001 		add	r1, r7, #48
 2686 05c8 0B44     		add	r3, r3, r1
 2687 05ca 43F8282C 		str	r2, [r3, #-40]
 514:.\tic_tac_all.c **** 				num_filled++; //increment
 2688              		.loc 1 514 0
 2689 05ce BB69     		ldr	r3, [r7, #24]
 2690 05d0 0133     		adds	r3, r3, #1
 2691 05d2 BB61     		str	r3, [r7, #24]
 2692              	.L153:
 510:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,z,zp);
 2693              		.loc 1 510 0 discriminator 2
 2694 05d4 3B6A     		ldr	r3, [r7, #32]
 2695 05d6 0133     		adds	r3, r3, #1
 2696 05d8 3B62     		str	r3, [r7, #32]
 2697              	.L152:
 510:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,z,zp);
 2698              		.loc 1 510 0 is_stmt 0 discriminator 1
 2699 05da 7B68     		ldr	r3, [r7, #4]
 2700 05dc 1A68     		ldr	r2, [r3]
 2701 05de 3B6A     		ldr	r3, [r7, #32]
 2702 05e0 9A42     		cmp	r2, r3
 2703 05e2 CFDC     		bgt	.L154
 515:.\tic_tac_all.c **** 			}
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 59


 516:.\tic_tac_all.c **** 		}
 517:.\tic_tac_all.c **** 		if (connected == t->size){
 2704              		.loc 1 517 0 is_stmt 1
 2705 05e4 7B68     		ldr	r3, [r7, #4]
 2706 05e6 1A68     		ldr	r2, [r3]
 2707 05e8 FB69     		ldr	r3, [r7, #28]
 2708 05ea 9A42     		cmp	r2, r3
 2709 05ec 05D1     		bne	.L155
 518:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 2710              		.loc 1 518 0
 2711 05ee 7B68     		ldr	r3, [r7, #4]
 2712 05f0 9A68     		ldr	r2, [r3, #8]
 2713 05f2 7B68     		ldr	r3, [r7, #4]
 2714 05f4 1A61     		str	r2, [r3, #16]
 519:.\tic_tac_all.c **** 			return 1; //there is a win
 2715              		.loc 1 519 0
 2716 05f6 0123     		movs	r3, #1
 2717 05f8 01E2     		b	.L183
 2718              	.L155:
 520:.\tic_tac_all.c **** 		}
 521:.\tic_tac_all.c **** 		if (abs(connected) == 4 - num_filled)
 2719              		.loc 1 521 0
 2720 05fa FB69     		ldr	r3, [r7, #28]
 2721 05fc 83EAE372 		eor	r2, r3, r3, asr #31
 2722 0600 A2EBE372 		sub	r2, r2, r3, asr #31
 2723 0604 BB69     		ldr	r3, [r7, #24]
 2724 0606 C3F10403 		rsb	r3, r3, #4
 2725 060a 9A42     		cmp	r2, r3
 2726 060c 06D1     		bne	.L156
 522:.\tic_tac_all.c **** 			ai_define_score(ai,connected,empty_places);
 2727              		.loc 1 522 0
 2728 060e 07F10803 		add	r3, r7, #8
 2729 0612 3868     		ldr	r0, [r7]
 2730 0614 F969     		ldr	r1, [r7, #28]
 2731 0616 1A46     		mov	r2, r3
 2732 0618 FFF7FEFF 		bl	ai_define_score
 2733              	.L156:
 523:.\tic_tac_all.c **** 		// sidal
 524:.\tic_tac_all.c **** 		connected = 0;
 2734              		.loc 1 524 0
 2735 061c 0023     		movs	r3, #0
 2736 061e FB61     		str	r3, [r7, #28]
 525:.\tic_tac_all.c **** 		num_filled = 0;
 2737              		.loc 1 525 0
 2738 0620 0023     		movs	r3, #0
 2739 0622 BB61     		str	r3, [r7, #24]
 526:.\tic_tac_all.c **** 		memset(empty_places,0,sizeof empty_places); //clear array
 2740              		.loc 1 526 0
 2741 0624 07F10803 		add	r3, r7, #8
 2742 0628 1846     		mov	r0, r3
 2743 062a 0021     		movs	r1, #0
 2744 062c 1022     		movs	r2, #16
 2745 062e FFF7FEFF 		bl	memset
 527:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){
 2746              		.loc 1 527 0
 2747 0632 0023     		movs	r3, #0
 2748 0634 3B62     		str	r3, [r7, #32]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 60


 2749 0636 32E0     		b	.L157
 2750              	.L159:
 528:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,3-zp,z,zp);
 2751              		.loc 1 528 0
 2752 0638 3B68     		ldr	r3, [r7]
 2753 063a 1C68     		ldr	r4, [r3]
 2754 063c 3B6A     		ldr	r3, [r7, #32]
 2755 063e C3F10303 		rsb	r3, r3, #3
 2756 0642 7868     		ldr	r0, [r7, #4]
 2757 0644 1946     		mov	r1, r3
 2758 0646 7A6A     		ldr	r2, [r7, #36]
 2759 0648 3B6A     		ldr	r3, [r7, #32]
 2760 064a FFF7FEFF 		bl	ttc_get_grid
 2761 064e 0346     		mov	r3, r0
 2762 0650 03FB04F3 		mul	r3, r3, r4
 2763 0654 FA69     		ldr	r2, [r7, #28]
 2764 0656 1344     		add	r3, r3, r2
 2765 0658 FB61     		str	r3, [r7, #28]
 529:.\tic_tac_all.c **** 			if (ttc_get_grid(t,3-zp,z,zp) == 0){  //empty spot
 2766              		.loc 1 529 0
 2767 065a 3B6A     		ldr	r3, [r7, #32]
 2768 065c C3F10303 		rsb	r3, r3, #3
 2769 0660 7868     		ldr	r0, [r7, #4]
 2770 0662 1946     		mov	r1, r3
 2771 0664 7A6A     		ldr	r2, [r7, #36]
 2772 0666 3B6A     		ldr	r3, [r7, #32]
 2773 0668 FFF7FEFF 		bl	ttc_get_grid
 2774 066c 0346     		mov	r3, r0
 2775 066e 002B     		cmp	r3, #0
 2776 0670 12D1     		bne	.L158
 530:.\tic_tac_all.c **** 				empty_places[num_filled] = 3-zp + z*4 + zp*16; // store loc
 2777              		.loc 1 530 0
 2778 0672 3B6A     		ldr	r3, [r7, #32]
 2779 0674 C3F10302 		rsb	r2, r3, #3
 2780 0678 7B6A     		ldr	r3, [r7, #36]
 2781 067a 9B00     		lsls	r3, r3, #2
 2782 067c 1A44     		add	r2, r2, r3
 2783 067e 3B6A     		ldr	r3, [r7, #32]
 2784 0680 1B01     		lsls	r3, r3, #4
 2785 0682 1A44     		add	r2, r2, r3
 2786 0684 BB69     		ldr	r3, [r7, #24]
 2787 0686 9B00     		lsls	r3, r3, #2
 2788 0688 07F13001 		add	r1, r7, #48
 2789 068c 0B44     		add	r3, r3, r1
 2790 068e 43F8282C 		str	r2, [r3, #-40]
 531:.\tic_tac_all.c **** 				num_filled++; //increment
 2791              		.loc 1 531 0
 2792 0692 BB69     		ldr	r3, [r7, #24]
 2793 0694 0133     		adds	r3, r3, #1
 2794 0696 BB61     		str	r3, [r7, #24]
 2795              	.L158:
 527:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,3-zp,z,zp);
 2796              		.loc 1 527 0 discriminator 2
 2797 0698 3B6A     		ldr	r3, [r7, #32]
 2798 069a 0133     		adds	r3, r3, #1
 2799 069c 3B62     		str	r3, [r7, #32]
 2800              	.L157:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 61


 527:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,3-zp,z,zp);
 2801              		.loc 1 527 0 is_stmt 0 discriminator 1
 2802 069e 7B68     		ldr	r3, [r7, #4]
 2803 06a0 1A68     		ldr	r2, [r3]
 2804 06a2 3B6A     		ldr	r3, [r7, #32]
 2805 06a4 9A42     		cmp	r2, r3
 2806 06a6 C7DC     		bgt	.L159
 532:.\tic_tac_all.c **** 			}
 533:.\tic_tac_all.c **** 		}
 534:.\tic_tac_all.c **** 		if (connected == t->size){
 2807              		.loc 1 534 0 is_stmt 1
 2808 06a8 7B68     		ldr	r3, [r7, #4]
 2809 06aa 1A68     		ldr	r2, [r3]
 2810 06ac FB69     		ldr	r3, [r7, #28]
 2811 06ae 9A42     		cmp	r2, r3
 2812 06b0 05D1     		bne	.L160
 535:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 2813              		.loc 1 535 0
 2814 06b2 7B68     		ldr	r3, [r7, #4]
 2815 06b4 9A68     		ldr	r2, [r3, #8]
 2816 06b6 7B68     		ldr	r3, [r7, #4]
 2817 06b8 1A61     		str	r2, [r3, #16]
 536:.\tic_tac_all.c **** 			return 1; //there is a win
 2818              		.loc 1 536 0
 2819 06ba 0123     		movs	r3, #1
 2820 06bc 9FE1     		b	.L183
 2821              	.L160:
 537:.\tic_tac_all.c **** 		}
 538:.\tic_tac_all.c **** 		if (abs(connected) == 4 - num_filled)
 2822              		.loc 1 538 0
 2823 06be FB69     		ldr	r3, [r7, #28]
 2824 06c0 83EAE372 		eor	r2, r3, r3, asr #31
 2825 06c4 A2EBE372 		sub	r2, r2, r3, asr #31
 2826 06c8 BB69     		ldr	r3, [r7, #24]
 2827 06ca C3F10403 		rsb	r3, r3, #4
 2828 06ce 9A42     		cmp	r2, r3
 2829 06d0 06D1     		bne	.L161
 539:.\tic_tac_all.c **** 			ai_define_score(ai,connected,empty_places);
 2830              		.loc 1 539 0
 2831 06d2 07F10803 		add	r3, r7, #8
 2832 06d6 3868     		ldr	r0, [r7]
 2833 06d8 F969     		ldr	r1, [r7, #28]
 2834 06da 1A46     		mov	r2, r3
 2835 06dc FFF7FEFF 		bl	ai_define_score
 2836              	.L161:
 2837              	.LBE4:
 376:.\tic_tac_all.c **** 		for (y = 0; y < t->size; y++){ // flat
 2838              		.loc 1 376 0 discriminator 2
 2839 06e0 7B6A     		ldr	r3, [r7, #36]
 2840 06e2 0133     		adds	r3, r3, #1
 2841 06e4 7B62     		str	r3, [r7, #36]
 2842              	.L109:
 376:.\tic_tac_all.c **** 		for (y = 0; y < t->size; y++){ // flat
 2843              		.loc 1 376 0 is_stmt 0 discriminator 1
 2844 06e6 7B68     		ldr	r3, [r7, #4]
 2845 06e8 1A68     		ldr	r2, [r3]
 2846 06ea 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 62


 2847 06ec 9A42     		cmp	r2, r3
 2848 06ee 3FF792AC 		bgt	.L162
 540:.\tic_tac_all.c **** 	}
 541:.\tic_tac_all.c **** 	// superdiags
 542:.\tic_tac_all.c **** 	connected = 0;
 2849              		.loc 1 542 0 is_stmt 1
 2850 06f2 0023     		movs	r3, #0
 2851 06f4 FB61     		str	r3, [r7, #28]
 543:.\tic_tac_all.c **** 	num_filled = 0;
 2852              		.loc 1 543 0
 2853 06f6 0023     		movs	r3, #0
 2854 06f8 BB61     		str	r3, [r7, #24]
 544:.\tic_tac_all.c **** 	memset(empty_places,0,sizeof empty_places); //clear array
 2855              		.loc 1 544 0
 2856 06fa 07F10803 		add	r3, r7, #8
 2857 06fe 1846     		mov	r0, r3
 2858 0700 0021     		movs	r1, #0
 2859 0702 1022     		movs	r2, #16
 2860 0704 FFF7FEFF 		bl	memset
 545:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){
 2861              		.loc 1 545 0
 2862 0708 0023     		movs	r3, #0
 2863 070a 3B62     		str	r3, [r7, #32]
 2864 070c 29E0     		b	.L163
 2865              	.L165:
 546:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,zp,zp,zp);
 2866              		.loc 1 546 0
 2867 070e 3B68     		ldr	r3, [r7]
 2868 0710 1C68     		ldr	r4, [r3]
 2869 0712 7868     		ldr	r0, [r7, #4]
 2870 0714 396A     		ldr	r1, [r7, #32]
 2871 0716 3A6A     		ldr	r2, [r7, #32]
 2872 0718 3B6A     		ldr	r3, [r7, #32]
 2873 071a FFF7FEFF 		bl	ttc_get_grid
 2874 071e 0346     		mov	r3, r0
 2875 0720 03FB04F3 		mul	r3, r3, r4
 2876 0724 FA69     		ldr	r2, [r7, #28]
 2877 0726 1344     		add	r3, r3, r2
 2878 0728 FB61     		str	r3, [r7, #28]
 547:.\tic_tac_all.c **** 		if (ttc_get_grid(t,zp,zp,zp) == 0){  //empty spot
 2879              		.loc 1 547 0
 2880 072a 7868     		ldr	r0, [r7, #4]
 2881 072c 396A     		ldr	r1, [r7, #32]
 2882 072e 3A6A     		ldr	r2, [r7, #32]
 2883 0730 3B6A     		ldr	r3, [r7, #32]
 2884 0732 FFF7FEFF 		bl	ttc_get_grid
 2885 0736 0346     		mov	r3, r0
 2886 0738 002B     		cmp	r3, #0
 2887 073a 0FD1     		bne	.L164
 548:.\tic_tac_all.c **** 			empty_places[num_filled] = zp + zp*4 + zp*16; // store loc
 2888              		.loc 1 548 0
 2889 073c 3A6A     		ldr	r2, [r7, #32]
 2890 073e 1346     		mov	r3, r2
 2891 0740 5B00     		lsls	r3, r3, #1
 2892 0742 1344     		add	r3, r3, r2
 2893 0744 DA00     		lsls	r2, r3, #3
 2894 0746 D21A     		subs	r2, r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 63


 2895 0748 BB69     		ldr	r3, [r7, #24]
 2896 074a 9B00     		lsls	r3, r3, #2
 2897 074c 07F13001 		add	r1, r7, #48
 2898 0750 0B44     		add	r3, r3, r1
 2899 0752 43F8282C 		str	r2, [r3, #-40]
 549:.\tic_tac_all.c **** 			num_filled++; //increment
 2900              		.loc 1 549 0
 2901 0756 BB69     		ldr	r3, [r7, #24]
 2902 0758 0133     		adds	r3, r3, #1
 2903 075a BB61     		str	r3, [r7, #24]
 2904              	.L164:
 545:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,zp,zp,zp);
 2905              		.loc 1 545 0 discriminator 2
 2906 075c 3B6A     		ldr	r3, [r7, #32]
 2907 075e 0133     		adds	r3, r3, #1
 2908 0760 3B62     		str	r3, [r7, #32]
 2909              	.L163:
 545:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,zp,zp,zp);
 2910              		.loc 1 545 0 is_stmt 0 discriminator 1
 2911 0762 7B68     		ldr	r3, [r7, #4]
 2912 0764 1A68     		ldr	r2, [r3]
 2913 0766 3B6A     		ldr	r3, [r7, #32]
 2914 0768 9A42     		cmp	r2, r3
 2915 076a D0DC     		bgt	.L165
 550:.\tic_tac_all.c **** 		}
 551:.\tic_tac_all.c **** 	}
 552:.\tic_tac_all.c **** 	if (connected == t->size){
 2916              		.loc 1 552 0 is_stmt 1
 2917 076c 7B68     		ldr	r3, [r7, #4]
 2918 076e 1A68     		ldr	r2, [r3]
 2919 0770 FB69     		ldr	r3, [r7, #28]
 2920 0772 9A42     		cmp	r2, r3
 2921 0774 05D1     		bne	.L166
 553:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 2922              		.loc 1 553 0
 2923 0776 7B68     		ldr	r3, [r7, #4]
 2924 0778 9A68     		ldr	r2, [r3, #8]
 2925 077a 7B68     		ldr	r3, [r7, #4]
 2926 077c 1A61     		str	r2, [r3, #16]
 554:.\tic_tac_all.c **** 		return 1; //there is a win
 2927              		.loc 1 554 0
 2928 077e 0123     		movs	r3, #1
 2929 0780 3DE1     		b	.L183
 2930              	.L166:
 555:.\tic_tac_all.c **** 	}
 556:.\tic_tac_all.c **** 	if (abs(connected) == 4 - num_filled)
 2931              		.loc 1 556 0
 2932 0782 FB69     		ldr	r3, [r7, #28]
 2933 0784 83EAE372 		eor	r2, r3, r3, asr #31
 2934 0788 A2EBE372 		sub	r2, r2, r3, asr #31
 2935 078c BB69     		ldr	r3, [r7, #24]
 2936 078e C3F10403 		rsb	r3, r3, #4
 2937 0792 9A42     		cmp	r2, r3
 2938 0794 06D1     		bne	.L167
 557:.\tic_tac_all.c **** 		ai_define_score(ai,connected,empty_places);
 2939              		.loc 1 557 0
 2940 0796 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 64


 2941 079a 3868     		ldr	r0, [r7]
 2942 079c F969     		ldr	r1, [r7, #28]
 2943 079e 1A46     		mov	r2, r3
 2944 07a0 FFF7FEFF 		bl	ai_define_score
 2945              	.L167:
 558:.\tic_tac_all.c **** 
 559:.\tic_tac_all.c **** 	connected = 0;
 2946              		.loc 1 559 0
 2947 07a4 0023     		movs	r3, #0
 2948 07a6 FB61     		str	r3, [r7, #28]
 560:.\tic_tac_all.c **** 	num_filled = 0;
 2949              		.loc 1 560 0
 2950 07a8 0023     		movs	r3, #0
 2951 07aa BB61     		str	r3, [r7, #24]
 561:.\tic_tac_all.c **** 	memset(empty_places,0,sizeof empty_places); //clear array
 2952              		.loc 1 561 0
 2953 07ac 07F10803 		add	r3, r7, #8
 2954 07b0 1846     		mov	r0, r3
 2955 07b2 0021     		movs	r1, #0
 2956 07b4 1022     		movs	r2, #16
 2957 07b6 FFF7FEFF 		bl	memset
 562:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){
 2958              		.loc 1 562 0
 2959 07ba 0023     		movs	r3, #0
 2960 07bc 3B62     		str	r3, [r7, #32]
 2961 07be 32E0     		b	.L168
 2962              	.L170:
 563:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,3-zp,zp,zp);
 2963              		.loc 1 563 0
 2964 07c0 3B68     		ldr	r3, [r7]
 2965 07c2 1C68     		ldr	r4, [r3]
 2966 07c4 3B6A     		ldr	r3, [r7, #32]
 2967 07c6 C3F10303 		rsb	r3, r3, #3
 2968 07ca 7868     		ldr	r0, [r7, #4]
 2969 07cc 1946     		mov	r1, r3
 2970 07ce 3A6A     		ldr	r2, [r7, #32]
 2971 07d0 3B6A     		ldr	r3, [r7, #32]
 2972 07d2 FFF7FEFF 		bl	ttc_get_grid
 2973 07d6 0346     		mov	r3, r0
 2974 07d8 03FB04F3 		mul	r3, r3, r4
 2975 07dc FA69     		ldr	r2, [r7, #28]
 2976 07de 1344     		add	r3, r3, r2
 2977 07e0 FB61     		str	r3, [r7, #28]
 564:.\tic_tac_all.c **** 		if (ttc_get_grid(t,3-zp,zp,zp) == 0){  //empty spot
 2978              		.loc 1 564 0
 2979 07e2 3B6A     		ldr	r3, [r7, #32]
 2980 07e4 C3F10303 		rsb	r3, r3, #3
 2981 07e8 7868     		ldr	r0, [r7, #4]
 2982 07ea 1946     		mov	r1, r3
 2983 07ec 3A6A     		ldr	r2, [r7, #32]
 2984 07ee 3B6A     		ldr	r3, [r7, #32]
 2985 07f0 FFF7FEFF 		bl	ttc_get_grid
 2986 07f4 0346     		mov	r3, r0
 2987 07f6 002B     		cmp	r3, #0
 2988 07f8 12D1     		bne	.L169
 565:.\tic_tac_all.c **** 			empty_places[num_filled] = 3-zp + zp*4 + zp*16; // store loc
 2989              		.loc 1 565 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 65


 2990 07fa 3B6A     		ldr	r3, [r7, #32]
 2991 07fc C3F10302 		rsb	r2, r3, #3
 2992 0800 3B6A     		ldr	r3, [r7, #32]
 2993 0802 9B00     		lsls	r3, r3, #2
 2994 0804 1A44     		add	r2, r2, r3
 2995 0806 3B6A     		ldr	r3, [r7, #32]
 2996 0808 1B01     		lsls	r3, r3, #4
 2997 080a 1A44     		add	r2, r2, r3
 2998 080c BB69     		ldr	r3, [r7, #24]
 2999 080e 9B00     		lsls	r3, r3, #2
 3000 0810 07F13001 		add	r1, r7, #48
 3001 0814 0B44     		add	r3, r3, r1
 3002 0816 43F8282C 		str	r2, [r3, #-40]
 566:.\tic_tac_all.c **** 			num_filled++; //increment
 3003              		.loc 1 566 0
 3004 081a BB69     		ldr	r3, [r7, #24]
 3005 081c 0133     		adds	r3, r3, #1
 3006 081e BB61     		str	r3, [r7, #24]
 3007              	.L169:
 562:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,3-zp,zp,zp);
 3008              		.loc 1 562 0 discriminator 2
 3009 0820 3B6A     		ldr	r3, [r7, #32]
 3010 0822 0133     		adds	r3, r3, #1
 3011 0824 3B62     		str	r3, [r7, #32]
 3012              	.L168:
 562:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,3-zp,zp,zp);
 3013              		.loc 1 562 0 is_stmt 0 discriminator 1
 3014 0826 7B68     		ldr	r3, [r7, #4]
 3015 0828 1A68     		ldr	r2, [r3]
 3016 082a 3B6A     		ldr	r3, [r7, #32]
 3017 082c 9A42     		cmp	r2, r3
 3018 082e C7DC     		bgt	.L170
 567:.\tic_tac_all.c **** 		}
 568:.\tic_tac_all.c **** 	}
 569:.\tic_tac_all.c **** 	if (connected == t->size){
 3019              		.loc 1 569 0 is_stmt 1
 3020 0830 7B68     		ldr	r3, [r7, #4]
 3021 0832 1A68     		ldr	r2, [r3]
 3022 0834 FB69     		ldr	r3, [r7, #28]
 3023 0836 9A42     		cmp	r2, r3
 3024 0838 05D1     		bne	.L171
 570:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 3025              		.loc 1 570 0
 3026 083a 7B68     		ldr	r3, [r7, #4]
 3027 083c 9A68     		ldr	r2, [r3, #8]
 3028 083e 7B68     		ldr	r3, [r7, #4]
 3029 0840 1A61     		str	r2, [r3, #16]
 571:.\tic_tac_all.c **** 		return 1; //there is a win
 3030              		.loc 1 571 0
 3031 0842 0123     		movs	r3, #1
 3032 0844 DBE0     		b	.L183
 3033              	.L171:
 572:.\tic_tac_all.c **** 	}
 573:.\tic_tac_all.c **** 	if (abs(connected) == 4 - num_filled)
 3034              		.loc 1 573 0
 3035 0846 FB69     		ldr	r3, [r7, #28]
 3036 0848 83EAE372 		eor	r2, r3, r3, asr #31
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 66


 3037 084c A2EBE372 		sub	r2, r2, r3, asr #31
 3038 0850 BB69     		ldr	r3, [r7, #24]
 3039 0852 C3F10403 		rsb	r3, r3, #4
 3040 0856 9A42     		cmp	r2, r3
 3041 0858 06D1     		bne	.L172
 574:.\tic_tac_all.c **** 		ai_define_score(ai,connected,empty_places);
 3042              		.loc 1 574 0
 3043 085a 07F10803 		add	r3, r7, #8
 3044 085e 3868     		ldr	r0, [r7]
 3045 0860 F969     		ldr	r1, [r7, #28]
 3046 0862 1A46     		mov	r2, r3
 3047 0864 FFF7FEFF 		bl	ai_define_score
 3048              	.L172:
 575:.\tic_tac_all.c **** 
 576:.\tic_tac_all.c **** 	connected = 0;
 3049              		.loc 1 576 0
 3050 0868 0023     		movs	r3, #0
 3051 086a FB61     		str	r3, [r7, #28]
 577:.\tic_tac_all.c **** 	num_filled = 0;
 3052              		.loc 1 577 0
 3053 086c 0023     		movs	r3, #0
 3054 086e BB61     		str	r3, [r7, #24]
 578:.\tic_tac_all.c **** 	memset(empty_places,0,sizeof empty_places); //clear array
 3055              		.loc 1 578 0
 3056 0870 07F10803 		add	r3, r7, #8
 3057 0874 1846     		mov	r0, r3
 3058 0876 0021     		movs	r1, #0
 3059 0878 1022     		movs	r2, #16
 3060 087a FFF7FEFF 		bl	memset
 579:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){
 3061              		.loc 1 579 0
 3062 087e 0023     		movs	r3, #0
 3063 0880 3B62     		str	r3, [r7, #32]
 3064 0882 38E0     		b	.L173
 3065              	.L175:
 580:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,3-zp,3-zp,zp);
 3066              		.loc 1 580 0
 3067 0884 3B68     		ldr	r3, [r7]
 3068 0886 1C68     		ldr	r4, [r3]
 3069 0888 3B6A     		ldr	r3, [r7, #32]
 3070 088a C3F10302 		rsb	r2, r3, #3
 3071 088e 3B6A     		ldr	r3, [r7, #32]
 3072 0890 C3F10303 		rsb	r3, r3, #3
 3073 0894 7868     		ldr	r0, [r7, #4]
 3074 0896 1146     		mov	r1, r2
 3075 0898 1A46     		mov	r2, r3
 3076 089a 3B6A     		ldr	r3, [r7, #32]
 3077 089c FFF7FEFF 		bl	ttc_get_grid
 3078 08a0 0346     		mov	r3, r0
 3079 08a2 03FB04F3 		mul	r3, r3, r4
 3080 08a6 FA69     		ldr	r2, [r7, #28]
 3081 08a8 1344     		add	r3, r3, r2
 3082 08aa FB61     		str	r3, [r7, #28]
 581:.\tic_tac_all.c **** 		if (ttc_get_grid(t,3-zp,3-zp,zp) == 0){  //empty spot
 3083              		.loc 1 581 0
 3084 08ac 3B6A     		ldr	r3, [r7, #32]
 3085 08ae C3F10302 		rsb	r2, r3, #3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 67


 3086 08b2 3B6A     		ldr	r3, [r7, #32]
 3087 08b4 C3F10303 		rsb	r3, r3, #3
 3088 08b8 7868     		ldr	r0, [r7, #4]
 3089 08ba 1146     		mov	r1, r2
 3090 08bc 1A46     		mov	r2, r3
 3091 08be 3B6A     		ldr	r3, [r7, #32]
 3092 08c0 FFF7FEFF 		bl	ttc_get_grid
 3093 08c4 0346     		mov	r3, r0
 3094 08c6 002B     		cmp	r3, #0
 3095 08c8 12D1     		bne	.L174
 582:.\tic_tac_all.c **** 			empty_places[num_filled] = 3-zp + (3-zp)*4 + zp*16; // store loc
 3096              		.loc 1 582 0
 3097 08ca 3B6A     		ldr	r3, [r7, #32]
 3098 08cc C3F10302 		rsb	r2, r3, #3
 3099 08d0 1346     		mov	r3, r2
 3100 08d2 9B00     		lsls	r3, r3, #2
 3101 08d4 1A44     		add	r2, r2, r3
 3102 08d6 3B6A     		ldr	r3, [r7, #32]
 3103 08d8 1B01     		lsls	r3, r3, #4
 3104 08da 1A44     		add	r2, r2, r3
 3105 08dc BB69     		ldr	r3, [r7, #24]
 3106 08de 9B00     		lsls	r3, r3, #2
 3107 08e0 07F13001 		add	r1, r7, #48
 3108 08e4 0B44     		add	r3, r3, r1
 3109 08e6 43F8282C 		str	r2, [r3, #-40]
 583:.\tic_tac_all.c **** 			num_filled++; //increment
 3110              		.loc 1 583 0
 3111 08ea BB69     		ldr	r3, [r7, #24]
 3112 08ec 0133     		adds	r3, r3, #1
 3113 08ee BB61     		str	r3, [r7, #24]
 3114              	.L174:
 579:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,3-zp,3-zp,zp);
 3115              		.loc 1 579 0 discriminator 2
 3116 08f0 3B6A     		ldr	r3, [r7, #32]
 3117 08f2 0133     		adds	r3, r3, #1
 3118 08f4 3B62     		str	r3, [r7, #32]
 3119              	.L173:
 579:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,3-zp,3-zp,zp);
 3120              		.loc 1 579 0 is_stmt 0 discriminator 1
 3121 08f6 7B68     		ldr	r3, [r7, #4]
 3122 08f8 1A68     		ldr	r2, [r3]
 3123 08fa 3B6A     		ldr	r3, [r7, #32]
 3124 08fc 9A42     		cmp	r2, r3
 3125 08fe C1DC     		bgt	.L175
 584:.\tic_tac_all.c **** 		}
 585:.\tic_tac_all.c **** 	}
 586:.\tic_tac_all.c **** 	if (connected == t->size){
 3126              		.loc 1 586 0 is_stmt 1
 3127 0900 7B68     		ldr	r3, [r7, #4]
 3128 0902 1A68     		ldr	r2, [r3]
 3129 0904 FB69     		ldr	r3, [r7, #28]
 3130 0906 9A42     		cmp	r2, r3
 3131 0908 05D1     		bne	.L176
 587:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 3132              		.loc 1 587 0
 3133 090a 7B68     		ldr	r3, [r7, #4]
 3134 090c 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 68


 3135 090e 7B68     		ldr	r3, [r7, #4]
 3136 0910 1A61     		str	r2, [r3, #16]
 588:.\tic_tac_all.c **** 		return 1; //there is a win
 3137              		.loc 1 588 0
 3138 0912 0123     		movs	r3, #1
 3139 0914 73E0     		b	.L183
 3140              	.L176:
 589:.\tic_tac_all.c **** 	}
 590:.\tic_tac_all.c **** 	if (abs(connected) == 4 - num_filled)
 3141              		.loc 1 590 0
 3142 0916 FB69     		ldr	r3, [r7, #28]
 3143 0918 83EAE372 		eor	r2, r3, r3, asr #31
 3144 091c A2EBE372 		sub	r2, r2, r3, asr #31
 3145 0920 BB69     		ldr	r3, [r7, #24]
 3146 0922 C3F10403 		rsb	r3, r3, #4
 3147 0926 9A42     		cmp	r2, r3
 3148 0928 06D1     		bne	.L177
 591:.\tic_tac_all.c **** 		ai_define_score(ai,connected,empty_places);
 3149              		.loc 1 591 0
 3150 092a 07F10803 		add	r3, r7, #8
 3151 092e 3868     		ldr	r0, [r7]
 3152 0930 F969     		ldr	r1, [r7, #28]
 3153 0932 1A46     		mov	r2, r3
 3154 0934 FFF7FEFF 		bl	ai_define_score
 3155              	.L177:
 592:.\tic_tac_all.c **** 
 593:.\tic_tac_all.c **** 	connected = 0;
 3156              		.loc 1 593 0
 3157 0938 0023     		movs	r3, #0
 3158 093a FB61     		str	r3, [r7, #28]
 594:.\tic_tac_all.c **** 	num_filled = 0;
 3159              		.loc 1 594 0
 3160 093c 0023     		movs	r3, #0
 3161 093e BB61     		str	r3, [r7, #24]
 595:.\tic_tac_all.c **** 	memset(empty_places,0,sizeof empty_places); //clear array
 3162              		.loc 1 595 0
 3163 0940 07F10803 		add	r3, r7, #8
 3164 0944 1846     		mov	r0, r3
 3165 0946 0021     		movs	r1, #0
 3166 0948 1022     		movs	r2, #16
 3167 094a FFF7FEFF 		bl	memset
 596:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){
 3168              		.loc 1 596 0
 3169 094e 0023     		movs	r3, #0
 3170 0950 3B62     		str	r3, [r7, #32]
 3171 0952 32E0     		b	.L178
 3172              	.L180:
 597:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,zp,3-zp,zp);
 3173              		.loc 1 597 0
 3174 0954 3B68     		ldr	r3, [r7]
 3175 0956 1C68     		ldr	r4, [r3]
 3176 0958 3B6A     		ldr	r3, [r7, #32]
 3177 095a C3F10303 		rsb	r3, r3, #3
 3178 095e 7868     		ldr	r0, [r7, #4]
 3179 0960 396A     		ldr	r1, [r7, #32]
 3180 0962 1A46     		mov	r2, r3
 3181 0964 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 69


 3182 0966 FFF7FEFF 		bl	ttc_get_grid
 3183 096a 0346     		mov	r3, r0
 3184 096c 03FB04F3 		mul	r3, r3, r4
 3185 0970 FA69     		ldr	r2, [r7, #28]
 3186 0972 1344     		add	r3, r3, r2
 3187 0974 FB61     		str	r3, [r7, #28]
 598:.\tic_tac_all.c **** 		if (ttc_get_grid(t,zp,3-zp,zp) == 0){  //empty spot
 3188              		.loc 1 598 0
 3189 0976 3B6A     		ldr	r3, [r7, #32]
 3190 0978 C3F10303 		rsb	r3, r3, #3
 3191 097c 7868     		ldr	r0, [r7, #4]
 3192 097e 396A     		ldr	r1, [r7, #32]
 3193 0980 1A46     		mov	r2, r3
 3194 0982 3B6A     		ldr	r3, [r7, #32]
 3195 0984 FFF7FEFF 		bl	ttc_get_grid
 3196 0988 0346     		mov	r3, r0
 3197 098a 002B     		cmp	r3, #0
 3198 098c 12D1     		bne	.L179
 599:.\tic_tac_all.c **** 			empty_places[num_filled] = zp + (3-zp)*4 + zp*16; // store loc
 3199              		.loc 1 599 0
 3200 098e 3B6A     		ldr	r3, [r7, #32]
 3201 0990 C3F10303 		rsb	r3, r3, #3
 3202 0994 9A00     		lsls	r2, r3, #2
 3203 0996 3B6A     		ldr	r3, [r7, #32]
 3204 0998 1A44     		add	r2, r2, r3
 3205 099a 3B6A     		ldr	r3, [r7, #32]
 3206 099c 1B01     		lsls	r3, r3, #4
 3207 099e 1A44     		add	r2, r2, r3
 3208 09a0 BB69     		ldr	r3, [r7, #24]
 3209 09a2 9B00     		lsls	r3, r3, #2
 3210 09a4 07F13001 		add	r1, r7, #48
 3211 09a8 0B44     		add	r3, r3, r1
 3212 09aa 43F8282C 		str	r2, [r3, #-40]
 600:.\tic_tac_all.c **** 			num_filled++; //increment
 3213              		.loc 1 600 0
 3214 09ae BB69     		ldr	r3, [r7, #24]
 3215 09b0 0133     		adds	r3, r3, #1
 3216 09b2 BB61     		str	r3, [r7, #24]
 3217              	.L179:
 596:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,zp,3-zp,zp);
 3218              		.loc 1 596 0 discriminator 2
 3219 09b4 3B6A     		ldr	r3, [r7, #32]
 3220 09b6 0133     		adds	r3, r3, #1
 3221 09b8 3B62     		str	r3, [r7, #32]
 3222              	.L178:
 596:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,zp,3-zp,zp);
 3223              		.loc 1 596 0 is_stmt 0 discriminator 1
 3224 09ba 7B68     		ldr	r3, [r7, #4]
 3225 09bc 1A68     		ldr	r2, [r3]
 3226 09be 3B6A     		ldr	r3, [r7, #32]
 3227 09c0 9A42     		cmp	r2, r3
 3228 09c2 C7DC     		bgt	.L180
 601:.\tic_tac_all.c **** 		}
 602:.\tic_tac_all.c **** 	}
 603:.\tic_tac_all.c **** 	if (connected == t->size){
 3229              		.loc 1 603 0 is_stmt 1
 3230 09c4 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 70


 3231 09c6 1A68     		ldr	r2, [r3]
 3232 09c8 FB69     		ldr	r3, [r7, #28]
 3233 09ca 9A42     		cmp	r2, r3
 3234 09cc 05D1     		bne	.L181
 604:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 3235              		.loc 1 604 0
 3236 09ce 7B68     		ldr	r3, [r7, #4]
 3237 09d0 9A68     		ldr	r2, [r3, #8]
 3238 09d2 7B68     		ldr	r3, [r7, #4]
 3239 09d4 1A61     		str	r2, [r3, #16]
 605:.\tic_tac_all.c **** 		return 1; //there is a win
 3240              		.loc 1 605 0
 3241 09d6 0123     		movs	r3, #1
 3242 09d8 11E0     		b	.L183
 3243              	.L181:
 606:.\tic_tac_all.c **** 	}
 607:.\tic_tac_all.c **** 	if (abs(connected) == 4 - num_filled)
 3244              		.loc 1 607 0
 3245 09da FB69     		ldr	r3, [r7, #28]
 3246 09dc 83EAE372 		eor	r2, r3, r3, asr #31
 3247 09e0 A2EBE372 		sub	r2, r2, r3, asr #31
 3248 09e4 BB69     		ldr	r3, [r7, #24]
 3249 09e6 C3F10403 		rsb	r3, r3, #4
 3250 09ea 9A42     		cmp	r2, r3
 3251 09ec 06D1     		bne	.L182
 608:.\tic_tac_all.c **** 		ai_define_score(ai,connected,empty_places);
 3252              		.loc 1 608 0
 3253 09ee 07F10803 		add	r3, r7, #8
 3254 09f2 3868     		ldr	r0, [r7]
 3255 09f4 F969     		ldr	r1, [r7, #28]
 3256 09f6 1A46     		mov	r2, r3
 3257 09f8 FFF7FEFF 		bl	ai_define_score
 3258              	.L182:
 609:.\tic_tac_all.c **** 
 610:.\tic_tac_all.c **** 	return 0;
 3259              		.loc 1 610 0
 3260 09fc 0023     		movs	r3, #0
 3261              	.L183:
 611:.\tic_tac_all.c **** }
 3262              		.loc 1 611 0 discriminator 1
 3263 09fe 1846     		mov	r0, r3
 3264 0a00 3437     		adds	r7, r7, #52
 3265              		.cfi_def_cfa_offset 12
 3266 0a02 BD46     		mov	sp, r7
 3267              		.cfi_def_cfa_register 13
 3268              		@ sp needed
 3269 0a04 90BD     		pop	{r4, r7, pc}
 3270              		.cfi_endproc
 3271              	.LFE78:
 3272              		.size	ai_evaluate_board, .-ai_evaluate_board
 3273 0a06 00BF     		.section	.text.ai_define_score,"ax",%progbits
 3274              		.align	2
 3275              		.global	ai_define_score
 3276              		.thumb
 3277              		.thumb_func
 3278              		.type	ai_define_score, %function
 3279              	ai_define_score:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 71


 3280              	.LFB79:
 612:.\tic_tac_all.c **** 
 613:.\tic_tac_all.c **** int ai_define_score(struct ai* ai,int connected,int empty_places[4]){
 3281              		.loc 1 613 0
 3282              		.cfi_startproc
 3283              		@ args = 0, pretend = 0, frame = 16
 3284              		@ frame_needed = 1, uses_anonymous_args = 0
 3285              		@ link register save eliminated.
 3286 0000 80B4     		push	{r7}
 3287              		.cfi_def_cfa_offset 4
 3288              		.cfi_offset 7, -4
 3289 0002 85B0     		sub	sp, sp, #20
 3290              		.cfi_def_cfa_offset 24
 3291 0004 00AF     		add	r7, sp, #0
 3292              		.cfi_def_cfa_register 7
 3293 0006 F860     		str	r0, [r7, #12]
 3294 0008 B960     		str	r1, [r7, #8]
 3295 000a 7A60     		str	r2, [r7, #4]
 614:.\tic_tac_all.c **** 	//this method defines the score of the AI, place at opt value
 615:.\tic_tac_all.c **** 	if (connected == 3){ //connect our 3 in a row
 3296              		.loc 1 615 0
 3297 000c BB68     		ldr	r3, [r7, #8]
 3298 000e 032B     		cmp	r3, #3
 3299 0010 0FD1     		bne	.L185
 616:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[0]] += 100000; // a very high value
 3300              		.loc 1 616 0
 3301 0012 7B68     		ldr	r3, [r7, #4]
 3302 0014 1868     		ldr	r0, [r3]
 3303 0016 7B68     		ldr	r3, [r7, #4]
 3304 0018 1B68     		ldr	r3, [r3]
 3305 001a FA68     		ldr	r2, [r7, #12]
 3306 001c 9B00     		lsls	r3, r3, #2
 3307 001e 1344     		add	r3, r3, r2
 3308 0020 5B68     		ldr	r3, [r3, #4]
 3309 0022 03F5C332 		add	r2, r3, #99840
 3310 0026 A032     		adds	r2, r2, #160
 3311 0028 F968     		ldr	r1, [r7, #12]
 3312 002a 8300     		lsls	r3, r0, #2
 3313 002c 0B44     		add	r3, r3, r1
 3314 002e 5A60     		str	r2, [r3, #4]
 3315 0030 DEE0     		b	.L186
 3316              	.L185:
 617:.\tic_tac_all.c **** 	}
 618:.\tic_tac_all.c **** 	else if (connected == -3){ //block opponent's 3 in a row
 3317              		.loc 1 618 0
 3318 0032 BB68     		ldr	r3, [r7, #8]
 3319 0034 13F1030F 		cmn	r3, #3
 3320 0038 0FD1     		bne	.L187
 619:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[0]] += 5000; // a very high value
 3321              		.loc 1 619 0
 3322 003a 7B68     		ldr	r3, [r7, #4]
 3323 003c 1868     		ldr	r0, [r3]
 3324 003e 7B68     		ldr	r3, [r7, #4]
 3325 0040 1B68     		ldr	r3, [r3]
 3326 0042 FA68     		ldr	r2, [r7, #12]
 3327 0044 9B00     		lsls	r3, r3, #2
 3328 0046 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 72


 3329 0048 5B68     		ldr	r3, [r3, #4]
 3330 004a 03F59C52 		add	r2, r3, #4992
 3331 004e 0832     		adds	r2, r2, #8
 3332 0050 F968     		ldr	r1, [r7, #12]
 3333 0052 8300     		lsls	r3, r0, #2
 3334 0054 0B44     		add	r3, r3, r1
 3335 0056 5A60     		str	r2, [r3, #4]
 3336 0058 CAE0     		b	.L186
 3337              	.L187:
 620:.\tic_tac_all.c **** 	}
 621:.\tic_tac_all.c **** 	else if (abs(connected) == 2){ //block or connect 2 in a row
 3338              		.loc 1 621 0
 3339 005a BB68     		ldr	r3, [r7, #8]
 3340 005c 002B     		cmp	r3, #0
 3341 005e B8BF     		it	lt
 3342 0060 5B42     		rsblt	r3, r3, #0
 3343 0062 022B     		cmp	r3, #2
 3344 0064 1ED1     		bne	.L188
 622:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[0]] += 200;
 3345              		.loc 1 622 0
 3346 0066 7B68     		ldr	r3, [r7, #4]
 3347 0068 1868     		ldr	r0, [r3]
 3348 006a 7B68     		ldr	r3, [r7, #4]
 3349 006c 1B68     		ldr	r3, [r3]
 3350 006e FA68     		ldr	r2, [r7, #12]
 3351 0070 9B00     		lsls	r3, r3, #2
 3352 0072 1344     		add	r3, r3, r2
 3353 0074 5B68     		ldr	r3, [r3, #4]
 3354 0076 03F1C802 		add	r2, r3, #200
 3355 007a F968     		ldr	r1, [r7, #12]
 3356 007c 8300     		lsls	r3, r0, #2
 3357 007e 0B44     		add	r3, r3, r1
 3358 0080 5A60     		str	r2, [r3, #4]
 623:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[1]] += 200;
 3359              		.loc 1 623 0
 3360 0082 7B68     		ldr	r3, [r7, #4]
 3361 0084 0433     		adds	r3, r3, #4
 3362 0086 1868     		ldr	r0, [r3]
 3363 0088 7B68     		ldr	r3, [r7, #4]
 3364 008a 0433     		adds	r3, r3, #4
 3365 008c 1B68     		ldr	r3, [r3]
 3366 008e FA68     		ldr	r2, [r7, #12]
 3367 0090 9B00     		lsls	r3, r3, #2
 3368 0092 1344     		add	r3, r3, r2
 3369 0094 5B68     		ldr	r3, [r3, #4]
 3370 0096 03F1C802 		add	r2, r3, #200
 3371 009a F968     		ldr	r1, [r7, #12]
 3372 009c 8300     		lsls	r3, r0, #2
 3373 009e 0B44     		add	r3, r3, r1
 3374 00a0 5A60     		str	r2, [r3, #4]
 3375 00a2 A5E0     		b	.L186
 3376              	.L188:
 624:.\tic_tac_all.c **** 	}
 625:.\tic_tac_all.c **** 	else if (connected == 1){ //connect a 1 in a row
 3377              		.loc 1 625 0
 3378 00a4 BB68     		ldr	r3, [r7, #8]
 3379 00a6 012B     		cmp	r3, #1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 73


 3380 00a8 2ED1     		bne	.L189
 626:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[0]] += 50;
 3381              		.loc 1 626 0
 3382 00aa 7B68     		ldr	r3, [r7, #4]
 3383 00ac 1868     		ldr	r0, [r3]
 3384 00ae 7B68     		ldr	r3, [r7, #4]
 3385 00b0 1B68     		ldr	r3, [r3]
 3386 00b2 FA68     		ldr	r2, [r7, #12]
 3387 00b4 9B00     		lsls	r3, r3, #2
 3388 00b6 1344     		add	r3, r3, r2
 3389 00b8 5B68     		ldr	r3, [r3, #4]
 3390 00ba 03F13202 		add	r2, r3, #50
 3391 00be F968     		ldr	r1, [r7, #12]
 3392 00c0 8300     		lsls	r3, r0, #2
 3393 00c2 0B44     		add	r3, r3, r1
 3394 00c4 5A60     		str	r2, [r3, #4]
 627:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[1]] += 50;
 3395              		.loc 1 627 0
 3396 00c6 7B68     		ldr	r3, [r7, #4]
 3397 00c8 0433     		adds	r3, r3, #4
 3398 00ca 1868     		ldr	r0, [r3]
 3399 00cc 7B68     		ldr	r3, [r7, #4]
 3400 00ce 0433     		adds	r3, r3, #4
 3401 00d0 1B68     		ldr	r3, [r3]
 3402 00d2 FA68     		ldr	r2, [r7, #12]
 3403 00d4 9B00     		lsls	r3, r3, #2
 3404 00d6 1344     		add	r3, r3, r2
 3405 00d8 5B68     		ldr	r3, [r3, #4]
 3406 00da 03F13202 		add	r2, r3, #50
 3407 00de F968     		ldr	r1, [r7, #12]
 3408 00e0 8300     		lsls	r3, r0, #2
 3409 00e2 0B44     		add	r3, r3, r1
 3410 00e4 5A60     		str	r2, [r3, #4]
 628:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[2]] += 50;
 3411              		.loc 1 628 0
 3412 00e6 7B68     		ldr	r3, [r7, #4]
 3413 00e8 0833     		adds	r3, r3, #8
 3414 00ea 1868     		ldr	r0, [r3]
 3415 00ec 7B68     		ldr	r3, [r7, #4]
 3416 00ee 0833     		adds	r3, r3, #8
 3417 00f0 1B68     		ldr	r3, [r3]
 3418 00f2 FA68     		ldr	r2, [r7, #12]
 3419 00f4 9B00     		lsls	r3, r3, #2
 3420 00f6 1344     		add	r3, r3, r2
 3421 00f8 5B68     		ldr	r3, [r3, #4]
 3422 00fa 03F13202 		add	r2, r3, #50
 3423 00fe F968     		ldr	r1, [r7, #12]
 3424 0100 8300     		lsls	r3, r0, #2
 3425 0102 0B44     		add	r3, r3, r1
 3426 0104 5A60     		str	r2, [r3, #4]
 3427 0106 73E0     		b	.L186
 3428              	.L189:
 629:.\tic_tac_all.c **** 	}
 630:.\tic_tac_all.c **** 	else if (connected == 0){ //start a 1 in a row
 3429              		.loc 1 630 0
 3430 0108 BB68     		ldr	r3, [r7, #8]
 3431 010a 002B     		cmp	r3, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 74


 3432 010c 3ED1     		bne	.L190
 631:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[0]] += 30;
 3433              		.loc 1 631 0
 3434 010e 7B68     		ldr	r3, [r7, #4]
 3435 0110 1868     		ldr	r0, [r3]
 3436 0112 7B68     		ldr	r3, [r7, #4]
 3437 0114 1B68     		ldr	r3, [r3]
 3438 0116 FA68     		ldr	r2, [r7, #12]
 3439 0118 9B00     		lsls	r3, r3, #2
 3440 011a 1344     		add	r3, r3, r2
 3441 011c 5B68     		ldr	r3, [r3, #4]
 3442 011e 03F11E02 		add	r2, r3, #30
 3443 0122 F968     		ldr	r1, [r7, #12]
 3444 0124 8300     		lsls	r3, r0, #2
 3445 0126 0B44     		add	r3, r3, r1
 3446 0128 5A60     		str	r2, [r3, #4]
 632:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[1]] += 30;
 3447              		.loc 1 632 0
 3448 012a 7B68     		ldr	r3, [r7, #4]
 3449 012c 0433     		adds	r3, r3, #4
 3450 012e 1868     		ldr	r0, [r3]
 3451 0130 7B68     		ldr	r3, [r7, #4]
 3452 0132 0433     		adds	r3, r3, #4
 3453 0134 1B68     		ldr	r3, [r3]
 3454 0136 FA68     		ldr	r2, [r7, #12]
 3455 0138 9B00     		lsls	r3, r3, #2
 3456 013a 1344     		add	r3, r3, r2
 3457 013c 5B68     		ldr	r3, [r3, #4]
 3458 013e 03F11E02 		add	r2, r3, #30
 3459 0142 F968     		ldr	r1, [r7, #12]
 3460 0144 8300     		lsls	r3, r0, #2
 3461 0146 0B44     		add	r3, r3, r1
 3462 0148 5A60     		str	r2, [r3, #4]
 633:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[2]] += 30;
 3463              		.loc 1 633 0
 3464 014a 7B68     		ldr	r3, [r7, #4]
 3465 014c 0833     		adds	r3, r3, #8
 3466 014e 1868     		ldr	r0, [r3]
 3467 0150 7B68     		ldr	r3, [r7, #4]
 3468 0152 0833     		adds	r3, r3, #8
 3469 0154 1B68     		ldr	r3, [r3]
 3470 0156 FA68     		ldr	r2, [r7, #12]
 3471 0158 9B00     		lsls	r3, r3, #2
 3472 015a 1344     		add	r3, r3, r2
 3473 015c 5B68     		ldr	r3, [r3, #4]
 3474 015e 03F11E02 		add	r2, r3, #30
 3475 0162 F968     		ldr	r1, [r7, #12]
 3476 0164 8300     		lsls	r3, r0, #2
 3477 0166 0B44     		add	r3, r3, r1
 3478 0168 5A60     		str	r2, [r3, #4]
 634:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[3]] += 30;
 3479              		.loc 1 634 0
 3480 016a 7B68     		ldr	r3, [r7, #4]
 3481 016c 0C33     		adds	r3, r3, #12
 3482 016e 1868     		ldr	r0, [r3]
 3483 0170 7B68     		ldr	r3, [r7, #4]
 3484 0172 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 75


 3485 0174 1B68     		ldr	r3, [r3]
 3486 0176 FA68     		ldr	r2, [r7, #12]
 3487 0178 9B00     		lsls	r3, r3, #2
 3488 017a 1344     		add	r3, r3, r2
 3489 017c 5B68     		ldr	r3, [r3, #4]
 3490 017e 03F11E02 		add	r2, r3, #30
 3491 0182 F968     		ldr	r1, [r7, #12]
 3492 0184 8300     		lsls	r3, r0, #2
 3493 0186 0B44     		add	r3, r3, r1
 3494 0188 5A60     		str	r2, [r3, #4]
 3495 018a 31E0     		b	.L186
 3496              	.L190:
 635:.\tic_tac_all.c **** 	}
 636:.\tic_tac_all.c **** 	else if (connected == -1){ //block a 1 in a row
 3497              		.loc 1 636 0
 3498 018c BB68     		ldr	r3, [r7, #8]
 3499 018e B3F1FF3F 		cmp	r3, #-1
 3500 0192 2DD1     		bne	.L186
 637:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[0]] += 20;
 3501              		.loc 1 637 0
 3502 0194 7B68     		ldr	r3, [r7, #4]
 3503 0196 1868     		ldr	r0, [r3]
 3504 0198 7B68     		ldr	r3, [r7, #4]
 3505 019a 1B68     		ldr	r3, [r3]
 3506 019c FA68     		ldr	r2, [r7, #12]
 3507 019e 9B00     		lsls	r3, r3, #2
 3508 01a0 1344     		add	r3, r3, r2
 3509 01a2 5B68     		ldr	r3, [r3, #4]
 3510 01a4 03F11402 		add	r2, r3, #20
 3511 01a8 F968     		ldr	r1, [r7, #12]
 3512 01aa 8300     		lsls	r3, r0, #2
 3513 01ac 0B44     		add	r3, r3, r1
 3514 01ae 5A60     		str	r2, [r3, #4]
 638:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[1]] += 20;
 3515              		.loc 1 638 0
 3516 01b0 7B68     		ldr	r3, [r7, #4]
 3517 01b2 0433     		adds	r3, r3, #4
 3518 01b4 1868     		ldr	r0, [r3]
 3519 01b6 7B68     		ldr	r3, [r7, #4]
 3520 01b8 0433     		adds	r3, r3, #4
 3521 01ba 1B68     		ldr	r3, [r3]
 3522 01bc FA68     		ldr	r2, [r7, #12]
 3523 01be 9B00     		lsls	r3, r3, #2
 3524 01c0 1344     		add	r3, r3, r2
 3525 01c2 5B68     		ldr	r3, [r3, #4]
 3526 01c4 03F11402 		add	r2, r3, #20
 3527 01c8 F968     		ldr	r1, [r7, #12]
 3528 01ca 8300     		lsls	r3, r0, #2
 3529 01cc 0B44     		add	r3, r3, r1
 3530 01ce 5A60     		str	r2, [r3, #4]
 639:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[2]] += 20;
 3531              		.loc 1 639 0
 3532 01d0 7B68     		ldr	r3, [r7, #4]
 3533 01d2 0833     		adds	r3, r3, #8
 3534 01d4 1868     		ldr	r0, [r3]
 3535 01d6 7B68     		ldr	r3, [r7, #4]
 3536 01d8 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 76


 3537 01da 1B68     		ldr	r3, [r3]
 3538 01dc FA68     		ldr	r2, [r7, #12]
 3539 01de 9B00     		lsls	r3, r3, #2
 3540 01e0 1344     		add	r3, r3, r2
 3541 01e2 5B68     		ldr	r3, [r3, #4]
 3542 01e4 03F11402 		add	r2, r3, #20
 3543 01e8 F968     		ldr	r1, [r7, #12]
 3544 01ea 8300     		lsls	r3, r0, #2
 3545 01ec 0B44     		add	r3, r3, r1
 3546 01ee 5A60     		str	r2, [r3, #4]
 3547              	.L186:
 640:.\tic_tac_all.c **** 	}
 641:.\tic_tac_all.c **** 	return 1; // done
 3548              		.loc 1 641 0
 3549 01f0 0123     		movs	r3, #1
 642:.\tic_tac_all.c **** }
 3550              		.loc 1 642 0
 3551 01f2 1846     		mov	r0, r3
 3552 01f4 1437     		adds	r7, r7, #20
 3553              		.cfi_def_cfa_offset 4
 3554 01f6 BD46     		mov	sp, r7
 3555              		.cfi_def_cfa_register 13
 3556              		@ sp needed
 3557 01f8 5DF8047B 		ldr	r7, [sp], #4
 3558              		.cfi_restore 7
 3559              		.cfi_def_cfa_offset 0
 3560 01fc 7047     		bx	lr
 3561              		.cfi_endproc
 3562              	.LFE79:
 3563              		.size	ai_define_score, .-ai_define_score
 3564 01fe 00BF     		.section	.rodata
 3565 00a6 0000     		.align	2
 3566              	.LC9:
 3567 00a8 0A506C61 		.ascii	"\012Player %i grid eval\012\000"
 3567      79657220 
 3567      25692067 
 3567      72696420 
 3567      6576616C 
 3568 00be 0000     		.section	.text.ai_print_grid_eval,"ax",%progbits
 3569              		.align	2
 3570              		.global	ai_print_grid_eval
 3571              		.thumb
 3572              		.thumb_func
 3573              		.type	ai_print_grid_eval, %function
 3574              	ai_print_grid_eval:
 3575              	.LFB80:
 643:.\tic_tac_all.c **** 
 644:.\tic_tac_all.c **** void ai_print_grid_eval(struct ai* ai){
 3576              		.loc 1 644 0
 3577              		.cfi_startproc
 3578              		@ args = 0, pretend = 0, frame = 16
 3579              		@ frame_needed = 1, uses_anonymous_args = 0
 3580 0000 80B5     		push	{r7, lr}
 3581              		.cfi_def_cfa_offset 8
 3582              		.cfi_offset 7, -8
 3583              		.cfi_offset 14, -4
 3584 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 77


 3585              		.cfi_def_cfa_offset 24
 3586 0004 00AF     		add	r7, sp, #0
 3587              		.cfi_def_cfa_register 7
 3588 0006 7860     		str	r0, [r7, #4]
 645:.\tic_tac_all.c **** 	// this function prints the eval board of the AI
 646:.\tic_tac_all.c ****     // used on terminal, not psoc
 647:.\tic_tac_all.c **** 	int i;
 648:.\tic_tac_all.c **** 	for (i = 0; i < 64; i++){
 3589              		.loc 1 648 0
 3590 0008 0023     		movs	r3, #0
 3591 000a FB60     		str	r3, [r7, #12]
 3592 000c 1BE0     		b	.L193
 3593              	.L196:
 649:.\tic_tac_all.c **** 		if (i % 4 == 0){
 3594              		.loc 1 649 0
 3595 000e FB68     		ldr	r3, [r7, #12]
 3596 0010 03F00303 		and	r3, r3, #3
 3597 0014 002B     		cmp	r3, #0
 3598 0016 02D1     		bne	.L194
 650:.\tic_tac_all.c **** 			printf("\n");
 3599              		.loc 1 650 0
 3600 0018 0A20     		movs	r0, #10
 3601 001a FFF7FEFF 		bl	putchar
 3602              	.L194:
 651:.\tic_tac_all.c **** 		}
 652:.\tic_tac_all.c **** 		if (i % 16 == 0){
 3603              		.loc 1 652 0
 3604 001e FB68     		ldr	r3, [r7, #12]
 3605 0020 03F00F03 		and	r3, r3, #15
 3606 0024 002B     		cmp	r3, #0
 3607 0026 02D1     		bne	.L195
 653:.\tic_tac_all.c **** 			printf("\n");
 3608              		.loc 1 653 0
 3609 0028 0A20     		movs	r0, #10
 3610 002a FFF7FEFF 		bl	putchar
 3611              	.L195:
 654:.\tic_tac_all.c **** 		}
 655:.\tic_tac_all.c **** 		printf("%i ",ai->grid_eval[i]);
 3612              		.loc 1 655 0 discriminator 2
 3613 002e 7A68     		ldr	r2, [r7, #4]
 3614 0030 FB68     		ldr	r3, [r7, #12]
 3615 0032 9B00     		lsls	r3, r3, #2
 3616 0034 1344     		add	r3, r3, r2
 3617 0036 5B68     		ldr	r3, [r3, #4]
 3618 0038 0948     		ldr	r0, .L197
 3619 003a 1946     		mov	r1, r3
 3620 003c FFF7FEFF 		bl	printf
 648:.\tic_tac_all.c **** 		if (i % 4 == 0){
 3621              		.loc 1 648 0 discriminator 2
 3622 0040 FB68     		ldr	r3, [r7, #12]
 3623 0042 0133     		adds	r3, r3, #1
 3624 0044 FB60     		str	r3, [r7, #12]
 3625              	.L193:
 648:.\tic_tac_all.c **** 		if (i % 4 == 0){
 3626              		.loc 1 648 0 is_stmt 0 discriminator 1
 3627 0046 FB68     		ldr	r3, [r7, #12]
 3628 0048 3F2B     		cmp	r3, #63
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 78


 3629 004a E0DD     		ble	.L196
 656:.\tic_tac_all.c **** 	}
 657:.\tic_tac_all.c **** 	printf("\nPlayer %i grid eval\n",ai->player_id);
 3630              		.loc 1 657 0 is_stmt 1
 3631 004c 7B68     		ldr	r3, [r7, #4]
 3632 004e 1B68     		ldr	r3, [r3]
 3633 0050 0448     		ldr	r0, .L197+4
 3634 0052 1946     		mov	r1, r3
 3635 0054 FFF7FEFF 		bl	printf
 658:.\tic_tac_all.c **** }
 3636              		.loc 1 658 0
 3637 0058 1037     		adds	r7, r7, #16
 3638              		.cfi_def_cfa_offset 8
 3639 005a BD46     		mov	sp, r7
 3640              		.cfi_def_cfa_register 13
 3641              		@ sp needed
 3642 005c 80BD     		pop	{r7, pc}
 3643              	.L198:
 3644 005e 00BF     		.align	2
 3645              	.L197:
 3646 0060 68000000 		.word	.LC5
 3647 0064 A8000000 		.word	.LC9
 3648              		.cfi_endproc
 3649              	.LFE80:
 3650              		.size	ai_print_grid_eval, .-ai_print_grid_eval
 3651              		.section	.text.ai_play_best_move,"ax",%progbits
 3652              		.align	2
 3653              		.global	ai_play_best_move
 3654              		.thumb
 3655              		.thumb_func
 3656              		.type	ai_play_best_move, %function
 3657              	ai_play_best_move:
 3658              	.LFB81:
 659:.\tic_tac_all.c **** 
 660:.\tic_tac_all.c **** void ai_play_best_move(struct tic_tac_toe* t, struct ai* ai, struct disp_grid_81* disp){
 3659              		.loc 1 660 0
 3660              		.cfi_startproc
 3661              		@ args = 0, pretend = 0, frame = 24
 3662              		@ frame_needed = 1, uses_anonymous_args = 0
 3663 0000 80B5     		push	{r7, lr}
 3664              		.cfi_def_cfa_offset 8
 3665              		.cfi_offset 7, -8
 3666              		.cfi_offset 14, -4
 3667 0002 86B0     		sub	sp, sp, #24
 3668              		.cfi_def_cfa_offset 32
 3669 0004 00AF     		add	r7, sp, #0
 3670              		.cfi_def_cfa_register 7
 3671 0006 F860     		str	r0, [r7, #12]
 3672 0008 B960     		str	r1, [r7, #8]
 3673 000a 7A60     		str	r2, [r7, #4]
 661:.\tic_tac_all.c **** 	int loc = max_array(ai->grid_eval,64);
 3674              		.loc 1 661 0
 3675 000c BB68     		ldr	r3, [r7, #8]
 3676 000e 0433     		adds	r3, r3, #4
 3677 0010 1846     		mov	r0, r3
 3678 0012 4021     		movs	r1, #64
 3679 0014 FFF7FEFF 		bl	max_array
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 79


 3680 0018 7861     		str	r0, [r7, #20]
 662:.\tic_tac_all.c **** 	t->grid[loc] = ai->player_id; // place move at maximum value
 3681              		.loc 1 662 0
 3682 001a BB68     		ldr	r3, [r7, #8]
 3683 001c 1A68     		ldr	r2, [r3]
 3684 001e F968     		ldr	r1, [r7, #12]
 3685 0020 7B69     		ldr	r3, [r7, #20]
 3686 0022 0433     		adds	r3, r3, #4
 3687 0024 9B00     		lsls	r3, r3, #2
 3688 0026 0B44     		add	r3, r3, r1
 3689 0028 5A60     		str	r2, [r3, #4]
 663:.\tic_tac_all.c ****     disp_grid_ttc_place(disp,loc, ai->player_id); // for PSoC
 3690              		.loc 1 663 0
 3691 002a BB68     		ldr	r3, [r7, #8]
 3692 002c 1B68     		ldr	r3, [r3]
 3693 002e 7868     		ldr	r0, [r7, #4]
 3694 0030 7969     		ldr	r1, [r7, #20]
 3695 0032 1A46     		mov	r2, r3
 3696 0034 FFF7FEFF 		bl	disp_grid_ttc_place
 664:.\tic_tac_all.c **** }
 3697              		.loc 1 664 0
 3698 0038 1837     		adds	r7, r7, #24
 3699              		.cfi_def_cfa_offset 8
 3700 003a BD46     		mov	sp, r7
 3701              		.cfi_def_cfa_register 13
 3702              		@ sp needed
 3703 003c 80BD     		pop	{r7, pc}
 3704              		.cfi_endproc
 3705              	.LFE81:
 3706              		.size	ai_play_best_move, .-ai_play_best_move
 3707 003e 00BF     		.section	.text.tta_ai_algorithm,"ax",%progbits
 3708              		.align	2
 3709              		.global	tta_ai_algorithm
 3710              		.thumb
 3711              		.thumb_func
 3712              		.type	tta_ai_algorithm, %function
 3713              	tta_ai_algorithm:
 3714              	.LFB82:
 665:.\tic_tac_all.c **** 
 666:.\tic_tac_all.c **** void tta_ai_algorithm(struct disp_grid_81* disp,struct tic_tac_ai* tta, int player){
 3715              		.loc 1 666 0
 3716              		.cfi_startproc
 3717              		@ args = 0, pretend = 0, frame = 16
 3718              		@ frame_needed = 1, uses_anonymous_args = 0
 3719 0000 80B5     		push	{r7, lr}
 3720              		.cfi_def_cfa_offset 8
 3721              		.cfi_offset 7, -8
 3722              		.cfi_offset 14, -4
 3723 0002 84B0     		sub	sp, sp, #16
 3724              		.cfi_def_cfa_offset 24
 3725 0004 00AF     		add	r7, sp, #0
 3726              		.cfi_def_cfa_register 7
 3727 0006 F860     		str	r0, [r7, #12]
 3728 0008 B960     		str	r1, [r7, #8]
 3729 000a 7A60     		str	r2, [r7, #4]
 667:.\tic_tac_all.c **** 	//knowing that the player is an AI, we run AI algoirthm
 668:.\tic_tac_all.c **** 	if (player == 1){
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 80


 3730              		.loc 1 668 0
 3731 000c 7B68     		ldr	r3, [r7, #4]
 3732 000e 012B     		cmp	r3, #1
 3733 0010 1CD1     		bne	.L201
 669:.\tic_tac_all.c **** 		ai_evaluate_board(&tta->game,&tta->ai_1);
 3734              		.loc 1 669 0
 3735 0012 BB68     		ldr	r3, [r7, #8]
 3736 0014 03F58E62 		add	r2, r3, #1136
 3737 0018 BB68     		ldr	r3, [r7, #8]
 3738 001a 0833     		adds	r3, r3, #8
 3739 001c 1046     		mov	r0, r2
 3740 001e 1946     		mov	r1, r3
 3741 0020 FFF7FEFF 		bl	ai_evaluate_board
 670:.\tic_tac_all.c **** 		ai_play_best_move(&tta->game,&tta->ai_1,disp);
 3742              		.loc 1 670 0
 3743 0024 BB68     		ldr	r3, [r7, #8]
 3744 0026 03F58E62 		add	r2, r3, #1136
 3745 002a BB68     		ldr	r3, [r7, #8]
 3746 002c 0833     		adds	r3, r3, #8
 3747 002e 1046     		mov	r0, r2
 3748 0030 1946     		mov	r1, r3
 3749 0032 FA68     		ldr	r2, [r7, #12]
 3750 0034 FFF7FEFF 		bl	ai_play_best_move
 671:.\tic_tac_all.c ****         ai_evaluate_board(&tta->game,&tta->ai_1);
 3751              		.loc 1 671 0
 3752 0038 BB68     		ldr	r3, [r7, #8]
 3753 003a 03F58E62 		add	r2, r3, #1136
 3754 003e BB68     		ldr	r3, [r7, #8]
 3755 0040 0833     		adds	r3, r3, #8
 3756 0042 1046     		mov	r0, r2
 3757 0044 1946     		mov	r1, r3
 3758 0046 FFF7FEFF 		bl	ai_evaluate_board
 3759 004a 22E0     		b	.L200
 3760              	.L201:
 672:.\tic_tac_all.c **** 		//ai_print_grid_eval(&tta->ai_1);
 673:.\tic_tac_all.c **** 	}
 674:.\tic_tac_all.c **** 	else if (player == -1){
 3761              		.loc 1 674 0
 3762 004c 7B68     		ldr	r3, [r7, #4]
 3763 004e B3F1FF3F 		cmp	r3, #-1
 3764 0052 1ED1     		bne	.L200
 675:.\tic_tac_all.c **** 		ai_evaluate_board(&tta->game,&tta->ai_2);	
 3765              		.loc 1 675 0
 3766 0054 BB68     		ldr	r3, [r7, #8]
 3767 0056 03F58E62 		add	r2, r3, #1136
 3768 005a BB68     		ldr	r3, [r7, #8]
 3769 005c 03F50F73 		add	r3, r3, #572
 3770 0060 1046     		mov	r0, r2
 3771 0062 1946     		mov	r1, r3
 3772 0064 FFF7FEFF 		bl	ai_evaluate_board
 676:.\tic_tac_all.c **** 		ai_play_best_move(&tta->game,&tta->ai_2,disp);
 3773              		.loc 1 676 0
 3774 0068 BB68     		ldr	r3, [r7, #8]
 3775 006a 03F58E62 		add	r2, r3, #1136
 3776 006e BB68     		ldr	r3, [r7, #8]
 3777 0070 03F50F73 		add	r3, r3, #572
 3778 0074 1046     		mov	r0, r2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 81


 3779 0076 1946     		mov	r1, r3
 3780 0078 FA68     		ldr	r2, [r7, #12]
 3781 007a FFF7FEFF 		bl	ai_play_best_move
 677:.\tic_tac_all.c ****         ai_evaluate_board(&tta->game,&tta->ai_2);	
 3782              		.loc 1 677 0
 3783 007e BB68     		ldr	r3, [r7, #8]
 3784 0080 03F58E62 		add	r2, r3, #1136
 3785 0084 BB68     		ldr	r3, [r7, #8]
 3786 0086 03F50F73 		add	r3, r3, #572
 3787 008a 1046     		mov	r0, r2
 3788 008c 1946     		mov	r1, r3
 3789 008e FFF7FEFF 		bl	ai_evaluate_board
 3790              	.L200:
 678:.\tic_tac_all.c **** 		//ai_print_grid_eval(&tta->ai_2);
 679:.\tic_tac_all.c **** 	}
 680:.\tic_tac_all.c **** }
 3791              		.loc 1 680 0
 3792 0092 1037     		adds	r7, r7, #16
 3793              		.cfi_def_cfa_offset 8
 3794 0094 BD46     		mov	sp, r7
 3795              		.cfi_def_cfa_register 13
 3796              		@ sp needed
 3797 0096 80BD     		pop	{r7, pc}
 3798              		.cfi_endproc
 3799              	.LFE82:
 3800              		.size	tta_ai_algorithm, .-tta_ai_algorithm
 3801              		.section	.text.tta_step,"ax",%progbits
 3802              		.align	2
 3803              		.global	tta_step
 3804              		.thumb
 3805              		.thumb_func
 3806              		.type	tta_step, %function
 3807              	tta_step:
 3808              	.LFB83:
 681:.\tic_tac_all.c **** 
 682:.\tic_tac_all.c **** void tta_step(struct disp_grid_81* disp,struct tic_tac_ai* tta, int x, int y, int z){
 3809              		.loc 1 682 0
 3810              		.cfi_startproc
 3811              		@ args = 4, pretend = 0, frame = 16
 3812              		@ frame_needed = 1, uses_anonymous_args = 0
 3813 0000 80B5     		push	{r7, lr}
 3814              		.cfi_def_cfa_offset 8
 3815              		.cfi_offset 7, -8
 3816              		.cfi_offset 14, -4
 3817 0002 86B0     		sub	sp, sp, #24
 3818              		.cfi_def_cfa_offset 32
 3819 0004 02AF     		add	r7, sp, #8
 3820              		.cfi_def_cfa 7, 24
 3821 0006 F860     		str	r0, [r7, #12]
 3822 0008 B960     		str	r1, [r7, #8]
 3823 000a 7A60     		str	r2, [r7, #4]
 3824 000c 3B60     		str	r3, [r7]
 683:.\tic_tac_all.c **** 	//this function is a game step
 684:.\tic_tac_all.c **** 	//printf("\nCurrently player %i turn %i", tta->game.player, tta->game.turn);
 685:.\tic_tac_all.c ****     //x,y,z not used if on AI
 686:.\tic_tac_all.c **** 	if (tta->game.player == 1 && tta->is_ai[0] == 1){
 3825              		.loc 1 686 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 82


 3826 000e BB68     		ldr	r3, [r7, #8]
 3827 0010 D3F87834 		ldr	r3, [r3, #1144]
 3828 0014 012B     		cmp	r3, #1
 3829 0016 0FD1     		bne	.L204
 3830              		.loc 1 686 0 is_stmt 0 discriminator 1
 3831 0018 BB68     		ldr	r3, [r7, #8]
 3832 001a 1B68     		ldr	r3, [r3]
 3833 001c 012B     		cmp	r3, #1
 3834 001e 0BD1     		bne	.L204
 687:.\tic_tac_all.c **** 		tta_ai_algorithm(disp,tta,1);
 3835              		.loc 1 687 0 is_stmt 1
 3836 0020 F868     		ldr	r0, [r7, #12]
 3837 0022 B968     		ldr	r1, [r7, #8]
 3838 0024 0122     		movs	r2, #1
 3839 0026 FFF7FEFF 		bl	tta_ai_algorithm
 688:.\tic_tac_all.c **** 		ttc_change_player(&tta->game); // change player
 3840              		.loc 1 688 0
 3841 002a BB68     		ldr	r3, [r7, #8]
 3842 002c 03F58E63 		add	r3, r3, #1136
 3843 0030 1846     		mov	r0, r3
 3844 0032 FFF7FEFF 		bl	ttc_change_player
 3845 0036 21E0     		b	.L203
 3846              	.L204:
 689:.\tic_tac_all.c **** 		//ttc_print_grid(&tta->game); //print board
 690:.\tic_tac_all.c **** 	}
 691:.\tic_tac_all.c **** 	else if (tta->game.player == -1 && tta->is_ai[1] == 1){
 3847              		.loc 1 691 0
 3848 0038 BB68     		ldr	r3, [r7, #8]
 3849 003a D3F87834 		ldr	r3, [r3, #1144]
 3850 003e B3F1FF3F 		cmp	r3, #-1
 3851 0042 10D1     		bne	.L206
 3852              		.loc 1 691 0 is_stmt 0 discriminator 1
 3853 0044 BB68     		ldr	r3, [r7, #8]
 3854 0046 5B68     		ldr	r3, [r3, #4]
 3855 0048 012B     		cmp	r3, #1
 3856 004a 0CD1     		bne	.L206
 692:.\tic_tac_all.c **** 		tta_ai_algorithm(disp,tta,-1);
 3857              		.loc 1 692 0 is_stmt 1
 3858 004c F868     		ldr	r0, [r7, #12]
 3859 004e B968     		ldr	r1, [r7, #8]
 3860 0050 4FF0FF32 		mov	r2, #-1
 3861 0054 FFF7FEFF 		bl	tta_ai_algorithm
 693:.\tic_tac_all.c **** 		ttc_change_player(&tta->game); // change player
 3862              		.loc 1 693 0
 3863 0058 BB68     		ldr	r3, [r7, #8]
 3864 005a 03F58E63 		add	r3, r3, #1136
 3865 005e 1846     		mov	r0, r3
 3866 0060 FFF7FEFF 		bl	ttc_change_player
 3867 0064 0AE0     		b	.L203
 3868              	.L206:
 694:.\tic_tac_all.c **** 		//ttc_print_grid(&tta->game); //print board
 695:.\tic_tac_all.c **** 	}
 696:.\tic_tac_all.c **** 	else{
 697:.\tic_tac_all.c **** 		ttc_step(disp,&tta->game,x,y,z); // human player goes
 3869              		.loc 1 697 0
 3870 0066 BB68     		ldr	r3, [r7, #8]
 3871 0068 03F58E62 		add	r2, r3, #1136
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 83


 3872 006c BB69     		ldr	r3, [r7, #24]
 3873 006e 0093     		str	r3, [sp]
 3874 0070 F868     		ldr	r0, [r7, #12]
 3875 0072 1146     		mov	r1, r2
 3876 0074 7A68     		ldr	r2, [r7, #4]
 3877 0076 3B68     		ldr	r3, [r7]
 3878 0078 FFF7FEFF 		bl	ttc_step
 3879              	.L203:
 698:.\tic_tac_all.c **** 	}
 699:.\tic_tac_all.c **** }
 3880              		.loc 1 699 0
 3881 007c 1037     		adds	r7, r7, #16
 3882              		.cfi_def_cfa_offset 8
 3883 007e BD46     		mov	sp, r7
 3884              		.cfi_def_cfa_register 13
 3885              		@ sp needed
 3886 0080 80BD     		pop	{r7, pc}
 3887              		.cfi_endproc
 3888              	.LFE83:
 3889              		.size	tta_step, .-tta_step
 3890 0082 00BF     		.bss
 3891              		.align	2
 3892              	ret.7440:
 3893 0000 00000000 		.space	12
 3893      00000000 
 3893      00000000 
 3894              		.text
 3895              	.Letext0:
 3896              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3897              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3898              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3899              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 3900              		.section	.debug_info,"",%progbits
 3901              	.Ldebug_info0:
 3902 0000 45090000 		.4byte	0x945
 3903 0004 0400     		.2byte	0x4
 3904 0006 00000000 		.4byte	.Ldebug_abbrev0
 3905 000a 04       		.byte	0x4
 3906 000b 01       		.uleb128 0x1
 3907 000c E4000000 		.4byte	.LASF67
 3908 0010 01       		.byte	0x1
 3909 0011 C0010000 		.4byte	.LASF68
 3910 0015 FC020000 		.4byte	.LASF69
 3911 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3912 001d 00000000 		.4byte	0
 3913 0021 00000000 		.4byte	.Ldebug_line0
 3914 0025 02       		.uleb128 0x2
 3915 0026 01       		.byte	0x1
 3916 0027 06       		.byte	0x6
 3917 0028 F8010000 		.4byte	.LASF0
 3918 002c 02       		.uleb128 0x2
 3919 002d 01       		.byte	0x1
 3920 002e 08       		.byte	0x8
 3921 002f D0010000 		.4byte	.LASF1
 3922 0033 02       		.uleb128 0x2
 3923 0034 02       		.byte	0x2
 3924 0035 05       		.byte	0x5
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 84


 3925 0036 61000000 		.4byte	.LASF2
 3926 003a 02       		.uleb128 0x2
 3927 003b 02       		.byte	0x2
 3928 003c 07       		.byte	0x7
 3929 003d 53020000 		.4byte	.LASF3
 3930 0041 03       		.uleb128 0x3
 3931 0042 DA020000 		.4byte	.LASF9
 3932 0046 02       		.byte	0x2
 3933 0047 3F       		.byte	0x3f
 3934 0048 4C000000 		.4byte	0x4c
 3935 004c 02       		.uleb128 0x2
 3936 004d 04       		.byte	0x4
 3937 004e 05       		.byte	0x5
 3938 004f 70020000 		.4byte	.LASF4
 3939 0053 02       		.uleb128 0x2
 3940 0054 04       		.byte	0x4
 3941 0055 07       		.byte	0x7
 3942 0056 AF020000 		.4byte	.LASF5
 3943 005a 02       		.uleb128 0x2
 3944 005b 08       		.byte	0x8
 3945 005c 05       		.byte	0x5
 3946 005d AE000000 		.4byte	.LASF6
 3947 0061 02       		.uleb128 0x2
 3948 0062 08       		.byte	0x8
 3949 0063 07       		.byte	0x7
 3950 0064 04020000 		.4byte	.LASF7
 3951 0068 04       		.uleb128 0x4
 3952 0069 04       		.byte	0x4
 3953 006a 05       		.byte	0x5
 3954 006b 696E7400 		.ascii	"int\000"
 3955 006f 02       		.uleb128 0x2
 3956 0070 04       		.byte	0x4
 3957 0071 07       		.byte	0x7
 3958 0072 1B020000 		.4byte	.LASF8
 3959 0076 03       		.uleb128 0x3
 3960 0077 35000000 		.4byte	.LASF10
 3961 007b 03       		.byte	0x3
 3962 007c D4       		.byte	0xd4
 3963 007d 6F000000 		.4byte	0x6f
 3964 0081 02       		.uleb128 0x2
 3965 0082 04       		.byte	0x4
 3966 0083 07       		.byte	0x7
 3967 0084 45000000 		.4byte	.LASF11
 3968 0088 02       		.uleb128 0x2
 3969 0089 01       		.byte	0x1
 3970 008a 08       		.byte	0x8
 3971 008b 6B020000 		.4byte	.LASF12
 3972 008f 02       		.uleb128 0x2
 3973 0090 08       		.byte	0x8
 3974 0091 04       		.byte	0x4
 3975 0092 C1020000 		.4byte	.LASF13
 3976 0096 02       		.uleb128 0x2
 3977 0097 04       		.byte	0x4
 3978 0098 04       		.byte	0x4
 3979 0099 96000000 		.4byte	.LASF14
 3980 009d 02       		.uleb128 0x2
 3981 009e 08       		.byte	0x8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 85


 3982 009f 04       		.byte	0x4
 3983 00a0 B4010000 		.4byte	.LASF15
 3984 00a4 03       		.uleb128 0x3
 3985 00a5 91000000 		.4byte	.LASF16
 3986 00a9 01       		.byte	0x1
 3987 00aa 12       		.byte	0x12
 3988 00ab 68000000 		.4byte	0x68
 3989 00af 03       		.uleb128 0x3
 3990 00b0 88020000 		.4byte	.LASF17
 3991 00b4 04       		.byte	0x4
 3992 00b5 2C       		.byte	0x2c
 3993 00b6 41000000 		.4byte	0x41
 3994 00ba 05       		.uleb128 0x5
 3995 00bb 0A000000 		.4byte	.LASF24
 3996 00bf 1401     		.2byte	0x114
 3997 00c1 01       		.byte	0x1
 3998 00c2 1C       		.byte	0x1c
 3999 00c3 10010000 		.4byte	0x110
 4000 00c7 06       		.uleb128 0x6
 4001 00c8 D5020000 		.4byte	.LASF18
 4002 00cc 01       		.byte	0x1
 4003 00cd 1D       		.byte	0x1d
 4004 00ce 68000000 		.4byte	0x68
 4005 00d2 00       		.byte	0
 4006 00d3 06       		.uleb128 0x6
 4007 00d4 00000000 		.4byte	.LASF19
 4008 00d8 01       		.byte	0x1
 4009 00d9 1E       		.byte	0x1e
 4010 00da 68000000 		.4byte	0x68
 4011 00de 04       		.byte	0x4
 4012 00df 06       		.uleb128 0x6
 4013 00e0 BF030000 		.4byte	.LASF20
 4014 00e4 01       		.byte	0x1
 4015 00e5 20       		.byte	0x20
 4016 00e6 68000000 		.4byte	0x68
 4017 00ea 08       		.byte	0x8
 4018 00eb 06       		.uleb128 0x6
 4019 00ec 32020000 		.4byte	.LASF21
 4020 00f0 01       		.byte	0x1
 4021 00f1 21       		.byte	0x21
 4022 00f2 68000000 		.4byte	0x68
 4023 00f6 0C       		.byte	0xc
 4024 00f7 06       		.uleb128 0x6
 4025 00f8 EB010000 		.4byte	.LASF22
 4026 00fc 01       		.byte	0x1
 4027 00fd 22       		.byte	0x22
 4028 00fe 68000000 		.4byte	0x68
 4029 0102 10       		.byte	0x10
 4030 0103 06       		.uleb128 0x6
 4031 0104 4E020000 		.4byte	.LASF23
 4032 0108 01       		.byte	0x1
 4033 0109 24       		.byte	0x24
 4034 010a 10010000 		.4byte	0x110
 4035 010e 14       		.byte	0x14
 4036 010f 00       		.byte	0
 4037 0110 07       		.uleb128 0x7
 4038 0111 68000000 		.4byte	0x68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 86


 4039 0115 20010000 		.4byte	0x120
 4040 0119 08       		.uleb128 0x8
 4041 011a 81000000 		.4byte	0x81
 4042 011e 3F       		.byte	0x3f
 4043 011f 00       		.byte	0
 4044 0120 09       		.uleb128 0x9
 4045 0121 616900   		.ascii	"ai\000"
 4046 0124 3402     		.2byte	0x234
 4047 0126 01       		.byte	0x1
 4048 0127 4101     		.2byte	0x141
 4049 0129 56010000 		.4byte	0x156
 4050 012d 0A       		.uleb128 0xa
 4051 012e AA010000 		.4byte	.LASF25
 4052 0132 01       		.byte	0x1
 4053 0133 4201     		.2byte	0x142
 4054 0135 68000000 		.4byte	0x68
 4055 0139 00       		.byte	0
 4056 013a 0A       		.uleb128 0xa
 4057 013b A0010000 		.4byte	.LASF26
 4058 013f 01       		.byte	0x1
 4059 0140 4301     		.2byte	0x143
 4060 0142 10010000 		.4byte	0x110
 4061 0146 04       		.byte	0x4
 4062 0147 0B       		.uleb128 0xb
 4063 0148 16000000 		.4byte	.LASF27
 4064 014c 01       		.byte	0x1
 4065 014d 4401     		.2byte	0x144
 4066 014f 56010000 		.4byte	0x156
 4067 0153 0401     		.2byte	0x104
 4068 0155 00       		.byte	0
 4069 0156 07       		.uleb128 0x7
 4070 0157 68000000 		.4byte	0x68
 4071 015b 66010000 		.4byte	0x166
 4072 015f 08       		.uleb128 0x8
 4073 0160 81000000 		.4byte	0x81
 4074 0164 4B       		.byte	0x4b
 4075 0165 00       		.byte	0
 4076 0166 0C       		.uleb128 0xc
 4077 0167 E4020000 		.4byte	.LASF28
 4078 016b 8405     		.2byte	0x584
 4079 016d 01       		.byte	0x1
 4080 016e 4701     		.2byte	0x147
 4081 0170 AB010000 		.4byte	0x1ab
 4082 0174 0A       		.uleb128 0xa
 4083 0175 B9030000 		.4byte	.LASF29
 4084 0179 01       		.byte	0x1
 4085 017a 4801     		.2byte	0x148
 4086 017c AB010000 		.4byte	0x1ab
 4087 0180 00       		.byte	0
 4088 0181 0A       		.uleb128 0xa
 4089 0182 83010000 		.4byte	.LASF30
 4090 0186 01       		.byte	0x1
 4091 0187 4901     		.2byte	0x149
 4092 0189 20010000 		.4byte	0x120
 4093 018d 08       		.byte	0x8
 4094 018e 0B       		.uleb128 0xb
 4095 018f 79000000 		.4byte	.LASF31
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 87


 4096 0193 01       		.byte	0x1
 4097 0194 4A01     		.2byte	0x14a
 4098 0196 20010000 		.4byte	0x120
 4099 019a 3C02     		.2byte	0x23c
 4100 019c 0B       		.uleb128 0xb
 4101 019d 66020000 		.4byte	.LASF32
 4102 01a1 01       		.byte	0x1
 4103 01a2 4B01     		.2byte	0x14b
 4104 01a4 BA000000 		.4byte	0xba
 4105 01a8 7004     		.2byte	0x470
 4106 01aa 00       		.byte	0
 4107 01ab 07       		.uleb128 0x7
 4108 01ac 68000000 		.4byte	0x68
 4109 01b0 BB010000 		.4byte	0x1bb
 4110 01b4 08       		.uleb128 0x8
 4111 01b5 81000000 		.4byte	0x81
 4112 01b9 01       		.byte	0x1
 4113 01ba 00       		.byte	0
 4114 01bb 0D       		.uleb128 0xd
 4115 01bc 45020000 		.4byte	.LASF37
 4116 01c0 01       		.byte	0x1
 4117 01c1 28       		.byte	0x28
 4118 01c2 00000000 		.4byte	.LFB63
 4119 01c6 6C000000 		.4byte	.LFE63-.LFB63
 4120 01ca 01       		.uleb128 0x1
 4121 01cb 9C       		.byte	0x9c
 4122 01cc 1D020000 		.4byte	0x21d
 4123 01d0 0E       		.uleb128 0xe
 4124 01d1 7400     		.ascii	"t\000"
 4125 01d3 01       		.byte	0x1
 4126 01d4 28       		.byte	0x28
 4127 01d5 1D020000 		.4byte	0x21d
 4128 01d9 02       		.uleb128 0x2
 4129 01da 91       		.byte	0x91
 4130 01db 6C       		.sleb128 -20
 4131 01dc 0F       		.uleb128 0xf
 4132 01dd D5020000 		.4byte	.LASF18
 4133 01e1 01       		.byte	0x1
 4134 01e2 28       		.byte	0x28
 4135 01e3 68000000 		.4byte	0x68
 4136 01e7 02       		.uleb128 0x2
 4137 01e8 91       		.byte	0x91
 4138 01e9 68       		.sleb128 -24
 4139 01ea 0F       		.uleb128 0xf
 4140 01eb 00000000 		.4byte	.LASF19
 4141 01ef 01       		.byte	0x1
 4142 01f0 28       		.byte	0x28
 4143 01f1 68000000 		.4byte	0x68
 4144 01f5 02       		.uleb128 0x2
 4145 01f6 91       		.byte	0x91
 4146 01f7 64       		.sleb128 -28
 4147 01f8 10       		.uleb128 0x10
 4148 01f9 1E000000 		.4byte	.LBB2
 4149 01fd 32000000 		.4byte	.LBE2-.LBB2
 4150 0201 11       		.uleb128 0x11
 4151 0202 6900     		.ascii	"i\000"
 4152 0204 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 88


 4153 0205 2C       		.byte	0x2c
 4154 0206 68000000 		.4byte	0x68
 4155 020a 02       		.uleb128 0x2
 4156 020b 91       		.byte	0x91
 4157 020c 74       		.sleb128 -12
 4158 020d 11       		.uleb128 0x11
 4159 020e 6E756D00 		.ascii	"num\000"
 4160 0212 01       		.byte	0x1
 4161 0213 2D       		.byte	0x2d
 4162 0214 68000000 		.4byte	0x68
 4163 0218 02       		.uleb128 0x2
 4164 0219 91       		.byte	0x91
 4165 021a 70       		.sleb128 -16
 4166 021b 00       		.byte	0
 4167 021c 00       		.byte	0
 4168 021d 12       		.uleb128 0x12
 4169 021e 04       		.byte	0x4
 4170 021f BA000000 		.4byte	0xba
 4171 0223 13       		.uleb128 0x13
 4172 0224 DE010000 		.4byte	.LASF34
 4173 0228 01       		.byte	0x1
 4174 0229 37       		.byte	0x37
 4175 022a 68000000 		.4byte	0x68
 4176 022e 00000000 		.4byte	.LFB64
 4177 0232 3A000000 		.4byte	.LFE64-.LFB64
 4178 0236 01       		.uleb128 0x1
 4179 0237 9C       		.byte	0x9c
 4180 0238 89020000 		.4byte	0x289
 4181 023c 0E       		.uleb128 0xe
 4182 023d 7400     		.ascii	"t\000"
 4183 023f 01       		.byte	0x1
 4184 0240 37       		.byte	0x37
 4185 0241 1D020000 		.4byte	0x21d
 4186 0245 02       		.uleb128 0x2
 4187 0246 91       		.byte	0x91
 4188 0247 6C       		.sleb128 -20
 4189 0248 0E       		.uleb128 0xe
 4190 0249 7800     		.ascii	"x\000"
 4191 024b 01       		.byte	0x1
 4192 024c 37       		.byte	0x37
 4193 024d 68000000 		.4byte	0x68
 4194 0251 02       		.uleb128 0x2
 4195 0252 91       		.byte	0x91
 4196 0253 68       		.sleb128 -24
 4197 0254 0E       		.uleb128 0xe
 4198 0255 7900     		.ascii	"y\000"
 4199 0257 01       		.byte	0x1
 4200 0258 37       		.byte	0x37
 4201 0259 68000000 		.4byte	0x68
 4202 025d 02       		.uleb128 0x2
 4203 025e 91       		.byte	0x91
 4204 025f 64       		.sleb128 -28
 4205 0260 0E       		.uleb128 0xe
 4206 0261 7A00     		.ascii	"z\000"
 4207 0263 01       		.byte	0x1
 4208 0264 37       		.byte	0x37
 4209 0265 68000000 		.4byte	0x68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 89


 4210 0269 02       		.uleb128 0x2
 4211 026a 91       		.byte	0x91
 4212 026b 60       		.sleb128 -32
 4213 026c 0F       		.uleb128 0xf
 4214 026d 6B000000 		.4byte	.LASF33
 4215 0271 01       		.byte	0x1
 4216 0272 37       		.byte	0x37
 4217 0273 68000000 		.4byte	0x68
 4218 0277 02       		.uleb128 0x2
 4219 0278 91       		.byte	0x91
 4220 0279 00       		.sleb128 0
 4221 027a 11       		.uleb128 0x11
 4222 027b 6C6F6300 		.ascii	"loc\000"
 4223 027f 01       		.byte	0x1
 4224 0280 38       		.byte	0x38
 4225 0281 68000000 		.4byte	0x68
 4226 0285 02       		.uleb128 0x2
 4227 0286 91       		.byte	0x91
 4228 0287 74       		.sleb128 -12
 4229 0288 00       		.byte	0
 4230 0289 13       		.uleb128 0x13
 4231 028a EF020000 		.4byte	.LASF35
 4232 028e 01       		.byte	0x1
 4233 028f 3E       		.byte	0x3e
 4234 0290 68000000 		.4byte	0x68
 4235 0294 00000000 		.4byte	.LFB65
 4236 0298 3A000000 		.4byte	.LFE65-.LFB65
 4237 029c 01       		.uleb128 0x1
 4238 029d 9C       		.byte	0x9c
 4239 029e EF020000 		.4byte	0x2ef
 4240 02a2 0E       		.uleb128 0xe
 4241 02a3 7400     		.ascii	"t\000"
 4242 02a5 01       		.byte	0x1
 4243 02a6 3E       		.byte	0x3e
 4244 02a7 1D020000 		.4byte	0x21d
 4245 02ab 02       		.uleb128 0x2
 4246 02ac 91       		.byte	0x91
 4247 02ad 6C       		.sleb128 -20
 4248 02ae 0E       		.uleb128 0xe
 4249 02af 7800     		.ascii	"x\000"
 4250 02b1 01       		.byte	0x1
 4251 02b2 3E       		.byte	0x3e
 4252 02b3 68000000 		.4byte	0x68
 4253 02b7 02       		.uleb128 0x2
 4254 02b8 91       		.byte	0x91
 4255 02b9 68       		.sleb128 -24
 4256 02ba 0E       		.uleb128 0xe
 4257 02bb 7900     		.ascii	"y\000"
 4258 02bd 01       		.byte	0x1
 4259 02be 3E       		.byte	0x3e
 4260 02bf 68000000 		.4byte	0x68
 4261 02c3 02       		.uleb128 0x2
 4262 02c4 91       		.byte	0x91
 4263 02c5 64       		.sleb128 -28
 4264 02c6 0E       		.uleb128 0xe
 4265 02c7 7A00     		.ascii	"z\000"
 4266 02c9 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 90


 4267 02ca 3E       		.byte	0x3e
 4268 02cb 68000000 		.4byte	0x68
 4269 02cf 02       		.uleb128 0x2
 4270 02d0 91       		.byte	0x91
 4271 02d1 60       		.sleb128 -32
 4272 02d2 11       		.uleb128 0x11
 4273 02d3 6C6F6300 		.ascii	"loc\000"
 4274 02d7 01       		.byte	0x1
 4275 02d8 3F       		.byte	0x3f
 4276 02d9 68000000 		.4byte	0x68
 4277 02dd 02       		.uleb128 0x2
 4278 02de 91       		.byte	0x91
 4279 02df 74       		.sleb128 -12
 4280 02e0 11       		.uleb128 0x11
 4281 02e1 72657400 		.ascii	"ret\000"
 4282 02e5 01       		.byte	0x1
 4283 02e6 40       		.byte	0x40
 4284 02e7 68000000 		.4byte	0x68
 4285 02eb 02       		.uleb128 0x2
 4286 02ec 91       		.byte	0x91
 4287 02ed 70       		.sleb128 -16
 4288 02ee 00       		.byte	0
 4289 02ef 14       		.uleb128 0x14
 4290 02f0 BC000000 		.4byte	.LASF36
 4291 02f4 01       		.byte	0x1
 4292 02f5 45       		.byte	0x45
 4293 02f6 68000000 		.4byte	0x68
 4294 02fa 00000000 		.4byte	.LFB66
 4295 02fe A0000000 		.4byte	.LFE66-.LFB66
 4296 0302 01       		.uleb128 0x1
 4297 0303 9C       		.byte	0x9c
 4298 0304 47030000 		.4byte	0x347
 4299 0308 0E       		.uleb128 0xe
 4300 0309 7400     		.ascii	"t\000"
 4301 030b 01       		.byte	0x1
 4302 030c 45       		.byte	0x45
 4303 030d 1D020000 		.4byte	0x21d
 4304 0311 02       		.uleb128 0x2
 4305 0312 91       		.byte	0x91
 4306 0313 6C       		.sleb128 -20
 4307 0314 0E       		.uleb128 0xe
 4308 0315 7800     		.ascii	"x\000"
 4309 0317 01       		.byte	0x1
 4310 0318 45       		.byte	0x45
 4311 0319 68000000 		.4byte	0x68
 4312 031d 02       		.uleb128 0x2
 4313 031e 91       		.byte	0x91
 4314 031f 68       		.sleb128 -24
 4315 0320 0E       		.uleb128 0xe
 4316 0321 7900     		.ascii	"y\000"
 4317 0323 01       		.byte	0x1
 4318 0324 45       		.byte	0x45
 4319 0325 68000000 		.4byte	0x68
 4320 0329 02       		.uleb128 0x2
 4321 032a 91       		.byte	0x91
 4322 032b 64       		.sleb128 -28
 4323 032c 0E       		.uleb128 0xe
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 91


 4324 032d 7A00     		.ascii	"z\000"
 4325 032f 01       		.byte	0x1
 4326 0330 45       		.byte	0x45
 4327 0331 68000000 		.4byte	0x68
 4328 0335 02       		.uleb128 0x2
 4329 0336 91       		.byte	0x91
 4330 0337 60       		.sleb128 -32
 4331 0338 11       		.uleb128 0x11
 4332 0339 6C6F6300 		.ascii	"loc\000"
 4333 033d 01       		.byte	0x1
 4334 033e 46       		.byte	0x46
 4335 033f 68000000 		.4byte	0x68
 4336 0343 02       		.uleb128 0x2
 4337 0344 91       		.byte	0x91
 4338 0345 74       		.sleb128 -12
 4339 0346 00       		.byte	0
 4340 0347 0D       		.uleb128 0xd
 4341 0348 CF030000 		.4byte	.LASF38
 4342 034c 01       		.byte	0x1
 4343 034d 59       		.byte	0x59
 4344 034e 00000000 		.4byte	.LFB67
 4345 0352 3E000000 		.4byte	.LFE67-.LFB67
 4346 0356 01       		.uleb128 0x1
 4347 0357 9C       		.byte	0x9c
 4348 0358 69030000 		.4byte	0x369
 4349 035c 0E       		.uleb128 0xe
 4350 035d 7400     		.ascii	"t\000"
 4351 035f 01       		.byte	0x1
 4352 0360 59       		.byte	0x59
 4353 0361 1D020000 		.4byte	0x21d
 4354 0365 02       		.uleb128 0x2
 4355 0366 91       		.byte	0x91
 4356 0367 74       		.sleb128 -12
 4357 0368 00       		.byte	0
 4358 0369 15       		.uleb128 0x15
 4359 036a 91010000 		.4byte	.LASF39
 4360 036e 01       		.byte	0x1
 4361 036f 63       		.byte	0x63
 4362 0370 A2030000 		.4byte	0x3a2
 4363 0374 00000000 		.4byte	.LFB68
 4364 0378 5C000000 		.4byte	.LFE68-.LFB68
 4365 037c 01       		.uleb128 0x1
 4366 037d 9C       		.byte	0x9c
 4367 037e A2030000 		.4byte	0x3a2
 4368 0382 16       		.uleb128 0x16
 4369 0383 1C000000 		.4byte	.LASF40
 4370 0387 01       		.byte	0x1
 4371 0388 66       		.byte	0x66
 4372 0389 A8030000 		.4byte	0x3a8
 4373 038d 02       		.uleb128 0x2
 4374 038e 91       		.byte	0x91
 4375 038f 74       		.sleb128 -12
 4376 0390 11       		.uleb128 0x11
 4377 0391 72657400 		.ascii	"ret\000"
 4378 0395 01       		.byte	0x1
 4379 0396 68       		.byte	0x68
 4380 0397 B8030000 		.4byte	0x3b8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 92


 4381 039b 05       		.uleb128 0x5
 4382 039c 03       		.byte	0x3
 4383 039d 00000000 		.4byte	ret.7440
 4384 03a1 00       		.byte	0
 4385 03a2 12       		.uleb128 0x12
 4386 03a3 04       		.byte	0x4
 4387 03a4 68000000 		.4byte	0x68
 4388 03a8 07       		.uleb128 0x7
 4389 03a9 88000000 		.4byte	0x88
 4390 03ad B8030000 		.4byte	0x3b8
 4391 03b1 08       		.uleb128 0x8
 4392 03b2 81000000 		.4byte	0x81
 4393 03b6 02       		.byte	0x2
 4394 03b7 00       		.byte	0
 4395 03b8 07       		.uleb128 0x7
 4396 03b9 68000000 		.4byte	0x68
 4397 03bd C8030000 		.4byte	0x3c8
 4398 03c1 08       		.uleb128 0x8
 4399 03c2 81000000 		.4byte	0x81
 4400 03c6 02       		.byte	0x2
 4401 03c7 00       		.byte	0
 4402 03c8 17       		.uleb128 0x17
 4403 03c9 79020000 		.4byte	.LASF41
 4404 03cd 01       		.byte	0x1
 4405 03ce 71       		.byte	0x71
 4406 03cf 00000000 		.4byte	.LFB69
 4407 03d3 88000000 		.4byte	.LFE69-.LFB69
 4408 03d7 01       		.uleb128 0x1
 4409 03d8 9C       		.byte	0x9c
 4410 03d9 F6030000 		.4byte	0x3f6
 4411 03dd 0E       		.uleb128 0xe
 4412 03de 7400     		.ascii	"t\000"
 4413 03e0 01       		.byte	0x1
 4414 03e1 71       		.byte	0x71
 4415 03e2 1D020000 		.4byte	0x21d
 4416 03e6 02       		.uleb128 0x2
 4417 03e7 91       		.byte	0x91
 4418 03e8 6C       		.sleb128 -20
 4419 03e9 11       		.uleb128 0x11
 4420 03ea 6900     		.ascii	"i\000"
 4421 03ec 01       		.byte	0x1
 4422 03ed 73       		.byte	0x73
 4423 03ee 68000000 		.4byte	0x68
 4424 03f2 02       		.uleb128 0x2
 4425 03f3 91       		.byte	0x91
 4426 03f4 74       		.sleb128 -12
 4427 03f5 00       		.byte	0
 4428 03f6 14       		.uleb128 0x14
 4429 03f7 71030000 		.4byte	.LASF42
 4430 03fb 01       		.byte	0x1
 4431 03fc 84       		.byte	0x84
 4432 03fd 68000000 		.4byte	0x68
 4433 0401 00000000 		.4byte	.LFB70
 4434 0405 7C040000 		.4byte	.LFE70-.LFB70
 4435 0409 01       		.uleb128 0x1
 4436 040a 9C       		.byte	0x9c
 4437 040b 5B040000 		.4byte	0x45b
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 93


 4438 040f 0E       		.uleb128 0xe
 4439 0410 7400     		.ascii	"t\000"
 4440 0412 01       		.byte	0x1
 4441 0413 84       		.byte	0x84
 4442 0414 1D020000 		.4byte	0x21d
 4443 0418 02       		.uleb128 0x2
 4444 0419 91       		.byte	0x91
 4445 041a 5C       		.sleb128 -36
 4446 041b 11       		.uleb128 0x11
 4447 041c 7800     		.ascii	"x\000"
 4448 041e 01       		.byte	0x1
 4449 041f 86       		.byte	0x86
 4450 0420 68000000 		.4byte	0x68
 4451 0424 02       		.uleb128 0x2
 4452 0425 91       		.byte	0x91
 4453 0426 74       		.sleb128 -12
 4454 0427 11       		.uleb128 0x11
 4455 0428 7900     		.ascii	"y\000"
 4456 042a 01       		.byte	0x1
 4457 042b 86       		.byte	0x86
 4458 042c 68000000 		.4byte	0x68
 4459 0430 02       		.uleb128 0x2
 4460 0431 91       		.byte	0x91
 4461 0432 70       		.sleb128 -16
 4462 0433 11       		.uleb128 0x11
 4463 0434 7A00     		.ascii	"z\000"
 4464 0436 01       		.byte	0x1
 4465 0437 86       		.byte	0x86
 4466 0438 68000000 		.4byte	0x68
 4467 043c 02       		.uleb128 0x2
 4468 043d 91       		.byte	0x91
 4469 043e 6C       		.sleb128 -20
 4470 043f 11       		.uleb128 0x11
 4471 0440 7A7000   		.ascii	"zp\000"
 4472 0443 01       		.byte	0x1
 4473 0444 86       		.byte	0x86
 4474 0445 68000000 		.4byte	0x68
 4475 0449 02       		.uleb128 0x2
 4476 044a 91       		.byte	0x91
 4477 044b 68       		.sleb128 -24
 4478 044c 16       		.uleb128 0x16
 4479 044d 87000000 		.4byte	.LASF43
 4480 0451 01       		.byte	0x1
 4481 0452 87       		.byte	0x87
 4482 0453 68000000 		.4byte	0x68
 4483 0457 02       		.uleb128 0x2
 4484 0458 91       		.byte	0x91
 4485 0459 64       		.sleb128 -28
 4486 045a 00       		.byte	0
 4487 045b 14       		.uleb128 0x14
 4488 045c 88010000 		.4byte	.LASF44
 4489 0460 01       		.byte	0x1
 4490 0461 FC       		.byte	0xfc
 4491 0462 68000000 		.4byte	0x68
 4492 0466 00000000 		.4byte	.LFB71
 4493 046a 72000000 		.4byte	.LFE71-.LFB71
 4494 046e 01       		.uleb128 0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 94


 4495 046f 9C       		.byte	0x9c
 4496 0470 D0040000 		.4byte	0x4d0
 4497 0474 18       		.uleb128 0x18
 4498 0475 7F030000 		.4byte	.LASF64
 4499 0479 0F       		.uleb128 0xf
 4500 047a 40020000 		.4byte	.LASF45
 4501 047e 01       		.byte	0x1
 4502 047f FC       		.byte	0xfc
 4503 0480 D0040000 		.4byte	0x4d0
 4504 0484 02       		.uleb128 0x2
 4505 0485 91       		.byte	0x91
 4506 0486 6C       		.sleb128 -20
 4507 0487 0E       		.uleb128 0xe
 4508 0488 7400     		.ascii	"t\000"
 4509 048a 01       		.byte	0x1
 4510 048b FC       		.byte	0xfc
 4511 048c 1D020000 		.4byte	0x21d
 4512 0490 02       		.uleb128 0x2
 4513 0491 91       		.byte	0x91
 4514 0492 68       		.sleb128 -24
 4515 0493 0E       		.uleb128 0xe
 4516 0494 7800     		.ascii	"x\000"
 4517 0496 01       		.byte	0x1
 4518 0497 FC       		.byte	0xfc
 4519 0498 68000000 		.4byte	0x68
 4520 049c 02       		.uleb128 0x2
 4521 049d 91       		.byte	0x91
 4522 049e 64       		.sleb128 -28
 4523 049f 0E       		.uleb128 0xe
 4524 04a0 7900     		.ascii	"y\000"
 4525 04a2 01       		.byte	0x1
 4526 04a3 FC       		.byte	0xfc
 4527 04a4 68000000 		.4byte	0x68
 4528 04a8 02       		.uleb128 0x2
 4529 04a9 91       		.byte	0x91
 4530 04aa 60       		.sleb128 -32
 4531 04ab 0E       		.uleb128 0xe
 4532 04ac 7A00     		.ascii	"z\000"
 4533 04ae 01       		.byte	0x1
 4534 04af FC       		.byte	0xfc
 4535 04b0 68000000 		.4byte	0x68
 4536 04b4 02       		.uleb128 0x2
 4537 04b5 91       		.byte	0x91
 4538 04b6 00       		.sleb128 0
 4539 04b7 10       		.uleb128 0x10
 4540 04b8 20000000 		.4byte	.LBB3
 4541 04bc 48000000 		.4byte	.LBE3-.LBB3
 4542 04c0 19       		.uleb128 0x19
 4543 04c1 9B030000 		.4byte	.LASF61
 4544 04c5 01       		.byte	0x1
 4545 04c6 0501     		.2byte	0x105
 4546 04c8 68000000 		.4byte	0x68
 4547 04cc 1A       		.uleb128 0x1a
 4548 04cd 00       		.byte	0
 4549 04ce 00       		.byte	0
 4550 04cf 00       		.byte	0
 4551 04d0 12       		.uleb128 0x12
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 95


 4552 04d1 04       		.byte	0x4
 4553 04d2 74040000 		.4byte	0x474
 4554 04d6 1B       		.uleb128 0x1b
 4555 04d7 D6000000 		.4byte	.LASF46
 4556 04db 01       		.byte	0x1
 4557 04dc 0D01     		.2byte	0x10d
 4558 04de 68000000 		.4byte	0x68
 4559 04e2 00000000 		.4byte	.LFB72
 4560 04e6 2C000000 		.4byte	.LFE72-.LFB72
 4561 04ea 01       		.uleb128 0x1
 4562 04eb 9C       		.byte	0x9c
 4563 04ec FE040000 		.4byte	0x4fe
 4564 04f0 1C       		.uleb128 0x1c
 4565 04f1 7400     		.ascii	"t\000"
 4566 04f3 01       		.byte	0x1
 4567 04f4 0D01     		.2byte	0x10d
 4568 04f6 1D020000 		.4byte	0x21d
 4569 04fa 02       		.uleb128 0x2
 4570 04fb 91       		.byte	0x91
 4571 04fc 74       		.sleb128 -12
 4572 04fd 00       		.byte	0
 4573 04fe 1D       		.uleb128 0x1d
 4574 04ff 7E000000 		.4byte	.LASF47
 4575 0503 01       		.byte	0x1
 4576 0504 1601     		.2byte	0x116
 4577 0506 00000000 		.4byte	.LFB73
 4578 050a 1E000000 		.4byte	.LFE73-.LFB73
 4579 050e 01       		.uleb128 0x1
 4580 050f 9C       		.byte	0x9c
 4581 0510 22050000 		.4byte	0x522
 4582 0514 1C       		.uleb128 0x1c
 4583 0515 7400     		.ascii	"t\000"
 4584 0517 01       		.byte	0x1
 4585 0518 1601     		.2byte	0x116
 4586 051a 1D020000 		.4byte	0x21d
 4587 051e 02       		.uleb128 0x2
 4588 051f 91       		.byte	0x91
 4589 0520 74       		.sleb128 -12
 4590 0521 00       		.byte	0
 4591 0522 1B       		.uleb128 0x1b
 4592 0523 28020000 		.4byte	.LASF48
 4593 0527 01       		.byte	0x1
 4594 0528 1E01     		.2byte	0x11e
 4595 052a 68000000 		.4byte	0x68
 4596 052e 00000000 		.4byte	.LFB74
 4597 0532 E8000000 		.4byte	.LFE74-.LFB74
 4598 0536 01       		.uleb128 0x1
 4599 0537 9C       		.byte	0x9c
 4600 0538 95050000 		.4byte	0x595
 4601 053c 1E       		.uleb128 0x1e
 4602 053d 95030000 		.4byte	.LASF49
 4603 0541 01       		.byte	0x1
 4604 0542 1E01     		.2byte	0x11e
 4605 0544 A2030000 		.4byte	0x3a2
 4606 0548 02       		.uleb128 0x2
 4607 0549 91       		.byte	0x91
 4608 054a 5C       		.sleb128 -36
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 96


 4609 054b 1E       		.uleb128 0x1e
 4610 054c D5020000 		.4byte	.LASF18
 4611 0550 01       		.byte	0x1
 4612 0551 1E01     		.2byte	0x11e
 4613 0553 76000000 		.4byte	0x76
 4614 0557 02       		.uleb128 0x2
 4615 0558 91       		.byte	0x91
 4616 0559 58       		.sleb128 -40
 4617 055a 1F       		.uleb128 0x1f
 4618 055b 6900     		.ascii	"i\000"
 4619 055d 01       		.byte	0x1
 4620 055e 2101     		.2byte	0x121
 4621 0560 76000000 		.4byte	0x76
 4622 0564 02       		.uleb128 0x2
 4623 0565 91       		.byte	0x91
 4624 0566 6C       		.sleb128 -20
 4625 0567 1F       		.uleb128 0x1f
 4626 0568 6D617800 		.ascii	"max\000"
 4627 056c 01       		.byte	0x1
 4628 056d 2201     		.2byte	0x122
 4629 056f 68000000 		.4byte	0x68
 4630 0573 02       		.uleb128 0x2
 4631 0574 91       		.byte	0x91
 4632 0575 68       		.sleb128 -24
 4633 0576 20       		.uleb128 0x20
 4634 0577 CC000000 		.4byte	.LASF50
 4635 057b 01       		.byte	0x1
 4636 057c 2301     		.2byte	0x123
 4637 057e A2030000 		.4byte	0x3a2
 4638 0582 02       		.uleb128 0x2
 4639 0583 91       		.byte	0x91
 4640 0584 60       		.sleb128 -32
 4641 0585 20       		.uleb128 0x20
 4642 0586 AF030000 		.4byte	.LASF51
 4643 058a 01       		.byte	0x1
 4644 058b 2401     		.2byte	0x124
 4645 058d 68000000 		.4byte	0x68
 4646 0591 02       		.uleb128 0x2
 4647 0592 91       		.byte	0x91
 4648 0593 64       		.sleb128 -28
 4649 0594 00       		.byte	0
 4650 0595 1D       		.uleb128 0x1d
 4651 0596 C6030000 		.4byte	.LASF52
 4652 059a 01       		.byte	0x1
 4653 059b 4E01     		.2byte	0x14e
 4654 059d 00000000 		.4byte	.LFB75
 4655 05a1 30000000 		.4byte	.LFE75-.LFB75
 4656 05a5 01       		.uleb128 0x1
 4657 05a6 9C       		.byte	0x9c
 4658 05a7 BA050000 		.4byte	0x5ba
 4659 05ab 1C       		.uleb128 0x1c
 4660 05ac 616900   		.ascii	"ai\000"
 4661 05af 01       		.byte	0x1
 4662 05b0 4E01     		.2byte	0x14e
 4663 05b2 BA050000 		.4byte	0x5ba
 4664 05b6 02       		.uleb128 0x2
 4665 05b7 91       		.byte	0x91
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 97


 4666 05b8 74       		.sleb128 -12
 4667 05b9 00       		.byte	0
 4668 05ba 12       		.uleb128 0x12
 4669 05bb 04       		.byte	0x4
 4670 05bc 20010000 		.4byte	0x120
 4671 05c0 1D       		.uleb128 0x1d
 4672 05c1 71000000 		.4byte	.LASF53
 4673 05c5 01       		.byte	0x1
 4674 05c6 5301     		.2byte	0x153
 4675 05c8 00000000 		.4byte	.LFB76
 4676 05cc 20000000 		.4byte	.LFE76-.LFB76
 4677 05d0 01       		.uleb128 0x1
 4678 05d1 9C       		.byte	0x9c
 4679 05d2 12060000 		.4byte	0x612
 4680 05d6 1C       		.uleb128 0x1c
 4681 05d7 616900   		.ascii	"ai\000"
 4682 05da 01       		.byte	0x1
 4683 05db 5301     		.2byte	0x153
 4684 05dd BA050000 		.4byte	0x5ba
 4685 05e1 02       		.uleb128 0x2
 4686 05e2 91       		.byte	0x91
 4687 05e3 74       		.sleb128 -12
 4688 05e4 1E       		.uleb128 0x1e
 4689 05e5 AA010000 		.4byte	.LASF25
 4690 05e9 01       		.byte	0x1
 4691 05ea 5301     		.2byte	0x153
 4692 05ec 68000000 		.4byte	0x68
 4693 05f0 02       		.uleb128 0x2
 4694 05f1 91       		.byte	0x91
 4695 05f2 70       		.sleb128 -16
 4696 05f3 1E       		.uleb128 0x1e
 4697 05f4 D5020000 		.4byte	.LASF18
 4698 05f8 01       		.byte	0x1
 4699 05f9 5301     		.2byte	0x153
 4700 05fb 68000000 		.4byte	0x68
 4701 05ff 02       		.uleb128 0x2
 4702 0600 91       		.byte	0x91
 4703 0601 6C       		.sleb128 -20
 4704 0602 1E       		.uleb128 0x1e
 4705 0603 00000000 		.4byte	.LASF19
 4706 0607 01       		.byte	0x1
 4707 0608 5301     		.2byte	0x153
 4708 060a 68000000 		.4byte	0x68
 4709 060e 02       		.uleb128 0x2
 4710 060f 91       		.byte	0x91
 4711 0610 68       		.sleb128 -24
 4712 0611 00       		.byte	0
 4713 0612 1D       		.uleb128 0x1d
 4714 0613 3C000000 		.4byte	.LASF54
 4715 0617 01       		.byte	0x1
 4716 0618 5801     		.2byte	0x158
 4717 061a 00000000 		.4byte	.LFB77
 4718 061e 70000000 		.4byte	.LFE77-.LFB77
 4719 0622 01       		.uleb128 0x1
 4720 0623 9C       		.byte	0x9c
 4721 0624 73060000 		.4byte	0x673
 4722 0628 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 98


 4723 0629 616900   		.ascii	"ai\000"
 4724 062c 01       		.byte	0x1
 4725 062d 5801     		.2byte	0x158
 4726 062f 73060000 		.4byte	0x673
 4727 0633 02       		.uleb128 0x2
 4728 0634 91       		.byte	0x91
 4729 0635 74       		.sleb128 -12
 4730 0636 1E       		.uleb128 0x1e
 4731 0637 D5020000 		.4byte	.LASF18
 4732 063b 01       		.byte	0x1
 4733 063c 5801     		.2byte	0x158
 4734 063e 68000000 		.4byte	0x68
 4735 0642 02       		.uleb128 0x2
 4736 0643 91       		.byte	0x91
 4737 0644 70       		.sleb128 -16
 4738 0645 1E       		.uleb128 0x1e
 4739 0646 00000000 		.4byte	.LASF19
 4740 064a 01       		.byte	0x1
 4741 064b 5801     		.2byte	0x158
 4742 064d 68000000 		.4byte	0x68
 4743 0651 02       		.uleb128 0x2
 4744 0652 91       		.byte	0x91
 4745 0653 6C       		.sleb128 -20
 4746 0654 1E       		.uleb128 0x1e
 4747 0655 21000000 		.4byte	.LASF55
 4748 0659 01       		.byte	0x1
 4749 065a 5901     		.2byte	0x159
 4750 065c A4000000 		.4byte	0xa4
 4751 0660 02       		.uleb128 0x2
 4752 0661 91       		.byte	0x91
 4753 0662 68       		.sleb128 -24
 4754 0663 1E       		.uleb128 0x1e
 4755 0664 37020000 		.4byte	.LASF56
 4756 0668 01       		.byte	0x1
 4757 0669 5901     		.2byte	0x159
 4758 066b A4000000 		.4byte	0xa4
 4759 066f 02       		.uleb128 0x2
 4760 0670 91       		.byte	0x91
 4761 0671 00       		.sleb128 0
 4762 0672 00       		.byte	0
 4763 0673 12       		.uleb128 0x12
 4764 0674 04       		.byte	0x4
 4765 0675 66010000 		.4byte	0x166
 4766 0679 1B       		.uleb128 0x1b
 4767 067a 90020000 		.4byte	.LASF57
 4768 067e 01       		.byte	0x1
 4769 067f 7001     		.2byte	0x170
 4770 0681 68000000 		.4byte	0x68
 4771 0685 00000000 		.4byte	.LFB78
 4772 0689 060A0000 		.4byte	.LFE78-.LFB78
 4773 068d 01       		.uleb128 0x1
 4774 068e 9C       		.byte	0x9c
 4775 068f 8F070000 		.4byte	0x78f
 4776 0693 1C       		.uleb128 0x1c
 4777 0694 7400     		.ascii	"t\000"
 4778 0696 01       		.byte	0x1
 4779 0697 7001     		.2byte	0x170
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 99


 4780 0699 1D020000 		.4byte	0x21d
 4781 069d 02       		.uleb128 0x2
 4782 069e 91       		.byte	0x91
 4783 069f 44       		.sleb128 -60
 4784 06a0 1C       		.uleb128 0x1c
 4785 06a1 616900   		.ascii	"ai\000"
 4786 06a4 01       		.byte	0x1
 4787 06a5 7001     		.2byte	0x170
 4788 06a7 BA050000 		.4byte	0x5ba
 4789 06ab 02       		.uleb128 0x2
 4790 06ac 91       		.byte	0x91
 4791 06ad 40       		.sleb128 -64
 4792 06ae 1F       		.uleb128 0x1f
 4793 06af 7800     		.ascii	"x\000"
 4794 06b1 01       		.byte	0x1
 4795 06b2 7301     		.2byte	0x173
 4796 06b4 68000000 		.4byte	0x68
 4797 06b8 02       		.uleb128 0x2
 4798 06b9 91       		.byte	0x91
 4799 06ba 6C       		.sleb128 -20
 4800 06bb 1F       		.uleb128 0x1f
 4801 06bc 7900     		.ascii	"y\000"
 4802 06be 01       		.byte	0x1
 4803 06bf 7301     		.2byte	0x173
 4804 06c1 68000000 		.4byte	0x68
 4805 06c5 02       		.uleb128 0x2
 4806 06c6 91       		.byte	0x91
 4807 06c7 68       		.sleb128 -24
 4808 06c8 1F       		.uleb128 0x1f
 4809 06c9 7A00     		.ascii	"z\000"
 4810 06cb 01       		.byte	0x1
 4811 06cc 7301     		.2byte	0x173
 4812 06ce 68000000 		.4byte	0x68
 4813 06d2 02       		.uleb128 0x2
 4814 06d3 91       		.byte	0x91
 4815 06d4 64       		.sleb128 -28
 4816 06d5 1F       		.uleb128 0x1f
 4817 06d6 7A7000   		.ascii	"zp\000"
 4818 06d9 01       		.byte	0x1
 4819 06da 7301     		.2byte	0x173
 4820 06dc 68000000 		.4byte	0x68
 4821 06e0 02       		.uleb128 0x2
 4822 06e1 91       		.byte	0x91
 4823 06e2 60       		.sleb128 -32
 4824 06e3 20       		.uleb128 0x20
 4825 06e4 87000000 		.4byte	.LASF43
 4826 06e8 01       		.byte	0x1
 4827 06e9 7401     		.2byte	0x174
 4828 06eb 68000000 		.4byte	0x68
 4829 06ef 02       		.uleb128 0x2
 4830 06f0 91       		.byte	0x91
 4831 06f1 5C       		.sleb128 -36
 4832 06f2 20       		.uleb128 0x20
 4833 06f3 A2020000 		.4byte	.LASF58
 4834 06f7 01       		.byte	0x1
 4835 06f8 7501     		.2byte	0x175
 4836 06fa 8F070000 		.4byte	0x78f
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 100


 4837 06fe 02       		.uleb128 0x2
 4838 06ff 91       		.byte	0x91
 4839 0700 48       		.sleb128 -56
 4840 0701 20       		.uleb128 0x20
 4841 0702 2A000000 		.4byte	.LASF59
 4842 0706 01       		.byte	0x1
 4843 0707 7601     		.2byte	0x176
 4844 0709 68000000 		.4byte	0x68
 4845 070d 02       		.uleb128 0x2
 4846 070e 91       		.byte	0x91
 4847 070f 58       		.sleb128 -40
 4848 0710 21       		.uleb128 0x21
 4849 0711 61030000 		.4byte	.LASF60
 4850 0715 01       		.byte	0x1
 4851 0716 8C01     		.2byte	0x18c
 4852 0718 68000000 		.4byte	0x68
 4853 071c 22070000 		.4byte	0x722
 4854 0720 1A       		.uleb128 0x1a
 4855 0721 00       		.byte	0
 4856 0722 10       		.uleb128 0x10
 4857 0723 16000000 		.4byte	.LBB4
 4858 0727 CA060000 		.4byte	.LBE4-.LBB4
 4859 072b 21       		.uleb128 0x21
 4860 072c 61030000 		.4byte	.LASF60
 4861 0730 01       		.byte	0x1
 4862 0731 8C01     		.2byte	0x18c
 4863 0733 68000000 		.4byte	0x68
 4864 0737 3D070000 		.4byte	0x73d
 4865 073b 1A       		.uleb128 0x1a
 4866 073c 00       		.byte	0
 4867 073d 22       		.uleb128 0x22
 4868 073e C4000000 		.4byte	.LBB5
 4869 0742 0E000000 		.4byte	.LBE5-.LBB5
 4870 0746 59070000 		.4byte	0x759
 4871 074a 19       		.uleb128 0x19
 4872 074b 61030000 		.4byte	.LASF60
 4873 074f 01       		.byte	0x1
 4874 0750 8C01     		.2byte	0x18c
 4875 0752 68000000 		.4byte	0x68
 4876 0756 1A       		.uleb128 0x1a
 4877 0757 00       		.byte	0
 4878 0758 00       		.byte	0
 4879 0759 22       		.uleb128 0x22
 4880 075a E8000000 		.4byte	.LBB6
 4881 075e B6000000 		.4byte	.LBE6-.LBB6
 4882 0762 75070000 		.4byte	0x775
 4883 0766 19       		.uleb128 0x19
 4884 0767 61030000 		.4byte	.LASF60
 4885 076b 01       		.byte	0x1
 4886 076c 8C01     		.2byte	0x18c
 4887 076e 68000000 		.4byte	0x68
 4888 0772 1A       		.uleb128 0x1a
 4889 0773 00       		.byte	0
 4890 0774 00       		.byte	0
 4891 0775 10       		.uleb128 0x10
 4892 0776 B4010000 		.4byte	.LBB7
 4893 077a B4000000 		.4byte	.LBE7-.LBB7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 101


 4894 077e 19       		.uleb128 0x19
 4895 077f 61030000 		.4byte	.LASF60
 4896 0783 01       		.byte	0x1
 4897 0784 8C01     		.2byte	0x18c
 4898 0786 68000000 		.4byte	0x68
 4899 078a 1A       		.uleb128 0x1a
 4900 078b 00       		.byte	0
 4901 078c 00       		.byte	0
 4902 078d 00       		.byte	0
 4903 078e 00       		.byte	0
 4904 078f 07       		.uleb128 0x7
 4905 0790 68000000 		.4byte	0x68
 4906 0794 9F070000 		.4byte	0x79f
 4907 0798 08       		.uleb128 0x8
 4908 0799 81000000 		.4byte	0x81
 4909 079d 03       		.byte	0x3
 4910 079e 00       		.byte	0
 4911 079f 23       		.uleb128 0x23
 4912 07a0 61030000 		.4byte	.LASF60
 4913 07a4 01       		.byte	0x1
 4914 07a5 6502     		.2byte	0x265
 4915 07a7 68000000 		.4byte	0x68
 4916 07ab 00000000 		.4byte	.LFB79
 4917 07af FE010000 		.4byte	.LFE79-.LFB79
 4918 07b3 01       		.uleb128 0x1
 4919 07b4 9C       		.byte	0x9c
 4920 07b5 E6070000 		.4byte	0x7e6
 4921 07b9 1C       		.uleb128 0x1c
 4922 07ba 616900   		.ascii	"ai\000"
 4923 07bd 01       		.byte	0x1
 4924 07be 6502     		.2byte	0x265
 4925 07c0 BA050000 		.4byte	0x5ba
 4926 07c4 02       		.uleb128 0x2
 4927 07c5 91       		.byte	0x91
 4928 07c6 74       		.sleb128 -12
 4929 07c7 1E       		.uleb128 0x1e
 4930 07c8 87000000 		.4byte	.LASF43
 4931 07cc 01       		.byte	0x1
 4932 07cd 6502     		.2byte	0x265
 4933 07cf 68000000 		.4byte	0x68
 4934 07d3 02       		.uleb128 0x2
 4935 07d4 91       		.byte	0x91
 4936 07d5 70       		.sleb128 -16
 4937 07d6 1E       		.uleb128 0x1e
 4938 07d7 A2020000 		.4byte	.LASF58
 4939 07db 01       		.byte	0x1
 4940 07dc 6502     		.2byte	0x265
 4941 07de A2030000 		.4byte	0x3a2
 4942 07e2 02       		.uleb128 0x2
 4943 07e3 91       		.byte	0x91
 4944 07e4 6C       		.sleb128 -20
 4945 07e5 00       		.byte	0
 4946 07e6 1D       		.uleb128 0x1d
 4947 07e7 4E000000 		.4byte	.LASF62
 4948 07eb 01       		.byte	0x1
 4949 07ec 8402     		.2byte	0x284
 4950 07ee 00000000 		.4byte	.LFB80
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 102


 4951 07f2 68000000 		.4byte	.LFE80-.LFB80
 4952 07f6 01       		.uleb128 0x1
 4953 07f7 9C       		.byte	0x9c
 4954 07f8 18080000 		.4byte	0x818
 4955 07fc 1C       		.uleb128 0x1c
 4956 07fd 616900   		.ascii	"ai\000"
 4957 0800 01       		.byte	0x1
 4958 0801 8402     		.2byte	0x284
 4959 0803 BA050000 		.4byte	0x5ba
 4960 0807 02       		.uleb128 0x2
 4961 0808 91       		.byte	0x91
 4962 0809 6C       		.sleb128 -20
 4963 080a 1F       		.uleb128 0x1f
 4964 080b 6900     		.ascii	"i\000"
 4965 080d 01       		.byte	0x1
 4966 080e 8702     		.2byte	0x287
 4967 0810 68000000 		.4byte	0x68
 4968 0814 02       		.uleb128 0x2
 4969 0815 91       		.byte	0x91
 4970 0816 74       		.sleb128 -12
 4971 0817 00       		.byte	0
 4972 0818 1D       		.uleb128 0x1d
 4973 0819 9C000000 		.4byte	.LASF63
 4974 081d 01       		.byte	0x1
 4975 081e 9402     		.2byte	0x294
 4976 0820 00000000 		.4byte	.LFB81
 4977 0824 3E000000 		.4byte	.LFE81-.LFB81
 4978 0828 01       		.uleb128 0x1
 4979 0829 9C       		.byte	0x9c
 4980 082a 7B080000 		.4byte	0x87b
 4981 082e 1C       		.uleb128 0x1c
 4982 082f 7400     		.ascii	"t\000"
 4983 0831 01       		.byte	0x1
 4984 0832 9402     		.2byte	0x294
 4985 0834 1D020000 		.4byte	0x21d
 4986 0838 02       		.uleb128 0x2
 4987 0839 91       		.byte	0x91
 4988 083a 6C       		.sleb128 -20
 4989 083b 1C       		.uleb128 0x1c
 4990 083c 616900   		.ascii	"ai\000"
 4991 083f 01       		.byte	0x1
 4992 0840 9402     		.2byte	0x294
 4993 0842 BA050000 		.4byte	0x5ba
 4994 0846 02       		.uleb128 0x2
 4995 0847 91       		.byte	0x91
 4996 0848 68       		.sleb128 -24
 4997 0849 18       		.uleb128 0x18
 4998 084a 7F030000 		.4byte	.LASF64
 4999 084e 1E       		.uleb128 0x1e
 5000 084f 40020000 		.4byte	.LASF45
 5001 0853 01       		.byte	0x1
 5002 0854 9402     		.2byte	0x294
 5003 0856 7B080000 		.4byte	0x87b
 5004 085a 02       		.uleb128 0x2
 5005 085b 91       		.byte	0x91
 5006 085c 64       		.sleb128 -28
 5007 085d 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 103


 5008 085e 6C6F6300 		.ascii	"loc\000"
 5009 0862 01       		.byte	0x1
 5010 0863 9502     		.2byte	0x295
 5011 0865 68000000 		.4byte	0x68
 5012 0869 02       		.uleb128 0x2
 5013 086a 91       		.byte	0x91
 5014 086b 74       		.sleb128 -12
 5015 086c 19       		.uleb128 0x19
 5016 086d 9B030000 		.4byte	.LASF61
 5017 0871 01       		.byte	0x1
 5018 0872 0501     		.2byte	0x105
 5019 0874 68000000 		.4byte	0x68
 5020 0878 1A       		.uleb128 0x1a
 5021 0879 00       		.byte	0
 5022 087a 00       		.byte	0
 5023 087b 12       		.uleb128 0x12
 5024 087c 04       		.byte	0x4
 5025 087d 49080000 		.4byte	0x849
 5026 0881 1D       		.uleb128 0x1d
 5027 0882 72010000 		.4byte	.LASF65
 5028 0886 01       		.byte	0x1
 5029 0887 9A02     		.2byte	0x29a
 5030 0889 00000000 		.4byte	.LFB82
 5031 088d 98000000 		.4byte	.LFE82-.LFB82
 5032 0891 01       		.uleb128 0x1
 5033 0892 9C       		.byte	0x9c
 5034 0893 CA080000 		.4byte	0x8ca
 5035 0897 18       		.uleb128 0x18
 5036 0898 7F030000 		.4byte	.LASF64
 5037 089c 1E       		.uleb128 0x1e
 5038 089d 40020000 		.4byte	.LASF45
 5039 08a1 01       		.byte	0x1
 5040 08a2 9A02     		.2byte	0x29a
 5041 08a4 CA080000 		.4byte	0x8ca
 5042 08a8 02       		.uleb128 0x2
 5043 08a9 91       		.byte	0x91
 5044 08aa 74       		.sleb128 -12
 5045 08ab 1C       		.uleb128 0x1c
 5046 08ac 74746100 		.ascii	"tta\000"
 5047 08b0 01       		.byte	0x1
 5048 08b1 9A02     		.2byte	0x29a
 5049 08b3 73060000 		.4byte	0x673
 5050 08b7 02       		.uleb128 0x2
 5051 08b8 91       		.byte	0x91
 5052 08b9 70       		.sleb128 -16
 5053 08ba 1E       		.uleb128 0x1e
 5054 08bb BF030000 		.4byte	.LASF20
 5055 08bf 01       		.byte	0x1
 5056 08c0 9A02     		.2byte	0x29a
 5057 08c2 68000000 		.4byte	0x68
 5058 08c6 02       		.uleb128 0x2
 5059 08c7 91       		.byte	0x91
 5060 08c8 6C       		.sleb128 -20
 5061 08c9 00       		.byte	0
 5062 08ca 12       		.uleb128 0x12
 5063 08cb 04       		.byte	0x4
 5064 08cc 97080000 		.4byte	0x897
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 104


 5065 08d0 1D       		.uleb128 0x1d
 5066 08d1 8C030000 		.4byte	.LASF66
 5067 08d5 01       		.byte	0x1
 5068 08d6 AA02     		.2byte	0x2aa
 5069 08d8 00000000 		.4byte	.LFB83
 5070 08dc 82000000 		.4byte	.LFE83-.LFB83
 5071 08e0 01       		.uleb128 0x1
 5072 08e1 9C       		.byte	0x9c
 5073 08e2 31090000 		.4byte	0x931
 5074 08e6 18       		.uleb128 0x18
 5075 08e7 7F030000 		.4byte	.LASF64
 5076 08eb 1E       		.uleb128 0x1e
 5077 08ec 40020000 		.4byte	.LASF45
 5078 08f0 01       		.byte	0x1
 5079 08f1 AA02     		.2byte	0x2aa
 5080 08f3 31090000 		.4byte	0x931
 5081 08f7 02       		.uleb128 0x2
 5082 08f8 91       		.byte	0x91
 5083 08f9 74       		.sleb128 -12
 5084 08fa 1C       		.uleb128 0x1c
 5085 08fb 74746100 		.ascii	"tta\000"
 5086 08ff 01       		.byte	0x1
 5087 0900 AA02     		.2byte	0x2aa
 5088 0902 73060000 		.4byte	0x673
 5089 0906 02       		.uleb128 0x2
 5090 0907 91       		.byte	0x91
 5091 0908 70       		.sleb128 -16
 5092 0909 1C       		.uleb128 0x1c
 5093 090a 7800     		.ascii	"x\000"
 5094 090c 01       		.byte	0x1
 5095 090d AA02     		.2byte	0x2aa
 5096 090f 68000000 		.4byte	0x68
 5097 0913 02       		.uleb128 0x2
 5098 0914 91       		.byte	0x91
 5099 0915 6C       		.sleb128 -20
 5100 0916 1C       		.uleb128 0x1c
 5101 0917 7900     		.ascii	"y\000"
 5102 0919 01       		.byte	0x1
 5103 091a AA02     		.2byte	0x2aa
 5104 091c 68000000 		.4byte	0x68
 5105 0920 02       		.uleb128 0x2
 5106 0921 91       		.byte	0x91
 5107 0922 68       		.sleb128 -24
 5108 0923 1C       		.uleb128 0x1c
 5109 0924 7A00     		.ascii	"z\000"
 5110 0926 01       		.byte	0x1
 5111 0927 AA02     		.2byte	0x2aa
 5112 0929 68000000 		.4byte	0x68
 5113 092d 02       		.uleb128 0x2
 5114 092e 91       		.byte	0x91
 5115 092f 00       		.sleb128 0
 5116 0930 00       		.byte	0
 5117 0931 12       		.uleb128 0x12
 5118 0932 04       		.byte	0x4
 5119 0933 E6080000 		.4byte	0x8e6
 5120 0937 24       		.uleb128 0x24
 5121 0938 C8020000 		.4byte	.LASF70
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 105


 5122 093c 05       		.byte	0x5
 5123 093d 5506     		.2byte	0x655
 5124 093f 43090000 		.4byte	0x943
 5125 0943 25       		.uleb128 0x25
 5126 0944 AF000000 		.4byte	0xaf
 5127 0948 00       		.byte	0
 5128              		.section	.debug_abbrev,"",%progbits
 5129              	.Ldebug_abbrev0:
 5130 0000 01       		.uleb128 0x1
 5131 0001 11       		.uleb128 0x11
 5132 0002 01       		.byte	0x1
 5133 0003 25       		.uleb128 0x25
 5134 0004 0E       		.uleb128 0xe
 5135 0005 13       		.uleb128 0x13
 5136 0006 0B       		.uleb128 0xb
 5137 0007 03       		.uleb128 0x3
 5138 0008 0E       		.uleb128 0xe
 5139 0009 1B       		.uleb128 0x1b
 5140 000a 0E       		.uleb128 0xe
 5141 000b 55       		.uleb128 0x55
 5142 000c 17       		.uleb128 0x17
 5143 000d 11       		.uleb128 0x11
 5144 000e 01       		.uleb128 0x1
 5145 000f 10       		.uleb128 0x10
 5146 0010 17       		.uleb128 0x17
 5147 0011 00       		.byte	0
 5148 0012 00       		.byte	0
 5149 0013 02       		.uleb128 0x2
 5150 0014 24       		.uleb128 0x24
 5151 0015 00       		.byte	0
 5152 0016 0B       		.uleb128 0xb
 5153 0017 0B       		.uleb128 0xb
 5154 0018 3E       		.uleb128 0x3e
 5155 0019 0B       		.uleb128 0xb
 5156 001a 03       		.uleb128 0x3
 5157 001b 0E       		.uleb128 0xe
 5158 001c 00       		.byte	0
 5159 001d 00       		.byte	0
 5160 001e 03       		.uleb128 0x3
 5161 001f 16       		.uleb128 0x16
 5162 0020 00       		.byte	0
 5163 0021 03       		.uleb128 0x3
 5164 0022 0E       		.uleb128 0xe
 5165 0023 3A       		.uleb128 0x3a
 5166 0024 0B       		.uleb128 0xb
 5167 0025 3B       		.uleb128 0x3b
 5168 0026 0B       		.uleb128 0xb
 5169 0027 49       		.uleb128 0x49
 5170 0028 13       		.uleb128 0x13
 5171 0029 00       		.byte	0
 5172 002a 00       		.byte	0
 5173 002b 04       		.uleb128 0x4
 5174 002c 24       		.uleb128 0x24
 5175 002d 00       		.byte	0
 5176 002e 0B       		.uleb128 0xb
 5177 002f 0B       		.uleb128 0xb
 5178 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 106


 5179 0031 0B       		.uleb128 0xb
 5180 0032 03       		.uleb128 0x3
 5181 0033 08       		.uleb128 0x8
 5182 0034 00       		.byte	0
 5183 0035 00       		.byte	0
 5184 0036 05       		.uleb128 0x5
 5185 0037 13       		.uleb128 0x13
 5186 0038 01       		.byte	0x1
 5187 0039 03       		.uleb128 0x3
 5188 003a 0E       		.uleb128 0xe
 5189 003b 0B       		.uleb128 0xb
 5190 003c 05       		.uleb128 0x5
 5191 003d 3A       		.uleb128 0x3a
 5192 003e 0B       		.uleb128 0xb
 5193 003f 3B       		.uleb128 0x3b
 5194 0040 0B       		.uleb128 0xb
 5195 0041 01       		.uleb128 0x1
 5196 0042 13       		.uleb128 0x13
 5197 0043 00       		.byte	0
 5198 0044 00       		.byte	0
 5199 0045 06       		.uleb128 0x6
 5200 0046 0D       		.uleb128 0xd
 5201 0047 00       		.byte	0
 5202 0048 03       		.uleb128 0x3
 5203 0049 0E       		.uleb128 0xe
 5204 004a 3A       		.uleb128 0x3a
 5205 004b 0B       		.uleb128 0xb
 5206 004c 3B       		.uleb128 0x3b
 5207 004d 0B       		.uleb128 0xb
 5208 004e 49       		.uleb128 0x49
 5209 004f 13       		.uleb128 0x13
 5210 0050 38       		.uleb128 0x38
 5211 0051 0B       		.uleb128 0xb
 5212 0052 00       		.byte	0
 5213 0053 00       		.byte	0
 5214 0054 07       		.uleb128 0x7
 5215 0055 01       		.uleb128 0x1
 5216 0056 01       		.byte	0x1
 5217 0057 49       		.uleb128 0x49
 5218 0058 13       		.uleb128 0x13
 5219 0059 01       		.uleb128 0x1
 5220 005a 13       		.uleb128 0x13
 5221 005b 00       		.byte	0
 5222 005c 00       		.byte	0
 5223 005d 08       		.uleb128 0x8
 5224 005e 21       		.uleb128 0x21
 5225 005f 00       		.byte	0
 5226 0060 49       		.uleb128 0x49
 5227 0061 13       		.uleb128 0x13
 5228 0062 2F       		.uleb128 0x2f
 5229 0063 0B       		.uleb128 0xb
 5230 0064 00       		.byte	0
 5231 0065 00       		.byte	0
 5232 0066 09       		.uleb128 0x9
 5233 0067 13       		.uleb128 0x13
 5234 0068 01       		.byte	0x1
 5235 0069 03       		.uleb128 0x3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 107


 5236 006a 08       		.uleb128 0x8
 5237 006b 0B       		.uleb128 0xb
 5238 006c 05       		.uleb128 0x5
 5239 006d 3A       		.uleb128 0x3a
 5240 006e 0B       		.uleb128 0xb
 5241 006f 3B       		.uleb128 0x3b
 5242 0070 05       		.uleb128 0x5
 5243 0071 01       		.uleb128 0x1
 5244 0072 13       		.uleb128 0x13
 5245 0073 00       		.byte	0
 5246 0074 00       		.byte	0
 5247 0075 0A       		.uleb128 0xa
 5248 0076 0D       		.uleb128 0xd
 5249 0077 00       		.byte	0
 5250 0078 03       		.uleb128 0x3
 5251 0079 0E       		.uleb128 0xe
 5252 007a 3A       		.uleb128 0x3a
 5253 007b 0B       		.uleb128 0xb
 5254 007c 3B       		.uleb128 0x3b
 5255 007d 05       		.uleb128 0x5
 5256 007e 49       		.uleb128 0x49
 5257 007f 13       		.uleb128 0x13
 5258 0080 38       		.uleb128 0x38
 5259 0081 0B       		.uleb128 0xb
 5260 0082 00       		.byte	0
 5261 0083 00       		.byte	0
 5262 0084 0B       		.uleb128 0xb
 5263 0085 0D       		.uleb128 0xd
 5264 0086 00       		.byte	0
 5265 0087 03       		.uleb128 0x3
 5266 0088 0E       		.uleb128 0xe
 5267 0089 3A       		.uleb128 0x3a
 5268 008a 0B       		.uleb128 0xb
 5269 008b 3B       		.uleb128 0x3b
 5270 008c 05       		.uleb128 0x5
 5271 008d 49       		.uleb128 0x49
 5272 008e 13       		.uleb128 0x13
 5273 008f 38       		.uleb128 0x38
 5274 0090 05       		.uleb128 0x5
 5275 0091 00       		.byte	0
 5276 0092 00       		.byte	0
 5277 0093 0C       		.uleb128 0xc
 5278 0094 13       		.uleb128 0x13
 5279 0095 01       		.byte	0x1
 5280 0096 03       		.uleb128 0x3
 5281 0097 0E       		.uleb128 0xe
 5282 0098 0B       		.uleb128 0xb
 5283 0099 05       		.uleb128 0x5
 5284 009a 3A       		.uleb128 0x3a
 5285 009b 0B       		.uleb128 0xb
 5286 009c 3B       		.uleb128 0x3b
 5287 009d 05       		.uleb128 0x5
 5288 009e 01       		.uleb128 0x1
 5289 009f 13       		.uleb128 0x13
 5290 00a0 00       		.byte	0
 5291 00a1 00       		.byte	0
 5292 00a2 0D       		.uleb128 0xd
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 108


 5293 00a3 2E       		.uleb128 0x2e
 5294 00a4 01       		.byte	0x1
 5295 00a5 3F       		.uleb128 0x3f
 5296 00a6 19       		.uleb128 0x19
 5297 00a7 03       		.uleb128 0x3
 5298 00a8 0E       		.uleb128 0xe
 5299 00a9 3A       		.uleb128 0x3a
 5300 00aa 0B       		.uleb128 0xb
 5301 00ab 3B       		.uleb128 0x3b
 5302 00ac 0B       		.uleb128 0xb
 5303 00ad 27       		.uleb128 0x27
 5304 00ae 19       		.uleb128 0x19
 5305 00af 11       		.uleb128 0x11
 5306 00b0 01       		.uleb128 0x1
 5307 00b1 12       		.uleb128 0x12
 5308 00b2 06       		.uleb128 0x6
 5309 00b3 40       		.uleb128 0x40
 5310 00b4 18       		.uleb128 0x18
 5311 00b5 9742     		.uleb128 0x2117
 5312 00b7 19       		.uleb128 0x19
 5313 00b8 01       		.uleb128 0x1
 5314 00b9 13       		.uleb128 0x13
 5315 00ba 00       		.byte	0
 5316 00bb 00       		.byte	0
 5317 00bc 0E       		.uleb128 0xe
 5318 00bd 05       		.uleb128 0x5
 5319 00be 00       		.byte	0
 5320 00bf 03       		.uleb128 0x3
 5321 00c0 08       		.uleb128 0x8
 5322 00c1 3A       		.uleb128 0x3a
 5323 00c2 0B       		.uleb128 0xb
 5324 00c3 3B       		.uleb128 0x3b
 5325 00c4 0B       		.uleb128 0xb
 5326 00c5 49       		.uleb128 0x49
 5327 00c6 13       		.uleb128 0x13
 5328 00c7 02       		.uleb128 0x2
 5329 00c8 18       		.uleb128 0x18
 5330 00c9 00       		.byte	0
 5331 00ca 00       		.byte	0
 5332 00cb 0F       		.uleb128 0xf
 5333 00cc 05       		.uleb128 0x5
 5334 00cd 00       		.byte	0
 5335 00ce 03       		.uleb128 0x3
 5336 00cf 0E       		.uleb128 0xe
 5337 00d0 3A       		.uleb128 0x3a
 5338 00d1 0B       		.uleb128 0xb
 5339 00d2 3B       		.uleb128 0x3b
 5340 00d3 0B       		.uleb128 0xb
 5341 00d4 49       		.uleb128 0x49
 5342 00d5 13       		.uleb128 0x13
 5343 00d6 02       		.uleb128 0x2
 5344 00d7 18       		.uleb128 0x18
 5345 00d8 00       		.byte	0
 5346 00d9 00       		.byte	0
 5347 00da 10       		.uleb128 0x10
 5348 00db 0B       		.uleb128 0xb
 5349 00dc 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 109


 5350 00dd 11       		.uleb128 0x11
 5351 00de 01       		.uleb128 0x1
 5352 00df 12       		.uleb128 0x12
 5353 00e0 06       		.uleb128 0x6
 5354 00e1 00       		.byte	0
 5355 00e2 00       		.byte	0
 5356 00e3 11       		.uleb128 0x11
 5357 00e4 34       		.uleb128 0x34
 5358 00e5 00       		.byte	0
 5359 00e6 03       		.uleb128 0x3
 5360 00e7 08       		.uleb128 0x8
 5361 00e8 3A       		.uleb128 0x3a
 5362 00e9 0B       		.uleb128 0xb
 5363 00ea 3B       		.uleb128 0x3b
 5364 00eb 0B       		.uleb128 0xb
 5365 00ec 49       		.uleb128 0x49
 5366 00ed 13       		.uleb128 0x13
 5367 00ee 02       		.uleb128 0x2
 5368 00ef 18       		.uleb128 0x18
 5369 00f0 00       		.byte	0
 5370 00f1 00       		.byte	0
 5371 00f2 12       		.uleb128 0x12
 5372 00f3 0F       		.uleb128 0xf
 5373 00f4 00       		.byte	0
 5374 00f5 0B       		.uleb128 0xb
 5375 00f6 0B       		.uleb128 0xb
 5376 00f7 49       		.uleb128 0x49
 5377 00f8 13       		.uleb128 0x13
 5378 00f9 00       		.byte	0
 5379 00fa 00       		.byte	0
 5380 00fb 13       		.uleb128 0x13
 5381 00fc 2E       		.uleb128 0x2e
 5382 00fd 01       		.byte	0x1
 5383 00fe 3F       		.uleb128 0x3f
 5384 00ff 19       		.uleb128 0x19
 5385 0100 03       		.uleb128 0x3
 5386 0101 0E       		.uleb128 0xe
 5387 0102 3A       		.uleb128 0x3a
 5388 0103 0B       		.uleb128 0xb
 5389 0104 3B       		.uleb128 0x3b
 5390 0105 0B       		.uleb128 0xb
 5391 0106 27       		.uleb128 0x27
 5392 0107 19       		.uleb128 0x19
 5393 0108 49       		.uleb128 0x49
 5394 0109 13       		.uleb128 0x13
 5395 010a 11       		.uleb128 0x11
 5396 010b 01       		.uleb128 0x1
 5397 010c 12       		.uleb128 0x12
 5398 010d 06       		.uleb128 0x6
 5399 010e 40       		.uleb128 0x40
 5400 010f 18       		.uleb128 0x18
 5401 0110 9742     		.uleb128 0x2117
 5402 0112 19       		.uleb128 0x19
 5403 0113 01       		.uleb128 0x1
 5404 0114 13       		.uleb128 0x13
 5405 0115 00       		.byte	0
 5406 0116 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 110


 5407 0117 14       		.uleb128 0x14
 5408 0118 2E       		.uleb128 0x2e
 5409 0119 01       		.byte	0x1
 5410 011a 3F       		.uleb128 0x3f
 5411 011b 19       		.uleb128 0x19
 5412 011c 03       		.uleb128 0x3
 5413 011d 0E       		.uleb128 0xe
 5414 011e 3A       		.uleb128 0x3a
 5415 011f 0B       		.uleb128 0xb
 5416 0120 3B       		.uleb128 0x3b
 5417 0121 0B       		.uleb128 0xb
 5418 0122 27       		.uleb128 0x27
 5419 0123 19       		.uleb128 0x19
 5420 0124 49       		.uleb128 0x49
 5421 0125 13       		.uleb128 0x13
 5422 0126 11       		.uleb128 0x11
 5423 0127 01       		.uleb128 0x1
 5424 0128 12       		.uleb128 0x12
 5425 0129 06       		.uleb128 0x6
 5426 012a 40       		.uleb128 0x40
 5427 012b 18       		.uleb128 0x18
 5428 012c 9642     		.uleb128 0x2116
 5429 012e 19       		.uleb128 0x19
 5430 012f 01       		.uleb128 0x1
 5431 0130 13       		.uleb128 0x13
 5432 0131 00       		.byte	0
 5433 0132 00       		.byte	0
 5434 0133 15       		.uleb128 0x15
 5435 0134 2E       		.uleb128 0x2e
 5436 0135 01       		.byte	0x1
 5437 0136 3F       		.uleb128 0x3f
 5438 0137 19       		.uleb128 0x19
 5439 0138 03       		.uleb128 0x3
 5440 0139 0E       		.uleb128 0xe
 5441 013a 3A       		.uleb128 0x3a
 5442 013b 0B       		.uleb128 0xb
 5443 013c 3B       		.uleb128 0x3b
 5444 013d 0B       		.uleb128 0xb
 5445 013e 49       		.uleb128 0x49
 5446 013f 13       		.uleb128 0x13
 5447 0140 11       		.uleb128 0x11
 5448 0141 01       		.uleb128 0x1
 5449 0142 12       		.uleb128 0x12
 5450 0143 06       		.uleb128 0x6
 5451 0144 40       		.uleb128 0x40
 5452 0145 18       		.uleb128 0x18
 5453 0146 9642     		.uleb128 0x2116
 5454 0148 19       		.uleb128 0x19
 5455 0149 01       		.uleb128 0x1
 5456 014a 13       		.uleb128 0x13
 5457 014b 00       		.byte	0
 5458 014c 00       		.byte	0
 5459 014d 16       		.uleb128 0x16
 5460 014e 34       		.uleb128 0x34
 5461 014f 00       		.byte	0
 5462 0150 03       		.uleb128 0x3
 5463 0151 0E       		.uleb128 0xe
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 111


 5464 0152 3A       		.uleb128 0x3a
 5465 0153 0B       		.uleb128 0xb
 5466 0154 3B       		.uleb128 0x3b
 5467 0155 0B       		.uleb128 0xb
 5468 0156 49       		.uleb128 0x49
 5469 0157 13       		.uleb128 0x13
 5470 0158 02       		.uleb128 0x2
 5471 0159 18       		.uleb128 0x18
 5472 015a 00       		.byte	0
 5473 015b 00       		.byte	0
 5474 015c 17       		.uleb128 0x17
 5475 015d 2E       		.uleb128 0x2e
 5476 015e 01       		.byte	0x1
 5477 015f 3F       		.uleb128 0x3f
 5478 0160 19       		.uleb128 0x19
 5479 0161 03       		.uleb128 0x3
 5480 0162 0E       		.uleb128 0xe
 5481 0163 3A       		.uleb128 0x3a
 5482 0164 0B       		.uleb128 0xb
 5483 0165 3B       		.uleb128 0x3b
 5484 0166 0B       		.uleb128 0xb
 5485 0167 27       		.uleb128 0x27
 5486 0168 19       		.uleb128 0x19
 5487 0169 11       		.uleb128 0x11
 5488 016a 01       		.uleb128 0x1
 5489 016b 12       		.uleb128 0x12
 5490 016c 06       		.uleb128 0x6
 5491 016d 40       		.uleb128 0x40
 5492 016e 18       		.uleb128 0x18
 5493 016f 9642     		.uleb128 0x2116
 5494 0171 19       		.uleb128 0x19
 5495 0172 01       		.uleb128 0x1
 5496 0173 13       		.uleb128 0x13
 5497 0174 00       		.byte	0
 5498 0175 00       		.byte	0
 5499 0176 18       		.uleb128 0x18
 5500 0177 13       		.uleb128 0x13
 5501 0178 00       		.byte	0
 5502 0179 03       		.uleb128 0x3
 5503 017a 0E       		.uleb128 0xe
 5504 017b 3C       		.uleb128 0x3c
 5505 017c 19       		.uleb128 0x19
 5506 017d 00       		.byte	0
 5507 017e 00       		.byte	0
 5508 017f 19       		.uleb128 0x19
 5509 0180 2E       		.uleb128 0x2e
 5510 0181 01       		.byte	0x1
 5511 0182 3F       		.uleb128 0x3f
 5512 0183 19       		.uleb128 0x19
 5513 0184 03       		.uleb128 0x3
 5514 0185 0E       		.uleb128 0xe
 5515 0186 3A       		.uleb128 0x3a
 5516 0187 0B       		.uleb128 0xb
 5517 0188 3B       		.uleb128 0x3b
 5518 0189 05       		.uleb128 0x5
 5519 018a 49       		.uleb128 0x49
 5520 018b 13       		.uleb128 0x13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 112


 5521 018c 3C       		.uleb128 0x3c
 5522 018d 19       		.uleb128 0x19
 5523 018e 00       		.byte	0
 5524 018f 00       		.byte	0
 5525 0190 1A       		.uleb128 0x1a
 5526 0191 18       		.uleb128 0x18
 5527 0192 00       		.byte	0
 5528 0193 00       		.byte	0
 5529 0194 00       		.byte	0
 5530 0195 1B       		.uleb128 0x1b
 5531 0196 2E       		.uleb128 0x2e
 5532 0197 01       		.byte	0x1
 5533 0198 3F       		.uleb128 0x3f
 5534 0199 19       		.uleb128 0x19
 5535 019a 03       		.uleb128 0x3
 5536 019b 0E       		.uleb128 0xe
 5537 019c 3A       		.uleb128 0x3a
 5538 019d 0B       		.uleb128 0xb
 5539 019e 3B       		.uleb128 0x3b
 5540 019f 05       		.uleb128 0x5
 5541 01a0 27       		.uleb128 0x27
 5542 01a1 19       		.uleb128 0x19
 5543 01a2 49       		.uleb128 0x49
 5544 01a3 13       		.uleb128 0x13
 5545 01a4 11       		.uleb128 0x11
 5546 01a5 01       		.uleb128 0x1
 5547 01a6 12       		.uleb128 0x12
 5548 01a7 06       		.uleb128 0x6
 5549 01a8 40       		.uleb128 0x40
 5550 01a9 18       		.uleb128 0x18
 5551 01aa 9642     		.uleb128 0x2116
 5552 01ac 19       		.uleb128 0x19
 5553 01ad 01       		.uleb128 0x1
 5554 01ae 13       		.uleb128 0x13
 5555 01af 00       		.byte	0
 5556 01b0 00       		.byte	0
 5557 01b1 1C       		.uleb128 0x1c
 5558 01b2 05       		.uleb128 0x5
 5559 01b3 00       		.byte	0
 5560 01b4 03       		.uleb128 0x3
 5561 01b5 08       		.uleb128 0x8
 5562 01b6 3A       		.uleb128 0x3a
 5563 01b7 0B       		.uleb128 0xb
 5564 01b8 3B       		.uleb128 0x3b
 5565 01b9 05       		.uleb128 0x5
 5566 01ba 49       		.uleb128 0x49
 5567 01bb 13       		.uleb128 0x13
 5568 01bc 02       		.uleb128 0x2
 5569 01bd 18       		.uleb128 0x18
 5570 01be 00       		.byte	0
 5571 01bf 00       		.byte	0
 5572 01c0 1D       		.uleb128 0x1d
 5573 01c1 2E       		.uleb128 0x2e
 5574 01c2 01       		.byte	0x1
 5575 01c3 3F       		.uleb128 0x3f
 5576 01c4 19       		.uleb128 0x19
 5577 01c5 03       		.uleb128 0x3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 113


 5578 01c6 0E       		.uleb128 0xe
 5579 01c7 3A       		.uleb128 0x3a
 5580 01c8 0B       		.uleb128 0xb
 5581 01c9 3B       		.uleb128 0x3b
 5582 01ca 05       		.uleb128 0x5
 5583 01cb 27       		.uleb128 0x27
 5584 01cc 19       		.uleb128 0x19
 5585 01cd 11       		.uleb128 0x11
 5586 01ce 01       		.uleb128 0x1
 5587 01cf 12       		.uleb128 0x12
 5588 01d0 06       		.uleb128 0x6
 5589 01d1 40       		.uleb128 0x40
 5590 01d2 18       		.uleb128 0x18
 5591 01d3 9642     		.uleb128 0x2116
 5592 01d5 19       		.uleb128 0x19
 5593 01d6 01       		.uleb128 0x1
 5594 01d7 13       		.uleb128 0x13
 5595 01d8 00       		.byte	0
 5596 01d9 00       		.byte	0
 5597 01da 1E       		.uleb128 0x1e
 5598 01db 05       		.uleb128 0x5
 5599 01dc 00       		.byte	0
 5600 01dd 03       		.uleb128 0x3
 5601 01de 0E       		.uleb128 0xe
 5602 01df 3A       		.uleb128 0x3a
 5603 01e0 0B       		.uleb128 0xb
 5604 01e1 3B       		.uleb128 0x3b
 5605 01e2 05       		.uleb128 0x5
 5606 01e3 49       		.uleb128 0x49
 5607 01e4 13       		.uleb128 0x13
 5608 01e5 02       		.uleb128 0x2
 5609 01e6 18       		.uleb128 0x18
 5610 01e7 00       		.byte	0
 5611 01e8 00       		.byte	0
 5612 01e9 1F       		.uleb128 0x1f
 5613 01ea 34       		.uleb128 0x34
 5614 01eb 00       		.byte	0
 5615 01ec 03       		.uleb128 0x3
 5616 01ed 08       		.uleb128 0x8
 5617 01ee 3A       		.uleb128 0x3a
 5618 01ef 0B       		.uleb128 0xb
 5619 01f0 3B       		.uleb128 0x3b
 5620 01f1 05       		.uleb128 0x5
 5621 01f2 49       		.uleb128 0x49
 5622 01f3 13       		.uleb128 0x13
 5623 01f4 02       		.uleb128 0x2
 5624 01f5 18       		.uleb128 0x18
 5625 01f6 00       		.byte	0
 5626 01f7 00       		.byte	0
 5627 01f8 20       		.uleb128 0x20
 5628 01f9 34       		.uleb128 0x34
 5629 01fa 00       		.byte	0
 5630 01fb 03       		.uleb128 0x3
 5631 01fc 0E       		.uleb128 0xe
 5632 01fd 3A       		.uleb128 0x3a
 5633 01fe 0B       		.uleb128 0xb
 5634 01ff 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 114


 5635 0200 05       		.uleb128 0x5
 5636 0201 49       		.uleb128 0x49
 5637 0202 13       		.uleb128 0x13
 5638 0203 02       		.uleb128 0x2
 5639 0204 18       		.uleb128 0x18
 5640 0205 00       		.byte	0
 5641 0206 00       		.byte	0
 5642 0207 21       		.uleb128 0x21
 5643 0208 2E       		.uleb128 0x2e
 5644 0209 01       		.byte	0x1
 5645 020a 3F       		.uleb128 0x3f
 5646 020b 19       		.uleb128 0x19
 5647 020c 03       		.uleb128 0x3
 5648 020d 0E       		.uleb128 0xe
 5649 020e 3A       		.uleb128 0x3a
 5650 020f 0B       		.uleb128 0xb
 5651 0210 3B       		.uleb128 0x3b
 5652 0211 05       		.uleb128 0x5
 5653 0212 49       		.uleb128 0x49
 5654 0213 13       		.uleb128 0x13
 5655 0214 3C       		.uleb128 0x3c
 5656 0215 19       		.uleb128 0x19
 5657 0216 01       		.uleb128 0x1
 5658 0217 13       		.uleb128 0x13
 5659 0218 00       		.byte	0
 5660 0219 00       		.byte	0
 5661 021a 22       		.uleb128 0x22
 5662 021b 0B       		.uleb128 0xb
 5663 021c 01       		.byte	0x1
 5664 021d 11       		.uleb128 0x11
 5665 021e 01       		.uleb128 0x1
 5666 021f 12       		.uleb128 0x12
 5667 0220 06       		.uleb128 0x6
 5668 0221 01       		.uleb128 0x1
 5669 0222 13       		.uleb128 0x13
 5670 0223 00       		.byte	0
 5671 0224 00       		.byte	0
 5672 0225 23       		.uleb128 0x23
 5673 0226 2E       		.uleb128 0x2e
 5674 0227 01       		.byte	0x1
 5675 0228 3F       		.uleb128 0x3f
 5676 0229 19       		.uleb128 0x19
 5677 022a 03       		.uleb128 0x3
 5678 022b 0E       		.uleb128 0xe
 5679 022c 3A       		.uleb128 0x3a
 5680 022d 0B       		.uleb128 0xb
 5681 022e 3B       		.uleb128 0x3b
 5682 022f 05       		.uleb128 0x5
 5683 0230 27       		.uleb128 0x27
 5684 0231 19       		.uleb128 0x19
 5685 0232 49       		.uleb128 0x49
 5686 0233 13       		.uleb128 0x13
 5687 0234 11       		.uleb128 0x11
 5688 0235 01       		.uleb128 0x1
 5689 0236 12       		.uleb128 0x12
 5690 0237 06       		.uleb128 0x6
 5691 0238 40       		.uleb128 0x40
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 115


 5692 0239 18       		.uleb128 0x18
 5693 023a 9742     		.uleb128 0x2117
 5694 023c 19       		.uleb128 0x19
 5695 023d 01       		.uleb128 0x1
 5696 023e 13       		.uleb128 0x13
 5697 023f 00       		.byte	0
 5698 0240 00       		.byte	0
 5699 0241 24       		.uleb128 0x24
 5700 0242 34       		.uleb128 0x34
 5701 0243 00       		.byte	0
 5702 0244 03       		.uleb128 0x3
 5703 0245 0E       		.uleb128 0xe
 5704 0246 3A       		.uleb128 0x3a
 5705 0247 0B       		.uleb128 0xb
 5706 0248 3B       		.uleb128 0x3b
 5707 0249 05       		.uleb128 0x5
 5708 024a 49       		.uleb128 0x49
 5709 024b 13       		.uleb128 0x13
 5710 024c 3F       		.uleb128 0x3f
 5711 024d 19       		.uleb128 0x19
 5712 024e 3C       		.uleb128 0x3c
 5713 024f 19       		.uleb128 0x19
 5714 0250 00       		.byte	0
 5715 0251 00       		.byte	0
 5716 0252 25       		.uleb128 0x25
 5717 0253 35       		.uleb128 0x35
 5718 0254 00       		.byte	0
 5719 0255 49       		.uleb128 0x49
 5720 0256 13       		.uleb128 0x13
 5721 0257 00       		.byte	0
 5722 0258 00       		.byte	0
 5723 0259 00       		.byte	0
 5724              		.section	.debug_aranges,"",%progbits
 5725 0000 BC000000 		.4byte	0xbc
 5726 0004 0200     		.2byte	0x2
 5727 0006 00000000 		.4byte	.Ldebug_info0
 5728 000a 04       		.byte	0x4
 5729 000b 00       		.byte	0
 5730 000c 0000     		.2byte	0
 5731 000e 0000     		.2byte	0
 5732 0010 00000000 		.4byte	.LFB63
 5733 0014 6C000000 		.4byte	.LFE63-.LFB63
 5734 0018 00000000 		.4byte	.LFB64
 5735 001c 3A000000 		.4byte	.LFE64-.LFB64
 5736 0020 00000000 		.4byte	.LFB65
 5737 0024 3A000000 		.4byte	.LFE65-.LFB65
 5738 0028 00000000 		.4byte	.LFB66
 5739 002c A0000000 		.4byte	.LFE66-.LFB66
 5740 0030 00000000 		.4byte	.LFB67
 5741 0034 3E000000 		.4byte	.LFE67-.LFB67
 5742 0038 00000000 		.4byte	.LFB68
 5743 003c 5C000000 		.4byte	.LFE68-.LFB68
 5744 0040 00000000 		.4byte	.LFB69
 5745 0044 88000000 		.4byte	.LFE69-.LFB69
 5746 0048 00000000 		.4byte	.LFB70
 5747 004c 7C040000 		.4byte	.LFE70-.LFB70
 5748 0050 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 116


 5749 0054 72000000 		.4byte	.LFE71-.LFB71
 5750 0058 00000000 		.4byte	.LFB72
 5751 005c 2C000000 		.4byte	.LFE72-.LFB72
 5752 0060 00000000 		.4byte	.LFB73
 5753 0064 1E000000 		.4byte	.LFE73-.LFB73
 5754 0068 00000000 		.4byte	.LFB74
 5755 006c E8000000 		.4byte	.LFE74-.LFB74
 5756 0070 00000000 		.4byte	.LFB75
 5757 0074 30000000 		.4byte	.LFE75-.LFB75
 5758 0078 00000000 		.4byte	.LFB76
 5759 007c 20000000 		.4byte	.LFE76-.LFB76
 5760 0080 00000000 		.4byte	.LFB77
 5761 0084 70000000 		.4byte	.LFE77-.LFB77
 5762 0088 00000000 		.4byte	.LFB78
 5763 008c 060A0000 		.4byte	.LFE78-.LFB78
 5764 0090 00000000 		.4byte	.LFB79
 5765 0094 FE010000 		.4byte	.LFE79-.LFB79
 5766 0098 00000000 		.4byte	.LFB80
 5767 009c 68000000 		.4byte	.LFE80-.LFB80
 5768 00a0 00000000 		.4byte	.LFB81
 5769 00a4 3E000000 		.4byte	.LFE81-.LFB81
 5770 00a8 00000000 		.4byte	.LFB82
 5771 00ac 98000000 		.4byte	.LFE82-.LFB82
 5772 00b0 00000000 		.4byte	.LFB83
 5773 00b4 82000000 		.4byte	.LFE83-.LFB83
 5774 00b8 00000000 		.4byte	0
 5775 00bc 00000000 		.4byte	0
 5776              		.section	.debug_ranges,"",%progbits
 5777              	.Ldebug_ranges0:
 5778 0000 00000000 		.4byte	.LFB63
 5779 0004 6C000000 		.4byte	.LFE63
 5780 0008 00000000 		.4byte	.LFB64
 5781 000c 3A000000 		.4byte	.LFE64
 5782 0010 00000000 		.4byte	.LFB65
 5783 0014 3A000000 		.4byte	.LFE65
 5784 0018 00000000 		.4byte	.LFB66
 5785 001c A0000000 		.4byte	.LFE66
 5786 0020 00000000 		.4byte	.LFB67
 5787 0024 3E000000 		.4byte	.LFE67
 5788 0028 00000000 		.4byte	.LFB68
 5789 002c 5C000000 		.4byte	.LFE68
 5790 0030 00000000 		.4byte	.LFB69
 5791 0034 88000000 		.4byte	.LFE69
 5792 0038 00000000 		.4byte	.LFB70
 5793 003c 7C040000 		.4byte	.LFE70
 5794 0040 00000000 		.4byte	.LFB71
 5795 0044 72000000 		.4byte	.LFE71
 5796 0048 00000000 		.4byte	.LFB72
 5797 004c 2C000000 		.4byte	.LFE72
 5798 0050 00000000 		.4byte	.LFB73
 5799 0054 1E000000 		.4byte	.LFE73
 5800 0058 00000000 		.4byte	.LFB74
 5801 005c E8000000 		.4byte	.LFE74
 5802 0060 00000000 		.4byte	.LFB75
 5803 0064 30000000 		.4byte	.LFE75
 5804 0068 00000000 		.4byte	.LFB76
 5805 006c 20000000 		.4byte	.LFE76
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 117


 5806 0070 00000000 		.4byte	.LFB77
 5807 0074 70000000 		.4byte	.LFE77
 5808 0078 00000000 		.4byte	.LFB78
 5809 007c 060A0000 		.4byte	.LFE78
 5810 0080 00000000 		.4byte	.LFB79
 5811 0084 FE010000 		.4byte	.LFE79
 5812 0088 00000000 		.4byte	.LFB80
 5813 008c 68000000 		.4byte	.LFE80
 5814 0090 00000000 		.4byte	.LFB81
 5815 0094 3E000000 		.4byte	.LFE81
 5816 0098 00000000 		.4byte	.LFB82
 5817 009c 98000000 		.4byte	.LFE82
 5818 00a0 00000000 		.4byte	.LFB83
 5819 00a4 82000000 		.4byte	.LFE83
 5820 00a8 00000000 		.4byte	0
 5821 00ac 00000000 		.4byte	0
 5822              		.section	.debug_line,"",%progbits
 5823              	.Ldebug_line0:
 5824 0000 28070000 		.section	.debug_str,"MS",%progbits,1
 5824      0200C501 
 5824      00000201 
 5824      FB0E0D00 
 5824      01010101 
 5825              	.LASF19:
 5826 0000 64696D65 		.ascii	"dimension\000"
 5826      6E73696F 
 5826      6E00
 5827              	.LASF24:
 5828 000a 7469635F 		.ascii	"tic_tac_toe\000"
 5828      7461635F 
 5828      746F6500 
 5829              	.LASF27:
 5830 0016 64696167 		.ascii	"diags\000"
 5830      7300
 5831              	.LASF40:
 5832 001c 73747232 		.ascii	"str2\000"
 5832      00
 5833              	.LASF55:
 5834 0021 706C6179 		.ascii	"player_1\000"
 5834      65725F31 
 5834      00
 5835              	.LASF59:
 5836 002a 6E756D5F 		.ascii	"num_filled\000"
 5836      66696C6C 
 5836      656400
 5837              	.LASF10:
 5838 0035 73697A65 		.ascii	"size_t\000"
 5838      5F7400
 5839              	.LASF54:
 5840 003c 7474615F 		.ascii	"tta_init\000"
 5840      696E6974 
 5840      00
 5841              	.LASF11:
 5842 0045 73697A65 		.ascii	"sizetype\000"
 5842      74797065 
 5842      00
 5843              	.LASF62:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 118


 5844 004e 61695F70 		.ascii	"ai_print_grid_eval\000"
 5844      72696E74 
 5844      5F677269 
 5844      645F6576 
 5844      616C00
 5845              	.LASF2:
 5846 0061 73686F72 		.ascii	"short int\000"
 5846      7420696E 
 5846      7400
 5847              	.LASF33:
 5848 006b 76616C75 		.ascii	"value\000"
 5848      6500
 5849              	.LASF53:
 5850 0071 61695F69 		.ascii	"ai_init\000"
 5850      6E697400 
 5851              	.LASF31:
 5852 0079 61695F32 		.ascii	"ai_2\000"
 5852      00
 5853              	.LASF47:
 5854 007e 7474635F 		.ascii	"ttc_free\000"
 5854      66726565 
 5854      00
 5855              	.LASF43:
 5856 0087 636F6E6E 		.ascii	"connected\000"
 5856      65637465 
 5856      6400
 5857              	.LASF16:
 5858 0091 626F6F6C 		.ascii	"bool\000"
 5858      00
 5859              	.LASF14:
 5860 0096 666C6F61 		.ascii	"float\000"
 5860      7400
 5861              	.LASF63:
 5862 009c 61695F70 		.ascii	"ai_play_best_move\000"
 5862      6C61795F 
 5862      62657374 
 5862      5F6D6F76 
 5862      6500
 5863              	.LASF6:
 5864 00ae 6C6F6E67 		.ascii	"long long int\000"
 5864      206C6F6E 
 5864      6720696E 
 5864      7400
 5865              	.LASF36:
 5866 00bc 7474635F 		.ascii	"ttc_check_valid\000"
 5866      63686563 
 5866      6B5F7661 
 5866      6C696400 
 5867              	.LASF50:
 5868 00cc 616C6C5F 		.ascii	"all_index\000"
 5868      696E6465 
 5868      7800
 5869              	.LASF46:
 5870 00d6 7474635F 		.ascii	"ttc_play_game\000"
 5870      706C6179 
 5870      5F67616D 
 5870      6500
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 119


 5871              	.LASF67:
 5872 00e4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5872      4320342E 
 5872      392E3320 
 5872      32303135 
 5872      30333033 
 5873 0117 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 5873      20726576 
 5873      6973696F 
 5873      6E203232 
 5873      31323230 
 5874 014a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5874      66756E63 
 5874      74696F6E 
 5874      2D736563 
 5874      74696F6E 
 5875              	.LASF65:
 5876 0172 7474615F 		.ascii	"tta_ai_algorithm\000"
 5876      61695F61 
 5876      6C676F72 
 5876      6974686D 
 5876      00
 5877              	.LASF30:
 5878 0183 61695F31 		.ascii	"ai_1\000"
 5878      00
 5879              	.LASF44:
 5880 0188 7474635F 		.ascii	"ttc_step\000"
 5880      73746570 
 5880      00
 5881              	.LASF39:
 5882 0191 7474635F 		.ascii	"ttc_take_input\000"
 5882      74616B65 
 5882      5F696E70 
 5882      757400
 5883              	.LASF26:
 5884 01a0 67726964 		.ascii	"grid_eval\000"
 5884      5F657661 
 5884      6C00
 5885              	.LASF25:
 5886 01aa 706C6179 		.ascii	"player_id\000"
 5886      65725F69 
 5886      6400
 5887              	.LASF15:
 5888 01b4 6C6F6E67 		.ascii	"long double\000"
 5888      20646F75 
 5888      626C6500 
 5889              	.LASF68:
 5890 01c0 2E5C7469 		.ascii	".\\tic_tac_all.c\000"
 5890      635F7461 
 5890      635F616C 
 5890      6C2E6300 
 5891              	.LASF1:
 5892 01d0 756E7369 		.ascii	"unsigned char\000"
 5892      676E6564 
 5892      20636861 
 5892      7200
 5893              	.LASF34:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 120


 5894 01de 7474635F 		.ascii	"ttc_set_grid\000"
 5894      7365745F 
 5894      67726964 
 5894      00
 5895              	.LASF22:
 5896 01eb 67616D65 		.ascii	"game_not_won\000"
 5896      5F6E6F74 
 5896      5F776F6E 
 5896      00
 5897              	.LASF0:
 5898 01f8 7369676E 		.ascii	"signed char\000"
 5898      65642063 
 5898      68617200 
 5899              	.LASF7:
 5900 0204 6C6F6E67 		.ascii	"long long unsigned int\000"
 5900      206C6F6E 
 5900      6720756E 
 5900      7369676E 
 5900      65642069 
 5901              	.LASF8:
 5902 021b 756E7369 		.ascii	"unsigned int\000"
 5902      676E6564 
 5902      20696E74 
 5902      00
 5903              	.LASF48:
 5904 0228 6D61785F 		.ascii	"max_array\000"
 5904      61727261 
 5904      7900
 5905              	.LASF21:
 5906 0232 7475726E 		.ascii	"turn\000"
 5906      00
 5907              	.LASF56:
 5908 0237 706C6179 		.ascii	"player_2\000"
 5908      65725F32 
 5908      00
 5909              	.LASF45:
 5910 0240 64697370 		.ascii	"disp\000"
 5910      00
 5911              	.LASF37:
 5912 0245 7474635F 		.ascii	"ttc_init\000"
 5912      696E6974 
 5912      00
 5913              	.LASF23:
 5914 024e 67726964 		.ascii	"grid\000"
 5914      00
 5915              	.LASF3:
 5916 0253 73686F72 		.ascii	"short unsigned int\000"
 5916      7420756E 
 5916      7369676E 
 5916      65642069 
 5916      6E7400
 5917              	.LASF32:
 5918 0266 67616D65 		.ascii	"game\000"
 5918      00
 5919              	.LASF12:
 5920 026b 63686172 		.ascii	"char\000"
 5920      00
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 121


 5921              	.LASF4:
 5922 0270 6C6F6E67 		.ascii	"long int\000"
 5922      20696E74 
 5922      00
 5923              	.LASF41:
 5924 0279 7474635F 		.ascii	"ttc_print_grid\000"
 5924      7072696E 
 5924      745F6772 
 5924      696400
 5925              	.LASF17:
 5926 0288 696E7433 		.ascii	"int32_t\000"
 5926      325F7400 
 5927              	.LASF57:
 5928 0290 61695F65 		.ascii	"ai_evaluate_board\000"
 5928      76616C75 
 5928      6174655F 
 5928      626F6172 
 5928      6400
 5929              	.LASF58:
 5930 02a2 656D7074 		.ascii	"empty_places\000"
 5930      795F706C 
 5930      61636573 
 5930      00
 5931              	.LASF5:
 5932 02af 6C6F6E67 		.ascii	"long unsigned int\000"
 5932      20756E73 
 5932      69676E65 
 5932      6420696E 
 5932      7400
 5933              	.LASF13:
 5934 02c1 646F7562 		.ascii	"double\000"
 5934      6C6500
 5935              	.LASF70:
 5936 02c8 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5936      52784275 
 5936      66666572 
 5936      00
 5937              	.LASF18:
 5938 02d5 73697A65 		.ascii	"size\000"
 5938      00
 5939              	.LASF9:
 5940 02da 5F5F696E 		.ascii	"__int32_t\000"
 5940      7433325F 
 5940      7400
 5941              	.LASF28:
 5942 02e4 7469635F 		.ascii	"tic_tac_ai\000"
 5942      7461635F 
 5942      616900
 5943              	.LASF35:
 5944 02ef 7474635F 		.ascii	"ttc_get_grid\000"
 5944      6765745F 
 5944      67726964 
 5944      00
 5945              	.LASF69:
 5946 02fc 433A5C55 		.ascii	"C:\\Users\\Andrew\\Dropbox (Personal)\\MIT\\MIT 201"
 5946      73657273 
 5946      5C416E64 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 122


 5946      7265775C 
 5946      44726F70 
 5947 032a 36205370 		.ascii	"6 Spring\\6115\\Final Project\\Code\\VGA\\Tic Tac T"
 5947      72696E67 
 5947      5C363131 
 5947      355C4669 
 5947      6E616C20 
 5948 0358 6F652E63 		.ascii	"oe.cydsn\000"
 5948      7964736E 
 5948      00
 5949              	.LASF60:
 5950 0361 61695F64 		.ascii	"ai_define_score\000"
 5950      6566696E 
 5950      655F7363 
 5950      6F726500 
 5951              	.LASF42:
 5952 0371 7474635F 		.ascii	"ttc_check_win\000"
 5952      63686563 
 5952      6B5F7769 
 5952      6E00
 5953              	.LASF64:
 5954 037f 64697370 		.ascii	"disp_grid_81\000"
 5954      5F677269 
 5954      645F3831 
 5954      00
 5955              	.LASF66:
 5956 038c 7474615F 		.ascii	"tta_step\000"
 5956      73746570 
 5956      00
 5957              	.LASF49:
 5958 0395 61727261 		.ascii	"array\000"
 5958      7900
 5959              	.LASF61:
 5960 039b 64697370 		.ascii	"disp_grid_ttc_place\000"
 5960      5F677269 
 5960      645F7474 
 5960      635F706C 
 5960      61636500 
 5961              	.LASF51:
 5962 03af 6E756D5F 		.ascii	"num_index\000"
 5962      696E6465 
 5962      7800
 5963              	.LASF29:
 5964 03b9 69735F61 		.ascii	"is_ai\000"
 5964      6900
 5965              	.LASF20:
 5966 03bf 706C6179 		.ascii	"player\000"
 5966      657200
 5967              	.LASF52:
 5968 03c6 61695F72 		.ascii	"ai_reset\000"
 5968      65736574 
 5968      00
 5969              	.LASF38:
 5970 03cf 7474635F 		.ascii	"ttc_change_player\000"
 5970      6368616E 
 5970      67655F70 
 5970      6C617965 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccVBzSI7.s 			page 123


 5970      7200
 5971              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
