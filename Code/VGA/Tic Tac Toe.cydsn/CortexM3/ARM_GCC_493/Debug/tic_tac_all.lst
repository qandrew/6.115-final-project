ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"tic_tac_all.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ttc_init,"ax",%progbits
  19              		.align	2
  20              		.global	ttc_init
  21              		.thumb
  22              		.thumb_func
  23              		.type	ttc_init, %function
  24              	ttc_init:
  25              	.LFB63:
  26              		.file 1 ".\\tic_tac_all.c"
   1:.\tic_tac_all.c **** /* ========================================
   2:.\tic_tac_all.c ****  *
   3:.\tic_tac_all.c ****  * Copyright HUDING ENTERPRISES, 2016
   4:.\tic_tac_all.c ****  * All Rights Reserved
   5:.\tic_tac_all.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\tic_tac_all.c ****  *
   7:.\tic_tac_all.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\tic_tac_all.c ****  * WHICH IS THE PROPERTY OF Andrew Xia.
   9:.\tic_tac_all.c ****  *
  10:.\tic_tac_all.c ****  * ========================================
  11:.\tic_tac_all.c **** */
  12:.\tic_tac_all.c **** #include <stdio.h>
  13:.\tic_tac_all.c **** #include <stdlib.h>
  14:.\tic_tac_all.c **** #include <string.h>
  15:.\tic_tac_all.c **** #include <math.h>
  16:.\tic_tac_all.c **** #include <time.h>
  17:.\tic_tac_all.c **** 
  18:.\tic_tac_all.c **** typedef int bool;
  19:.\tic_tac_all.c **** #define true 1
  20:.\tic_tac_all.c **** #define false 0
  21:.\tic_tac_all.c **** 
  22:.\tic_tac_all.c **** #ifndef DEVICE_H
  23:.\tic_tac_all.c **** #define DEVICE_H
  24:.\tic_tac_all.c **** #include <project.h>
  25:.\tic_tac_all.c **** 
  26:.\tic_tac_all.c **** #endif
  27:.\tic_tac_all.c **** 
  28:.\tic_tac_all.c **** struct tic_tac_toe{
  29:.\tic_tac_all.c **** 	int size;
  30:.\tic_tac_all.c **** 	int dimension;
  31:.\tic_tac_all.c **** 	// grid = {'A','B','A'}; // make this an array of length 64
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 2


  32:.\tic_tac_all.c **** 	int player; // 1 is player A, -1 is player B
  33:.\tic_tac_all.c **** 	int turn;
  34:.\tic_tac_all.c **** 	int game_not_won;
  35:.\tic_tac_all.c **** 	// int grid_eval[]; //this keeps track of scores of all diagonals
  36:.\tic_tac_all.c **** 	int grid[64]; // a usually size 64 grid containing our board
  37:.\tic_tac_all.c **** 	// if don't specify grid size, could get memory overlap
  38:.\tic_tac_all.c **** };
  39:.\tic_tac_all.c **** 
  40:.\tic_tac_all.c **** void ttc_init(struct tic_tac_toe* t, int size, int dimension){
  27              		.loc 1 40 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 87B0     		sub	sp, sp, #28
  36              		.cfi_def_cfa_offset 32
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 B960     		str	r1, [r7, #8]
  41 000a 7A60     		str	r2, [r7, #4]
  41:.\tic_tac_all.c **** 	t->size = size;
  42              		.loc 1 41 0
  43 000c FB68     		ldr	r3, [r7, #12]
  44 000e BA68     		ldr	r2, [r7, #8]
  45 0010 1A60     		str	r2, [r3]
  42:.\tic_tac_all.c **** 	t->dimension = dimension;
  46              		.loc 1 42 0
  47 0012 FB68     		ldr	r3, [r7, #12]
  48 0014 7A68     		ldr	r2, [r7, #4]
  49 0016 5A60     		str	r2, [r3, #4]
  43:.\tic_tac_all.c **** 	if (dimension == 3){
  50              		.loc 1 43 0
  51 0018 7B68     		ldr	r3, [r7, #4]
  52 001a 032B     		cmp	r3, #3
  53 001c 18D1     		bne	.L2
  54              	.LBB2:
  44:.\tic_tac_all.c **** 		int i;
  45:.\tic_tac_all.c **** 		int num = size*size*size;
  55              		.loc 1 45 0
  56 001e BB68     		ldr	r3, [r7, #8]
  57 0020 BA68     		ldr	r2, [r7, #8]
  58 0022 02FB03F3 		mul	r3, r2, r3
  59 0026 BA68     		ldr	r2, [r7, #8]
  60 0028 02FB03F3 		mul	r3, r2, r3
  61 002c 3B61     		str	r3, [r7, #16]
  46:.\tic_tac_all.c **** 		for (i = 0; i < num;i++){
  62              		.loc 1 46 0
  63 002e 0023     		movs	r3, #0
  64 0030 7B61     		str	r3, [r7, #20]
  65 0032 09E0     		b	.L3
  66              	.L4:
  47:.\tic_tac_all.c **** 			t->grid[i] = 0;
  67              		.loc 1 47 0 discriminator 3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 3


  68 0034 FA68     		ldr	r2, [r7, #12]
  69 0036 7B69     		ldr	r3, [r7, #20]
  70 0038 0433     		adds	r3, r3, #4
  71 003a 9B00     		lsls	r3, r3, #2
  72 003c 1344     		add	r3, r3, r2
  73 003e 0022     		movs	r2, #0
  74 0040 5A60     		str	r2, [r3, #4]
  46:.\tic_tac_all.c **** 		for (i = 0; i < num;i++){
  75              		.loc 1 46 0 discriminator 3
  76 0042 7B69     		ldr	r3, [r7, #20]
  77 0044 0133     		adds	r3, r3, #1
  78 0046 7B61     		str	r3, [r7, #20]
  79              	.L3:
  46:.\tic_tac_all.c **** 		for (i = 0; i < num;i++){
  80              		.loc 1 46 0 is_stmt 0 discriminator 1
  81 0048 7A69     		ldr	r2, [r7, #20]
  82 004a 3B69     		ldr	r3, [r7, #16]
  83 004c 9A42     		cmp	r2, r3
  84 004e F1DB     		blt	.L4
  85              	.L2:
  86              	.LBE2:
  48:.\tic_tac_all.c **** 		}
  49:.\tic_tac_all.c **** 	}
  50:.\tic_tac_all.c **** 	t->player = 1; // default to player 1
  87              		.loc 1 50 0 is_stmt 1
  88 0050 FB68     		ldr	r3, [r7, #12]
  89 0052 0122     		movs	r2, #1
  90 0054 9A60     		str	r2, [r3, #8]
  51:.\tic_tac_all.c **** 	t->game_not_won = 0;
  91              		.loc 1 51 0
  92 0056 FB68     		ldr	r3, [r7, #12]
  93 0058 0022     		movs	r2, #0
  94 005a 1A61     		str	r2, [r3, #16]
  52:.\tic_tac_all.c **** 	t->turn = 1;
  95              		.loc 1 52 0
  96 005c FB68     		ldr	r3, [r7, #12]
  97 005e 0122     		movs	r2, #1
  98 0060 DA60     		str	r2, [r3, #12]
  53:.\tic_tac_all.c **** };
  99              		.loc 1 53 0
 100 0062 1C37     		adds	r7, r7, #28
 101              		.cfi_def_cfa_offset 4
 102 0064 BD46     		mov	sp, r7
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0066 5DF8047B 		ldr	r7, [sp], #4
 106              		.cfi_restore 7
 107              		.cfi_def_cfa_offset 0
 108 006a 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE63:
 111              		.size	ttc_init, .-ttc_init
 112              		.section	.text.ttc_set_grid,"ax",%progbits
 113              		.align	2
 114              		.global	ttc_set_grid
 115              		.thumb
 116              		.thumb_func
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 4


 117              		.type	ttc_set_grid, %function
 118              	ttc_set_grid:
 119              	.LFB64:
  54:.\tic_tac_all.c **** 
  55:.\tic_tac_all.c **** int ttc_set_grid(struct tic_tac_toe* t, int x, int y, int z, int value){
 120              		.loc 1 55 0
 121              		.cfi_startproc
 122              		@ args = 4, pretend = 0, frame = 24
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125 0000 80B4     		push	{r7}
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 7, -4
 128 0002 87B0     		sub	sp, sp, #28
 129              		.cfi_def_cfa_offset 32
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 132 0006 F860     		str	r0, [r7, #12]
 133 0008 B960     		str	r1, [r7, #8]
 134 000a 7A60     		str	r2, [r7, #4]
 135 000c 3B60     		str	r3, [r7]
  56:.\tic_tac_all.c **** 	int loc = z*16 + y*4 + x;
 136              		.loc 1 56 0
 137 000e 3B68     		ldr	r3, [r7]
 138 0010 9A00     		lsls	r2, r3, #2
 139 0012 7B68     		ldr	r3, [r7, #4]
 140 0014 1344     		add	r3, r3, r2
 141 0016 9A00     		lsls	r2, r3, #2
 142 0018 BB68     		ldr	r3, [r7, #8]
 143 001a 1344     		add	r3, r3, r2
 144 001c 7B61     		str	r3, [r7, #20]
  57:.\tic_tac_all.c **** 	t->grid[loc] = value;
 145              		.loc 1 57 0
 146 001e FA68     		ldr	r2, [r7, #12]
 147 0020 7B69     		ldr	r3, [r7, #20]
 148 0022 0433     		adds	r3, r3, #4
 149 0024 9B00     		lsls	r3, r3, #2
 150 0026 1344     		add	r3, r3, r2
 151 0028 3A6A     		ldr	r2, [r7, #32]
 152 002a 5A60     		str	r2, [r3, #4]
  58:.\tic_tac_all.c **** 	// printf("\nSet Value %i %i %i %i",x,y,z,value); 
  59:.\tic_tac_all.c **** 	return 1; // return 1 to show completed properly
 153              		.loc 1 59 0
 154 002c 0123     		movs	r3, #1
  60:.\tic_tac_all.c **** }
 155              		.loc 1 60 0
 156 002e 1846     		mov	r0, r3
 157 0030 1C37     		adds	r7, r7, #28
 158              		.cfi_def_cfa_offset 4
 159 0032 BD46     		mov	sp, r7
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 0034 5DF8047B 		ldr	r7, [sp], #4
 163              		.cfi_restore 7
 164              		.cfi_def_cfa_offset 0
 165 0038 7047     		bx	lr
 166              		.cfi_endproc
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 5


 167              	.LFE64:
 168              		.size	ttc_set_grid, .-ttc_set_grid
 169 003a 00BF     		.section	.text.ttc_get_grid,"ax",%progbits
 170              		.align	2
 171              		.global	ttc_get_grid
 172              		.thumb
 173              		.thumb_func
 174              		.type	ttc_get_grid, %function
 175              	ttc_get_grid:
 176              	.LFB65:
  61:.\tic_tac_all.c **** 
  62:.\tic_tac_all.c **** int ttc_get_grid(struct tic_tac_toe* t, int x, int y, int z){
 177              		.loc 1 62 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 24
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182 0000 80B4     		push	{r7}
 183              		.cfi_def_cfa_offset 4
 184              		.cfi_offset 7, -4
 185 0002 87B0     		sub	sp, sp, #28
 186              		.cfi_def_cfa_offset 32
 187 0004 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
 189 0006 F860     		str	r0, [r7, #12]
 190 0008 B960     		str	r1, [r7, #8]
 191 000a 7A60     		str	r2, [r7, #4]
 192 000c 3B60     		str	r3, [r7]
  63:.\tic_tac_all.c **** 	int loc = z*16 + y*4 + x;
 193              		.loc 1 63 0
 194 000e 3B68     		ldr	r3, [r7]
 195 0010 9A00     		lsls	r2, r3, #2
 196 0012 7B68     		ldr	r3, [r7, #4]
 197 0014 1344     		add	r3, r3, r2
 198 0016 9A00     		lsls	r2, r3, #2
 199 0018 BB68     		ldr	r3, [r7, #8]
 200 001a 1344     		add	r3, r3, r2
 201 001c 7B61     		str	r3, [r7, #20]
  64:.\tic_tac_all.c **** 	int ret = t->grid[loc];
 202              		.loc 1 64 0
 203 001e FA68     		ldr	r2, [r7, #12]
 204 0020 7B69     		ldr	r3, [r7, #20]
 205 0022 0433     		adds	r3, r3, #4
 206 0024 9B00     		lsls	r3, r3, #2
 207 0026 1344     		add	r3, r3, r2
 208 0028 5B68     		ldr	r3, [r3, #4]
 209 002a 3B61     		str	r3, [r7, #16]
  65:.\tic_tac_all.c **** 	// printf("\nGet Value %i %i %i %i",x,y,z,ret); 
  66:.\tic_tac_all.c **** 	return ret;
 210              		.loc 1 66 0
 211 002c 3B69     		ldr	r3, [r7, #16]
  67:.\tic_tac_all.c **** }
 212              		.loc 1 67 0
 213 002e 1846     		mov	r0, r3
 214 0030 1C37     		adds	r7, r7, #28
 215              		.cfi_def_cfa_offset 4
 216 0032 BD46     		mov	sp, r7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 6


 217              		.cfi_def_cfa_register 13
 218              		@ sp needed
 219 0034 5DF8047B 		ldr	r7, [sp], #4
 220              		.cfi_restore 7
 221              		.cfi_def_cfa_offset 0
 222 0038 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE65:
 225              		.size	ttc_get_grid, .-ttc_get_grid
 226 003a 00BF     		.section	.rodata
 227              		.align	2
 228              	.LC0:
 229 0000 0A4F7574 		.ascii	"\012Out of bounds %i %i %i\000"
 229      206F6620 
 229      626F756E 
 229      64732025 
 229      69202569 
 230              		.align	2
 231              	.LC1:
 232 0018 0A506F73 		.ascii	"\012Position already occupied %i %i %i\000"
 232      6974696F 
 232      6E20616C 
 232      72656164 
 232      79206F63 
 233              		.section	.text.ttc_check_valid,"ax",%progbits
 234              		.align	2
 235              		.global	ttc_check_valid
 236              		.thumb
 237              		.thumb_func
 238              		.type	ttc_check_valid, %function
 239              	ttc_check_valid:
 240              	.LFB66:
  68:.\tic_tac_all.c **** 
  69:.\tic_tac_all.c **** int ttc_check_valid(struct tic_tac_toe* t, int x, int y, int z){
 241              		.loc 1 69 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 24
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0000 80B5     		push	{r7, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 86B0     		sub	sp, sp, #24
 250              		.cfi_def_cfa_offset 32
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 253 0006 F860     		str	r0, [r7, #12]
 254 0008 B960     		str	r1, [r7, #8]
 255 000a 7A60     		str	r2, [r7, #4]
 256 000c 3B60     		str	r3, [r7]
  70:.\tic_tac_all.c **** 	int loc = z*16 + y*4 + x;
 257              		.loc 1 70 0
 258 000e 3B68     		ldr	r3, [r7]
 259 0010 9A00     		lsls	r2, r3, #2
 260 0012 7B68     		ldr	r3, [r7, #4]
 261 0014 1344     		add	r3, r3, r2
 262 0016 9A00     		lsls	r2, r3, #2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 7


 263 0018 BB68     		ldr	r3, [r7, #8]
 264 001a 1344     		add	r3, r3, r2
 265 001c 7B61     		str	r3, [r7, #20]
  71:.\tic_tac_all.c **** 	if (x < 0 || y < 0 || z < 0){
 266              		.loc 1 71 0
 267 001e BB68     		ldr	r3, [r7, #8]
 268 0020 002B     		cmp	r3, #0
 269 0022 05DB     		blt	.L10
 270              		.loc 1 71 0 is_stmt 0 discriminator 1
 271 0024 7B68     		ldr	r3, [r7, #4]
 272 0026 002B     		cmp	r3, #0
 273 0028 02DB     		blt	.L10
 274              		.loc 1 71 0 discriminator 2
 275 002a 3B68     		ldr	r3, [r7]
 276 002c 002B     		cmp	r3, #0
 277 002e 07DA     		bge	.L11
 278              	.L10:
  72:.\tic_tac_all.c **** 		printf("\nOut of bounds %i %i %i",x,y,z); 
 279              		.loc 1 72 0 is_stmt 1
 280 0030 1948     		ldr	r0, .L16
 281 0032 B968     		ldr	r1, [r7, #8]
 282 0034 7A68     		ldr	r2, [r7, #4]
 283 0036 3B68     		ldr	r3, [r7]
 284 0038 FFF7FEFF 		bl	printf
  73:.\tic_tac_all.c **** 		return 0;
 285              		.loc 1 73 0
 286 003c 0023     		movs	r3, #0
 287 003e 27E0     		b	.L12
 288              	.L11:
  74:.\tic_tac_all.c **** 	}
  75:.\tic_tac_all.c **** 	else if (x >= t->size || y >= t->size || z >= t->size){
 289              		.loc 1 75 0
 290 0040 FB68     		ldr	r3, [r7, #12]
 291 0042 1A68     		ldr	r2, [r3]
 292 0044 BB68     		ldr	r3, [r7, #8]
 293 0046 9A42     		cmp	r2, r3
 294 0048 09DD     		ble	.L13
 295              		.loc 1 75 0 is_stmt 0 discriminator 1
 296 004a FB68     		ldr	r3, [r7, #12]
 297 004c 1A68     		ldr	r2, [r3]
 298 004e 7B68     		ldr	r3, [r7, #4]
 299 0050 9A42     		cmp	r2, r3
 300 0052 04DD     		ble	.L13
 301              		.loc 1 75 0 discriminator 2
 302 0054 FB68     		ldr	r3, [r7, #12]
 303 0056 1A68     		ldr	r2, [r3]
 304 0058 3B68     		ldr	r3, [r7]
 305 005a 9A42     		cmp	r2, r3
 306 005c 07DC     		bgt	.L14
 307              	.L13:
  76:.\tic_tac_all.c **** 		printf("\nOut of bounds %i %i %i",x,y,z); 
 308              		.loc 1 76 0 is_stmt 1
 309 005e 0E48     		ldr	r0, .L16
 310 0060 B968     		ldr	r1, [r7, #8]
 311 0062 7A68     		ldr	r2, [r7, #4]
 312 0064 3B68     		ldr	r3, [r7]
 313 0066 FFF7FEFF 		bl	printf
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 8


  77:.\tic_tac_all.c **** 		return 0;
 314              		.loc 1 77 0
 315 006a 0023     		movs	r3, #0
 316 006c 10E0     		b	.L12
 317              	.L14:
  78:.\tic_tac_all.c **** 	}
  79:.\tic_tac_all.c **** 	else if (t->grid[loc] != 0){ // already occupied position
 318              		.loc 1 79 0
 319 006e FA68     		ldr	r2, [r7, #12]
 320 0070 7B69     		ldr	r3, [r7, #20]
 321 0072 0433     		adds	r3, r3, #4
 322 0074 9B00     		lsls	r3, r3, #2
 323 0076 1344     		add	r3, r3, r2
 324 0078 5B68     		ldr	r3, [r3, #4]
 325 007a 002B     		cmp	r3, #0
 326 007c 07D0     		beq	.L15
  80:.\tic_tac_all.c **** 		printf("\nPosition already occupied %i %i %i",x,y,z); 
 327              		.loc 1 80 0
 328 007e 0748     		ldr	r0, .L16+4
 329 0080 B968     		ldr	r1, [r7, #8]
 330 0082 7A68     		ldr	r2, [r7, #4]
 331 0084 3B68     		ldr	r3, [r7]
 332 0086 FFF7FEFF 		bl	printf
  81:.\tic_tac_all.c **** 		return 0;
 333              		.loc 1 81 0
 334 008a 0023     		movs	r3, #0
 335 008c 00E0     		b	.L12
 336              	.L15:
  82:.\tic_tac_all.c **** 	}
  83:.\tic_tac_all.c **** 	else{
  84:.\tic_tac_all.c **** 		return 1; //free position
 337              		.loc 1 84 0
 338 008e 0123     		movs	r3, #1
 339              	.L12:
  85:.\tic_tac_all.c **** 	}
  86:.\tic_tac_all.c **** 
  87:.\tic_tac_all.c **** }
 340              		.loc 1 87 0
 341 0090 1846     		mov	r0, r3
 342 0092 1837     		adds	r7, r7, #24
 343              		.cfi_def_cfa_offset 8
 344 0094 BD46     		mov	sp, r7
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 0096 80BD     		pop	{r7, pc}
 348              	.L17:
 349              		.align	2
 350              	.L16:
 351 0098 00000000 		.word	.LC0
 352 009c 18000000 		.word	.LC1
 353              		.cfi_endproc
 354              	.LFE66:
 355              		.size	ttc_check_valid, .-ttc_check_valid
 356              		.section	.text.ttc_change_player,"ax",%progbits
 357              		.align	2
 358              		.global	ttc_change_player
 359              		.thumb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 9


 360              		.thumb_func
 361              		.type	ttc_change_player, %function
 362              	ttc_change_player:
 363              	.LFB67:
  88:.\tic_tac_all.c **** 
  89:.\tic_tac_all.c **** void ttc_change_player(struct tic_tac_toe* t){
 364              		.loc 1 89 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 7, -4
 372 0002 83B0     		sub	sp, sp, #12
 373              		.cfi_def_cfa_offset 16
 374 0004 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
 376 0006 7860     		str	r0, [r7, #4]
  90:.\tic_tac_all.c **** 	if (t->player == 1){
 377              		.loc 1 90 0
 378 0008 7B68     		ldr	r3, [r7, #4]
 379 000a 9B68     		ldr	r3, [r3, #8]
 380 000c 012B     		cmp	r3, #1
 381 000e 04D1     		bne	.L19
  91:.\tic_tac_all.c **** 		t->player = -1;
 382              		.loc 1 91 0
 383 0010 7B68     		ldr	r3, [r7, #4]
 384 0012 4FF0FF32 		mov	r2, #-1
 385 0016 9A60     		str	r2, [r3, #8]
 386 0018 07E0     		b	.L20
 387              	.L19:
  92:.\tic_tac_all.c **** 	}
  93:.\tic_tac_all.c **** 	else if (t-> player == -1){
 388              		.loc 1 93 0
 389 001a 7B68     		ldr	r3, [r7, #4]
 390 001c 9B68     		ldr	r3, [r3, #8]
 391 001e B3F1FF3F 		cmp	r3, #-1
 392 0022 02D1     		bne	.L20
  94:.\tic_tac_all.c **** 		t->player = 1;
 393              		.loc 1 94 0
 394 0024 7B68     		ldr	r3, [r7, #4]
 395 0026 0122     		movs	r2, #1
 396 0028 9A60     		str	r2, [r3, #8]
 397              	.L20:
  95:.\tic_tac_all.c **** 	}
  96:.\tic_tac_all.c **** 	t->turn++;
 398              		.loc 1 96 0
 399 002a 7B68     		ldr	r3, [r7, #4]
 400 002c DB68     		ldr	r3, [r3, #12]
 401 002e 5A1C     		adds	r2, r3, #1
 402 0030 7B68     		ldr	r3, [r7, #4]
 403 0032 DA60     		str	r2, [r3, #12]
  97:.\tic_tac_all.c **** }
 404              		.loc 1 97 0
 405 0034 0C37     		adds	r7, r7, #12
 406              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 10


 407 0036 BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 0038 5DF8047B 		ldr	r7, [sp], #4
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 003c 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE67:
 416              		.size	ttc_change_player, .-ttc_change_player
 417 003e 00BF     		.section	.rodata
 418              		.align	2
 419              	.LC2:
 420 003c 0A456E74 		.ascii	"\012Enter a position: \000"
 420      65722061 
 420      20706F73 
 420      6974696F 
 420      6E3A2000 
 421              		.align	2
 422              	.LC3:
 423 0050 257300   		.ascii	"%s\000"
 424 0053 00       		.align	2
 425              	.LC4:
 426 0054 456E7465 		.ascii	"Entered %i %i %i\000"
 426      72656420 
 426      25692025 
 426      69202569 
 426      00
 427              		.section	.text.ttc_take_input,"ax",%progbits
 428              		.align	2
 429              		.global	ttc_take_input
 430              		.thumb
 431              		.thumb_func
 432              		.type	ttc_take_input, %function
 433              	ttc_take_input:
 434              	.LFB68:
  98:.\tic_tac_all.c **** 
  99:.\tic_tac_all.c **** int * ttc_take_input(){ 
 435              		.loc 1 99 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 8
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439 0000 80B5     		push	{r7, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 82B0     		sub	sp, sp, #8
 444              		.cfi_def_cfa_offset 16
 445 0004 00AF     		add	r7, sp, #0
 446              		.cfi_def_cfa_register 7
 100:.\tic_tac_all.c **** 	// take a user input, return x y z array pointer
 101:.\tic_tac_all.c **** 	printf("\nEnter a position: ");
 447              		.loc 1 101 0
 448 0006 1148     		ldr	r0, .L23
 449 0008 FFF7FEFF 		bl	printf
 102:.\tic_tac_all.c **** 	char str2[3];
 103:.\tic_tac_all.c **** 	scanf("%s", str2);
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 11


 450              		.loc 1 103 0
 451 000c 3B1D     		adds	r3, r7, #4
 452 000e 1048     		ldr	r0, .L23+4
 453 0010 1946     		mov	r1, r3
 454 0012 FFF7FEFF 		bl	scanf
 104:.\tic_tac_all.c **** 	static int ret[3];
 105:.\tic_tac_all.c **** 	ret[0] = str2[0]-48; //without atoi, we get ascii value
 455              		.loc 1 105 0
 456 0016 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 457 0018 303B     		subs	r3, r3, #48
 458 001a 0E4A     		ldr	r2, .L23+8
 459 001c 1360     		str	r3, [r2]
 106:.\tic_tac_all.c **** 	ret[1] = str2[1]-48; //or can do ascii conversion
 460              		.loc 1 106 0
 461 001e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 462 0020 303B     		subs	r3, r3, #48
 463 0022 0C4A     		ldr	r2, .L23+8
 464 0024 5360     		str	r3, [r2, #4]
 107:.\tic_tac_all.c **** 	ret[2] = str2[2]-48; // int temp = atoi(str2);
 465              		.loc 1 107 0
 466 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 467 0028 303B     		subs	r3, r3, #48
 468 002a 0A4A     		ldr	r2, .L23+8
 469 002c 9360     		str	r3, [r2, #8]
 108:.\tic_tac_all.c **** 	// free(str2);
 109:.\tic_tac_all.c **** 	printf("Entered %i %i %i",ret[0],ret[1],ret[2]);
 470              		.loc 1 109 0
 471 002e 094B     		ldr	r3, .L23+8
 472 0030 1968     		ldr	r1, [r3]
 473 0032 084B     		ldr	r3, .L23+8
 474 0034 5A68     		ldr	r2, [r3, #4]
 475 0036 074B     		ldr	r3, .L23+8
 476 0038 9B68     		ldr	r3, [r3, #8]
 477 003a 0748     		ldr	r0, .L23+12
 478 003c FFF7FEFF 		bl	printf
 110:.\tic_tac_all.c **** 	return ret;
 479              		.loc 1 110 0
 480 0040 044B     		ldr	r3, .L23+8
 111:.\tic_tac_all.c **** }
 481              		.loc 1 111 0
 482 0042 1846     		mov	r0, r3
 483 0044 0837     		adds	r7, r7, #8
 484              		.cfi_def_cfa_offset 8
 485 0046 BD46     		mov	sp, r7
 486              		.cfi_def_cfa_register 13
 487              		@ sp needed
 488 0048 80BD     		pop	{r7, pc}
 489              	.L24:
 490 004a 00BF     		.align	2
 491              	.L23:
 492 004c 3C000000 		.word	.LC2
 493 0050 50000000 		.word	.LC3
 494 0054 00000000 		.word	ret.7391
 495 0058 54000000 		.word	.LC4
 496              		.cfi_endproc
 497              	.LFE68:
 498              		.size	ttc_take_input, .-ttc_take_input
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 12


 499              		.section	.rodata
 500 0065 000000   		.align	2
 501              	.LC5:
 502 0068 25692000 		.ascii	"%i \000"
 503              		.align	2
 504              	.LC6:
 505 006c 0A416674 		.ascii	"\012After turn %i player %i\012\000"
 505      65722074 
 505      75726E20 
 505      25692070 
 505      6C617965 
 506              		.section	.text.ttc_print_grid,"ax",%progbits
 507              		.align	2
 508              		.global	ttc_print_grid
 509              		.thumb
 510              		.thumb_func
 511              		.type	ttc_print_grid, %function
 512              	ttc_print_grid:
 513              	.LFB69:
 112:.\tic_tac_all.c **** 
 113:.\tic_tac_all.c **** void ttc_print_grid(struct tic_tac_toe* t){
 514              		.loc 1 113 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 16
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518 0000 80B5     		push	{r7, lr}
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 84B0     		sub	sp, sp, #16
 523              		.cfi_def_cfa_offset 24
 524 0004 00AF     		add	r7, sp, #0
 525              		.cfi_def_cfa_register 7
 526 0006 7860     		str	r0, [r7, #4]
 114:.\tic_tac_all.c **** 	// this function prints the board
 115:.\tic_tac_all.c **** 	int i;
 116:.\tic_tac_all.c **** 	for (i = 0; i < 64; i++){
 527              		.loc 1 116 0
 528 0008 0023     		movs	r3, #0
 529 000a FB60     		str	r3, [r7, #12]
 530 000c 28E0     		b	.L26
 531              	.L30:
 117:.\tic_tac_all.c **** 		if (i % 4 == 0){
 532              		.loc 1 117 0
 533 000e FB68     		ldr	r3, [r7, #12]
 534 0010 03F00303 		and	r3, r3, #3
 535 0014 002B     		cmp	r3, #0
 536 0016 02D1     		bne	.L27
 118:.\tic_tac_all.c **** 			printf("\n");
 537              		.loc 1 118 0
 538 0018 0A20     		movs	r0, #10
 539 001a FFF7FEFF 		bl	putchar
 540              	.L27:
 119:.\tic_tac_all.c **** 		}
 120:.\tic_tac_all.c **** 		if (i % 16 == 0){
 541              		.loc 1 120 0
 542 001e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 13


 543 0020 03F00F03 		and	r3, r3, #15
 544 0024 002B     		cmp	r3, #0
 545 0026 02D1     		bne	.L28
 121:.\tic_tac_all.c **** 			printf("\n");
 546              		.loc 1 121 0
 547 0028 0A20     		movs	r0, #10
 548 002a FFF7FEFF 		bl	putchar
 549              	.L28:
 122:.\tic_tac_all.c **** 		}
 123:.\tic_tac_all.c **** 		printf("%i ",t->grid[i]);
 550              		.loc 1 123 0
 551 002e 7A68     		ldr	r2, [r7, #4]
 552 0030 FB68     		ldr	r3, [r7, #12]
 553 0032 0433     		adds	r3, r3, #4
 554 0034 9B00     		lsls	r3, r3, #2
 555 0036 1344     		add	r3, r3, r2
 556 0038 5B68     		ldr	r3, [r3, #4]
 557 003a 1148     		ldr	r0, .L31
 558 003c 1946     		mov	r1, r3
 559 003e FFF7FEFF 		bl	printf
 124:.\tic_tac_all.c **** 		if (t->grid[i] != -1){
 560              		.loc 1 124 0
 561 0042 7A68     		ldr	r2, [r7, #4]
 562 0044 FB68     		ldr	r3, [r7, #12]
 563 0046 0433     		adds	r3, r3, #4
 564 0048 9B00     		lsls	r3, r3, #2
 565 004a 1344     		add	r3, r3, r2
 566 004c 5B68     		ldr	r3, [r3, #4]
 567 004e B3F1FF3F 		cmp	r3, #-1
 568 0052 02D0     		beq	.L29
 125:.\tic_tac_all.c **** 			printf(" ");
 569              		.loc 1 125 0
 570 0054 2020     		movs	r0, #32
 571 0056 FFF7FEFF 		bl	putchar
 572              	.L29:
 116:.\tic_tac_all.c **** 		if (i % 4 == 0){
 573              		.loc 1 116 0 discriminator 2
 574 005a FB68     		ldr	r3, [r7, #12]
 575 005c 0133     		adds	r3, r3, #1
 576 005e FB60     		str	r3, [r7, #12]
 577              	.L26:
 116:.\tic_tac_all.c **** 		if (i % 4 == 0){
 578              		.loc 1 116 0 is_stmt 0 discriminator 1
 579 0060 FB68     		ldr	r3, [r7, #12]
 580 0062 3F2B     		cmp	r3, #63
 581 0064 D3DD     		ble	.L30
 126:.\tic_tac_all.c **** 		}
 127:.\tic_tac_all.c **** 	}
 128:.\tic_tac_all.c **** 	printf("\nAfter turn %i player %i\n",t->turn,t->player);
 582              		.loc 1 128 0 is_stmt 1
 583 0066 7B68     		ldr	r3, [r7, #4]
 584 0068 DA68     		ldr	r2, [r3, #12]
 585 006a 7B68     		ldr	r3, [r7, #4]
 586 006c 9B68     		ldr	r3, [r3, #8]
 587 006e 0548     		ldr	r0, .L31+4
 588 0070 1146     		mov	r1, r2
 589 0072 1A46     		mov	r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 14


 590 0074 FFF7FEFF 		bl	printf
 129:.\tic_tac_all.c **** }
 591              		.loc 1 129 0
 592 0078 1037     		adds	r7, r7, #16
 593              		.cfi_def_cfa_offset 8
 594 007a BD46     		mov	sp, r7
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 007c 80BD     		pop	{r7, pc}
 598              	.L32:
 599 007e 00BF     		.align	2
 600              	.L31:
 601 0080 68000000 		.word	.LC5
 602 0084 6C000000 		.word	.LC6
 603              		.cfi_endproc
 604              	.LFE69:
 605              		.size	ttc_print_grid, .-ttc_print_grid
 606              		.section	.rodata
 607 0086 0000     		.align	2
 608              	.LC7:
 609 0088 0A506C61 		.ascii	"\012Player %i\000"
 609      79657220 
 609      256900
 610              		.section	.text.ttc_check_win,"ax",%progbits
 611              		.align	2
 612              		.global	ttc_check_win
 613              		.thumb
 614              		.thumb_func
 615              		.type	ttc_check_win, %function
 616              	ttc_check_win:
 617              	.LFB70:
 130:.\tic_tac_all.c **** 
 131:.\tic_tac_all.c **** 
 132:.\tic_tac_all.c **** int ttc_check_win(struct tic_tac_toe* t){
 618              		.loc 1 132 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 32
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622 0000 80B5     		push	{r7, lr}
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 7, -8
 625              		.cfi_offset 14, -4
 626 0002 88B0     		sub	sp, sp, #32
 627              		.cfi_def_cfa_offset 40
 628 0004 00AF     		add	r7, sp, #0
 629              		.cfi_def_cfa_register 7
 630 0006 7860     		str	r0, [r7, #4]
 133:.\tic_tac_all.c **** 	printf("\nPlayer %i",t->player);
 631              		.loc 1 133 0
 632 0008 7B68     		ldr	r3, [r7, #4]
 633 000a 9B68     		ldr	r3, [r3, #8]
 634 000c 8948     		ldr	r0, .L82
 635 000e 1946     		mov	r1, r3
 636 0010 FFF7FEFF 		bl	printf
 134:.\tic_tac_all.c **** 	int x,y,z,zp;
 135:.\tic_tac_all.c **** 	int connected;
 136:.\tic_tac_all.c **** 	for (z = 0; z < t->size; z++){
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 15


 637              		.loc 1 136 0
 638 0014 0023     		movs	r3, #0
 639 0016 7B61     		str	r3, [r7, #20]
 640 0018 84E1     		b	.L34
 641              	.L69:
 137:.\tic_tac_all.c **** 		for (y = 0; y < t->size; y++){ // flat
 642              		.loc 1 137 0
 643 001a 0023     		movs	r3, #0
 644 001c BB61     		str	r3, [r7, #24]
 645 001e 28E0     		b	.L35
 646              	.L40:
 138:.\tic_tac_all.c **** 			connected = 0;
 647              		.loc 1 138 0
 648 0020 0023     		movs	r3, #0
 649 0022 FB60     		str	r3, [r7, #12]
 139:.\tic_tac_all.c **** 			for (x = 0; x < t->size;x++){
 650              		.loc 1 139 0
 651 0024 0023     		movs	r3, #0
 652 0026 FB61     		str	r3, [r7, #28]
 653 0028 0CE0     		b	.L36
 654              	.L37:
 140:.\tic_tac_all.c **** 				connected += ttc_get_grid(t,x,y,z);
 655              		.loc 1 140 0 discriminator 3
 656 002a 7868     		ldr	r0, [r7, #4]
 657 002c F969     		ldr	r1, [r7, #28]
 658 002e BA69     		ldr	r2, [r7, #24]
 659 0030 7B69     		ldr	r3, [r7, #20]
 660 0032 FFF7FEFF 		bl	ttc_get_grid
 661 0036 0246     		mov	r2, r0
 662 0038 FB68     		ldr	r3, [r7, #12]
 663 003a 1344     		add	r3, r3, r2
 664 003c FB60     		str	r3, [r7, #12]
 139:.\tic_tac_all.c **** 			for (x = 0; x < t->size;x++){
 665              		.loc 1 139 0 discriminator 3
 666 003e FB69     		ldr	r3, [r7, #28]
 667 0040 0133     		adds	r3, r3, #1
 668 0042 FB61     		str	r3, [r7, #28]
 669              	.L36:
 139:.\tic_tac_all.c **** 			for (x = 0; x < t->size;x++){
 670              		.loc 1 139 0 is_stmt 0 discriminator 1
 671 0044 7B68     		ldr	r3, [r7, #4]
 672 0046 1A68     		ldr	r2, [r3]
 673 0048 FB69     		ldr	r3, [r7, #28]
 674 004a 9A42     		cmp	r2, r3
 675 004c EDDC     		bgt	.L37
 141:.\tic_tac_all.c **** 			}
 142:.\tic_tac_all.c **** 			if (connected == t->player*t->size){
 676              		.loc 1 142 0 is_stmt 1
 677 004e 7B68     		ldr	r3, [r7, #4]
 678 0050 9B68     		ldr	r3, [r3, #8]
 679 0052 7A68     		ldr	r2, [r7, #4]
 680 0054 1268     		ldr	r2, [r2]
 681 0056 02FB03F2 		mul	r2, r2, r3
 682 005a FB68     		ldr	r3, [r7, #12]
 683 005c 9A42     		cmp	r2, r3
 684 005e 05D1     		bne	.L38
 143:.\tic_tac_all.c **** 				t->game_not_won = t->player; //when win, set to player id
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 16


 685              		.loc 1 143 0
 686 0060 7B68     		ldr	r3, [r7, #4]
 687 0062 9A68     		ldr	r2, [r3, #8]
 688 0064 7B68     		ldr	r3, [r7, #4]
 689 0066 1A61     		str	r2, [r3, #16]
 144:.\tic_tac_all.c **** 				return 1; //there is a win
 690              		.loc 1 144 0
 691 0068 0123     		movs	r3, #1
 692 006a 03E2     		b	.L39
 693              	.L38:
 137:.\tic_tac_all.c **** 			connected = 0;
 694              		.loc 1 137 0 discriminator 2
 695 006c BB69     		ldr	r3, [r7, #24]
 696 006e 0133     		adds	r3, r3, #1
 697 0070 BB61     		str	r3, [r7, #24]
 698              	.L35:
 137:.\tic_tac_all.c **** 			connected = 0;
 699              		.loc 1 137 0 is_stmt 0 discriminator 1
 700 0072 7B68     		ldr	r3, [r7, #4]
 701 0074 1A68     		ldr	r2, [r3]
 702 0076 BB69     		ldr	r3, [r7, #24]
 703 0078 9A42     		cmp	r2, r3
 704 007a D1DC     		bgt	.L40
 145:.\tic_tac_all.c **** 			}
 146:.\tic_tac_all.c **** 		}
 147:.\tic_tac_all.c **** 		for (x = 0; x < t->size; x++){ //horiz
 705              		.loc 1 147 0 is_stmt 1
 706 007c 0023     		movs	r3, #0
 707 007e FB61     		str	r3, [r7, #28]
 708 0080 28E0     		b	.L41
 709              	.L45:
 148:.\tic_tac_all.c **** 			connected = 0;
 710              		.loc 1 148 0
 711 0082 0023     		movs	r3, #0
 712 0084 FB60     		str	r3, [r7, #12]
 149:.\tic_tac_all.c **** 			for (y = 0; y < t->size;y++){
 713              		.loc 1 149 0
 714 0086 0023     		movs	r3, #0
 715 0088 BB61     		str	r3, [r7, #24]
 716 008a 0CE0     		b	.L42
 717              	.L43:
 150:.\tic_tac_all.c **** 				connected += ttc_get_grid(t,x,y,z);
 718              		.loc 1 150 0 discriminator 3
 719 008c 7868     		ldr	r0, [r7, #4]
 720 008e F969     		ldr	r1, [r7, #28]
 721 0090 BA69     		ldr	r2, [r7, #24]
 722 0092 7B69     		ldr	r3, [r7, #20]
 723 0094 FFF7FEFF 		bl	ttc_get_grid
 724 0098 0246     		mov	r2, r0
 725 009a FB68     		ldr	r3, [r7, #12]
 726 009c 1344     		add	r3, r3, r2
 727 009e FB60     		str	r3, [r7, #12]
 149:.\tic_tac_all.c **** 			for (y = 0; y < t->size;y++){
 728              		.loc 1 149 0 discriminator 3
 729 00a0 BB69     		ldr	r3, [r7, #24]
 730 00a2 0133     		adds	r3, r3, #1
 731 00a4 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 17


 732              	.L42:
 149:.\tic_tac_all.c **** 			for (y = 0; y < t->size;y++){
 733              		.loc 1 149 0 is_stmt 0 discriminator 1
 734 00a6 7B68     		ldr	r3, [r7, #4]
 735 00a8 1A68     		ldr	r2, [r3]
 736 00aa BB69     		ldr	r3, [r7, #24]
 737 00ac 9A42     		cmp	r2, r3
 738 00ae EDDC     		bgt	.L43
 151:.\tic_tac_all.c **** 			}
 152:.\tic_tac_all.c **** 			if (connected == t->player*t->size){
 739              		.loc 1 152 0 is_stmt 1
 740 00b0 7B68     		ldr	r3, [r7, #4]
 741 00b2 9B68     		ldr	r3, [r3, #8]
 742 00b4 7A68     		ldr	r2, [r7, #4]
 743 00b6 1268     		ldr	r2, [r2]
 744 00b8 02FB03F2 		mul	r2, r2, r3
 745 00bc FB68     		ldr	r3, [r7, #12]
 746 00be 9A42     		cmp	r2, r3
 747 00c0 05D1     		bne	.L44
 153:.\tic_tac_all.c **** 				t->game_not_won = t->player; //when win, set to player id
 748              		.loc 1 153 0
 749 00c2 7B68     		ldr	r3, [r7, #4]
 750 00c4 9A68     		ldr	r2, [r3, #8]
 751 00c6 7B68     		ldr	r3, [r7, #4]
 752 00c8 1A61     		str	r2, [r3, #16]
 154:.\tic_tac_all.c **** 				return 1; //there is a win
 753              		.loc 1 154 0
 754 00ca 0123     		movs	r3, #1
 755 00cc D2E1     		b	.L39
 756              	.L44:
 147:.\tic_tac_all.c **** 			connected = 0;
 757              		.loc 1 147 0 discriminator 2
 758 00ce FB69     		ldr	r3, [r7, #28]
 759 00d0 0133     		adds	r3, r3, #1
 760 00d2 FB61     		str	r3, [r7, #28]
 761              	.L41:
 147:.\tic_tac_all.c **** 			connected = 0;
 762              		.loc 1 147 0 is_stmt 0 discriminator 1
 763 00d4 7B68     		ldr	r3, [r7, #4]
 764 00d6 1A68     		ldr	r2, [r3]
 765 00d8 FB69     		ldr	r3, [r7, #28]
 766 00da 9A42     		cmp	r2, r3
 767 00dc D1DC     		bgt	.L45
 155:.\tic_tac_all.c **** 			}
 156:.\tic_tac_all.c **** 		}
 157:.\tic_tac_all.c **** 		for (x = 0; x < t->size; x++){ //vert, where z is y coord
 768              		.loc 1 157 0 is_stmt 1
 769 00de 0023     		movs	r3, #0
 770 00e0 FB61     		str	r3, [r7, #28]
 771 00e2 28E0     		b	.L46
 772              	.L50:
 158:.\tic_tac_all.c **** 			connected = 0;
 773              		.loc 1 158 0
 774 00e4 0023     		movs	r3, #0
 775 00e6 FB60     		str	r3, [r7, #12]
 159:.\tic_tac_all.c **** 			for (zp = 0; zp < t->size;zp++){
 776              		.loc 1 159 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 18


 777 00e8 0023     		movs	r3, #0
 778 00ea 3B61     		str	r3, [r7, #16]
 779 00ec 0CE0     		b	.L47
 780              	.L48:
 160:.\tic_tac_all.c **** 				connected += ttc_get_grid(t,x,z,zp);
 781              		.loc 1 160 0 discriminator 3
 782 00ee 7868     		ldr	r0, [r7, #4]
 783 00f0 F969     		ldr	r1, [r7, #28]
 784 00f2 7A69     		ldr	r2, [r7, #20]
 785 00f4 3B69     		ldr	r3, [r7, #16]
 786 00f6 FFF7FEFF 		bl	ttc_get_grid
 787 00fa 0246     		mov	r2, r0
 788 00fc FB68     		ldr	r3, [r7, #12]
 789 00fe 1344     		add	r3, r3, r2
 790 0100 FB60     		str	r3, [r7, #12]
 159:.\tic_tac_all.c **** 			for (zp = 0; zp < t->size;zp++){
 791              		.loc 1 159 0 discriminator 3
 792 0102 3B69     		ldr	r3, [r7, #16]
 793 0104 0133     		adds	r3, r3, #1
 794 0106 3B61     		str	r3, [r7, #16]
 795              	.L47:
 159:.\tic_tac_all.c **** 			for (zp = 0; zp < t->size;zp++){
 796              		.loc 1 159 0 is_stmt 0 discriminator 1
 797 0108 7B68     		ldr	r3, [r7, #4]
 798 010a 1A68     		ldr	r2, [r3]
 799 010c 3B69     		ldr	r3, [r7, #16]
 800 010e 9A42     		cmp	r2, r3
 801 0110 EDDC     		bgt	.L48
 161:.\tic_tac_all.c **** 			}
 162:.\tic_tac_all.c **** 			if (connected == t->player*t->size){
 802              		.loc 1 162 0 is_stmt 1
 803 0112 7B68     		ldr	r3, [r7, #4]
 804 0114 9B68     		ldr	r3, [r3, #8]
 805 0116 7A68     		ldr	r2, [r7, #4]
 806 0118 1268     		ldr	r2, [r2]
 807 011a 02FB03F2 		mul	r2, r2, r3
 808 011e FB68     		ldr	r3, [r7, #12]
 809 0120 9A42     		cmp	r2, r3
 810 0122 05D1     		bne	.L49
 163:.\tic_tac_all.c **** 				t->game_not_won = t->player; //when win, set to player id
 811              		.loc 1 163 0
 812 0124 7B68     		ldr	r3, [r7, #4]
 813 0126 9A68     		ldr	r2, [r3, #8]
 814 0128 7B68     		ldr	r3, [r7, #4]
 815 012a 1A61     		str	r2, [r3, #16]
 164:.\tic_tac_all.c **** 				return 1; //there is a win
 816              		.loc 1 164 0
 817 012c 0123     		movs	r3, #1
 818 012e A1E1     		b	.L39
 819              	.L49:
 157:.\tic_tac_all.c **** 			connected = 0;
 820              		.loc 1 157 0 discriminator 2
 821 0130 FB69     		ldr	r3, [r7, #28]
 822 0132 0133     		adds	r3, r3, #1
 823 0134 FB61     		str	r3, [r7, #28]
 824              	.L46:
 157:.\tic_tac_all.c **** 			connected = 0;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 19


 825              		.loc 1 157 0 is_stmt 0 discriminator 1
 826 0136 7B68     		ldr	r3, [r7, #4]
 827 0138 1A68     		ldr	r2, [r3]
 828 013a FB69     		ldr	r3, [r7, #28]
 829 013c 9A42     		cmp	r2, r3
 830 013e D1DC     		bgt	.L50
 165:.\tic_tac_all.c **** 			}
 166:.\tic_tac_all.c **** 		}
 167:.\tic_tac_all.c **** 		connected = 0; //planar
 831              		.loc 1 167 0 is_stmt 1
 832 0140 0023     		movs	r3, #0
 833 0142 FB60     		str	r3, [r7, #12]
 168:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 834              		.loc 1 168 0
 835 0144 0023     		movs	r3, #0
 836 0146 3B61     		str	r3, [r7, #16]
 837 0148 0CE0     		b	.L51
 838              	.L52:
 169:.\tic_tac_all.c **** 			connected += ttc_get_grid(t,z,zp,zp);
 839              		.loc 1 169 0 discriminator 3
 840 014a 7868     		ldr	r0, [r7, #4]
 841 014c 7969     		ldr	r1, [r7, #20]
 842 014e 3A69     		ldr	r2, [r7, #16]
 843 0150 3B69     		ldr	r3, [r7, #16]
 844 0152 FFF7FEFF 		bl	ttc_get_grid
 845 0156 0246     		mov	r2, r0
 846 0158 FB68     		ldr	r3, [r7, #12]
 847 015a 1344     		add	r3, r3, r2
 848 015c FB60     		str	r3, [r7, #12]
 168:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 849              		.loc 1 168 0 discriminator 3
 850 015e 3B69     		ldr	r3, [r7, #16]
 851 0160 0133     		adds	r3, r3, #1
 852 0162 3B61     		str	r3, [r7, #16]
 853              	.L51:
 168:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 854              		.loc 1 168 0 is_stmt 0 discriminator 1
 855 0164 7B68     		ldr	r3, [r7, #4]
 856 0166 1A68     		ldr	r2, [r3]
 857 0168 3B69     		ldr	r3, [r7, #16]
 858 016a 9A42     		cmp	r2, r3
 859 016c EDDC     		bgt	.L52
 170:.\tic_tac_all.c **** 		}
 171:.\tic_tac_all.c **** 		if (connected == t->player*t->size){
 860              		.loc 1 171 0 is_stmt 1
 861 016e 7B68     		ldr	r3, [r7, #4]
 862 0170 9B68     		ldr	r3, [r3, #8]
 863 0172 7A68     		ldr	r2, [r7, #4]
 864 0174 1268     		ldr	r2, [r2]
 865 0176 02FB03F2 		mul	r2, r2, r3
 866 017a FB68     		ldr	r3, [r7, #12]
 867 017c 9A42     		cmp	r2, r3
 868 017e 05D1     		bne	.L53
 172:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 869              		.loc 1 172 0
 870 0180 7B68     		ldr	r3, [r7, #4]
 871 0182 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 20


 872 0184 7B68     		ldr	r3, [r7, #4]
 873 0186 1A61     		str	r2, [r3, #16]
 173:.\tic_tac_all.c **** 			return 1; //there is a win
 874              		.loc 1 173 0
 875 0188 0123     		movs	r3, #1
 876 018a 73E1     		b	.L39
 877              	.L53:
 174:.\tic_tac_all.c **** 		}
 175:.\tic_tac_all.c **** 		connected = 0; //planar
 878              		.loc 1 175 0
 879 018c 0023     		movs	r3, #0
 880 018e FB60     		str	r3, [r7, #12]
 176:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 881              		.loc 1 176 0
 882 0190 0023     		movs	r3, #0
 883 0192 3B61     		str	r3, [r7, #16]
 884 0194 0FE0     		b	.L54
 885              	.L55:
 177:.\tic_tac_all.c **** 			connected += ttc_get_grid(t,z,3-zp,zp);
 886              		.loc 1 177 0 discriminator 3
 887 0196 3B69     		ldr	r3, [r7, #16]
 888 0198 C3F10303 		rsb	r3, r3, #3
 889 019c 7868     		ldr	r0, [r7, #4]
 890 019e 7969     		ldr	r1, [r7, #20]
 891 01a0 1A46     		mov	r2, r3
 892 01a2 3B69     		ldr	r3, [r7, #16]
 893 01a4 FFF7FEFF 		bl	ttc_get_grid
 894 01a8 0246     		mov	r2, r0
 895 01aa FB68     		ldr	r3, [r7, #12]
 896 01ac 1344     		add	r3, r3, r2
 897 01ae FB60     		str	r3, [r7, #12]
 176:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 898              		.loc 1 176 0 discriminator 3
 899 01b0 3B69     		ldr	r3, [r7, #16]
 900 01b2 0133     		adds	r3, r3, #1
 901 01b4 3B61     		str	r3, [r7, #16]
 902              	.L54:
 176:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 903              		.loc 1 176 0 is_stmt 0 discriminator 1
 904 01b6 7B68     		ldr	r3, [r7, #4]
 905 01b8 1A68     		ldr	r2, [r3]
 906 01ba 3B69     		ldr	r3, [r7, #16]
 907 01bc 9A42     		cmp	r2, r3
 908 01be EADC     		bgt	.L55
 178:.\tic_tac_all.c **** 		}
 179:.\tic_tac_all.c **** 		if (connected == t->player*t->size){
 909              		.loc 1 179 0 is_stmt 1
 910 01c0 7B68     		ldr	r3, [r7, #4]
 911 01c2 9B68     		ldr	r3, [r3, #8]
 912 01c4 7A68     		ldr	r2, [r7, #4]
 913 01c6 1268     		ldr	r2, [r2]
 914 01c8 02FB03F2 		mul	r2, r2, r3
 915 01cc FB68     		ldr	r3, [r7, #12]
 916 01ce 9A42     		cmp	r2, r3
 917 01d0 05D1     		bne	.L56
 180:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 918              		.loc 1 180 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 21


 919 01d2 7B68     		ldr	r3, [r7, #4]
 920 01d4 9A68     		ldr	r2, [r3, #8]
 921 01d6 7B68     		ldr	r3, [r7, #4]
 922 01d8 1A61     		str	r2, [r3, #16]
 181:.\tic_tac_all.c **** 			return 1; //there is a win
 923              		.loc 1 181 0
 924 01da 0123     		movs	r3, #1
 925 01dc 4AE1     		b	.L39
 926              	.L56:
 182:.\tic_tac_all.c **** 		}
 183:.\tic_tac_all.c **** 		connected = 0; //frontal
 927              		.loc 1 183 0
 928 01de 0023     		movs	r3, #0
 929 01e0 FB60     		str	r3, [r7, #12]
 184:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 930              		.loc 1 184 0
 931 01e2 0023     		movs	r3, #0
 932 01e4 3B61     		str	r3, [r7, #16]
 933 01e6 0CE0     		b	.L57
 934              	.L58:
 185:.\tic_tac_all.c **** 			connected += ttc_get_grid(t,zp,z,zp);
 935              		.loc 1 185 0 discriminator 3
 936 01e8 7868     		ldr	r0, [r7, #4]
 937 01ea 3969     		ldr	r1, [r7, #16]
 938 01ec 7A69     		ldr	r2, [r7, #20]
 939 01ee 3B69     		ldr	r3, [r7, #16]
 940 01f0 FFF7FEFF 		bl	ttc_get_grid
 941 01f4 0246     		mov	r2, r0
 942 01f6 FB68     		ldr	r3, [r7, #12]
 943 01f8 1344     		add	r3, r3, r2
 944 01fa FB60     		str	r3, [r7, #12]
 184:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 945              		.loc 1 184 0 discriminator 3
 946 01fc 3B69     		ldr	r3, [r7, #16]
 947 01fe 0133     		adds	r3, r3, #1
 948 0200 3B61     		str	r3, [r7, #16]
 949              	.L57:
 184:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 950              		.loc 1 184 0 is_stmt 0 discriminator 1
 951 0202 7B68     		ldr	r3, [r7, #4]
 952 0204 1A68     		ldr	r2, [r3]
 953 0206 3B69     		ldr	r3, [r7, #16]
 954 0208 9A42     		cmp	r2, r3
 955 020a EDDC     		bgt	.L58
 186:.\tic_tac_all.c **** 		}
 187:.\tic_tac_all.c **** 		if (connected == t->player*t->size){
 956              		.loc 1 187 0 is_stmt 1
 957 020c 7B68     		ldr	r3, [r7, #4]
 958 020e 9B68     		ldr	r3, [r3, #8]
 959 0210 7A68     		ldr	r2, [r7, #4]
 960 0212 1268     		ldr	r2, [r2]
 961 0214 02FB03F2 		mul	r2, r2, r3
 962 0218 FB68     		ldr	r3, [r7, #12]
 963 021a 9A42     		cmp	r2, r3
 964 021c 05D1     		bne	.L59
 188:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 965              		.loc 1 188 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 22


 966 021e 7B68     		ldr	r3, [r7, #4]
 967 0220 9A68     		ldr	r2, [r3, #8]
 968 0222 7B68     		ldr	r3, [r7, #4]
 969 0224 1A61     		str	r2, [r3, #16]
 189:.\tic_tac_all.c **** 			return 1; //there is a win
 970              		.loc 1 189 0
 971 0226 0123     		movs	r3, #1
 972 0228 24E1     		b	.L39
 973              	.L59:
 190:.\tic_tac_all.c **** 		}
 191:.\tic_tac_all.c **** 		connected = 0; //frontal
 974              		.loc 1 191 0
 975 022a 0023     		movs	r3, #0
 976 022c FB60     		str	r3, [r7, #12]
 192:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 977              		.loc 1 192 0
 978 022e 0023     		movs	r3, #0
 979 0230 3B61     		str	r3, [r7, #16]
 980 0232 11E0     		b	.L60
 981              	.L83:
 982              		.align	2
 983              	.L82:
 984 0234 88000000 		.word	.LC7
 985              	.L61:
 193:.\tic_tac_all.c **** 			connected += ttc_get_grid(t,3-z,z,zp);
 986              		.loc 1 193 0 discriminator 3
 987 0238 7B69     		ldr	r3, [r7, #20]
 988 023a C3F10303 		rsb	r3, r3, #3
 989 023e 7868     		ldr	r0, [r7, #4]
 990 0240 1946     		mov	r1, r3
 991 0242 7A69     		ldr	r2, [r7, #20]
 992 0244 3B69     		ldr	r3, [r7, #16]
 993 0246 FFF7FEFF 		bl	ttc_get_grid
 994 024a 0246     		mov	r2, r0
 995 024c FB68     		ldr	r3, [r7, #12]
 996 024e 1344     		add	r3, r3, r2
 997 0250 FB60     		str	r3, [r7, #12]
 192:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 998              		.loc 1 192 0 discriminator 3
 999 0252 3B69     		ldr	r3, [r7, #16]
 1000 0254 0133     		adds	r3, r3, #1
 1001 0256 3B61     		str	r3, [r7, #16]
 1002              	.L60:
 192:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1003              		.loc 1 192 0 is_stmt 0 discriminator 1
 1004 0258 7B68     		ldr	r3, [r7, #4]
 1005 025a 1A68     		ldr	r2, [r3]
 1006 025c 3B69     		ldr	r3, [r7, #16]
 1007 025e 9A42     		cmp	r2, r3
 1008 0260 EADC     		bgt	.L61
 194:.\tic_tac_all.c **** 		}
 195:.\tic_tac_all.c **** 		if (connected == t->player*t->size){
 1009              		.loc 1 195 0 is_stmt 1
 1010 0262 7B68     		ldr	r3, [r7, #4]
 1011 0264 9B68     		ldr	r3, [r3, #8]
 1012 0266 7A68     		ldr	r2, [r7, #4]
 1013 0268 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 23


 1014 026a 02FB03F2 		mul	r2, r2, r3
 1015 026e FB68     		ldr	r3, [r7, #12]
 1016 0270 9A42     		cmp	r2, r3
 1017 0272 05D1     		bne	.L62
 196:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 1018              		.loc 1 196 0
 1019 0274 7B68     		ldr	r3, [r7, #4]
 1020 0276 9A68     		ldr	r2, [r3, #8]
 1021 0278 7B68     		ldr	r3, [r7, #4]
 1022 027a 1A61     		str	r2, [r3, #16]
 197:.\tic_tac_all.c **** 			return 1; //there is a win
 1023              		.loc 1 197 0
 1024 027c 0123     		movs	r3, #1
 1025 027e F9E0     		b	.L39
 1026              	.L62:
 198:.\tic_tac_all.c **** 		}
 199:.\tic_tac_all.c **** 		connected = 0; //sidal
 1027              		.loc 1 199 0
 1028 0280 0023     		movs	r3, #0
 1029 0282 FB60     		str	r3, [r7, #12]
 200:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1030              		.loc 1 200 0
 1031 0284 0023     		movs	r3, #0
 1032 0286 3B61     		str	r3, [r7, #16]
 1033 0288 0CE0     		b	.L63
 1034              	.L64:
 201:.\tic_tac_all.c **** 			connected += ttc_get_grid(t,zp,zp,z);
 1035              		.loc 1 201 0 discriminator 3
 1036 028a 7868     		ldr	r0, [r7, #4]
 1037 028c 3969     		ldr	r1, [r7, #16]
 1038 028e 3A69     		ldr	r2, [r7, #16]
 1039 0290 7B69     		ldr	r3, [r7, #20]
 1040 0292 FFF7FEFF 		bl	ttc_get_grid
 1041 0296 0246     		mov	r2, r0
 1042 0298 FB68     		ldr	r3, [r7, #12]
 1043 029a 1344     		add	r3, r3, r2
 1044 029c FB60     		str	r3, [r7, #12]
 200:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1045              		.loc 1 200 0 discriminator 3
 1046 029e 3B69     		ldr	r3, [r7, #16]
 1047 02a0 0133     		adds	r3, r3, #1
 1048 02a2 3B61     		str	r3, [r7, #16]
 1049              	.L63:
 200:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1050              		.loc 1 200 0 is_stmt 0 discriminator 1
 1051 02a4 7B68     		ldr	r3, [r7, #4]
 1052 02a6 1A68     		ldr	r2, [r3]
 1053 02a8 3B69     		ldr	r3, [r7, #16]
 1054 02aa 9A42     		cmp	r2, r3
 1055 02ac EDDC     		bgt	.L64
 202:.\tic_tac_all.c **** 		}
 203:.\tic_tac_all.c **** 		if (connected == t->player*t->size){
 1056              		.loc 1 203 0 is_stmt 1
 1057 02ae 7B68     		ldr	r3, [r7, #4]
 1058 02b0 9B68     		ldr	r3, [r3, #8]
 1059 02b2 7A68     		ldr	r2, [r7, #4]
 1060 02b4 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 24


 1061 02b6 02FB03F2 		mul	r2, r2, r3
 1062 02ba FB68     		ldr	r3, [r7, #12]
 1063 02bc 9A42     		cmp	r2, r3
 1064 02be 05D1     		bne	.L65
 204:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 1065              		.loc 1 204 0
 1066 02c0 7B68     		ldr	r3, [r7, #4]
 1067 02c2 9A68     		ldr	r2, [r3, #8]
 1068 02c4 7B68     		ldr	r3, [r7, #4]
 1069 02c6 1A61     		str	r2, [r3, #16]
 205:.\tic_tac_all.c **** 			return 1; //there is a win
 1070              		.loc 1 205 0
 1071 02c8 0123     		movs	r3, #1
 1072 02ca D3E0     		b	.L39
 1073              	.L65:
 206:.\tic_tac_all.c **** 		}
 207:.\tic_tac_all.c **** 		connected = 0; //sidal
 1074              		.loc 1 207 0
 1075 02cc 0023     		movs	r3, #0
 1076 02ce FB60     		str	r3, [r7, #12]
 208:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1077              		.loc 1 208 0
 1078 02d0 0023     		movs	r3, #0
 1079 02d2 3B61     		str	r3, [r7, #16]
 1080 02d4 0FE0     		b	.L66
 1081              	.L67:
 209:.\tic_tac_all.c **** 			connected += ttc_get_grid(t,zp,3-zp,z);
 1082              		.loc 1 209 0 discriminator 3
 1083 02d6 3B69     		ldr	r3, [r7, #16]
 1084 02d8 C3F10303 		rsb	r3, r3, #3
 1085 02dc 7868     		ldr	r0, [r7, #4]
 1086 02de 3969     		ldr	r1, [r7, #16]
 1087 02e0 1A46     		mov	r2, r3
 1088 02e2 7B69     		ldr	r3, [r7, #20]
 1089 02e4 FFF7FEFF 		bl	ttc_get_grid
 1090 02e8 0246     		mov	r2, r0
 1091 02ea FB68     		ldr	r3, [r7, #12]
 1092 02ec 1344     		add	r3, r3, r2
 1093 02ee FB60     		str	r3, [r7, #12]
 208:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1094              		.loc 1 208 0 discriminator 3
 1095 02f0 3B69     		ldr	r3, [r7, #16]
 1096 02f2 0133     		adds	r3, r3, #1
 1097 02f4 3B61     		str	r3, [r7, #16]
 1098              	.L66:
 208:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1099              		.loc 1 208 0 is_stmt 0 discriminator 1
 1100 02f6 7B68     		ldr	r3, [r7, #4]
 1101 02f8 1A68     		ldr	r2, [r3]
 1102 02fa 3B69     		ldr	r3, [r7, #16]
 1103 02fc 9A42     		cmp	r2, r3
 1104 02fe EADC     		bgt	.L67
 210:.\tic_tac_all.c **** 		}
 211:.\tic_tac_all.c **** 		if (connected == t->player*t->size){
 1105              		.loc 1 211 0 is_stmt 1
 1106 0300 7B68     		ldr	r3, [r7, #4]
 1107 0302 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 25


 1108 0304 7A68     		ldr	r2, [r7, #4]
 1109 0306 1268     		ldr	r2, [r2]
 1110 0308 02FB03F2 		mul	r2, r2, r3
 1111 030c FB68     		ldr	r3, [r7, #12]
 1112 030e 9A42     		cmp	r2, r3
 1113 0310 05D1     		bne	.L68
 212:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 1114              		.loc 1 212 0
 1115 0312 7B68     		ldr	r3, [r7, #4]
 1116 0314 9A68     		ldr	r2, [r3, #8]
 1117 0316 7B68     		ldr	r3, [r7, #4]
 1118 0318 1A61     		str	r2, [r3, #16]
 213:.\tic_tac_all.c **** 			return 1; //there is a win
 1119              		.loc 1 213 0
 1120 031a 0123     		movs	r3, #1
 1121 031c AAE0     		b	.L39
 1122              	.L68:
 136:.\tic_tac_all.c **** 		for (y = 0; y < t->size; y++){ // flat
 1123              		.loc 1 136 0 discriminator 2
 1124 031e 7B69     		ldr	r3, [r7, #20]
 1125 0320 0133     		adds	r3, r3, #1
 1126 0322 7B61     		str	r3, [r7, #20]
 1127              	.L34:
 136:.\tic_tac_all.c **** 		for (y = 0; y < t->size; y++){ // flat
 1128              		.loc 1 136 0 is_stmt 0 discriminator 1
 1129 0324 7B68     		ldr	r3, [r7, #4]
 1130 0326 1A68     		ldr	r2, [r3]
 1131 0328 7B69     		ldr	r3, [r7, #20]
 1132 032a 9A42     		cmp	r2, r3
 1133 032c 3FF775AE 		bgt	.L69
 214:.\tic_tac_all.c **** 		}
 215:.\tic_tac_all.c **** 	}
 216:.\tic_tac_all.c **** 	connected = 0; //superdiag 1
 1134              		.loc 1 216 0 is_stmt 1
 1135 0330 0023     		movs	r3, #0
 1136 0332 FB60     		str	r3, [r7, #12]
 217:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1137              		.loc 1 217 0
 1138 0334 0023     		movs	r3, #0
 1139 0336 3B61     		str	r3, [r7, #16]
 1140 0338 0CE0     		b	.L70
 1141              	.L71:
 218:.\tic_tac_all.c **** 		connected += ttc_get_grid(t,zp,zp,zp);
 1142              		.loc 1 218 0 discriminator 3
 1143 033a 7868     		ldr	r0, [r7, #4]
 1144 033c 3969     		ldr	r1, [r7, #16]
 1145 033e 3A69     		ldr	r2, [r7, #16]
 1146 0340 3B69     		ldr	r3, [r7, #16]
 1147 0342 FFF7FEFF 		bl	ttc_get_grid
 1148 0346 0246     		mov	r2, r0
 1149 0348 FB68     		ldr	r3, [r7, #12]
 1150 034a 1344     		add	r3, r3, r2
 1151 034c FB60     		str	r3, [r7, #12]
 217:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1152              		.loc 1 217 0 discriminator 3
 1153 034e 3B69     		ldr	r3, [r7, #16]
 1154 0350 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 26


 1155 0352 3B61     		str	r3, [r7, #16]
 1156              	.L70:
 217:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1157              		.loc 1 217 0 is_stmt 0 discriminator 1
 1158 0354 7B68     		ldr	r3, [r7, #4]
 1159 0356 1A68     		ldr	r2, [r3]
 1160 0358 3B69     		ldr	r3, [r7, #16]
 1161 035a 9A42     		cmp	r2, r3
 1162 035c EDDC     		bgt	.L71
 219:.\tic_tac_all.c **** 	}
 220:.\tic_tac_all.c **** 	if (connected == t->player*t->size){
 1163              		.loc 1 220 0 is_stmt 1
 1164 035e 7B68     		ldr	r3, [r7, #4]
 1165 0360 9B68     		ldr	r3, [r3, #8]
 1166 0362 7A68     		ldr	r2, [r7, #4]
 1167 0364 1268     		ldr	r2, [r2]
 1168 0366 02FB03F2 		mul	r2, r2, r3
 1169 036a FB68     		ldr	r3, [r7, #12]
 1170 036c 9A42     		cmp	r2, r3
 1171 036e 05D1     		bne	.L72
 221:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 1172              		.loc 1 221 0
 1173 0370 7B68     		ldr	r3, [r7, #4]
 1174 0372 9A68     		ldr	r2, [r3, #8]
 1175 0374 7B68     		ldr	r3, [r7, #4]
 1176 0376 1A61     		str	r2, [r3, #16]
 222:.\tic_tac_all.c **** 		return 1; //there is a win
 1177              		.loc 1 222 0
 1178 0378 0123     		movs	r3, #1
 1179 037a 7BE0     		b	.L39
 1180              	.L72:
 223:.\tic_tac_all.c **** 	}
 224:.\tic_tac_all.c **** 	connected = 0; //superdiag 2
 1181              		.loc 1 224 0
 1182 037c 0023     		movs	r3, #0
 1183 037e FB60     		str	r3, [r7, #12]
 225:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1184              		.loc 1 225 0
 1185 0380 0023     		movs	r3, #0
 1186 0382 3B61     		str	r3, [r7, #16]
 1187 0384 0FE0     		b	.L73
 1188              	.L74:
 226:.\tic_tac_all.c **** 		connected += ttc_get_grid(t,zp,3-zp,zp);
 1189              		.loc 1 226 0 discriminator 3
 1190 0386 3B69     		ldr	r3, [r7, #16]
 1191 0388 C3F10303 		rsb	r3, r3, #3
 1192 038c 7868     		ldr	r0, [r7, #4]
 1193 038e 3969     		ldr	r1, [r7, #16]
 1194 0390 1A46     		mov	r2, r3
 1195 0392 3B69     		ldr	r3, [r7, #16]
 1196 0394 FFF7FEFF 		bl	ttc_get_grid
 1197 0398 0246     		mov	r2, r0
 1198 039a FB68     		ldr	r3, [r7, #12]
 1199 039c 1344     		add	r3, r3, r2
 1200 039e FB60     		str	r3, [r7, #12]
 225:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1201              		.loc 1 225 0 discriminator 3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 27


 1202 03a0 3B69     		ldr	r3, [r7, #16]
 1203 03a2 0133     		adds	r3, r3, #1
 1204 03a4 3B61     		str	r3, [r7, #16]
 1205              	.L73:
 225:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1206              		.loc 1 225 0 is_stmt 0 discriminator 1
 1207 03a6 7B68     		ldr	r3, [r7, #4]
 1208 03a8 1A68     		ldr	r2, [r3]
 1209 03aa 3B69     		ldr	r3, [r7, #16]
 1210 03ac 9A42     		cmp	r2, r3
 1211 03ae EADC     		bgt	.L74
 227:.\tic_tac_all.c **** 	}
 228:.\tic_tac_all.c **** 	if (connected == t->player*t->size){
 1212              		.loc 1 228 0 is_stmt 1
 1213 03b0 7B68     		ldr	r3, [r7, #4]
 1214 03b2 9B68     		ldr	r3, [r3, #8]
 1215 03b4 7A68     		ldr	r2, [r7, #4]
 1216 03b6 1268     		ldr	r2, [r2]
 1217 03b8 02FB03F2 		mul	r2, r2, r3
 1218 03bc FB68     		ldr	r3, [r7, #12]
 1219 03be 9A42     		cmp	r2, r3
 1220 03c0 05D1     		bne	.L75
 229:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 1221              		.loc 1 229 0
 1222 03c2 7B68     		ldr	r3, [r7, #4]
 1223 03c4 9A68     		ldr	r2, [r3, #8]
 1224 03c6 7B68     		ldr	r3, [r7, #4]
 1225 03c8 1A61     		str	r2, [r3, #16]
 230:.\tic_tac_all.c **** 		return 1; //there is a win
 1226              		.loc 1 230 0
 1227 03ca 0123     		movs	r3, #1
 1228 03cc 52E0     		b	.L39
 1229              	.L75:
 231:.\tic_tac_all.c **** 	}
 232:.\tic_tac_all.c **** 	connected = 0; //superdiag 3
 1230              		.loc 1 232 0
 1231 03ce 0023     		movs	r3, #0
 1232 03d0 FB60     		str	r3, [r7, #12]
 233:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1233              		.loc 1 233 0
 1234 03d2 0023     		movs	r3, #0
 1235 03d4 3B61     		str	r3, [r7, #16]
 1236 03d6 0EE0     		b	.L76
 1237              	.L77:
 234:.\tic_tac_all.c **** 		connected += ttc_get_grid(t,zp,zp,3-zp);
 1238              		.loc 1 234 0 discriminator 3
 1239 03d8 3B69     		ldr	r3, [r7, #16]
 1240 03da C3F10303 		rsb	r3, r3, #3
 1241 03de 7868     		ldr	r0, [r7, #4]
 1242 03e0 3969     		ldr	r1, [r7, #16]
 1243 03e2 3A69     		ldr	r2, [r7, #16]
 1244 03e4 FFF7FEFF 		bl	ttc_get_grid
 1245 03e8 0246     		mov	r2, r0
 1246 03ea FB68     		ldr	r3, [r7, #12]
 1247 03ec 1344     		add	r3, r3, r2
 1248 03ee FB60     		str	r3, [r7, #12]
 233:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 28


 1249              		.loc 1 233 0 discriminator 3
 1250 03f0 3B69     		ldr	r3, [r7, #16]
 1251 03f2 0133     		adds	r3, r3, #1
 1252 03f4 3B61     		str	r3, [r7, #16]
 1253              	.L76:
 233:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1254              		.loc 1 233 0 is_stmt 0 discriminator 1
 1255 03f6 7B68     		ldr	r3, [r7, #4]
 1256 03f8 1A68     		ldr	r2, [r3]
 1257 03fa 3B69     		ldr	r3, [r7, #16]
 1258 03fc 9A42     		cmp	r2, r3
 1259 03fe EBDC     		bgt	.L77
 235:.\tic_tac_all.c **** 	}
 236:.\tic_tac_all.c **** 	if (connected == t->player*t->size){
 1260              		.loc 1 236 0 is_stmt 1
 1261 0400 7B68     		ldr	r3, [r7, #4]
 1262 0402 9B68     		ldr	r3, [r3, #8]
 1263 0404 7A68     		ldr	r2, [r7, #4]
 1264 0406 1268     		ldr	r2, [r2]
 1265 0408 02FB03F2 		mul	r2, r2, r3
 1266 040c FB68     		ldr	r3, [r7, #12]
 1267 040e 9A42     		cmp	r2, r3
 1268 0410 05D1     		bne	.L78
 237:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 1269              		.loc 1 237 0
 1270 0412 7B68     		ldr	r3, [r7, #4]
 1271 0414 9A68     		ldr	r2, [r3, #8]
 1272 0416 7B68     		ldr	r3, [r7, #4]
 1273 0418 1A61     		str	r2, [r3, #16]
 238:.\tic_tac_all.c **** 		return 1; //there is a win
 1274              		.loc 1 238 0
 1275 041a 0123     		movs	r3, #1
 1276 041c 2AE0     		b	.L39
 1277              	.L78:
 239:.\tic_tac_all.c **** 	}
 240:.\tic_tac_all.c **** 	connected = 0; //superdiag 4
 1278              		.loc 1 240 0
 1279 041e 0023     		movs	r3, #0
 1280 0420 FB60     		str	r3, [r7, #12]
 241:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1281              		.loc 1 241 0
 1282 0422 0023     		movs	r3, #0
 1283 0424 3B61     		str	r3, [r7, #16]
 1284 0426 10E0     		b	.L79
 1285              	.L80:
 242:.\tic_tac_all.c **** 		connected += ttc_get_grid(t,zp,3-zp,3-zp);
 1286              		.loc 1 242 0 discriminator 3
 1287 0428 3B69     		ldr	r3, [r7, #16]
 1288 042a C3F10302 		rsb	r2, r3, #3
 1289 042e 3B69     		ldr	r3, [r7, #16]
 1290 0430 C3F10303 		rsb	r3, r3, #3
 1291 0434 7868     		ldr	r0, [r7, #4]
 1292 0436 3969     		ldr	r1, [r7, #16]
 1293 0438 FFF7FEFF 		bl	ttc_get_grid
 1294 043c 0246     		mov	r2, r0
 1295 043e FB68     		ldr	r3, [r7, #12]
 1296 0440 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 29


 1297 0442 FB60     		str	r3, [r7, #12]
 241:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1298              		.loc 1 241 0 discriminator 3
 1299 0444 3B69     		ldr	r3, [r7, #16]
 1300 0446 0133     		adds	r3, r3, #1
 1301 0448 3B61     		str	r3, [r7, #16]
 1302              	.L79:
 241:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1303              		.loc 1 241 0 is_stmt 0 discriminator 1
 1304 044a 7B68     		ldr	r3, [r7, #4]
 1305 044c 1A68     		ldr	r2, [r3]
 1306 044e 3B69     		ldr	r3, [r7, #16]
 1307 0450 9A42     		cmp	r2, r3
 1308 0452 E9DC     		bgt	.L80
 243:.\tic_tac_all.c **** 	}
 244:.\tic_tac_all.c **** 	if (connected == t->player*t->size){
 1309              		.loc 1 244 0 is_stmt 1
 1310 0454 7B68     		ldr	r3, [r7, #4]
 1311 0456 9B68     		ldr	r3, [r3, #8]
 1312 0458 7A68     		ldr	r2, [r7, #4]
 1313 045a 1268     		ldr	r2, [r2]
 1314 045c 02FB03F2 		mul	r2, r2, r3
 1315 0460 FB68     		ldr	r3, [r7, #12]
 1316 0462 9A42     		cmp	r2, r3
 1317 0464 05D1     		bne	.L81
 245:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 1318              		.loc 1 245 0
 1319 0466 7B68     		ldr	r3, [r7, #4]
 1320 0468 9A68     		ldr	r2, [r3, #8]
 1321 046a 7B68     		ldr	r3, [r7, #4]
 1322 046c 1A61     		str	r2, [r3, #16]
 246:.\tic_tac_all.c **** 		return 1; //there is a win
 1323              		.loc 1 246 0
 1324 046e 0123     		movs	r3, #1
 1325 0470 00E0     		b	.L39
 1326              	.L81:
 247:.\tic_tac_all.c **** 	}
 248:.\tic_tac_all.c **** 	return 0; //no win
 1327              		.loc 1 248 0
 1328 0472 0023     		movs	r3, #0
 1329              	.L39:
 249:.\tic_tac_all.c **** }
 1330              		.loc 1 249 0
 1331 0474 1846     		mov	r0, r3
 1332 0476 2037     		adds	r7, r7, #32
 1333              		.cfi_def_cfa_offset 8
 1334 0478 BD46     		mov	sp, r7
 1335              		.cfi_def_cfa_register 13
 1336              		@ sp needed
 1337 047a 80BD     		pop	{r7, pc}
 1338              		.cfi_endproc
 1339              	.LFE70:
 1340              		.size	ttc_check_win, .-ttc_check_win
 1341              		.section	.text.ttc_step,"ax",%progbits
 1342              		.align	2
 1343              		.global	ttc_step
 1344              		.thumb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 30


 1345              		.thumb_func
 1346              		.type	ttc_step, %function
 1347              	ttc_step:
 1348              	.LFB71:
 250:.\tic_tac_all.c **** 
 251:.\tic_tac_all.c **** 
 252:.\tic_tac_all.c **** int ttc_step(struct disp_grid_81* disp, struct tic_tac_toe* t,int x, int y, int z){
 1349              		.loc 1 252 0
 1350              		.cfi_startproc
 1351              		@ args = 4, pretend = 0, frame = 16
 1352              		@ frame_needed = 1, uses_anonymous_args = 0
 1353 0000 90B5     		push	{r4, r7, lr}
 1354              		.cfi_def_cfa_offset 12
 1355              		.cfi_offset 4, -12
 1356              		.cfi_offset 7, -8
 1357              		.cfi_offset 14, -4
 1358 0002 87B0     		sub	sp, sp, #28
 1359              		.cfi_def_cfa_offset 40
 1360 0004 02AF     		add	r7, sp, #8
 1361              		.cfi_def_cfa 7, 32
 1362 0006 F860     		str	r0, [r7, #12]
 1363 0008 B960     		str	r1, [r7, #8]
 1364 000a 7A60     		str	r2, [r7, #4]
 1365 000c 3B60     		str	r3, [r7]
 253:.\tic_tac_all.c **** 	// generic take input to allow for both terminal and psoc
 254:.\tic_tac_all.c **** 	if (ttc_check_valid(t,x,y,z) == 1){
 1366              		.loc 1 254 0
 1367 000e B868     		ldr	r0, [r7, #8]
 1368 0010 7968     		ldr	r1, [r7, #4]
 1369 0012 3A68     		ldr	r2, [r7]
 1370 0014 3B6A     		ldr	r3, [r7, #32]
 1371 0016 FFF7FEFF 		bl	ttc_check_valid
 1372 001a 0346     		mov	r3, r0
 1373 001c 012B     		cmp	r3, #1
 1374 001e 23D1     		bne	.L85
 1375              	.LBB3:
 255:.\tic_tac_all.c **** 		ttc_set_grid(t,x,y,z,t->player);
 1376              		.loc 1 255 0
 1377 0020 BB68     		ldr	r3, [r7, #8]
 1378 0022 9B68     		ldr	r3, [r3, #8]
 1379 0024 0093     		str	r3, [sp]
 1380 0026 B868     		ldr	r0, [r7, #8]
 1381 0028 7968     		ldr	r1, [r7, #4]
 1382 002a 3A68     		ldr	r2, [r7]
 1383 002c 3B6A     		ldr	r3, [r7, #32]
 1384 002e FFF7FEFF 		bl	ttc_set_grid
 256:.\tic_tac_all.c **** 		// ttc_get_grid(t,x,y,z);
 257:.\tic_tac_all.c **** 		// printf("\nGot here"); 
 258:.\tic_tac_all.c **** 		ttc_check_win(t);
 1385              		.loc 1 258 0
 1386 0032 B868     		ldr	r0, [r7, #8]
 1387 0034 FFF7FEFF 		bl	ttc_check_win
 259:.\tic_tac_all.c **** 		ttc_change_player(t);
 1388              		.loc 1 259 0
 1389 0038 B868     		ldr	r0, [r7, #8]
 1390 003a FFF7FEFF 		bl	ttc_change_player
 260:.\tic_tac_all.c **** 		//ttc_print_grid(t); // on terminal
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 31


 261:.\tic_tac_all.c ****         disp_grid_ttc_place(disp,z*16+y*4+x, ttc_get_grid(t,x,y,z)); // for PSoC
 1391              		.loc 1 261 0
 1392 003e 3B6A     		ldr	r3, [r7, #32]
 1393 0040 9A00     		lsls	r2, r3, #2
 1394 0042 3B68     		ldr	r3, [r7]
 1395 0044 1344     		add	r3, r3, r2
 1396 0046 9A00     		lsls	r2, r3, #2
 1397 0048 7B68     		ldr	r3, [r7, #4]
 1398 004a D418     		adds	r4, r2, r3
 1399 004c B868     		ldr	r0, [r7, #8]
 1400 004e 7968     		ldr	r1, [r7, #4]
 1401 0050 3A68     		ldr	r2, [r7]
 1402 0052 3B6A     		ldr	r3, [r7, #32]
 1403 0054 FFF7FEFF 		bl	ttc_get_grid
 1404 0058 0346     		mov	r3, r0
 1405 005a F868     		ldr	r0, [r7, #12]
 1406 005c 2146     		mov	r1, r4
 1407 005e 1A46     		mov	r2, r3
 1408 0060 FFF7FEFF 		bl	disp_grid_ttc_place
 262:.\tic_tac_all.c **** 		return 1;
 1409              		.loc 1 262 0
 1410 0064 0123     		movs	r3, #1
 1411 0066 00E0     		b	.L86
 1412              	.L85:
 1413              	.LBE3:
 263:.\tic_tac_all.c **** 	}
 264:.\tic_tac_all.c **** 	else{
 265:.\tic_tac_all.c **** 		return 0; // did not work properly
 1414              		.loc 1 265 0
 1415 0068 0023     		movs	r3, #0
 1416              	.L86:
 266:.\tic_tac_all.c **** 	}
 267:.\tic_tac_all.c **** }
 1417              		.loc 1 267 0
 1418 006a 1846     		mov	r0, r3
 1419 006c 1437     		adds	r7, r7, #20
 1420              		.cfi_def_cfa_offset 12
 1421 006e BD46     		mov	sp, r7
 1422              		.cfi_def_cfa_register 13
 1423              		@ sp needed
 1424 0070 90BD     		pop	{r4, r7, pc}
 1425              		.cfi_endproc
 1426              	.LFE71:
 1427              		.size	ttc_step, .-ttc_step
 1428 0072 00BF     		.section	.rodata
 1429 0093 00       		.align	2
 1430              	.LC8:
 1431 0094 506C6179 		.ascii	"Player %i has won\000"
 1431      65722025 
 1431      69206861 
 1431      7320776F 
 1431      6E00
 1432              		.section	.text.ttc_play_game,"ax",%progbits
 1433              		.align	2
 1434              		.global	ttc_play_game
 1435              		.thumb
 1436              		.thumb_func
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 32


 1437              		.type	ttc_play_game, %function
 1438              	ttc_play_game:
 1439              	.LFB72:
 268:.\tic_tac_all.c **** 
 269:.\tic_tac_all.c **** int ttc_play_game(struct tic_tac_toe* t){
 1440              		.loc 1 269 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 8
 1443              		@ frame_needed = 1, uses_anonymous_args = 0
 1444 0000 80B5     		push	{r7, lr}
 1445              		.cfi_def_cfa_offset 8
 1446              		.cfi_offset 7, -8
 1447              		.cfi_offset 14, -4
 1448 0002 82B0     		sub	sp, sp, #8
 1449              		.cfi_def_cfa_offset 16
 1450 0004 00AF     		add	r7, sp, #0
 1451              		.cfi_def_cfa_register 7
 1452 0006 7860     		str	r0, [r7, #4]
 270:.\tic_tac_all.c **** 	while (t->game_not_won == 0){
 1453              		.loc 1 270 0
 1454 0008 00BF     		nop
 1455              	.L88:
 1456              		.loc 1 270 0 is_stmt 0 discriminator 1
 1457 000a 7B68     		ldr	r3, [r7, #4]
 1458 000c 1B69     		ldr	r3, [r3, #16]
 1459 000e 002B     		cmp	r3, #0
 1460 0010 FBD0     		beq	.L88
 271:.\tic_tac_all.c **** 		//ttc_play(t);
 272:.\tic_tac_all.c ****         // IMPLEMENT FOR PSOC
 273:.\tic_tac_all.c **** 	}
 274:.\tic_tac_all.c **** 	printf("Player %i has won", t->game_not_won);
 1461              		.loc 1 274 0 is_stmt 1
 1462 0012 7B68     		ldr	r3, [r7, #4]
 1463 0014 1B69     		ldr	r3, [r3, #16]
 1464 0016 0448     		ldr	r0, .L90
 1465 0018 1946     		mov	r1, r3
 1466 001a FFF7FEFF 		bl	printf
 275:.\tic_tac_all.c **** 	return 0;
 1467              		.loc 1 275 0
 1468 001e 0023     		movs	r3, #0
 276:.\tic_tac_all.c **** }
 1469              		.loc 1 276 0
 1470 0020 1846     		mov	r0, r3
 1471 0022 0837     		adds	r7, r7, #8
 1472              		.cfi_def_cfa_offset 8
 1473 0024 BD46     		mov	sp, r7
 1474              		.cfi_def_cfa_register 13
 1475              		@ sp needed
 1476 0026 80BD     		pop	{r7, pc}
 1477              	.L91:
 1478              		.align	2
 1479              	.L90:
 1480 0028 94000000 		.word	.LC8
 1481              		.cfi_endproc
 1482              	.LFE72:
 1483              		.size	ttc_play_game, .-ttc_play_game
 1484              		.section	.text.ttc_free,"ax",%progbits
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 33


 1485              		.align	2
 1486              		.global	ttc_free
 1487              		.thumb
 1488              		.thumb_func
 1489              		.type	ttc_free, %function
 1490              	ttc_free:
 1491              	.LFB73:
 277:.\tic_tac_all.c **** 
 278:.\tic_tac_all.c **** void ttc_free(struct tic_tac_toe* t){
 1492              		.loc 1 278 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 8
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
 1496 0000 80B5     		push	{r7, lr}
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 82B0     		sub	sp, sp, #8
 1501              		.cfi_def_cfa_offset 16
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 7860     		str	r0, [r7, #4]
 279:.\tic_tac_all.c **** 	free(t->grid);
 1505              		.loc 1 279 0
 1506 0008 7B68     		ldr	r3, [r7, #4]
 1507 000a 1433     		adds	r3, r3, #20
 1508 000c 1846     		mov	r0, r3
 1509 000e FFF7FEFF 		bl	free
 280:.\tic_tac_all.c **** 	free(t);
 1510              		.loc 1 280 0
 1511 0012 7868     		ldr	r0, [r7, #4]
 1512 0014 FFF7FEFF 		bl	free
 281:.\tic_tac_all.c **** }
 1513              		.loc 1 281 0
 1514 0018 0837     		adds	r7, r7, #8
 1515              		.cfi_def_cfa_offset 8
 1516 001a BD46     		mov	sp, r7
 1517              		.cfi_def_cfa_register 13
 1518              		@ sp needed
 1519 001c 80BD     		pop	{r7, pc}
 1520              		.cfi_endproc
 1521              	.LFE73:
 1522              		.size	ttc_free, .-ttc_free
 1523 001e 00BF     		.section	.text.max_array,"ax",%progbits
 1524              		.align	2
 1525              		.global	max_array
 1526              		.thumb
 1527              		.thumb_func
 1528              		.type	max_array, %function
 1529              	max_array:
 1530              	.LFB74:
 282:.\tic_tac_all.c **** 
 283:.\tic_tac_all.c **** 
 284:.\tic_tac_all.c **** ///////////////////////// AI CODE ////////////////
 285:.\tic_tac_all.c **** 
 286:.\tic_tac_all.c **** int max_array(int array[], size_t size){
 1531              		.loc 1 286 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 34


 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 24
 1534              		@ frame_needed = 1, uses_anonymous_args = 0
 1535 0000 80B5     		push	{r7, lr}
 1536              		.cfi_def_cfa_offset 8
 1537              		.cfi_offset 7, -8
 1538              		.cfi_offset 14, -4
 1539 0002 86B0     		sub	sp, sp, #24
 1540              		.cfi_def_cfa_offset 32
 1541 0004 00AF     		add	r7, sp, #0
 1542              		.cfi_def_cfa_register 7
 1543 0006 7860     		str	r0, [r7, #4]
 1544 0008 3960     		str	r1, [r7]
 287:.\tic_tac_all.c **** 	// returns maximum index of array
 288:.\tic_tac_all.c **** 	// if there are multiple, then randomly select and return max index
 289:.\tic_tac_all.c **** 	size_t i;
 290:.\tic_tac_all.c **** 	int max = 0;
 1545              		.loc 1 290 0
 1546 000a 0023     		movs	r3, #0
 1547 000c 3B61     		str	r3, [r7, #16]
 291:.\tic_tac_all.c **** 	int *all_index = malloc(size*sizeof(int));
 1548              		.loc 1 291 0
 1549 000e 3B68     		ldr	r3, [r7]
 1550 0010 9B00     		lsls	r3, r3, #2
 1551 0012 1846     		mov	r0, r3
 1552 0014 FFF7FEFF 		bl	malloc
 1553 0018 0346     		mov	r3, r0
 1554 001a BB60     		str	r3, [r7, #8]
 292:.\tic_tac_all.c **** 	int num_index = 1;
 1555              		.loc 1 292 0
 1556 001c 0123     		movs	r3, #1
 1557 001e FB60     		str	r3, [r7, #12]
 293:.\tic_tac_all.c **** 
 294:.\tic_tac_all.c **** 	for (i = 0; i < size; i++){
 1558              		.loc 1 294 0
 1559 0020 0023     		movs	r3, #0
 1560 0022 7B61     		str	r3, [r7, #20]
 1561 0024 2DE0     		b	.L94
 1562              	.L97:
 295:.\tic_tac_all.c **** 		if (max < array[i]){
 1563              		.loc 1 295 0
 1564 0026 7B69     		ldr	r3, [r7, #20]
 1565 0028 9B00     		lsls	r3, r3, #2
 1566 002a 7A68     		ldr	r2, [r7, #4]
 1567 002c 1344     		add	r3, r3, r2
 1568 002e 1A68     		ldr	r2, [r3]
 1569 0030 3B69     		ldr	r3, [r7, #16]
 1570 0032 9A42     		cmp	r2, r3
 1571 0034 11DD     		ble	.L95
 296:.\tic_tac_all.c **** 			max = array[i];
 1572              		.loc 1 296 0
 1573 0036 7B69     		ldr	r3, [r7, #20]
 1574 0038 9B00     		lsls	r3, r3, #2
 1575 003a 7A68     		ldr	r2, [r7, #4]
 1576 003c 1344     		add	r3, r3, r2
 1577 003e 1B68     		ldr	r3, [r3]
 1578 0040 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 35


 297:.\tic_tac_all.c **** 
 298:.\tic_tac_all.c **** 			memset(all_index,0,num_index); //clear array
 1579              		.loc 1 298 0
 1580 0042 FB68     		ldr	r3, [r7, #12]
 1581 0044 B868     		ldr	r0, [r7, #8]
 1582 0046 0021     		movs	r1, #0
 1583 0048 1A46     		mov	r2, r3
 1584 004a FFF7FEFF 		bl	memset
 299:.\tic_tac_all.c **** 			all_index[0] = i;
 1585              		.loc 1 299 0
 1586 004e 7A69     		ldr	r2, [r7, #20]
 1587 0050 BB68     		ldr	r3, [r7, #8]
 1588 0052 1A60     		str	r2, [r3]
 300:.\tic_tac_all.c **** 			num_index=1;
 1589              		.loc 1 300 0
 1590 0054 0123     		movs	r3, #1
 1591 0056 FB60     		str	r3, [r7, #12]
 1592 0058 10E0     		b	.L96
 1593              	.L95:
 301:.\tic_tac_all.c **** 
 302:.\tic_tac_all.c **** 		}
 303:.\tic_tac_all.c **** 		else if (max == array[i]){
 1594              		.loc 1 303 0
 1595 005a 7B69     		ldr	r3, [r7, #20]
 1596 005c 9B00     		lsls	r3, r3, #2
 1597 005e 7A68     		ldr	r2, [r7, #4]
 1598 0060 1344     		add	r3, r3, r2
 1599 0062 1A68     		ldr	r2, [r3]
 1600 0064 3B69     		ldr	r3, [r7, #16]
 1601 0066 9A42     		cmp	r2, r3
 1602 0068 08D1     		bne	.L96
 304:.\tic_tac_all.c **** 			all_index[num_index] = i;
 1603              		.loc 1 304 0
 1604 006a FB68     		ldr	r3, [r7, #12]
 1605 006c 9B00     		lsls	r3, r3, #2
 1606 006e BA68     		ldr	r2, [r7, #8]
 1607 0070 1344     		add	r3, r3, r2
 1608 0072 7A69     		ldr	r2, [r7, #20]
 1609 0074 1A60     		str	r2, [r3]
 305:.\tic_tac_all.c **** 			num_index++;
 1610              		.loc 1 305 0
 1611 0076 FB68     		ldr	r3, [r7, #12]
 1612 0078 0133     		adds	r3, r3, #1
 1613 007a FB60     		str	r3, [r7, #12]
 1614              	.L96:
 294:.\tic_tac_all.c **** 		if (max < array[i]){
 1615              		.loc 1 294 0 discriminator 2
 1616 007c 7B69     		ldr	r3, [r7, #20]
 1617 007e 0133     		adds	r3, r3, #1
 1618 0080 7B61     		str	r3, [r7, #20]
 1619              	.L94:
 294:.\tic_tac_all.c **** 		if (max < array[i]){
 1620              		.loc 1 294 0 is_stmt 0 discriminator 1
 1621 0082 7A69     		ldr	r2, [r7, #20]
 1622 0084 3B68     		ldr	r3, [r7]
 1623 0086 9A42     		cmp	r2, r3
 1624 0088 CDD3     		bcc	.L97
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 36


 306:.\tic_tac_all.c **** 		}
 307:.\tic_tac_all.c **** 	}
 308:.\tic_tac_all.c **** 	if (num_index == 1){
 1625              		.loc 1 308 0 is_stmt 1
 1626 008a FB68     		ldr	r3, [r7, #12]
 1627 008c 012B     		cmp	r3, #1
 1628 008e 03D1     		bne	.L98
 309:.\tic_tac_all.c **** 		num_index = all_index[0];
 1629              		.loc 1 309 0
 1630 0090 BB68     		ldr	r3, [r7, #8]
 1631 0092 1B68     		ldr	r3, [r3]
 1632 0094 FB60     		str	r3, [r7, #12]
 1633 0096 17E0     		b	.L99
 1634              	.L98:
 310:.\tic_tac_all.c **** 	}
 311:.\tic_tac_all.c **** 	else{
 312:.\tic_tac_all.c **** 		srand(time(NULL)); // set a random seed
 1635              		.loc 1 312 0
 1636 0098 0020     		movs	r0, #0
 1637 009a FFF7FEFF 		bl	time
 1638 009e 0346     		mov	r3, r0
 1639 00a0 1846     		mov	r0, r3
 1640 00a2 FFF7FEFF 		bl	srand
 313:.\tic_tac_all.c **** 		max = rand() % num_index; // choose a random index
 1641              		.loc 1 313 0
 1642 00a6 FFF7FEFF 		bl	rand
 1643 00aa 0346     		mov	r3, r0
 1644 00ac FA68     		ldr	r2, [r7, #12]
 1645 00ae 93FBF2F2 		sdiv	r2, r3, r2
 1646 00b2 F968     		ldr	r1, [r7, #12]
 1647 00b4 01FB02F2 		mul	r2, r1, r2
 1648 00b8 9B1A     		subs	r3, r3, r2
 1649 00ba 3B61     		str	r3, [r7, #16]
 314:.\tic_tac_all.c **** 		num_index = all_index[max];
 1650              		.loc 1 314 0
 1651 00bc 3B69     		ldr	r3, [r7, #16]
 1652 00be 9B00     		lsls	r3, r3, #2
 1653 00c0 BA68     		ldr	r2, [r7, #8]
 1654 00c2 1344     		add	r3, r3, r2
 1655 00c4 1B68     		ldr	r3, [r3]
 1656 00c6 FB60     		str	r3, [r7, #12]
 1657              	.L99:
 315:.\tic_tac_all.c **** 	}
 316:.\tic_tac_all.c **** 	free(all_index); // free
 1658              		.loc 1 316 0
 1659 00c8 B868     		ldr	r0, [r7, #8]
 1660 00ca FFF7FEFF 		bl	free
 317:.\tic_tac_all.c **** 	return num_index;
 1661              		.loc 1 317 0
 1662 00ce FB68     		ldr	r3, [r7, #12]
 318:.\tic_tac_all.c **** };
 1663              		.loc 1 318 0
 1664 00d0 1846     		mov	r0, r3
 1665 00d2 1837     		adds	r7, r7, #24
 1666              		.cfi_def_cfa_offset 8
 1667 00d4 BD46     		mov	sp, r7
 1668              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 37


 1669              		@ sp needed
 1670 00d6 80BD     		pop	{r7, pc}
 1671              		.cfi_endproc
 1672              	.LFE74:
 1673              		.size	max_array, .-max_array
 1674              		.section	.text.ai_reset,"ax",%progbits
 1675              		.align	2
 1676              		.global	ai_reset
 1677              		.thumb
 1678              		.thumb_func
 1679              		.type	ai_reset, %function
 1680              	ai_reset:
 1681              	.LFB75:
 319:.\tic_tac_all.c **** 
 320:.\tic_tac_all.c **** 
 321:.\tic_tac_all.c **** struct ai{ //structure for the AI bot
 322:.\tic_tac_all.c **** 	int player_id;
 323:.\tic_tac_all.c **** 	int grid_eval[64]; //probably should malloc this shit
 324:.\tic_tac_all.c **** 	int diags[76]; //list of all diagonals
 325:.\tic_tac_all.c **** };
 326:.\tic_tac_all.c **** 
 327:.\tic_tac_all.c **** struct tic_tac_ai{ //structure for the overall object
 328:.\tic_tac_all.c **** 	int is_ai[2];
 329:.\tic_tac_all.c **** 	struct ai ai_1;	//the ai module for player 1, with id 1
 330:.\tic_tac_all.c **** 	struct ai ai_2; //the ai module for player 2, with id -1
 331:.\tic_tac_all.c **** 	struct tic_tac_toe game;
 332:.\tic_tac_all.c **** };
 333:.\tic_tac_all.c **** 
 334:.\tic_tac_all.c **** void ai_reset(struct ai* ai){
 1682              		.loc 1 334 0
 1683              		.cfi_startproc
 1684              		@ args = 0, pretend = 0, frame = 8
 1685              		@ frame_needed = 1, uses_anonymous_args = 0
 1686 0000 80B5     		push	{r7, lr}
 1687              		.cfi_def_cfa_offset 8
 1688              		.cfi_offset 7, -8
 1689              		.cfi_offset 14, -4
 1690 0002 82B0     		sub	sp, sp, #8
 1691              		.cfi_def_cfa_offset 16
 1692 0004 00AF     		add	r7, sp, #0
 1693              		.cfi_def_cfa_register 7
 1694 0006 7860     		str	r0, [r7, #4]
 335:.\tic_tac_all.c **** 	memset(ai->grid_eval,0,sizeof ai->grid_eval); //clear array
 1695              		.loc 1 335 0
 1696 0008 7B68     		ldr	r3, [r7, #4]
 1697 000a 0433     		adds	r3, r3, #4
 1698 000c 1846     		mov	r0, r3
 1699 000e 0021     		movs	r1, #0
 1700 0010 4FF48072 		mov	r2, #256
 1701 0014 FFF7FEFF 		bl	memset
 336:.\tic_tac_all.c **** 	memset(ai->diags,0,sizeof ai->diags); //clear array	
 1702              		.loc 1 336 0
 1703 0018 7B68     		ldr	r3, [r7, #4]
 1704 001a 03F58273 		add	r3, r3, #260
 1705 001e 1846     		mov	r0, r3
 1706 0020 0021     		movs	r1, #0
 1707 0022 4FF49872 		mov	r2, #304
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 38


 1708 0026 FFF7FEFF 		bl	memset
 337:.\tic_tac_all.c **** }
 1709              		.loc 1 337 0
 1710 002a 0837     		adds	r7, r7, #8
 1711              		.cfi_def_cfa_offset 8
 1712 002c BD46     		mov	sp, r7
 1713              		.cfi_def_cfa_register 13
 1714              		@ sp needed
 1715 002e 80BD     		pop	{r7, pc}
 1716              		.cfi_endproc
 1717              	.LFE75:
 1718              		.size	ai_reset, .-ai_reset
 1719              		.section	.text.ai_init,"ax",%progbits
 1720              		.align	2
 1721              		.global	ai_init
 1722              		.thumb
 1723              		.thumb_func
 1724              		.type	ai_init, %function
 1725              	ai_init:
 1726              	.LFB76:
 338:.\tic_tac_all.c **** 
 339:.\tic_tac_all.c **** void ai_init(struct ai* ai, int player_id, int size, int dimension){
 1727              		.loc 1 339 0
 1728              		.cfi_startproc
 1729              		@ args = 0, pretend = 0, frame = 16
 1730              		@ frame_needed = 1, uses_anonymous_args = 0
 1731 0000 80B5     		push	{r7, lr}
 1732              		.cfi_def_cfa_offset 8
 1733              		.cfi_offset 7, -8
 1734              		.cfi_offset 14, -4
 1735 0002 84B0     		sub	sp, sp, #16
 1736              		.cfi_def_cfa_offset 24
 1737 0004 00AF     		add	r7, sp, #0
 1738              		.cfi_def_cfa_register 7
 1739 0006 F860     		str	r0, [r7, #12]
 1740 0008 B960     		str	r1, [r7, #8]
 1741 000a 7A60     		str	r2, [r7, #4]
 1742 000c 3B60     		str	r3, [r7]
 340:.\tic_tac_all.c **** 	ai->player_id = player_id;
 1743              		.loc 1 340 0
 1744 000e FB68     		ldr	r3, [r7, #12]
 1745 0010 BA68     		ldr	r2, [r7, #8]
 1746 0012 1A60     		str	r2, [r3]
 341:.\tic_tac_all.c **** 	ai_reset(ai);
 1747              		.loc 1 341 0
 1748 0014 F868     		ldr	r0, [r7, #12]
 1749 0016 FFF7FEFF 		bl	ai_reset
 342:.\tic_tac_all.c **** }
 1750              		.loc 1 342 0
 1751 001a 1037     		adds	r7, r7, #16
 1752              		.cfi_def_cfa_offset 8
 1753 001c BD46     		mov	sp, r7
 1754              		.cfi_def_cfa_register 13
 1755              		@ sp needed
 1756 001e 80BD     		pop	{r7, pc}
 1757              		.cfi_endproc
 1758              	.LFE76:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 39


 1759              		.size	ai_init, .-ai_init
 1760              		.section	.text.tta_init,"ax",%progbits
 1761              		.align	2
 1762              		.global	tta_init
 1763              		.thumb
 1764              		.thumb_func
 1765              		.type	tta_init, %function
 1766              	tta_init:
 1767              	.LFB77:
 343:.\tic_tac_all.c **** 
 344:.\tic_tac_all.c **** void tta_init(struct tic_tac_ai* ai, int size, int dimension, 
 345:.\tic_tac_all.c **** 	bool player_1, bool player_2){
 1768              		.loc 1 345 0
 1769              		.cfi_startproc
 1770              		@ args = 4, pretend = 0, frame = 16
 1771              		@ frame_needed = 1, uses_anonymous_args = 0
 1772 0000 80B5     		push	{r7, lr}
 1773              		.cfi_def_cfa_offset 8
 1774              		.cfi_offset 7, -8
 1775              		.cfi_offset 14, -4
 1776 0002 84B0     		sub	sp, sp, #16
 1777              		.cfi_def_cfa_offset 24
 1778 0004 00AF     		add	r7, sp, #0
 1779              		.cfi_def_cfa_register 7
 1780 0006 F860     		str	r0, [r7, #12]
 1781 0008 B960     		str	r1, [r7, #8]
 1782 000a 7A60     		str	r2, [r7, #4]
 1783 000c 3B60     		str	r3, [r7]
 346:.\tic_tac_all.c **** 	// the player 1 and player 2 bools determine whether we want AI or not
 347:.\tic_tac_all.c **** 	ttc_init(&ai->game,size,dimension); // init inside tic tac toe struct
 1784              		.loc 1 347 0
 1785 000e FB68     		ldr	r3, [r7, #12]
 1786 0010 03F58E63 		add	r3, r3, #1136
 1787 0014 1846     		mov	r0, r3
 1788 0016 B968     		ldr	r1, [r7, #8]
 1789 0018 7A68     		ldr	r2, [r7, #4]
 1790 001a FFF7FEFF 		bl	ttc_init
 348:.\tic_tac_all.c **** 	if (player_1 == true){
 1791              		.loc 1 348 0
 1792 001e 3B68     		ldr	r3, [r7]
 1793 0020 012B     		cmp	r3, #1
 1794 0022 0BD1     		bne	.L104
 349:.\tic_tac_all.c **** 		//printf("\nInit player %i as AI", 1);
 350:.\tic_tac_all.c **** 		ai_init(&ai->ai_1,1,size,dimension);
 1795              		.loc 1 350 0
 1796 0024 FB68     		ldr	r3, [r7, #12]
 1797 0026 0833     		adds	r3, r3, #8
 1798 0028 1846     		mov	r0, r3
 1799 002a 0121     		movs	r1, #1
 1800 002c BA68     		ldr	r2, [r7, #8]
 1801 002e 7B68     		ldr	r3, [r7, #4]
 1802 0030 FFF7FEFF 		bl	ai_init
 351:.\tic_tac_all.c **** 		ai->is_ai[0] = 1;
 1803              		.loc 1 351 0
 1804 0034 FB68     		ldr	r3, [r7, #12]
 1805 0036 0122     		movs	r2, #1
 1806 0038 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 40


 1807 003a 02E0     		b	.L105
 1808              	.L104:
 352:.\tic_tac_all.c **** 	}
 353:.\tic_tac_all.c **** 	else {
 354:.\tic_tac_all.c **** 		//printf("\nInit player %i not as AI", 1);
 355:.\tic_tac_all.c **** 		ai->is_ai[0] = 0;
 1809              		.loc 1 355 0
 1810 003c FB68     		ldr	r3, [r7, #12]
 1811 003e 0022     		movs	r2, #0
 1812 0040 1A60     		str	r2, [r3]
 1813              	.L105:
 356:.\tic_tac_all.c **** 	}
 357:.\tic_tac_all.c **** 	if (player_2 == true){
 1814              		.loc 1 357 0
 1815 0042 BB69     		ldr	r3, [r7, #24]
 1816 0044 012B     		cmp	r3, #1
 1817 0046 0DD1     		bne	.L106
 358:.\tic_tac_all.c **** 		//printf("\nInit player %i as AI", -1);
 359:.\tic_tac_all.c **** 		ai_init(&ai->ai_2,-1,size,dimension);
 1818              		.loc 1 359 0
 1819 0048 FB68     		ldr	r3, [r7, #12]
 1820 004a 03F50F73 		add	r3, r3, #572
 1821 004e 1846     		mov	r0, r3
 1822 0050 4FF0FF31 		mov	r1, #-1
 1823 0054 BA68     		ldr	r2, [r7, #8]
 1824 0056 7B68     		ldr	r3, [r7, #4]
 1825 0058 FFF7FEFF 		bl	ai_init
 360:.\tic_tac_all.c **** 		ai->is_ai[1] = 1;
 1826              		.loc 1 360 0
 1827 005c FB68     		ldr	r3, [r7, #12]
 1828 005e 0122     		movs	r2, #1
 1829 0060 5A60     		str	r2, [r3, #4]
 1830 0062 02E0     		b	.L103
 1831              	.L106:
 361:.\tic_tac_all.c **** 	}
 362:.\tic_tac_all.c **** 	else {
 363:.\tic_tac_all.c **** 		//printf("\nInit player %i not as AI", -1);
 364:.\tic_tac_all.c **** 		ai->is_ai[1] = 0;
 1832              		.loc 1 364 0
 1833 0064 FB68     		ldr	r3, [r7, #12]
 1834 0066 0022     		movs	r2, #0
 1835 0068 5A60     		str	r2, [r3, #4]
 1836              	.L103:
 365:.\tic_tac_all.c **** 	}
 366:.\tic_tac_all.c **** }
 1837              		.loc 1 366 0
 1838 006a 1037     		adds	r7, r7, #16
 1839              		.cfi_def_cfa_offset 8
 1840 006c BD46     		mov	sp, r7
 1841              		.cfi_def_cfa_register 13
 1842              		@ sp needed
 1843 006e 80BD     		pop	{r7, pc}
 1844              		.cfi_endproc
 1845              	.LFE77:
 1846              		.size	tta_init, .-tta_init
 1847              		.section	.text.ai_evaluate_board,"ax",%progbits
 1848              		.align	2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 41


 1849              		.global	ai_evaluate_board
 1850              		.thumb
 1851              		.thumb_func
 1852              		.type	ai_evaluate_board, %function
 1853              	ai_evaluate_board:
 1854              	.LFB78:
 367:.\tic_tac_all.c **** 
 368:.\tic_tac_all.c **** int ai_evaluate_board(struct tic_tac_toe* t, struct ai* ai){
 1855              		.loc 1 368 0
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 48
 1858              		@ frame_needed = 1, uses_anonymous_args = 0
 1859 0000 90B5     		push	{r4, r7, lr}
 1860              		.cfi_def_cfa_offset 12
 1861              		.cfi_offset 4, -12
 1862              		.cfi_offset 7, -8
 1863              		.cfi_offset 14, -4
 1864 0002 8DB0     		sub	sp, sp, #52
 1865              		.cfi_def_cfa_offset 64
 1866 0004 00AF     		add	r7, sp, #0
 1867              		.cfi_def_cfa_register 7
 1868 0006 7860     		str	r0, [r7, #4]
 1869 0008 3960     		str	r1, [r7]
 369:.\tic_tac_all.c **** 	// this method lets ai evaluate the board
 370:.\tic_tac_all.c **** 	ai_reset(ai);
 1870              		.loc 1 370 0
 1871 000a 3868     		ldr	r0, [r7]
 1872 000c FFF7FEFF 		bl	ai_reset
 371:.\tic_tac_all.c **** 	int x,y,z,zp;
 372:.\tic_tac_all.c **** 	int connected;
 373:.\tic_tac_all.c **** 	int empty_places[4]; //keep track of all empty places
 374:.\tic_tac_all.c **** 	int num_filled;
 375:.\tic_tac_all.c **** 	// int diag_loc;
 376:.\tic_tac_all.c **** 	for (z = 0; z < t->size; z++){
 1873              		.loc 1 376 0
 1874 0010 0023     		movs	r3, #0
 1875 0012 7B62     		str	r3, [r7, #36]
 1876 0014 67E3     		b	.L109
 1877              	.L162:
 1878              	.LBB4:
 377:.\tic_tac_all.c **** 		for (y = 0; y < t->size; y++){ // flat
 1879              		.loc 1 377 0
 1880 0016 0023     		movs	r3, #0
 1881 0018 BB62     		str	r3, [r7, #40]
 1882 001a 5DE0     		b	.L110
 1883              	.L117:
 378:.\tic_tac_all.c **** 			connected = 0;
 1884              		.loc 1 378 0
 1885 001c 0023     		movs	r3, #0
 1886 001e FB61     		str	r3, [r7, #28]
 379:.\tic_tac_all.c **** 			num_filled = 0;
 1887              		.loc 1 379 0
 1888 0020 0023     		movs	r3, #0
 1889 0022 BB61     		str	r3, [r7, #24]
 380:.\tic_tac_all.c **** 			memset(empty_places,0,sizeof empty_places); //clear array
 1890              		.loc 1 380 0
 1891 0024 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 42


 1892 0028 1846     		mov	r0, r3
 1893 002a 0021     		movs	r1, #0
 1894 002c 1022     		movs	r2, #16
 1895 002e FFF7FEFF 		bl	memset
 381:.\tic_tac_all.c **** 			for (x = 0; x < t->size;x++){
 1896              		.loc 1 381 0
 1897 0032 0023     		movs	r3, #0
 1898 0034 FB62     		str	r3, [r7, #44]
 1899 0036 2AE0     		b	.L111
 1900              	.L113:
 382:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,y,z);
 1901              		.loc 1 382 0
 1902 0038 3B68     		ldr	r3, [r7]
 1903 003a 1C68     		ldr	r4, [r3]
 1904 003c 7868     		ldr	r0, [r7, #4]
 1905 003e F96A     		ldr	r1, [r7, #44]
 1906 0040 BA6A     		ldr	r2, [r7, #40]
 1907 0042 7B6A     		ldr	r3, [r7, #36]
 1908 0044 FFF7FEFF 		bl	ttc_get_grid
 1909 0048 0346     		mov	r3, r0
 1910 004a 03FB04F3 		mul	r3, r3, r4
 1911 004e FA69     		ldr	r2, [r7, #28]
 1912 0050 1344     		add	r3, r3, r2
 1913 0052 FB61     		str	r3, [r7, #28]
 383:.\tic_tac_all.c **** 				if (ttc_get_grid(t,x,y,z) == 0){ //empty spot
 1914              		.loc 1 383 0
 1915 0054 7868     		ldr	r0, [r7, #4]
 1916 0056 F96A     		ldr	r1, [r7, #44]
 1917 0058 BA6A     		ldr	r2, [r7, #40]
 1918 005a 7B6A     		ldr	r3, [r7, #36]
 1919 005c FFF7FEFF 		bl	ttc_get_grid
 1920 0060 0346     		mov	r3, r0
 1921 0062 002B     		cmp	r3, #0
 1922 0064 10D1     		bne	.L112
 384:.\tic_tac_all.c **** 					empty_places[num_filled] = z*16 + y*4 + x; // store loc
 1923              		.loc 1 384 0
 1924 0066 7B6A     		ldr	r3, [r7, #36]
 1925 0068 9A00     		lsls	r2, r3, #2
 1926 006a BB6A     		ldr	r3, [r7, #40]
 1927 006c 1344     		add	r3, r3, r2
 1928 006e 9A00     		lsls	r2, r3, #2
 1929 0070 FB6A     		ldr	r3, [r7, #44]
 1930 0072 1A44     		add	r2, r2, r3
 1931 0074 BB69     		ldr	r3, [r7, #24]
 1932 0076 9B00     		lsls	r3, r3, #2
 1933 0078 07F13001 		add	r1, r7, #48
 1934 007c 0B44     		add	r3, r3, r1
 1935 007e 43F8282C 		str	r2, [r3, #-40]
 385:.\tic_tac_all.c **** 					num_filled++; //increment
 1936              		.loc 1 385 0
 1937 0082 BB69     		ldr	r3, [r7, #24]
 1938 0084 0133     		adds	r3, r3, #1
 1939 0086 BB61     		str	r3, [r7, #24]
 1940              	.L112:
 381:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,y,z);
 1941              		.loc 1 381 0 discriminator 2
 1942 0088 FB6A     		ldr	r3, [r7, #44]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 43


 1943 008a 0133     		adds	r3, r3, #1
 1944 008c FB62     		str	r3, [r7, #44]
 1945              	.L111:
 381:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,y,z);
 1946              		.loc 1 381 0 is_stmt 0 discriminator 1
 1947 008e 7B68     		ldr	r3, [r7, #4]
 1948 0090 1A68     		ldr	r2, [r3]
 1949 0092 FB6A     		ldr	r3, [r7, #44]
 1950 0094 9A42     		cmp	r2, r3
 1951 0096 CFDC     		bgt	.L113
 386:.\tic_tac_all.c **** 				}
 387:.\tic_tac_all.c **** 			}
 388:.\tic_tac_all.c **** 			// printf("\n Flats at %i %i %i with score %i filled %i",x,y,z,connected,num_filled);
 389:.\tic_tac_all.c **** 			if (connected == t->size){
 1952              		.loc 1 389 0 is_stmt 1
 1953 0098 7B68     		ldr	r3, [r7, #4]
 1954 009a 1A68     		ldr	r2, [r3]
 1955 009c FB69     		ldr	r3, [r7, #28]
 1956 009e 9A42     		cmp	r2, r3
 1957 00a0 06D1     		bne	.L114
 390:.\tic_tac_all.c **** 				t->game_not_won = t->player; //when win, set to player id
 1958              		.loc 1 390 0
 1959 00a2 7B68     		ldr	r3, [r7, #4]
 1960 00a4 9A68     		ldr	r2, [r3, #8]
 1961 00a6 7B68     		ldr	r3, [r7, #4]
 1962 00a8 1A61     		str	r2, [r3, #16]
 391:.\tic_tac_all.c **** 				return 1; //there is a win
 1963              		.loc 1 391 0
 1964 00aa 0123     		movs	r3, #1
 1965 00ac 00F0A7BC 		b	.L183
 1966              	.L114:
 392:.\tic_tac_all.c **** 			}
 393:.\tic_tac_all.c **** 			if (abs(connected) == 4 - num_filled){
 1967              		.loc 1 393 0
 1968 00b0 FB69     		ldr	r3, [r7, #28]
 1969 00b2 83EAE372 		eor	r2, r3, r3, asr #31
 1970 00b6 A2EBE372 		sub	r2, r2, r3, asr #31
 1971 00ba BB69     		ldr	r3, [r7, #24]
 1972 00bc C3F10403 		rsb	r3, r3, #4
 1973 00c0 9A42     		cmp	r2, r3
 1974 00c2 06D1     		bne	.L116
 1975              	.LBB5:
 394:.\tic_tac_all.c **** 				// ABA0 connected = 1, but num_filled = 1, so bad
 395:.\tic_tac_all.c **** 				// A000 connected = 1, but num_filled = 3, so good
 396:.\tic_tac_all.c **** 				ai_define_score(ai,connected,empty_places);
 1976              		.loc 1 396 0
 1977 00c4 07F10803 		add	r3, r7, #8
 1978 00c8 3868     		ldr	r0, [r7]
 1979 00ca F969     		ldr	r1, [r7, #28]
 1980 00cc 1A46     		mov	r2, r3
 1981 00ce FFF7FEFF 		bl	ai_define_score
 1982              	.L116:
 1983              	.LBE5:
 377:.\tic_tac_all.c **** 			connected = 0;
 1984              		.loc 1 377 0 discriminator 2
 1985 00d2 BB6A     		ldr	r3, [r7, #40]
 1986 00d4 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 44


 1987 00d6 BB62     		str	r3, [r7, #40]
 1988              	.L110:
 377:.\tic_tac_all.c **** 			connected = 0;
 1989              		.loc 1 377 0 is_stmt 0 discriminator 1
 1990 00d8 7B68     		ldr	r3, [r7, #4]
 1991 00da 1A68     		ldr	r2, [r3]
 1992 00dc BB6A     		ldr	r3, [r7, #40]
 1993 00de 9A42     		cmp	r2, r3
 1994 00e0 9CDC     		bgt	.L117
 397:.\tic_tac_all.c **** 			}
 398:.\tic_tac_all.c **** 		}
 399:.\tic_tac_all.c **** 		for (x = 0; x < t->size; x++){ // horiz
 1995              		.loc 1 399 0 is_stmt 1
 1996 00e2 0023     		movs	r3, #0
 1997 00e4 FB62     		str	r3, [r7, #44]
 1998 00e6 5DE0     		b	.L118
 1999              	.L124:
 2000              	.LBB6:
 400:.\tic_tac_all.c **** 			connected = 0;
 2001              		.loc 1 400 0
 2002 00e8 0023     		movs	r3, #0
 2003 00ea FB61     		str	r3, [r7, #28]
 401:.\tic_tac_all.c **** 			num_filled = 0;
 2004              		.loc 1 401 0
 2005 00ec 0023     		movs	r3, #0
 2006 00ee BB61     		str	r3, [r7, #24]
 402:.\tic_tac_all.c **** 			memset(empty_places,0,sizeof empty_places); //clear array
 2007              		.loc 1 402 0
 2008 00f0 07F10803 		add	r3, r7, #8
 2009 00f4 1846     		mov	r0, r3
 2010 00f6 0021     		movs	r1, #0
 2011 00f8 1022     		movs	r2, #16
 2012 00fa FFF7FEFF 		bl	memset
 403:.\tic_tac_all.c **** 			for (y = 0; y < t->size;y++){
 2013              		.loc 1 403 0
 2014 00fe 0023     		movs	r3, #0
 2015 0100 BB62     		str	r3, [r7, #40]
 2016 0102 2AE0     		b	.L119
 2017              	.L121:
 404:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,y,z);
 2018              		.loc 1 404 0
 2019 0104 3B68     		ldr	r3, [r7]
 2020 0106 1C68     		ldr	r4, [r3]
 2021 0108 7868     		ldr	r0, [r7, #4]
 2022 010a F96A     		ldr	r1, [r7, #44]
 2023 010c BA6A     		ldr	r2, [r7, #40]
 2024 010e 7B6A     		ldr	r3, [r7, #36]
 2025 0110 FFF7FEFF 		bl	ttc_get_grid
 2026 0114 0346     		mov	r3, r0
 2027 0116 03FB04F3 		mul	r3, r3, r4
 2028 011a FA69     		ldr	r2, [r7, #28]
 2029 011c 1344     		add	r3, r3, r2
 2030 011e FB61     		str	r3, [r7, #28]
 405:.\tic_tac_all.c **** 				if (ttc_get_grid(t,x,y,z) == 0){  //empty spot
 2031              		.loc 1 405 0
 2032 0120 7868     		ldr	r0, [r7, #4]
 2033 0122 F96A     		ldr	r1, [r7, #44]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 45


 2034 0124 BA6A     		ldr	r2, [r7, #40]
 2035 0126 7B6A     		ldr	r3, [r7, #36]
 2036 0128 FFF7FEFF 		bl	ttc_get_grid
 2037 012c 0346     		mov	r3, r0
 2038 012e 002B     		cmp	r3, #0
 2039 0130 10D1     		bne	.L120
 406:.\tic_tac_all.c **** 					empty_places[num_filled] = z*16 + y*4 + x; // store loc
 2040              		.loc 1 406 0
 2041 0132 7B6A     		ldr	r3, [r7, #36]
 2042 0134 9A00     		lsls	r2, r3, #2
 2043 0136 BB6A     		ldr	r3, [r7, #40]
 2044 0138 1344     		add	r3, r3, r2
 2045 013a 9A00     		lsls	r2, r3, #2
 2046 013c FB6A     		ldr	r3, [r7, #44]
 2047 013e 1A44     		add	r2, r2, r3
 2048 0140 BB69     		ldr	r3, [r7, #24]
 2049 0142 9B00     		lsls	r3, r3, #2
 2050 0144 07F13001 		add	r1, r7, #48
 2051 0148 0B44     		add	r3, r3, r1
 2052 014a 43F8282C 		str	r2, [r3, #-40]
 407:.\tic_tac_all.c **** 					num_filled++; //increment
 2053              		.loc 1 407 0
 2054 014e BB69     		ldr	r3, [r7, #24]
 2055 0150 0133     		adds	r3, r3, #1
 2056 0152 BB61     		str	r3, [r7, #24]
 2057              	.L120:
 403:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,y,z);
 2058              		.loc 1 403 0 discriminator 2
 2059 0154 BB6A     		ldr	r3, [r7, #40]
 2060 0156 0133     		adds	r3, r3, #1
 2061 0158 BB62     		str	r3, [r7, #40]
 2062              	.L119:
 403:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,y,z);
 2063              		.loc 1 403 0 is_stmt 0 discriminator 1
 2064 015a 7B68     		ldr	r3, [r7, #4]
 2065 015c 1A68     		ldr	r2, [r3]
 2066 015e BB6A     		ldr	r3, [r7, #40]
 2067 0160 9A42     		cmp	r2, r3
 2068 0162 CFDC     		bgt	.L121
 408:.\tic_tac_all.c **** 				}
 409:.\tic_tac_all.c **** 			}
 410:.\tic_tac_all.c **** 			if (connected == t->size){
 2069              		.loc 1 410 0 is_stmt 1
 2070 0164 7B68     		ldr	r3, [r7, #4]
 2071 0166 1A68     		ldr	r2, [r3]
 2072 0168 FB69     		ldr	r3, [r7, #28]
 2073 016a 9A42     		cmp	r2, r3
 2074 016c 06D1     		bne	.L122
 411:.\tic_tac_all.c **** 				t->game_not_won = t->player; //when win, set to player id
 2075              		.loc 1 411 0
 2076 016e 7B68     		ldr	r3, [r7, #4]
 2077 0170 9A68     		ldr	r2, [r3, #8]
 2078 0172 7B68     		ldr	r3, [r7, #4]
 2079 0174 1A61     		str	r2, [r3, #16]
 412:.\tic_tac_all.c **** 				return 1; //there is a win
 2080              		.loc 1 412 0
 2081 0176 0123     		movs	r3, #1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 46


 2082 0178 00F041BC 		b	.L183
 2083              	.L122:
 413:.\tic_tac_all.c **** 			}
 414:.\tic_tac_all.c **** 			if (abs(connected) == 4 - num_filled)
 2084              		.loc 1 414 0
 2085 017c FB69     		ldr	r3, [r7, #28]
 2086 017e 83EAE372 		eor	r2, r3, r3, asr #31
 2087 0182 A2EBE372 		sub	r2, r2, r3, asr #31
 2088 0186 BB69     		ldr	r3, [r7, #24]
 2089 0188 C3F10403 		rsb	r3, r3, #4
 2090 018c 9A42     		cmp	r2, r3
 2091 018e 06D1     		bne	.L123
 415:.\tic_tac_all.c **** 				ai_define_score(ai,connected,empty_places);
 2092              		.loc 1 415 0
 2093 0190 07F10803 		add	r3, r7, #8
 2094 0194 3868     		ldr	r0, [r7]
 2095 0196 F969     		ldr	r1, [r7, #28]
 2096 0198 1A46     		mov	r2, r3
 2097 019a FFF7FEFF 		bl	ai_define_score
 2098              	.L123:
 2099              	.LBE6:
 399:.\tic_tac_all.c **** 			connected = 0;
 2100              		.loc 1 399 0 discriminator 2
 2101 019e FB6A     		ldr	r3, [r7, #44]
 2102 01a0 0133     		adds	r3, r3, #1
 2103 01a2 FB62     		str	r3, [r7, #44]
 2104              	.L118:
 399:.\tic_tac_all.c **** 			connected = 0;
 2105              		.loc 1 399 0 is_stmt 0 discriminator 1
 2106 01a4 7B68     		ldr	r3, [r7, #4]
 2107 01a6 1A68     		ldr	r2, [r3]
 2108 01a8 FB6A     		ldr	r3, [r7, #44]
 2109 01aa 9A42     		cmp	r2, r3
 2110 01ac 9CDC     		bgt	.L124
 416:.\tic_tac_all.c **** 		}
 417:.\tic_tac_all.c **** 		for (x = 0; x < t->size; x++){ // vert, where z is y coord, zp is z coord
 2111              		.loc 1 417 0 is_stmt 1
 2112 01ae 0023     		movs	r3, #0
 2113 01b0 FB62     		str	r3, [r7, #44]
 2114 01b2 5CE0     		b	.L125
 2115              	.L131:
 2116              	.LBB7:
 418:.\tic_tac_all.c **** 			connected = 0;
 2117              		.loc 1 418 0
 2118 01b4 0023     		movs	r3, #0
 2119 01b6 FB61     		str	r3, [r7, #28]
 419:.\tic_tac_all.c **** 			num_filled = 0;
 2120              		.loc 1 419 0
 2121 01b8 0023     		movs	r3, #0
 2122 01ba BB61     		str	r3, [r7, #24]
 420:.\tic_tac_all.c **** 			memset(empty_places,0,sizeof empty_places); //clear array
 2123              		.loc 1 420 0
 2124 01bc 07F10803 		add	r3, r7, #8
 2125 01c0 1846     		mov	r0, r3
 2126 01c2 0021     		movs	r1, #0
 2127 01c4 1022     		movs	r2, #16
 2128 01c6 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 47


 421:.\tic_tac_all.c **** 			for (zp = 0; zp < t->size;zp++){
 2129              		.loc 1 421 0
 2130 01ca 0023     		movs	r3, #0
 2131 01cc 3B62     		str	r3, [r7, #32]
 2132 01ce 2AE0     		b	.L126
 2133              	.L128:
 422:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,z,zp);
 2134              		.loc 1 422 0
 2135 01d0 3B68     		ldr	r3, [r7]
 2136 01d2 1C68     		ldr	r4, [r3]
 2137 01d4 7868     		ldr	r0, [r7, #4]
 2138 01d6 F96A     		ldr	r1, [r7, #44]
 2139 01d8 7A6A     		ldr	r2, [r7, #36]
 2140 01da 3B6A     		ldr	r3, [r7, #32]
 2141 01dc FFF7FEFF 		bl	ttc_get_grid
 2142 01e0 0346     		mov	r3, r0
 2143 01e2 03FB04F3 		mul	r3, r3, r4
 2144 01e6 FA69     		ldr	r2, [r7, #28]
 2145 01e8 1344     		add	r3, r3, r2
 2146 01ea FB61     		str	r3, [r7, #28]
 423:.\tic_tac_all.c **** 				if (ttc_get_grid(t,x,z,zp) == 0){  //empty spot
 2147              		.loc 1 423 0
 2148 01ec 7868     		ldr	r0, [r7, #4]
 2149 01ee F96A     		ldr	r1, [r7, #44]
 2150 01f0 7A6A     		ldr	r2, [r7, #36]
 2151 01f2 3B6A     		ldr	r3, [r7, #32]
 2152 01f4 FFF7FEFF 		bl	ttc_get_grid
 2153 01f8 0346     		mov	r3, r0
 2154 01fa 002B     		cmp	r3, #0
 2155 01fc 10D1     		bne	.L127
 424:.\tic_tac_all.c **** 					empty_places[num_filled] = zp*16 + z*4 + x; // store loc
 2156              		.loc 1 424 0
 2157 01fe 3B6A     		ldr	r3, [r7, #32]
 2158 0200 9A00     		lsls	r2, r3, #2
 2159 0202 7B6A     		ldr	r3, [r7, #36]
 2160 0204 1344     		add	r3, r3, r2
 2161 0206 9A00     		lsls	r2, r3, #2
 2162 0208 FB6A     		ldr	r3, [r7, #44]
 2163 020a 1A44     		add	r2, r2, r3
 2164 020c BB69     		ldr	r3, [r7, #24]
 2165 020e 9B00     		lsls	r3, r3, #2
 2166 0210 07F13001 		add	r1, r7, #48
 2167 0214 0B44     		add	r3, r3, r1
 2168 0216 43F8282C 		str	r2, [r3, #-40]
 425:.\tic_tac_all.c **** 					num_filled++; //increment
 2169              		.loc 1 425 0
 2170 021a BB69     		ldr	r3, [r7, #24]
 2171 021c 0133     		adds	r3, r3, #1
 2172 021e BB61     		str	r3, [r7, #24]
 2173              	.L127:
 421:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,z,zp);
 2174              		.loc 1 421 0 discriminator 2
 2175 0220 3B6A     		ldr	r3, [r7, #32]
 2176 0222 0133     		adds	r3, r3, #1
 2177 0224 3B62     		str	r3, [r7, #32]
 2178              	.L126:
 421:.\tic_tac_all.c **** 				connected += ai->player_id*ttc_get_grid(t,x,z,zp);
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 48


 2179              		.loc 1 421 0 is_stmt 0 discriminator 1
 2180 0226 7B68     		ldr	r3, [r7, #4]
 2181 0228 1A68     		ldr	r2, [r3]
 2182 022a 3B6A     		ldr	r3, [r7, #32]
 2183 022c 9A42     		cmp	r2, r3
 2184 022e CFDC     		bgt	.L128
 426:.\tic_tac_all.c **** 				}
 427:.\tic_tac_all.c **** 			}
 428:.\tic_tac_all.c **** 			if (connected == t->size){
 2185              		.loc 1 428 0 is_stmt 1
 2186 0230 7B68     		ldr	r3, [r7, #4]
 2187 0232 1A68     		ldr	r2, [r3]
 2188 0234 FB69     		ldr	r3, [r7, #28]
 2189 0236 9A42     		cmp	r2, r3
 2190 0238 05D1     		bne	.L129
 429:.\tic_tac_all.c **** 				t->game_not_won = t->player; //when win, set to player id
 2191              		.loc 1 429 0
 2192 023a 7B68     		ldr	r3, [r7, #4]
 2193 023c 9A68     		ldr	r2, [r3, #8]
 2194 023e 7B68     		ldr	r3, [r7, #4]
 2195 0240 1A61     		str	r2, [r3, #16]
 430:.\tic_tac_all.c **** 				return 1; //there is a win
 2196              		.loc 1 430 0
 2197 0242 0123     		movs	r3, #1
 2198 0244 DBE3     		b	.L183
 2199              	.L129:
 431:.\tic_tac_all.c **** 			}
 432:.\tic_tac_all.c **** 			if (abs(connected) == 4 - num_filled)
 2200              		.loc 1 432 0
 2201 0246 FB69     		ldr	r3, [r7, #28]
 2202 0248 83EAE372 		eor	r2, r3, r3, asr #31
 2203 024c A2EBE372 		sub	r2, r2, r3, asr #31
 2204 0250 BB69     		ldr	r3, [r7, #24]
 2205 0252 C3F10403 		rsb	r3, r3, #4
 2206 0256 9A42     		cmp	r2, r3
 2207 0258 06D1     		bne	.L130
 433:.\tic_tac_all.c **** 				ai_define_score(ai,connected,empty_places);
 2208              		.loc 1 433 0
 2209 025a 07F10803 		add	r3, r7, #8
 2210 025e 3868     		ldr	r0, [r7]
 2211 0260 F969     		ldr	r1, [r7, #28]
 2212 0262 1A46     		mov	r2, r3
 2213 0264 FFF7FEFF 		bl	ai_define_score
 2214              	.L130:
 2215              	.LBE7:
 417:.\tic_tac_all.c **** 			connected = 0;
 2216              		.loc 1 417 0 discriminator 2
 2217 0268 FB6A     		ldr	r3, [r7, #44]
 2218 026a 0133     		adds	r3, r3, #1
 2219 026c FB62     		str	r3, [r7, #44]
 2220              	.L125:
 417:.\tic_tac_all.c **** 			connected = 0;
 2221              		.loc 1 417 0 is_stmt 0 discriminator 1
 2222 026e 7B68     		ldr	r3, [r7, #4]
 2223 0270 1A68     		ldr	r2, [r3]
 2224 0272 FB6A     		ldr	r3, [r7, #44]
 2225 0274 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 49


 2226 0276 9DDC     		bgt	.L131
 434:.\tic_tac_all.c **** 		}
 435:.\tic_tac_all.c **** 
 436:.\tic_tac_all.c **** 		// planar
 437:.\tic_tac_all.c **** 		connected = 0;
 2227              		.loc 1 437 0 is_stmt 1
 2228 0278 0023     		movs	r3, #0
 2229 027a FB61     		str	r3, [r7, #28]
 438:.\tic_tac_all.c **** 		num_filled = 0;
 2230              		.loc 1 438 0
 2231 027c 0023     		movs	r3, #0
 2232 027e BB61     		str	r3, [r7, #24]
 439:.\tic_tac_all.c **** 		memset(empty_places,0,sizeof empty_places); //clear array
 2233              		.loc 1 439 0
 2234 0280 07F10803 		add	r3, r7, #8
 2235 0284 1846     		mov	r0, r3
 2236 0286 0021     		movs	r1, #0
 2237 0288 1022     		movs	r2, #16
 2238 028a FFF7FEFF 		bl	memset
 440:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){
 2239              		.loc 1 440 0
 2240 028e 0023     		movs	r3, #0
 2241 0290 3B62     		str	r3, [r7, #32]
 2242 0292 2AE0     		b	.L132
 2243              	.L134:
 441:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,zp,z);
 2244              		.loc 1 441 0
 2245 0294 3B68     		ldr	r3, [r7]
 2246 0296 1C68     		ldr	r4, [r3]
 2247 0298 7868     		ldr	r0, [r7, #4]
 2248 029a 396A     		ldr	r1, [r7, #32]
 2249 029c 3A6A     		ldr	r2, [r7, #32]
 2250 029e 7B6A     		ldr	r3, [r7, #36]
 2251 02a0 FFF7FEFF 		bl	ttc_get_grid
 2252 02a4 0346     		mov	r3, r0
 2253 02a6 03FB04F3 		mul	r3, r3, r4
 2254 02aa FA69     		ldr	r2, [r7, #28]
 2255 02ac 1344     		add	r3, r3, r2
 2256 02ae FB61     		str	r3, [r7, #28]
 442:.\tic_tac_all.c **** 			if (ttc_get_grid(t,zp,zp,z) == 0){  //empty spot
 2257              		.loc 1 442 0
 2258 02b0 7868     		ldr	r0, [r7, #4]
 2259 02b2 396A     		ldr	r1, [r7, #32]
 2260 02b4 3A6A     		ldr	r2, [r7, #32]
 2261 02b6 7B6A     		ldr	r3, [r7, #36]
 2262 02b8 FFF7FEFF 		bl	ttc_get_grid
 2263 02bc 0346     		mov	r3, r0
 2264 02be 002B     		cmp	r3, #0
 2265 02c0 10D1     		bne	.L133
 443:.\tic_tac_all.c **** 				empty_places[num_filled] = z*16 + zp*4 + zp; // store loc
 2266              		.loc 1 443 0
 2267 02c2 7B6A     		ldr	r3, [r7, #36]
 2268 02c4 9A00     		lsls	r2, r3, #2
 2269 02c6 3B6A     		ldr	r3, [r7, #32]
 2270 02c8 1344     		add	r3, r3, r2
 2271 02ca 9A00     		lsls	r2, r3, #2
 2272 02cc 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 50


 2273 02ce 1A44     		add	r2, r2, r3
 2274 02d0 BB69     		ldr	r3, [r7, #24]
 2275 02d2 9B00     		lsls	r3, r3, #2
 2276 02d4 07F13001 		add	r1, r7, #48
 2277 02d8 0B44     		add	r3, r3, r1
 2278 02da 43F8282C 		str	r2, [r3, #-40]
 444:.\tic_tac_all.c **** 				num_filled++; //increment
 2279              		.loc 1 444 0
 2280 02de BB69     		ldr	r3, [r7, #24]
 2281 02e0 0133     		adds	r3, r3, #1
 2282 02e2 BB61     		str	r3, [r7, #24]
 2283              	.L133:
 440:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,zp,z);
 2284              		.loc 1 440 0 discriminator 2
 2285 02e4 3B6A     		ldr	r3, [r7, #32]
 2286 02e6 0133     		adds	r3, r3, #1
 2287 02e8 3B62     		str	r3, [r7, #32]
 2288              	.L132:
 440:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,zp,z);
 2289              		.loc 1 440 0 is_stmt 0 discriminator 1
 2290 02ea 7B68     		ldr	r3, [r7, #4]
 2291 02ec 1A68     		ldr	r2, [r3]
 2292 02ee 3B6A     		ldr	r3, [r7, #32]
 2293 02f0 9A42     		cmp	r2, r3
 2294 02f2 CFDC     		bgt	.L134
 445:.\tic_tac_all.c **** 			}
 446:.\tic_tac_all.c **** 		}
 447:.\tic_tac_all.c **** 		if (connected == t->size){
 2295              		.loc 1 447 0 is_stmt 1
 2296 02f4 7B68     		ldr	r3, [r7, #4]
 2297 02f6 1A68     		ldr	r2, [r3]
 2298 02f8 FB69     		ldr	r3, [r7, #28]
 2299 02fa 9A42     		cmp	r2, r3
 2300 02fc 05D1     		bne	.L135
 448:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 2301              		.loc 1 448 0
 2302 02fe 7B68     		ldr	r3, [r7, #4]
 2303 0300 9A68     		ldr	r2, [r3, #8]
 2304 0302 7B68     		ldr	r3, [r7, #4]
 2305 0304 1A61     		str	r2, [r3, #16]
 449:.\tic_tac_all.c **** 			return 1; //there is a win
 2306              		.loc 1 449 0
 2307 0306 0123     		movs	r3, #1
 2308 0308 79E3     		b	.L183
 2309              	.L135:
 450:.\tic_tac_all.c **** 		}
 451:.\tic_tac_all.c **** 		if (abs(connected) == 4 - num_filled)
 2310              		.loc 1 451 0
 2311 030a FB69     		ldr	r3, [r7, #28]
 2312 030c 83EAE372 		eor	r2, r3, r3, asr #31
 2313 0310 A2EBE372 		sub	r2, r2, r3, asr #31
 2314 0314 BB69     		ldr	r3, [r7, #24]
 2315 0316 C3F10403 		rsb	r3, r3, #4
 2316 031a 9A42     		cmp	r2, r3
 2317 031c 06D1     		bne	.L136
 452:.\tic_tac_all.c **** 			ai_define_score(ai,connected,empty_places);
 2318              		.loc 1 452 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 51


 2319 031e 07F10803 		add	r3, r7, #8
 2320 0322 3868     		ldr	r0, [r7]
 2321 0324 F969     		ldr	r1, [r7, #28]
 2322 0326 1A46     		mov	r2, r3
 2323 0328 FFF7FEFF 		bl	ai_define_score
 2324              	.L136:
 453:.\tic_tac_all.c **** 		// planar
 454:.\tic_tac_all.c **** 		connected = 0;
 2325              		.loc 1 454 0
 2326 032c 0023     		movs	r3, #0
 2327 032e FB61     		str	r3, [r7, #28]
 455:.\tic_tac_all.c **** 		num_filled = 0;
 2328              		.loc 1 455 0
 2329 0330 0023     		movs	r3, #0
 2330 0332 BB61     		str	r3, [r7, #24]
 456:.\tic_tac_all.c **** 		memset(empty_places,0,sizeof empty_places); //clear array
 2331              		.loc 1 456 0
 2332 0334 07F10803 		add	r3, r7, #8
 2333 0338 1846     		mov	r0, r3
 2334 033a 0021     		movs	r1, #0
 2335 033c 1022     		movs	r2, #16
 2336 033e FFF7FEFF 		bl	memset
 457:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){
 2337              		.loc 1 457 0
 2338 0342 0023     		movs	r3, #0
 2339 0344 3B62     		str	r3, [r7, #32]
 2340 0346 32E0     		b	.L137
 2341              	.L139:
 458:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,3-zp,z);
 2342              		.loc 1 458 0
 2343 0348 3B68     		ldr	r3, [r7]
 2344 034a 1C68     		ldr	r4, [r3]
 2345 034c 3B6A     		ldr	r3, [r7, #32]
 2346 034e C3F10303 		rsb	r3, r3, #3
 2347 0352 7868     		ldr	r0, [r7, #4]
 2348 0354 396A     		ldr	r1, [r7, #32]
 2349 0356 1A46     		mov	r2, r3
 2350 0358 7B6A     		ldr	r3, [r7, #36]
 2351 035a FFF7FEFF 		bl	ttc_get_grid
 2352 035e 0346     		mov	r3, r0
 2353 0360 03FB04F3 		mul	r3, r3, r4
 2354 0364 FA69     		ldr	r2, [r7, #28]
 2355 0366 1344     		add	r3, r3, r2
 2356 0368 FB61     		str	r3, [r7, #28]
 459:.\tic_tac_all.c **** 			if (ttc_get_grid(t,zp,3-zp,z) == 0){  //empty spot
 2357              		.loc 1 459 0
 2358 036a 3B6A     		ldr	r3, [r7, #32]
 2359 036c C3F10303 		rsb	r3, r3, #3
 2360 0370 7868     		ldr	r0, [r7, #4]
 2361 0372 396A     		ldr	r1, [r7, #32]
 2362 0374 1A46     		mov	r2, r3
 2363 0376 7B6A     		ldr	r3, [r7, #36]
 2364 0378 FFF7FEFF 		bl	ttc_get_grid
 2365 037c 0346     		mov	r3, r0
 2366 037e 002B     		cmp	r3, #0
 2367 0380 12D1     		bne	.L138
 460:.\tic_tac_all.c **** 				empty_places[num_filled] = z*16 + (3-zp)*4 + zp; // store loc
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 52


 2368              		.loc 1 460 0
 2369 0382 7B6A     		ldr	r3, [r7, #36]
 2370 0384 9A00     		lsls	r2, r3, #2
 2371 0386 3B6A     		ldr	r3, [r7, #32]
 2372 0388 C3F10303 		rsb	r3, r3, #3
 2373 038c 1344     		add	r3, r3, r2
 2374 038e 9A00     		lsls	r2, r3, #2
 2375 0390 3B6A     		ldr	r3, [r7, #32]
 2376 0392 1A44     		add	r2, r2, r3
 2377 0394 BB69     		ldr	r3, [r7, #24]
 2378 0396 9B00     		lsls	r3, r3, #2
 2379 0398 07F13001 		add	r1, r7, #48
 2380 039c 0B44     		add	r3, r3, r1
 2381 039e 43F8282C 		str	r2, [r3, #-40]
 461:.\tic_tac_all.c **** 				num_filled++; //increment
 2382              		.loc 1 461 0
 2383 03a2 BB69     		ldr	r3, [r7, #24]
 2384 03a4 0133     		adds	r3, r3, #1
 2385 03a6 BB61     		str	r3, [r7, #24]
 2386              	.L138:
 457:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,3-zp,z);
 2387              		.loc 1 457 0 discriminator 2
 2388 03a8 3B6A     		ldr	r3, [r7, #32]
 2389 03aa 0133     		adds	r3, r3, #1
 2390 03ac 3B62     		str	r3, [r7, #32]
 2391              	.L137:
 457:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,3-zp,z);
 2392              		.loc 1 457 0 is_stmt 0 discriminator 1
 2393 03ae 7B68     		ldr	r3, [r7, #4]
 2394 03b0 1A68     		ldr	r2, [r3]
 2395 03b2 3B6A     		ldr	r3, [r7, #32]
 2396 03b4 9A42     		cmp	r2, r3
 2397 03b6 C7DC     		bgt	.L139
 462:.\tic_tac_all.c **** 			}
 463:.\tic_tac_all.c **** 		}
 464:.\tic_tac_all.c **** 		if (connected == t->size){
 2398              		.loc 1 464 0 is_stmt 1
 2399 03b8 7B68     		ldr	r3, [r7, #4]
 2400 03ba 1A68     		ldr	r2, [r3]
 2401 03bc FB69     		ldr	r3, [r7, #28]
 2402 03be 9A42     		cmp	r2, r3
 2403 03c0 05D1     		bne	.L140
 465:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 2404              		.loc 1 465 0
 2405 03c2 7B68     		ldr	r3, [r7, #4]
 2406 03c4 9A68     		ldr	r2, [r3, #8]
 2407 03c6 7B68     		ldr	r3, [r7, #4]
 2408 03c8 1A61     		str	r2, [r3, #16]
 466:.\tic_tac_all.c **** 			return 1; //there is a win
 2409              		.loc 1 466 0
 2410 03ca 0123     		movs	r3, #1
 2411 03cc 17E3     		b	.L183
 2412              	.L140:
 467:.\tic_tac_all.c **** 		}
 468:.\tic_tac_all.c **** 		if (abs(connected) == 4 - num_filled)
 2413              		.loc 1 468 0
 2414 03ce FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 53


 2415 03d0 83EAE372 		eor	r2, r3, r3, asr #31
 2416 03d4 A2EBE372 		sub	r2, r2, r3, asr #31
 2417 03d8 BB69     		ldr	r3, [r7, #24]
 2418 03da C3F10403 		rsb	r3, r3, #4
 2419 03de 9A42     		cmp	r2, r3
 2420 03e0 06D1     		bne	.L141
 469:.\tic_tac_all.c **** 			ai_define_score(ai,connected,empty_places);
 2421              		.loc 1 469 0
 2422 03e2 07F10803 		add	r3, r7, #8
 2423 03e6 3868     		ldr	r0, [r7]
 2424 03e8 F969     		ldr	r1, [r7, #28]
 2425 03ea 1A46     		mov	r2, r3
 2426 03ec FFF7FEFF 		bl	ai_define_score
 2427              	.L141:
 470:.\tic_tac_all.c **** 
 471:.\tic_tac_all.c **** 		// frontal
 472:.\tic_tac_all.c **** 		connected = 0;
 2428              		.loc 1 472 0
 2429 03f0 0023     		movs	r3, #0
 2430 03f2 FB61     		str	r3, [r7, #28]
 473:.\tic_tac_all.c **** 		num_filled = 0;
 2431              		.loc 1 473 0
 2432 03f4 0023     		movs	r3, #0
 2433 03f6 BB61     		str	r3, [r7, #24]
 474:.\tic_tac_all.c **** 		memset(empty_places,0,sizeof empty_places); //clear array
 2434              		.loc 1 474 0
 2435 03f8 07F10803 		add	r3, r7, #8
 2436 03fc 1846     		mov	r0, r3
 2437 03fe 0021     		movs	r1, #0
 2438 0400 1022     		movs	r2, #16
 2439 0402 FFF7FEFF 		bl	memset
 475:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){
 2440              		.loc 1 475 0
 2441 0406 0023     		movs	r3, #0
 2442 0408 3B62     		str	r3, [r7, #32]
 2443 040a 2AE0     		b	.L142
 2444              	.L144:
 476:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,z,zp,zp);
 2445              		.loc 1 476 0
 2446 040c 3B68     		ldr	r3, [r7]
 2447 040e 1C68     		ldr	r4, [r3]
 2448 0410 7868     		ldr	r0, [r7, #4]
 2449 0412 796A     		ldr	r1, [r7, #36]
 2450 0414 3A6A     		ldr	r2, [r7, #32]
 2451 0416 3B6A     		ldr	r3, [r7, #32]
 2452 0418 FFF7FEFF 		bl	ttc_get_grid
 2453 041c 0346     		mov	r3, r0
 2454 041e 03FB04F3 		mul	r3, r3, r4
 2455 0422 FA69     		ldr	r2, [r7, #28]
 2456 0424 1344     		add	r3, r3, r2
 2457 0426 FB61     		str	r3, [r7, #28]
 477:.\tic_tac_all.c **** 			if (ttc_get_grid(t,z,zp,zp) == 0){  //empty spot
 2458              		.loc 1 477 0
 2459 0428 7868     		ldr	r0, [r7, #4]
 2460 042a 796A     		ldr	r1, [r7, #36]
 2461 042c 3A6A     		ldr	r2, [r7, #32]
 2462 042e 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 54


 2463 0430 FFF7FEFF 		bl	ttc_get_grid
 2464 0434 0346     		mov	r3, r0
 2465 0436 002B     		cmp	r3, #0
 2466 0438 10D1     		bne	.L143
 478:.\tic_tac_all.c **** 				empty_places[num_filled] = z + zp*4 + zp*16; // store loc
 2467              		.loc 1 478 0
 2468 043a 3B6A     		ldr	r3, [r7, #32]
 2469 043c 9A00     		lsls	r2, r3, #2
 2470 043e 7B6A     		ldr	r3, [r7, #36]
 2471 0440 1A44     		add	r2, r2, r3
 2472 0442 3B6A     		ldr	r3, [r7, #32]
 2473 0444 1B01     		lsls	r3, r3, #4
 2474 0446 1A44     		add	r2, r2, r3
 2475 0448 BB69     		ldr	r3, [r7, #24]
 2476 044a 9B00     		lsls	r3, r3, #2
 2477 044c 07F13001 		add	r1, r7, #48
 2478 0450 0B44     		add	r3, r3, r1
 2479 0452 43F8282C 		str	r2, [r3, #-40]
 479:.\tic_tac_all.c **** 				num_filled++; //increment
 2480              		.loc 1 479 0
 2481 0456 BB69     		ldr	r3, [r7, #24]
 2482 0458 0133     		adds	r3, r3, #1
 2483 045a BB61     		str	r3, [r7, #24]
 2484              	.L143:
 475:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,z,zp,zp);
 2485              		.loc 1 475 0 discriminator 2
 2486 045c 3B6A     		ldr	r3, [r7, #32]
 2487 045e 0133     		adds	r3, r3, #1
 2488 0460 3B62     		str	r3, [r7, #32]
 2489              	.L142:
 475:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,z,zp,zp);
 2490              		.loc 1 475 0 is_stmt 0 discriminator 1
 2491 0462 7B68     		ldr	r3, [r7, #4]
 2492 0464 1A68     		ldr	r2, [r3]
 2493 0466 3B6A     		ldr	r3, [r7, #32]
 2494 0468 9A42     		cmp	r2, r3
 2495 046a CFDC     		bgt	.L144
 480:.\tic_tac_all.c **** 			}
 481:.\tic_tac_all.c **** 		}
 482:.\tic_tac_all.c **** 		if (connected == t->size){
 2496              		.loc 1 482 0 is_stmt 1
 2497 046c 7B68     		ldr	r3, [r7, #4]
 2498 046e 1A68     		ldr	r2, [r3]
 2499 0470 FB69     		ldr	r3, [r7, #28]
 2500 0472 9A42     		cmp	r2, r3
 2501 0474 05D1     		bne	.L145
 483:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 2502              		.loc 1 483 0
 2503 0476 7B68     		ldr	r3, [r7, #4]
 2504 0478 9A68     		ldr	r2, [r3, #8]
 2505 047a 7B68     		ldr	r3, [r7, #4]
 2506 047c 1A61     		str	r2, [r3, #16]
 484:.\tic_tac_all.c **** 			return 1; //there is a win
 2507              		.loc 1 484 0
 2508 047e 0123     		movs	r3, #1
 2509 0480 BDE2     		b	.L183
 2510              	.L145:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 55


 485:.\tic_tac_all.c **** 		}
 486:.\tic_tac_all.c **** 		if (abs(connected) == 4 - num_filled)
 2511              		.loc 1 486 0
 2512 0482 FB69     		ldr	r3, [r7, #28]
 2513 0484 83EAE372 		eor	r2, r3, r3, asr #31
 2514 0488 A2EBE372 		sub	r2, r2, r3, asr #31
 2515 048c BB69     		ldr	r3, [r7, #24]
 2516 048e C3F10403 		rsb	r3, r3, #4
 2517 0492 9A42     		cmp	r2, r3
 2518 0494 06D1     		bne	.L146
 487:.\tic_tac_all.c **** 			ai_define_score(ai,connected,empty_places);
 2519              		.loc 1 487 0
 2520 0496 07F10803 		add	r3, r7, #8
 2521 049a 3868     		ldr	r0, [r7]
 2522 049c F969     		ldr	r1, [r7, #28]
 2523 049e 1A46     		mov	r2, r3
 2524 04a0 FFF7FEFF 		bl	ai_define_score
 2525              	.L146:
 488:.\tic_tac_all.c **** 		// frontal
 489:.\tic_tac_all.c **** 		connected = 0;
 2526              		.loc 1 489 0
 2527 04a4 0023     		movs	r3, #0
 2528 04a6 FB61     		str	r3, [r7, #28]
 490:.\tic_tac_all.c **** 		num_filled = 0;
 2529              		.loc 1 490 0
 2530 04a8 0023     		movs	r3, #0
 2531 04aa BB61     		str	r3, [r7, #24]
 491:.\tic_tac_all.c **** 		memset(empty_places,0,sizeof empty_places); //clear array
 2532              		.loc 1 491 0
 2533 04ac 07F10803 		add	r3, r7, #8
 2534 04b0 1846     		mov	r0, r3
 2535 04b2 0021     		movs	r1, #0
 2536 04b4 1022     		movs	r2, #16
 2537 04b6 FFF7FEFF 		bl	memset
 492:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){
 2538              		.loc 1 492 0
 2539 04ba 0023     		movs	r3, #0
 2540 04bc 3B62     		str	r3, [r7, #32]
 2541 04be 32E0     		b	.L147
 2542              	.L149:
 493:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,z,3-zp,zp);
 2543              		.loc 1 493 0
 2544 04c0 3B68     		ldr	r3, [r7]
 2545 04c2 1C68     		ldr	r4, [r3]
 2546 04c4 3B6A     		ldr	r3, [r7, #32]
 2547 04c6 C3F10303 		rsb	r3, r3, #3
 2548 04ca 7868     		ldr	r0, [r7, #4]
 2549 04cc 796A     		ldr	r1, [r7, #36]
 2550 04ce 1A46     		mov	r2, r3
 2551 04d0 3B6A     		ldr	r3, [r7, #32]
 2552 04d2 FFF7FEFF 		bl	ttc_get_grid
 2553 04d6 0346     		mov	r3, r0
 2554 04d8 03FB04F3 		mul	r3, r3, r4
 2555 04dc FA69     		ldr	r2, [r7, #28]
 2556 04de 1344     		add	r3, r3, r2
 2557 04e0 FB61     		str	r3, [r7, #28]
 494:.\tic_tac_all.c **** 			if (ttc_get_grid(t,z,3-zp,zp) == 0){  //empty spot
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 56


 2558              		.loc 1 494 0
 2559 04e2 3B6A     		ldr	r3, [r7, #32]
 2560 04e4 C3F10303 		rsb	r3, r3, #3
 2561 04e8 7868     		ldr	r0, [r7, #4]
 2562 04ea 796A     		ldr	r1, [r7, #36]
 2563 04ec 1A46     		mov	r2, r3
 2564 04ee 3B6A     		ldr	r3, [r7, #32]
 2565 04f0 FFF7FEFF 		bl	ttc_get_grid
 2566 04f4 0346     		mov	r3, r0
 2567 04f6 002B     		cmp	r3, #0
 2568 04f8 12D1     		bne	.L148
 495:.\tic_tac_all.c **** 				empty_places[num_filled] = z + (3-zp)*4 + zp*16; // store loc
 2569              		.loc 1 495 0
 2570 04fa 3B6A     		ldr	r3, [r7, #32]
 2571 04fc C3F10303 		rsb	r3, r3, #3
 2572 0500 9A00     		lsls	r2, r3, #2
 2573 0502 7B6A     		ldr	r3, [r7, #36]
 2574 0504 1A44     		add	r2, r2, r3
 2575 0506 3B6A     		ldr	r3, [r7, #32]
 2576 0508 1B01     		lsls	r3, r3, #4
 2577 050a 1A44     		add	r2, r2, r3
 2578 050c BB69     		ldr	r3, [r7, #24]
 2579 050e 9B00     		lsls	r3, r3, #2
 2580 0510 07F13001 		add	r1, r7, #48
 2581 0514 0B44     		add	r3, r3, r1
 2582 0516 43F8282C 		str	r2, [r3, #-40]
 496:.\tic_tac_all.c **** 				num_filled++; //increment
 2583              		.loc 1 496 0
 2584 051a BB69     		ldr	r3, [r7, #24]
 2585 051c 0133     		adds	r3, r3, #1
 2586 051e BB61     		str	r3, [r7, #24]
 2587              	.L148:
 492:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,z,3-zp,zp);
 2588              		.loc 1 492 0 discriminator 2
 2589 0520 3B6A     		ldr	r3, [r7, #32]
 2590 0522 0133     		adds	r3, r3, #1
 2591 0524 3B62     		str	r3, [r7, #32]
 2592              	.L147:
 492:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,z,3-zp,zp);
 2593              		.loc 1 492 0 is_stmt 0 discriminator 1
 2594 0526 7B68     		ldr	r3, [r7, #4]
 2595 0528 1A68     		ldr	r2, [r3]
 2596 052a 3B6A     		ldr	r3, [r7, #32]
 2597 052c 9A42     		cmp	r2, r3
 2598 052e C7DC     		bgt	.L149
 497:.\tic_tac_all.c **** 			}
 498:.\tic_tac_all.c **** 		}
 499:.\tic_tac_all.c **** 		if (connected == t->size){
 2599              		.loc 1 499 0 is_stmt 1
 2600 0530 7B68     		ldr	r3, [r7, #4]
 2601 0532 1A68     		ldr	r2, [r3]
 2602 0534 FB69     		ldr	r3, [r7, #28]
 2603 0536 9A42     		cmp	r2, r3
 2604 0538 05D1     		bne	.L150
 500:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 2605              		.loc 1 500 0
 2606 053a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 57


 2607 053c 9A68     		ldr	r2, [r3, #8]
 2608 053e 7B68     		ldr	r3, [r7, #4]
 2609 0540 1A61     		str	r2, [r3, #16]
 501:.\tic_tac_all.c **** 			return 1; //there is a win
 2610              		.loc 1 501 0
 2611 0542 0123     		movs	r3, #1
 2612 0544 5BE2     		b	.L183
 2613              	.L150:
 502:.\tic_tac_all.c **** 		}
 503:.\tic_tac_all.c **** 		if (abs(connected) == 4 - num_filled)
 2614              		.loc 1 503 0
 2615 0546 FB69     		ldr	r3, [r7, #28]
 2616 0548 83EAE372 		eor	r2, r3, r3, asr #31
 2617 054c A2EBE372 		sub	r2, r2, r3, asr #31
 2618 0550 BB69     		ldr	r3, [r7, #24]
 2619 0552 C3F10403 		rsb	r3, r3, #4
 2620 0556 9A42     		cmp	r2, r3
 2621 0558 06D1     		bne	.L151
 504:.\tic_tac_all.c **** 			ai_define_score(ai,connected,empty_places);
 2622              		.loc 1 504 0
 2623 055a 07F10803 		add	r3, r7, #8
 2624 055e 3868     		ldr	r0, [r7]
 2625 0560 F969     		ldr	r1, [r7, #28]
 2626 0562 1A46     		mov	r2, r3
 2627 0564 FFF7FEFF 		bl	ai_define_score
 2628              	.L151:
 505:.\tic_tac_all.c **** 
 506:.\tic_tac_all.c **** 		// sidal
 507:.\tic_tac_all.c **** 		connected = 0;
 2629              		.loc 1 507 0
 2630 0568 0023     		movs	r3, #0
 2631 056a FB61     		str	r3, [r7, #28]
 508:.\tic_tac_all.c **** 		num_filled = 0;
 2632              		.loc 1 508 0
 2633 056c 0023     		movs	r3, #0
 2634 056e BB61     		str	r3, [r7, #24]
 509:.\tic_tac_all.c **** 		memset(empty_places,0,sizeof empty_places); //clear array
 2635              		.loc 1 509 0
 2636 0570 07F10803 		add	r3, r7, #8
 2637 0574 1846     		mov	r0, r3
 2638 0576 0021     		movs	r1, #0
 2639 0578 1022     		movs	r2, #16
 2640 057a FFF7FEFF 		bl	memset
 510:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){
 2641              		.loc 1 510 0
 2642 057e 0023     		movs	r3, #0
 2643 0580 3B62     		str	r3, [r7, #32]
 2644 0582 2AE0     		b	.L152
 2645              	.L154:
 511:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,z,zp);
 2646              		.loc 1 511 0
 2647 0584 3B68     		ldr	r3, [r7]
 2648 0586 1C68     		ldr	r4, [r3]
 2649 0588 7868     		ldr	r0, [r7, #4]
 2650 058a 396A     		ldr	r1, [r7, #32]
 2651 058c 7A6A     		ldr	r2, [r7, #36]
 2652 058e 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 58


 2653 0590 FFF7FEFF 		bl	ttc_get_grid
 2654 0594 0346     		mov	r3, r0
 2655 0596 03FB04F3 		mul	r3, r3, r4
 2656 059a FA69     		ldr	r2, [r7, #28]
 2657 059c 1344     		add	r3, r3, r2
 2658 059e FB61     		str	r3, [r7, #28]
 512:.\tic_tac_all.c **** 			if (ttc_get_grid(t,zp,z,zp) == 0){  //empty spot
 2659              		.loc 1 512 0
 2660 05a0 7868     		ldr	r0, [r7, #4]
 2661 05a2 396A     		ldr	r1, [r7, #32]
 2662 05a4 7A6A     		ldr	r2, [r7, #36]
 2663 05a6 3B6A     		ldr	r3, [r7, #32]
 2664 05a8 FFF7FEFF 		bl	ttc_get_grid
 2665 05ac 0346     		mov	r3, r0
 2666 05ae 002B     		cmp	r3, #0
 2667 05b0 10D1     		bne	.L153
 513:.\tic_tac_all.c **** 				empty_places[num_filled] = zp + z*4 + zp*16; // store loc
 2668              		.loc 1 513 0
 2669 05b2 7B6A     		ldr	r3, [r7, #36]
 2670 05b4 9A00     		lsls	r2, r3, #2
 2671 05b6 3B6A     		ldr	r3, [r7, #32]
 2672 05b8 1A44     		add	r2, r2, r3
 2673 05ba 3B6A     		ldr	r3, [r7, #32]
 2674 05bc 1B01     		lsls	r3, r3, #4
 2675 05be 1A44     		add	r2, r2, r3
 2676 05c0 BB69     		ldr	r3, [r7, #24]
 2677 05c2 9B00     		lsls	r3, r3, #2
 2678 05c4 07F13001 		add	r1, r7, #48
 2679 05c8 0B44     		add	r3, r3, r1
 2680 05ca 43F8282C 		str	r2, [r3, #-40]
 514:.\tic_tac_all.c **** 				num_filled++; //increment
 2681              		.loc 1 514 0
 2682 05ce BB69     		ldr	r3, [r7, #24]
 2683 05d0 0133     		adds	r3, r3, #1
 2684 05d2 BB61     		str	r3, [r7, #24]
 2685              	.L153:
 510:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,z,zp);
 2686              		.loc 1 510 0 discriminator 2
 2687 05d4 3B6A     		ldr	r3, [r7, #32]
 2688 05d6 0133     		adds	r3, r3, #1
 2689 05d8 3B62     		str	r3, [r7, #32]
 2690              	.L152:
 510:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,zp,z,zp);
 2691              		.loc 1 510 0 is_stmt 0 discriminator 1
 2692 05da 7B68     		ldr	r3, [r7, #4]
 2693 05dc 1A68     		ldr	r2, [r3]
 2694 05de 3B6A     		ldr	r3, [r7, #32]
 2695 05e0 9A42     		cmp	r2, r3
 2696 05e2 CFDC     		bgt	.L154
 515:.\tic_tac_all.c **** 			}
 516:.\tic_tac_all.c **** 		}
 517:.\tic_tac_all.c **** 		if (connected == t->size){
 2697              		.loc 1 517 0 is_stmt 1
 2698 05e4 7B68     		ldr	r3, [r7, #4]
 2699 05e6 1A68     		ldr	r2, [r3]
 2700 05e8 FB69     		ldr	r3, [r7, #28]
 2701 05ea 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 59


 2702 05ec 05D1     		bne	.L155
 518:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 2703              		.loc 1 518 0
 2704 05ee 7B68     		ldr	r3, [r7, #4]
 2705 05f0 9A68     		ldr	r2, [r3, #8]
 2706 05f2 7B68     		ldr	r3, [r7, #4]
 2707 05f4 1A61     		str	r2, [r3, #16]
 519:.\tic_tac_all.c **** 			return 1; //there is a win
 2708              		.loc 1 519 0
 2709 05f6 0123     		movs	r3, #1
 2710 05f8 01E2     		b	.L183
 2711              	.L155:
 520:.\tic_tac_all.c **** 		}
 521:.\tic_tac_all.c **** 		if (abs(connected) == 4 - num_filled)
 2712              		.loc 1 521 0
 2713 05fa FB69     		ldr	r3, [r7, #28]
 2714 05fc 83EAE372 		eor	r2, r3, r3, asr #31
 2715 0600 A2EBE372 		sub	r2, r2, r3, asr #31
 2716 0604 BB69     		ldr	r3, [r7, #24]
 2717 0606 C3F10403 		rsb	r3, r3, #4
 2718 060a 9A42     		cmp	r2, r3
 2719 060c 06D1     		bne	.L156
 522:.\tic_tac_all.c **** 			ai_define_score(ai,connected,empty_places);
 2720              		.loc 1 522 0
 2721 060e 07F10803 		add	r3, r7, #8
 2722 0612 3868     		ldr	r0, [r7]
 2723 0614 F969     		ldr	r1, [r7, #28]
 2724 0616 1A46     		mov	r2, r3
 2725 0618 FFF7FEFF 		bl	ai_define_score
 2726              	.L156:
 523:.\tic_tac_all.c **** 		// sidal
 524:.\tic_tac_all.c **** 		connected = 0;
 2727              		.loc 1 524 0
 2728 061c 0023     		movs	r3, #0
 2729 061e FB61     		str	r3, [r7, #28]
 525:.\tic_tac_all.c **** 		num_filled = 0;
 2730              		.loc 1 525 0
 2731 0620 0023     		movs	r3, #0
 2732 0622 BB61     		str	r3, [r7, #24]
 526:.\tic_tac_all.c **** 		memset(empty_places,0,sizeof empty_places); //clear array
 2733              		.loc 1 526 0
 2734 0624 07F10803 		add	r3, r7, #8
 2735 0628 1846     		mov	r0, r3
 2736 062a 0021     		movs	r1, #0
 2737 062c 1022     		movs	r2, #16
 2738 062e FFF7FEFF 		bl	memset
 527:.\tic_tac_all.c **** 		for (zp = 0; zp < t->size;zp++){
 2739              		.loc 1 527 0
 2740 0632 0023     		movs	r3, #0
 2741 0634 3B62     		str	r3, [r7, #32]
 2742 0636 32E0     		b	.L157
 2743              	.L159:
 528:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,3-zp,z,zp);
 2744              		.loc 1 528 0
 2745 0638 3B68     		ldr	r3, [r7]
 2746 063a 1C68     		ldr	r4, [r3]
 2747 063c 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 60


 2748 063e C3F10303 		rsb	r3, r3, #3
 2749 0642 7868     		ldr	r0, [r7, #4]
 2750 0644 1946     		mov	r1, r3
 2751 0646 7A6A     		ldr	r2, [r7, #36]
 2752 0648 3B6A     		ldr	r3, [r7, #32]
 2753 064a FFF7FEFF 		bl	ttc_get_grid
 2754 064e 0346     		mov	r3, r0
 2755 0650 03FB04F3 		mul	r3, r3, r4
 2756 0654 FA69     		ldr	r2, [r7, #28]
 2757 0656 1344     		add	r3, r3, r2
 2758 0658 FB61     		str	r3, [r7, #28]
 529:.\tic_tac_all.c **** 			if (ttc_get_grid(t,3-zp,z,zp) == 0){  //empty spot
 2759              		.loc 1 529 0
 2760 065a 3B6A     		ldr	r3, [r7, #32]
 2761 065c C3F10303 		rsb	r3, r3, #3
 2762 0660 7868     		ldr	r0, [r7, #4]
 2763 0662 1946     		mov	r1, r3
 2764 0664 7A6A     		ldr	r2, [r7, #36]
 2765 0666 3B6A     		ldr	r3, [r7, #32]
 2766 0668 FFF7FEFF 		bl	ttc_get_grid
 2767 066c 0346     		mov	r3, r0
 2768 066e 002B     		cmp	r3, #0
 2769 0670 12D1     		bne	.L158
 530:.\tic_tac_all.c **** 				empty_places[num_filled] = 3-zp + z*4 + zp*16; // store loc
 2770              		.loc 1 530 0
 2771 0672 3B6A     		ldr	r3, [r7, #32]
 2772 0674 C3F10302 		rsb	r2, r3, #3
 2773 0678 7B6A     		ldr	r3, [r7, #36]
 2774 067a 9B00     		lsls	r3, r3, #2
 2775 067c 1A44     		add	r2, r2, r3
 2776 067e 3B6A     		ldr	r3, [r7, #32]
 2777 0680 1B01     		lsls	r3, r3, #4
 2778 0682 1A44     		add	r2, r2, r3
 2779 0684 BB69     		ldr	r3, [r7, #24]
 2780 0686 9B00     		lsls	r3, r3, #2
 2781 0688 07F13001 		add	r1, r7, #48
 2782 068c 0B44     		add	r3, r3, r1
 2783 068e 43F8282C 		str	r2, [r3, #-40]
 531:.\tic_tac_all.c **** 				num_filled++; //increment
 2784              		.loc 1 531 0
 2785 0692 BB69     		ldr	r3, [r7, #24]
 2786 0694 0133     		adds	r3, r3, #1
 2787 0696 BB61     		str	r3, [r7, #24]
 2788              	.L158:
 527:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,3-zp,z,zp);
 2789              		.loc 1 527 0 discriminator 2
 2790 0698 3B6A     		ldr	r3, [r7, #32]
 2791 069a 0133     		adds	r3, r3, #1
 2792 069c 3B62     		str	r3, [r7, #32]
 2793              	.L157:
 527:.\tic_tac_all.c **** 			connected += ai->player_id*ttc_get_grid(t,3-zp,z,zp);
 2794              		.loc 1 527 0 is_stmt 0 discriminator 1
 2795 069e 7B68     		ldr	r3, [r7, #4]
 2796 06a0 1A68     		ldr	r2, [r3]
 2797 06a2 3B6A     		ldr	r3, [r7, #32]
 2798 06a4 9A42     		cmp	r2, r3
 2799 06a6 C7DC     		bgt	.L159
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 61


 532:.\tic_tac_all.c **** 			}
 533:.\tic_tac_all.c **** 		}
 534:.\tic_tac_all.c **** 		if (connected == t->size){
 2800              		.loc 1 534 0 is_stmt 1
 2801 06a8 7B68     		ldr	r3, [r7, #4]
 2802 06aa 1A68     		ldr	r2, [r3]
 2803 06ac FB69     		ldr	r3, [r7, #28]
 2804 06ae 9A42     		cmp	r2, r3
 2805 06b0 05D1     		bne	.L160
 535:.\tic_tac_all.c **** 			t->game_not_won = t->player; //when win, set to player id
 2806              		.loc 1 535 0
 2807 06b2 7B68     		ldr	r3, [r7, #4]
 2808 06b4 9A68     		ldr	r2, [r3, #8]
 2809 06b6 7B68     		ldr	r3, [r7, #4]
 2810 06b8 1A61     		str	r2, [r3, #16]
 536:.\tic_tac_all.c **** 			return 1; //there is a win
 2811              		.loc 1 536 0
 2812 06ba 0123     		movs	r3, #1
 2813 06bc 9FE1     		b	.L183
 2814              	.L160:
 537:.\tic_tac_all.c **** 		}
 538:.\tic_tac_all.c **** 		if (abs(connected) == 4 - num_filled)
 2815              		.loc 1 538 0
 2816 06be FB69     		ldr	r3, [r7, #28]
 2817 06c0 83EAE372 		eor	r2, r3, r3, asr #31
 2818 06c4 A2EBE372 		sub	r2, r2, r3, asr #31
 2819 06c8 BB69     		ldr	r3, [r7, #24]
 2820 06ca C3F10403 		rsb	r3, r3, #4
 2821 06ce 9A42     		cmp	r2, r3
 2822 06d0 06D1     		bne	.L161
 539:.\tic_tac_all.c **** 			ai_define_score(ai,connected,empty_places);
 2823              		.loc 1 539 0
 2824 06d2 07F10803 		add	r3, r7, #8
 2825 06d6 3868     		ldr	r0, [r7]
 2826 06d8 F969     		ldr	r1, [r7, #28]
 2827 06da 1A46     		mov	r2, r3
 2828 06dc FFF7FEFF 		bl	ai_define_score
 2829              	.L161:
 2830              	.LBE4:
 376:.\tic_tac_all.c **** 		for (y = 0; y < t->size; y++){ // flat
 2831              		.loc 1 376 0 discriminator 2
 2832 06e0 7B6A     		ldr	r3, [r7, #36]
 2833 06e2 0133     		adds	r3, r3, #1
 2834 06e4 7B62     		str	r3, [r7, #36]
 2835              	.L109:
 376:.\tic_tac_all.c **** 		for (y = 0; y < t->size; y++){ // flat
 2836              		.loc 1 376 0 is_stmt 0 discriminator 1
 2837 06e6 7B68     		ldr	r3, [r7, #4]
 2838 06e8 1A68     		ldr	r2, [r3]
 2839 06ea 7B6A     		ldr	r3, [r7, #36]
 2840 06ec 9A42     		cmp	r2, r3
 2841 06ee 3FF792AC 		bgt	.L162
 540:.\tic_tac_all.c **** 	}
 541:.\tic_tac_all.c **** 	// superdiags
 542:.\tic_tac_all.c **** 	connected = 0;
 2842              		.loc 1 542 0 is_stmt 1
 2843 06f2 0023     		movs	r3, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 62


 2844 06f4 FB61     		str	r3, [r7, #28]
 543:.\tic_tac_all.c **** 	num_filled = 0;
 2845              		.loc 1 543 0
 2846 06f6 0023     		movs	r3, #0
 2847 06f8 BB61     		str	r3, [r7, #24]
 544:.\tic_tac_all.c **** 	memset(empty_places,0,sizeof empty_places); //clear array
 2848              		.loc 1 544 0
 2849 06fa 07F10803 		add	r3, r7, #8
 2850 06fe 1846     		mov	r0, r3
 2851 0700 0021     		movs	r1, #0
 2852 0702 1022     		movs	r2, #16
 2853 0704 FFF7FEFF 		bl	memset
 545:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){
 2854              		.loc 1 545 0
 2855 0708 0023     		movs	r3, #0
 2856 070a 3B62     		str	r3, [r7, #32]
 2857 070c 29E0     		b	.L163
 2858              	.L165:
 546:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,zp,zp,zp);
 2859              		.loc 1 546 0
 2860 070e 3B68     		ldr	r3, [r7]
 2861 0710 1C68     		ldr	r4, [r3]
 2862 0712 7868     		ldr	r0, [r7, #4]
 2863 0714 396A     		ldr	r1, [r7, #32]
 2864 0716 3A6A     		ldr	r2, [r7, #32]
 2865 0718 3B6A     		ldr	r3, [r7, #32]
 2866 071a FFF7FEFF 		bl	ttc_get_grid
 2867 071e 0346     		mov	r3, r0
 2868 0720 03FB04F3 		mul	r3, r3, r4
 2869 0724 FA69     		ldr	r2, [r7, #28]
 2870 0726 1344     		add	r3, r3, r2
 2871 0728 FB61     		str	r3, [r7, #28]
 547:.\tic_tac_all.c **** 		if (ttc_get_grid(t,zp,zp,zp) == 0){  //empty spot
 2872              		.loc 1 547 0
 2873 072a 7868     		ldr	r0, [r7, #4]
 2874 072c 396A     		ldr	r1, [r7, #32]
 2875 072e 3A6A     		ldr	r2, [r7, #32]
 2876 0730 3B6A     		ldr	r3, [r7, #32]
 2877 0732 FFF7FEFF 		bl	ttc_get_grid
 2878 0736 0346     		mov	r3, r0
 2879 0738 002B     		cmp	r3, #0
 2880 073a 0FD1     		bne	.L164
 548:.\tic_tac_all.c **** 			empty_places[num_filled] = zp + zp*4 + zp*16; // store loc
 2881              		.loc 1 548 0
 2882 073c 3A6A     		ldr	r2, [r7, #32]
 2883 073e 1346     		mov	r3, r2
 2884 0740 5B00     		lsls	r3, r3, #1
 2885 0742 1344     		add	r3, r3, r2
 2886 0744 DA00     		lsls	r2, r3, #3
 2887 0746 D21A     		subs	r2, r2, r3
 2888 0748 BB69     		ldr	r3, [r7, #24]
 2889 074a 9B00     		lsls	r3, r3, #2
 2890 074c 07F13001 		add	r1, r7, #48
 2891 0750 0B44     		add	r3, r3, r1
 2892 0752 43F8282C 		str	r2, [r3, #-40]
 549:.\tic_tac_all.c **** 			num_filled++; //increment
 2893              		.loc 1 549 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 63


 2894 0756 BB69     		ldr	r3, [r7, #24]
 2895 0758 0133     		adds	r3, r3, #1
 2896 075a BB61     		str	r3, [r7, #24]
 2897              	.L164:
 545:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,zp,zp,zp);
 2898              		.loc 1 545 0 discriminator 2
 2899 075c 3B6A     		ldr	r3, [r7, #32]
 2900 075e 0133     		adds	r3, r3, #1
 2901 0760 3B62     		str	r3, [r7, #32]
 2902              	.L163:
 545:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,zp,zp,zp);
 2903              		.loc 1 545 0 is_stmt 0 discriminator 1
 2904 0762 7B68     		ldr	r3, [r7, #4]
 2905 0764 1A68     		ldr	r2, [r3]
 2906 0766 3B6A     		ldr	r3, [r7, #32]
 2907 0768 9A42     		cmp	r2, r3
 2908 076a D0DC     		bgt	.L165
 550:.\tic_tac_all.c **** 		}
 551:.\tic_tac_all.c **** 	}
 552:.\tic_tac_all.c **** 	if (connected == t->size){
 2909              		.loc 1 552 0 is_stmt 1
 2910 076c 7B68     		ldr	r3, [r7, #4]
 2911 076e 1A68     		ldr	r2, [r3]
 2912 0770 FB69     		ldr	r3, [r7, #28]
 2913 0772 9A42     		cmp	r2, r3
 2914 0774 05D1     		bne	.L166
 553:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 2915              		.loc 1 553 0
 2916 0776 7B68     		ldr	r3, [r7, #4]
 2917 0778 9A68     		ldr	r2, [r3, #8]
 2918 077a 7B68     		ldr	r3, [r7, #4]
 2919 077c 1A61     		str	r2, [r3, #16]
 554:.\tic_tac_all.c **** 		return 1; //there is a win
 2920              		.loc 1 554 0
 2921 077e 0123     		movs	r3, #1
 2922 0780 3DE1     		b	.L183
 2923              	.L166:
 555:.\tic_tac_all.c **** 	}
 556:.\tic_tac_all.c **** 	if (abs(connected) == 4 - num_filled)
 2924              		.loc 1 556 0
 2925 0782 FB69     		ldr	r3, [r7, #28]
 2926 0784 83EAE372 		eor	r2, r3, r3, asr #31
 2927 0788 A2EBE372 		sub	r2, r2, r3, asr #31
 2928 078c BB69     		ldr	r3, [r7, #24]
 2929 078e C3F10403 		rsb	r3, r3, #4
 2930 0792 9A42     		cmp	r2, r3
 2931 0794 06D1     		bne	.L167
 557:.\tic_tac_all.c **** 		ai_define_score(ai,connected,empty_places);
 2932              		.loc 1 557 0
 2933 0796 07F10803 		add	r3, r7, #8
 2934 079a 3868     		ldr	r0, [r7]
 2935 079c F969     		ldr	r1, [r7, #28]
 2936 079e 1A46     		mov	r2, r3
 2937 07a0 FFF7FEFF 		bl	ai_define_score
 2938              	.L167:
 558:.\tic_tac_all.c **** 
 559:.\tic_tac_all.c **** 	connected = 0;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 64


 2939              		.loc 1 559 0
 2940 07a4 0023     		movs	r3, #0
 2941 07a6 FB61     		str	r3, [r7, #28]
 560:.\tic_tac_all.c **** 	num_filled = 0;
 2942              		.loc 1 560 0
 2943 07a8 0023     		movs	r3, #0
 2944 07aa BB61     		str	r3, [r7, #24]
 561:.\tic_tac_all.c **** 	memset(empty_places,0,sizeof empty_places); //clear array
 2945              		.loc 1 561 0
 2946 07ac 07F10803 		add	r3, r7, #8
 2947 07b0 1846     		mov	r0, r3
 2948 07b2 0021     		movs	r1, #0
 2949 07b4 1022     		movs	r2, #16
 2950 07b6 FFF7FEFF 		bl	memset
 562:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){
 2951              		.loc 1 562 0
 2952 07ba 0023     		movs	r3, #0
 2953 07bc 3B62     		str	r3, [r7, #32]
 2954 07be 32E0     		b	.L168
 2955              	.L170:
 563:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,3-zp,zp,zp);
 2956              		.loc 1 563 0
 2957 07c0 3B68     		ldr	r3, [r7]
 2958 07c2 1C68     		ldr	r4, [r3]
 2959 07c4 3B6A     		ldr	r3, [r7, #32]
 2960 07c6 C3F10303 		rsb	r3, r3, #3
 2961 07ca 7868     		ldr	r0, [r7, #4]
 2962 07cc 1946     		mov	r1, r3
 2963 07ce 3A6A     		ldr	r2, [r7, #32]
 2964 07d0 3B6A     		ldr	r3, [r7, #32]
 2965 07d2 FFF7FEFF 		bl	ttc_get_grid
 2966 07d6 0346     		mov	r3, r0
 2967 07d8 03FB04F3 		mul	r3, r3, r4
 2968 07dc FA69     		ldr	r2, [r7, #28]
 2969 07de 1344     		add	r3, r3, r2
 2970 07e0 FB61     		str	r3, [r7, #28]
 564:.\tic_tac_all.c **** 		if (ttc_get_grid(t,3-zp,zp,zp) == 0){  //empty spot
 2971              		.loc 1 564 0
 2972 07e2 3B6A     		ldr	r3, [r7, #32]
 2973 07e4 C3F10303 		rsb	r3, r3, #3
 2974 07e8 7868     		ldr	r0, [r7, #4]
 2975 07ea 1946     		mov	r1, r3
 2976 07ec 3A6A     		ldr	r2, [r7, #32]
 2977 07ee 3B6A     		ldr	r3, [r7, #32]
 2978 07f0 FFF7FEFF 		bl	ttc_get_grid
 2979 07f4 0346     		mov	r3, r0
 2980 07f6 002B     		cmp	r3, #0
 2981 07f8 12D1     		bne	.L169
 565:.\tic_tac_all.c **** 			empty_places[num_filled] = 3-zp + zp*4 + zp*16; // store loc
 2982              		.loc 1 565 0
 2983 07fa 3B6A     		ldr	r3, [r7, #32]
 2984 07fc C3F10302 		rsb	r2, r3, #3
 2985 0800 3B6A     		ldr	r3, [r7, #32]
 2986 0802 9B00     		lsls	r3, r3, #2
 2987 0804 1A44     		add	r2, r2, r3
 2988 0806 3B6A     		ldr	r3, [r7, #32]
 2989 0808 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 65


 2990 080a 1A44     		add	r2, r2, r3
 2991 080c BB69     		ldr	r3, [r7, #24]
 2992 080e 9B00     		lsls	r3, r3, #2
 2993 0810 07F13001 		add	r1, r7, #48
 2994 0814 0B44     		add	r3, r3, r1
 2995 0816 43F8282C 		str	r2, [r3, #-40]
 566:.\tic_tac_all.c **** 			num_filled++; //increment
 2996              		.loc 1 566 0
 2997 081a BB69     		ldr	r3, [r7, #24]
 2998 081c 0133     		adds	r3, r3, #1
 2999 081e BB61     		str	r3, [r7, #24]
 3000              	.L169:
 562:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,3-zp,zp,zp);
 3001              		.loc 1 562 0 discriminator 2
 3002 0820 3B6A     		ldr	r3, [r7, #32]
 3003 0822 0133     		adds	r3, r3, #1
 3004 0824 3B62     		str	r3, [r7, #32]
 3005              	.L168:
 562:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,3-zp,zp,zp);
 3006              		.loc 1 562 0 is_stmt 0 discriminator 1
 3007 0826 7B68     		ldr	r3, [r7, #4]
 3008 0828 1A68     		ldr	r2, [r3]
 3009 082a 3B6A     		ldr	r3, [r7, #32]
 3010 082c 9A42     		cmp	r2, r3
 3011 082e C7DC     		bgt	.L170
 567:.\tic_tac_all.c **** 		}
 568:.\tic_tac_all.c **** 	}
 569:.\tic_tac_all.c **** 	if (connected == t->size){
 3012              		.loc 1 569 0 is_stmt 1
 3013 0830 7B68     		ldr	r3, [r7, #4]
 3014 0832 1A68     		ldr	r2, [r3]
 3015 0834 FB69     		ldr	r3, [r7, #28]
 3016 0836 9A42     		cmp	r2, r3
 3017 0838 05D1     		bne	.L171
 570:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 3018              		.loc 1 570 0
 3019 083a 7B68     		ldr	r3, [r7, #4]
 3020 083c 9A68     		ldr	r2, [r3, #8]
 3021 083e 7B68     		ldr	r3, [r7, #4]
 3022 0840 1A61     		str	r2, [r3, #16]
 571:.\tic_tac_all.c **** 		return 1; //there is a win
 3023              		.loc 1 571 0
 3024 0842 0123     		movs	r3, #1
 3025 0844 DBE0     		b	.L183
 3026              	.L171:
 572:.\tic_tac_all.c **** 	}
 573:.\tic_tac_all.c **** 	if (abs(connected) == 4 - num_filled)
 3027              		.loc 1 573 0
 3028 0846 FB69     		ldr	r3, [r7, #28]
 3029 0848 83EAE372 		eor	r2, r3, r3, asr #31
 3030 084c A2EBE372 		sub	r2, r2, r3, asr #31
 3031 0850 BB69     		ldr	r3, [r7, #24]
 3032 0852 C3F10403 		rsb	r3, r3, #4
 3033 0856 9A42     		cmp	r2, r3
 3034 0858 06D1     		bne	.L172
 574:.\tic_tac_all.c **** 		ai_define_score(ai,connected,empty_places);
 3035              		.loc 1 574 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 66


 3036 085a 07F10803 		add	r3, r7, #8
 3037 085e 3868     		ldr	r0, [r7]
 3038 0860 F969     		ldr	r1, [r7, #28]
 3039 0862 1A46     		mov	r2, r3
 3040 0864 FFF7FEFF 		bl	ai_define_score
 3041              	.L172:
 575:.\tic_tac_all.c **** 
 576:.\tic_tac_all.c **** 	connected = 0;
 3042              		.loc 1 576 0
 3043 0868 0023     		movs	r3, #0
 3044 086a FB61     		str	r3, [r7, #28]
 577:.\tic_tac_all.c **** 	num_filled = 0;
 3045              		.loc 1 577 0
 3046 086c 0023     		movs	r3, #0
 3047 086e BB61     		str	r3, [r7, #24]
 578:.\tic_tac_all.c **** 	memset(empty_places,0,sizeof empty_places); //clear array
 3048              		.loc 1 578 0
 3049 0870 07F10803 		add	r3, r7, #8
 3050 0874 1846     		mov	r0, r3
 3051 0876 0021     		movs	r1, #0
 3052 0878 1022     		movs	r2, #16
 3053 087a FFF7FEFF 		bl	memset
 579:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){
 3054              		.loc 1 579 0
 3055 087e 0023     		movs	r3, #0
 3056 0880 3B62     		str	r3, [r7, #32]
 3057 0882 38E0     		b	.L173
 3058              	.L175:
 580:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,3-zp,3-zp,zp);
 3059              		.loc 1 580 0
 3060 0884 3B68     		ldr	r3, [r7]
 3061 0886 1C68     		ldr	r4, [r3]
 3062 0888 3B6A     		ldr	r3, [r7, #32]
 3063 088a C3F10302 		rsb	r2, r3, #3
 3064 088e 3B6A     		ldr	r3, [r7, #32]
 3065 0890 C3F10303 		rsb	r3, r3, #3
 3066 0894 7868     		ldr	r0, [r7, #4]
 3067 0896 1146     		mov	r1, r2
 3068 0898 1A46     		mov	r2, r3
 3069 089a 3B6A     		ldr	r3, [r7, #32]
 3070 089c FFF7FEFF 		bl	ttc_get_grid
 3071 08a0 0346     		mov	r3, r0
 3072 08a2 03FB04F3 		mul	r3, r3, r4
 3073 08a6 FA69     		ldr	r2, [r7, #28]
 3074 08a8 1344     		add	r3, r3, r2
 3075 08aa FB61     		str	r3, [r7, #28]
 581:.\tic_tac_all.c **** 		if (ttc_get_grid(t,3-zp,3-zp,zp) == 0){  //empty spot
 3076              		.loc 1 581 0
 3077 08ac 3B6A     		ldr	r3, [r7, #32]
 3078 08ae C3F10302 		rsb	r2, r3, #3
 3079 08b2 3B6A     		ldr	r3, [r7, #32]
 3080 08b4 C3F10303 		rsb	r3, r3, #3
 3081 08b8 7868     		ldr	r0, [r7, #4]
 3082 08ba 1146     		mov	r1, r2
 3083 08bc 1A46     		mov	r2, r3
 3084 08be 3B6A     		ldr	r3, [r7, #32]
 3085 08c0 FFF7FEFF 		bl	ttc_get_grid
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 67


 3086 08c4 0346     		mov	r3, r0
 3087 08c6 002B     		cmp	r3, #0
 3088 08c8 12D1     		bne	.L174
 582:.\tic_tac_all.c **** 			empty_places[num_filled] = 3-zp + (3-zp)*4 + zp*16; // store loc
 3089              		.loc 1 582 0
 3090 08ca 3B6A     		ldr	r3, [r7, #32]
 3091 08cc C3F10302 		rsb	r2, r3, #3
 3092 08d0 1346     		mov	r3, r2
 3093 08d2 9B00     		lsls	r3, r3, #2
 3094 08d4 1A44     		add	r2, r2, r3
 3095 08d6 3B6A     		ldr	r3, [r7, #32]
 3096 08d8 1B01     		lsls	r3, r3, #4
 3097 08da 1A44     		add	r2, r2, r3
 3098 08dc BB69     		ldr	r3, [r7, #24]
 3099 08de 9B00     		lsls	r3, r3, #2
 3100 08e0 07F13001 		add	r1, r7, #48
 3101 08e4 0B44     		add	r3, r3, r1
 3102 08e6 43F8282C 		str	r2, [r3, #-40]
 583:.\tic_tac_all.c **** 			num_filled++; //increment
 3103              		.loc 1 583 0
 3104 08ea BB69     		ldr	r3, [r7, #24]
 3105 08ec 0133     		adds	r3, r3, #1
 3106 08ee BB61     		str	r3, [r7, #24]
 3107              	.L174:
 579:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,3-zp,3-zp,zp);
 3108              		.loc 1 579 0 discriminator 2
 3109 08f0 3B6A     		ldr	r3, [r7, #32]
 3110 08f2 0133     		adds	r3, r3, #1
 3111 08f4 3B62     		str	r3, [r7, #32]
 3112              	.L173:
 579:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,3-zp,3-zp,zp);
 3113              		.loc 1 579 0 is_stmt 0 discriminator 1
 3114 08f6 7B68     		ldr	r3, [r7, #4]
 3115 08f8 1A68     		ldr	r2, [r3]
 3116 08fa 3B6A     		ldr	r3, [r7, #32]
 3117 08fc 9A42     		cmp	r2, r3
 3118 08fe C1DC     		bgt	.L175
 584:.\tic_tac_all.c **** 		}
 585:.\tic_tac_all.c **** 	}
 586:.\tic_tac_all.c **** 	if (connected == t->size){
 3119              		.loc 1 586 0 is_stmt 1
 3120 0900 7B68     		ldr	r3, [r7, #4]
 3121 0902 1A68     		ldr	r2, [r3]
 3122 0904 FB69     		ldr	r3, [r7, #28]
 3123 0906 9A42     		cmp	r2, r3
 3124 0908 05D1     		bne	.L176
 587:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 3125              		.loc 1 587 0
 3126 090a 7B68     		ldr	r3, [r7, #4]
 3127 090c 9A68     		ldr	r2, [r3, #8]
 3128 090e 7B68     		ldr	r3, [r7, #4]
 3129 0910 1A61     		str	r2, [r3, #16]
 588:.\tic_tac_all.c **** 		return 1; //there is a win
 3130              		.loc 1 588 0
 3131 0912 0123     		movs	r3, #1
 3132 0914 73E0     		b	.L183
 3133              	.L176:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 68


 589:.\tic_tac_all.c **** 	}
 590:.\tic_tac_all.c **** 	if (abs(connected) == 4 - num_filled)
 3134              		.loc 1 590 0
 3135 0916 FB69     		ldr	r3, [r7, #28]
 3136 0918 83EAE372 		eor	r2, r3, r3, asr #31
 3137 091c A2EBE372 		sub	r2, r2, r3, asr #31
 3138 0920 BB69     		ldr	r3, [r7, #24]
 3139 0922 C3F10403 		rsb	r3, r3, #4
 3140 0926 9A42     		cmp	r2, r3
 3141 0928 06D1     		bne	.L177
 591:.\tic_tac_all.c **** 		ai_define_score(ai,connected,empty_places);
 3142              		.loc 1 591 0
 3143 092a 07F10803 		add	r3, r7, #8
 3144 092e 3868     		ldr	r0, [r7]
 3145 0930 F969     		ldr	r1, [r7, #28]
 3146 0932 1A46     		mov	r2, r3
 3147 0934 FFF7FEFF 		bl	ai_define_score
 3148              	.L177:
 592:.\tic_tac_all.c **** 
 593:.\tic_tac_all.c **** 	connected = 0;
 3149              		.loc 1 593 0
 3150 0938 0023     		movs	r3, #0
 3151 093a FB61     		str	r3, [r7, #28]
 594:.\tic_tac_all.c **** 	num_filled = 0;
 3152              		.loc 1 594 0
 3153 093c 0023     		movs	r3, #0
 3154 093e BB61     		str	r3, [r7, #24]
 595:.\tic_tac_all.c **** 	memset(empty_places,0,sizeof empty_places); //clear array
 3155              		.loc 1 595 0
 3156 0940 07F10803 		add	r3, r7, #8
 3157 0944 1846     		mov	r0, r3
 3158 0946 0021     		movs	r1, #0
 3159 0948 1022     		movs	r2, #16
 3160 094a FFF7FEFF 		bl	memset
 596:.\tic_tac_all.c **** 	for (zp = 0; zp < t->size;zp++){
 3161              		.loc 1 596 0
 3162 094e 0023     		movs	r3, #0
 3163 0950 3B62     		str	r3, [r7, #32]
 3164 0952 32E0     		b	.L178
 3165              	.L180:
 597:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,zp,3-zp,zp);
 3166              		.loc 1 597 0
 3167 0954 3B68     		ldr	r3, [r7]
 3168 0956 1C68     		ldr	r4, [r3]
 3169 0958 3B6A     		ldr	r3, [r7, #32]
 3170 095a C3F10303 		rsb	r3, r3, #3
 3171 095e 7868     		ldr	r0, [r7, #4]
 3172 0960 396A     		ldr	r1, [r7, #32]
 3173 0962 1A46     		mov	r2, r3
 3174 0964 3B6A     		ldr	r3, [r7, #32]
 3175 0966 FFF7FEFF 		bl	ttc_get_grid
 3176 096a 0346     		mov	r3, r0
 3177 096c 03FB04F3 		mul	r3, r3, r4
 3178 0970 FA69     		ldr	r2, [r7, #28]
 3179 0972 1344     		add	r3, r3, r2
 3180 0974 FB61     		str	r3, [r7, #28]
 598:.\tic_tac_all.c **** 		if (ttc_get_grid(t,zp,3-zp,zp) == 0){  //empty spot
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 69


 3181              		.loc 1 598 0
 3182 0976 3B6A     		ldr	r3, [r7, #32]
 3183 0978 C3F10303 		rsb	r3, r3, #3
 3184 097c 7868     		ldr	r0, [r7, #4]
 3185 097e 396A     		ldr	r1, [r7, #32]
 3186 0980 1A46     		mov	r2, r3
 3187 0982 3B6A     		ldr	r3, [r7, #32]
 3188 0984 FFF7FEFF 		bl	ttc_get_grid
 3189 0988 0346     		mov	r3, r0
 3190 098a 002B     		cmp	r3, #0
 3191 098c 12D1     		bne	.L179
 599:.\tic_tac_all.c **** 			empty_places[num_filled] = zp + (3-zp)*4 + zp*16; // store loc
 3192              		.loc 1 599 0
 3193 098e 3B6A     		ldr	r3, [r7, #32]
 3194 0990 C3F10303 		rsb	r3, r3, #3
 3195 0994 9A00     		lsls	r2, r3, #2
 3196 0996 3B6A     		ldr	r3, [r7, #32]
 3197 0998 1A44     		add	r2, r2, r3
 3198 099a 3B6A     		ldr	r3, [r7, #32]
 3199 099c 1B01     		lsls	r3, r3, #4
 3200 099e 1A44     		add	r2, r2, r3
 3201 09a0 BB69     		ldr	r3, [r7, #24]
 3202 09a2 9B00     		lsls	r3, r3, #2
 3203 09a4 07F13001 		add	r1, r7, #48
 3204 09a8 0B44     		add	r3, r3, r1
 3205 09aa 43F8282C 		str	r2, [r3, #-40]
 600:.\tic_tac_all.c **** 			num_filled++; //increment
 3206              		.loc 1 600 0
 3207 09ae BB69     		ldr	r3, [r7, #24]
 3208 09b0 0133     		adds	r3, r3, #1
 3209 09b2 BB61     		str	r3, [r7, #24]
 3210              	.L179:
 596:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,zp,3-zp,zp);
 3211              		.loc 1 596 0 discriminator 2
 3212 09b4 3B6A     		ldr	r3, [r7, #32]
 3213 09b6 0133     		adds	r3, r3, #1
 3214 09b8 3B62     		str	r3, [r7, #32]
 3215              	.L178:
 596:.\tic_tac_all.c **** 		connected += ai->player_id*ttc_get_grid(t,zp,3-zp,zp);
 3216              		.loc 1 596 0 is_stmt 0 discriminator 1
 3217 09ba 7B68     		ldr	r3, [r7, #4]
 3218 09bc 1A68     		ldr	r2, [r3]
 3219 09be 3B6A     		ldr	r3, [r7, #32]
 3220 09c0 9A42     		cmp	r2, r3
 3221 09c2 C7DC     		bgt	.L180
 601:.\tic_tac_all.c **** 		}
 602:.\tic_tac_all.c **** 	}
 603:.\tic_tac_all.c **** 	if (connected == t->size){
 3222              		.loc 1 603 0 is_stmt 1
 3223 09c4 7B68     		ldr	r3, [r7, #4]
 3224 09c6 1A68     		ldr	r2, [r3]
 3225 09c8 FB69     		ldr	r3, [r7, #28]
 3226 09ca 9A42     		cmp	r2, r3
 3227 09cc 05D1     		bne	.L181
 604:.\tic_tac_all.c **** 		t->game_not_won = t->player; //when win, set to player id
 3228              		.loc 1 604 0
 3229 09ce 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 70


 3230 09d0 9A68     		ldr	r2, [r3, #8]
 3231 09d2 7B68     		ldr	r3, [r7, #4]
 3232 09d4 1A61     		str	r2, [r3, #16]
 605:.\tic_tac_all.c **** 		return 1; //there is a win
 3233              		.loc 1 605 0
 3234 09d6 0123     		movs	r3, #1
 3235 09d8 11E0     		b	.L183
 3236              	.L181:
 606:.\tic_tac_all.c **** 	}
 607:.\tic_tac_all.c **** 	if (abs(connected) == 4 - num_filled)
 3237              		.loc 1 607 0
 3238 09da FB69     		ldr	r3, [r7, #28]
 3239 09dc 83EAE372 		eor	r2, r3, r3, asr #31
 3240 09e0 A2EBE372 		sub	r2, r2, r3, asr #31
 3241 09e4 BB69     		ldr	r3, [r7, #24]
 3242 09e6 C3F10403 		rsb	r3, r3, #4
 3243 09ea 9A42     		cmp	r2, r3
 3244 09ec 06D1     		bne	.L182
 608:.\tic_tac_all.c **** 		ai_define_score(ai,connected,empty_places);
 3245              		.loc 1 608 0
 3246 09ee 07F10803 		add	r3, r7, #8
 3247 09f2 3868     		ldr	r0, [r7]
 3248 09f4 F969     		ldr	r1, [r7, #28]
 3249 09f6 1A46     		mov	r2, r3
 3250 09f8 FFF7FEFF 		bl	ai_define_score
 3251              	.L182:
 609:.\tic_tac_all.c **** 
 610:.\tic_tac_all.c **** 	return 0;
 3252              		.loc 1 610 0
 3253 09fc 0023     		movs	r3, #0
 3254              	.L183:
 611:.\tic_tac_all.c **** }
 3255              		.loc 1 611 0 discriminator 1
 3256 09fe 1846     		mov	r0, r3
 3257 0a00 3437     		adds	r7, r7, #52
 3258              		.cfi_def_cfa_offset 12
 3259 0a02 BD46     		mov	sp, r7
 3260              		.cfi_def_cfa_register 13
 3261              		@ sp needed
 3262 0a04 90BD     		pop	{r4, r7, pc}
 3263              		.cfi_endproc
 3264              	.LFE78:
 3265              		.size	ai_evaluate_board, .-ai_evaluate_board
 3266 0a06 00BF     		.section	.text.ai_define_score,"ax",%progbits
 3267              		.align	2
 3268              		.global	ai_define_score
 3269              		.thumb
 3270              		.thumb_func
 3271              		.type	ai_define_score, %function
 3272              	ai_define_score:
 3273              	.LFB79:
 612:.\tic_tac_all.c **** 
 613:.\tic_tac_all.c **** int ai_define_score(struct ai* ai,int connected,int empty_places[4]){
 3274              		.loc 1 613 0
 3275              		.cfi_startproc
 3276              		@ args = 0, pretend = 0, frame = 16
 3277              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 71


 3278              		@ link register save eliminated.
 3279 0000 80B4     		push	{r7}
 3280              		.cfi_def_cfa_offset 4
 3281              		.cfi_offset 7, -4
 3282 0002 85B0     		sub	sp, sp, #20
 3283              		.cfi_def_cfa_offset 24
 3284 0004 00AF     		add	r7, sp, #0
 3285              		.cfi_def_cfa_register 7
 3286 0006 F860     		str	r0, [r7, #12]
 3287 0008 B960     		str	r1, [r7, #8]
 3288 000a 7A60     		str	r2, [r7, #4]
 614:.\tic_tac_all.c **** 	//this method defines the score of the AI, place at opt value
 615:.\tic_tac_all.c **** 	if (connected == 3){ //connect our 3 in a row
 3289              		.loc 1 615 0
 3290 000c BB68     		ldr	r3, [r7, #8]
 3291 000e 032B     		cmp	r3, #3
 3292 0010 0FD1     		bne	.L185
 616:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[0]] += 100000; // a very high value
 3293              		.loc 1 616 0
 3294 0012 7B68     		ldr	r3, [r7, #4]
 3295 0014 1868     		ldr	r0, [r3]
 3296 0016 7B68     		ldr	r3, [r7, #4]
 3297 0018 1B68     		ldr	r3, [r3]
 3298 001a FA68     		ldr	r2, [r7, #12]
 3299 001c 9B00     		lsls	r3, r3, #2
 3300 001e 1344     		add	r3, r3, r2
 3301 0020 5B68     		ldr	r3, [r3, #4]
 3302 0022 03F5C332 		add	r2, r3, #99840
 3303 0026 A032     		adds	r2, r2, #160
 3304 0028 F968     		ldr	r1, [r7, #12]
 3305 002a 8300     		lsls	r3, r0, #2
 3306 002c 0B44     		add	r3, r3, r1
 3307 002e 5A60     		str	r2, [r3, #4]
 3308 0030 DEE0     		b	.L186
 3309              	.L185:
 617:.\tic_tac_all.c **** 	}
 618:.\tic_tac_all.c **** 	else if (connected == -3){ //block opponent's 3 in a row
 3310              		.loc 1 618 0
 3311 0032 BB68     		ldr	r3, [r7, #8]
 3312 0034 13F1030F 		cmn	r3, #3
 3313 0038 0FD1     		bne	.L187
 619:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[0]] += 5000; // a very high value
 3314              		.loc 1 619 0
 3315 003a 7B68     		ldr	r3, [r7, #4]
 3316 003c 1868     		ldr	r0, [r3]
 3317 003e 7B68     		ldr	r3, [r7, #4]
 3318 0040 1B68     		ldr	r3, [r3]
 3319 0042 FA68     		ldr	r2, [r7, #12]
 3320 0044 9B00     		lsls	r3, r3, #2
 3321 0046 1344     		add	r3, r3, r2
 3322 0048 5B68     		ldr	r3, [r3, #4]
 3323 004a 03F59C52 		add	r2, r3, #4992
 3324 004e 0832     		adds	r2, r2, #8
 3325 0050 F968     		ldr	r1, [r7, #12]
 3326 0052 8300     		lsls	r3, r0, #2
 3327 0054 0B44     		add	r3, r3, r1
 3328 0056 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 72


 3329 0058 CAE0     		b	.L186
 3330              	.L187:
 620:.\tic_tac_all.c **** 	}
 621:.\tic_tac_all.c **** 	else if (abs(connected) == 2){ //block or connect 2 in a row
 3331              		.loc 1 621 0
 3332 005a BB68     		ldr	r3, [r7, #8]
 3333 005c 002B     		cmp	r3, #0
 3334 005e B8BF     		it	lt
 3335 0060 5B42     		rsblt	r3, r3, #0
 3336 0062 022B     		cmp	r3, #2
 3337 0064 1ED1     		bne	.L188
 622:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[0]] += 200;
 3338              		.loc 1 622 0
 3339 0066 7B68     		ldr	r3, [r7, #4]
 3340 0068 1868     		ldr	r0, [r3]
 3341 006a 7B68     		ldr	r3, [r7, #4]
 3342 006c 1B68     		ldr	r3, [r3]
 3343 006e FA68     		ldr	r2, [r7, #12]
 3344 0070 9B00     		lsls	r3, r3, #2
 3345 0072 1344     		add	r3, r3, r2
 3346 0074 5B68     		ldr	r3, [r3, #4]
 3347 0076 03F1C802 		add	r2, r3, #200
 3348 007a F968     		ldr	r1, [r7, #12]
 3349 007c 8300     		lsls	r3, r0, #2
 3350 007e 0B44     		add	r3, r3, r1
 3351 0080 5A60     		str	r2, [r3, #4]
 623:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[1]] += 200;
 3352              		.loc 1 623 0
 3353 0082 7B68     		ldr	r3, [r7, #4]
 3354 0084 0433     		adds	r3, r3, #4
 3355 0086 1868     		ldr	r0, [r3]
 3356 0088 7B68     		ldr	r3, [r7, #4]
 3357 008a 0433     		adds	r3, r3, #4
 3358 008c 1B68     		ldr	r3, [r3]
 3359 008e FA68     		ldr	r2, [r7, #12]
 3360 0090 9B00     		lsls	r3, r3, #2
 3361 0092 1344     		add	r3, r3, r2
 3362 0094 5B68     		ldr	r3, [r3, #4]
 3363 0096 03F1C802 		add	r2, r3, #200
 3364 009a F968     		ldr	r1, [r7, #12]
 3365 009c 8300     		lsls	r3, r0, #2
 3366 009e 0B44     		add	r3, r3, r1
 3367 00a0 5A60     		str	r2, [r3, #4]
 3368 00a2 A5E0     		b	.L186
 3369              	.L188:
 624:.\tic_tac_all.c **** 	}
 625:.\tic_tac_all.c **** 	else if (connected == 1){ //connect a 1 in a row
 3370              		.loc 1 625 0
 3371 00a4 BB68     		ldr	r3, [r7, #8]
 3372 00a6 012B     		cmp	r3, #1
 3373 00a8 2ED1     		bne	.L189
 626:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[0]] += 50;
 3374              		.loc 1 626 0
 3375 00aa 7B68     		ldr	r3, [r7, #4]
 3376 00ac 1868     		ldr	r0, [r3]
 3377 00ae 7B68     		ldr	r3, [r7, #4]
 3378 00b0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 73


 3379 00b2 FA68     		ldr	r2, [r7, #12]
 3380 00b4 9B00     		lsls	r3, r3, #2
 3381 00b6 1344     		add	r3, r3, r2
 3382 00b8 5B68     		ldr	r3, [r3, #4]
 3383 00ba 03F13202 		add	r2, r3, #50
 3384 00be F968     		ldr	r1, [r7, #12]
 3385 00c0 8300     		lsls	r3, r0, #2
 3386 00c2 0B44     		add	r3, r3, r1
 3387 00c4 5A60     		str	r2, [r3, #4]
 627:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[1]] += 50;
 3388              		.loc 1 627 0
 3389 00c6 7B68     		ldr	r3, [r7, #4]
 3390 00c8 0433     		adds	r3, r3, #4
 3391 00ca 1868     		ldr	r0, [r3]
 3392 00cc 7B68     		ldr	r3, [r7, #4]
 3393 00ce 0433     		adds	r3, r3, #4
 3394 00d0 1B68     		ldr	r3, [r3]
 3395 00d2 FA68     		ldr	r2, [r7, #12]
 3396 00d4 9B00     		lsls	r3, r3, #2
 3397 00d6 1344     		add	r3, r3, r2
 3398 00d8 5B68     		ldr	r3, [r3, #4]
 3399 00da 03F13202 		add	r2, r3, #50
 3400 00de F968     		ldr	r1, [r7, #12]
 3401 00e0 8300     		lsls	r3, r0, #2
 3402 00e2 0B44     		add	r3, r3, r1
 3403 00e4 5A60     		str	r2, [r3, #4]
 628:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[2]] += 50;
 3404              		.loc 1 628 0
 3405 00e6 7B68     		ldr	r3, [r7, #4]
 3406 00e8 0833     		adds	r3, r3, #8
 3407 00ea 1868     		ldr	r0, [r3]
 3408 00ec 7B68     		ldr	r3, [r7, #4]
 3409 00ee 0833     		adds	r3, r3, #8
 3410 00f0 1B68     		ldr	r3, [r3]
 3411 00f2 FA68     		ldr	r2, [r7, #12]
 3412 00f4 9B00     		lsls	r3, r3, #2
 3413 00f6 1344     		add	r3, r3, r2
 3414 00f8 5B68     		ldr	r3, [r3, #4]
 3415 00fa 03F13202 		add	r2, r3, #50
 3416 00fe F968     		ldr	r1, [r7, #12]
 3417 0100 8300     		lsls	r3, r0, #2
 3418 0102 0B44     		add	r3, r3, r1
 3419 0104 5A60     		str	r2, [r3, #4]
 3420 0106 73E0     		b	.L186
 3421              	.L189:
 629:.\tic_tac_all.c **** 	}
 630:.\tic_tac_all.c **** 	else if (connected == 0){ //start a 1 in a row
 3422              		.loc 1 630 0
 3423 0108 BB68     		ldr	r3, [r7, #8]
 3424 010a 002B     		cmp	r3, #0
 3425 010c 3ED1     		bne	.L190
 631:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[0]] += 30;
 3426              		.loc 1 631 0
 3427 010e 7B68     		ldr	r3, [r7, #4]
 3428 0110 1868     		ldr	r0, [r3]
 3429 0112 7B68     		ldr	r3, [r7, #4]
 3430 0114 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 74


 3431 0116 FA68     		ldr	r2, [r7, #12]
 3432 0118 9B00     		lsls	r3, r3, #2
 3433 011a 1344     		add	r3, r3, r2
 3434 011c 5B68     		ldr	r3, [r3, #4]
 3435 011e 03F11E02 		add	r2, r3, #30
 3436 0122 F968     		ldr	r1, [r7, #12]
 3437 0124 8300     		lsls	r3, r0, #2
 3438 0126 0B44     		add	r3, r3, r1
 3439 0128 5A60     		str	r2, [r3, #4]
 632:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[1]] += 30;
 3440              		.loc 1 632 0
 3441 012a 7B68     		ldr	r3, [r7, #4]
 3442 012c 0433     		adds	r3, r3, #4
 3443 012e 1868     		ldr	r0, [r3]
 3444 0130 7B68     		ldr	r3, [r7, #4]
 3445 0132 0433     		adds	r3, r3, #4
 3446 0134 1B68     		ldr	r3, [r3]
 3447 0136 FA68     		ldr	r2, [r7, #12]
 3448 0138 9B00     		lsls	r3, r3, #2
 3449 013a 1344     		add	r3, r3, r2
 3450 013c 5B68     		ldr	r3, [r3, #4]
 3451 013e 03F11E02 		add	r2, r3, #30
 3452 0142 F968     		ldr	r1, [r7, #12]
 3453 0144 8300     		lsls	r3, r0, #2
 3454 0146 0B44     		add	r3, r3, r1
 3455 0148 5A60     		str	r2, [r3, #4]
 633:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[2]] += 30;
 3456              		.loc 1 633 0
 3457 014a 7B68     		ldr	r3, [r7, #4]
 3458 014c 0833     		adds	r3, r3, #8
 3459 014e 1868     		ldr	r0, [r3]
 3460 0150 7B68     		ldr	r3, [r7, #4]
 3461 0152 0833     		adds	r3, r3, #8
 3462 0154 1B68     		ldr	r3, [r3]
 3463 0156 FA68     		ldr	r2, [r7, #12]
 3464 0158 9B00     		lsls	r3, r3, #2
 3465 015a 1344     		add	r3, r3, r2
 3466 015c 5B68     		ldr	r3, [r3, #4]
 3467 015e 03F11E02 		add	r2, r3, #30
 3468 0162 F968     		ldr	r1, [r7, #12]
 3469 0164 8300     		lsls	r3, r0, #2
 3470 0166 0B44     		add	r3, r3, r1
 3471 0168 5A60     		str	r2, [r3, #4]
 634:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[3]] += 30;
 3472              		.loc 1 634 0
 3473 016a 7B68     		ldr	r3, [r7, #4]
 3474 016c 0C33     		adds	r3, r3, #12
 3475 016e 1868     		ldr	r0, [r3]
 3476 0170 7B68     		ldr	r3, [r7, #4]
 3477 0172 0C33     		adds	r3, r3, #12
 3478 0174 1B68     		ldr	r3, [r3]
 3479 0176 FA68     		ldr	r2, [r7, #12]
 3480 0178 9B00     		lsls	r3, r3, #2
 3481 017a 1344     		add	r3, r3, r2
 3482 017c 5B68     		ldr	r3, [r3, #4]
 3483 017e 03F11E02 		add	r2, r3, #30
 3484 0182 F968     		ldr	r1, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 75


 3485 0184 8300     		lsls	r3, r0, #2
 3486 0186 0B44     		add	r3, r3, r1
 3487 0188 5A60     		str	r2, [r3, #4]
 3488 018a 31E0     		b	.L186
 3489              	.L190:
 635:.\tic_tac_all.c **** 	}
 636:.\tic_tac_all.c **** 	else if (connected == -1){ //block a 1 in a row
 3490              		.loc 1 636 0
 3491 018c BB68     		ldr	r3, [r7, #8]
 3492 018e B3F1FF3F 		cmp	r3, #-1
 3493 0192 2DD1     		bne	.L186
 637:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[0]] += 20;
 3494              		.loc 1 637 0
 3495 0194 7B68     		ldr	r3, [r7, #4]
 3496 0196 1868     		ldr	r0, [r3]
 3497 0198 7B68     		ldr	r3, [r7, #4]
 3498 019a 1B68     		ldr	r3, [r3]
 3499 019c FA68     		ldr	r2, [r7, #12]
 3500 019e 9B00     		lsls	r3, r3, #2
 3501 01a0 1344     		add	r3, r3, r2
 3502 01a2 5B68     		ldr	r3, [r3, #4]
 3503 01a4 03F11402 		add	r2, r3, #20
 3504 01a8 F968     		ldr	r1, [r7, #12]
 3505 01aa 8300     		lsls	r3, r0, #2
 3506 01ac 0B44     		add	r3, r3, r1
 3507 01ae 5A60     		str	r2, [r3, #4]
 638:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[1]] += 20;
 3508              		.loc 1 638 0
 3509 01b0 7B68     		ldr	r3, [r7, #4]
 3510 01b2 0433     		adds	r3, r3, #4
 3511 01b4 1868     		ldr	r0, [r3]
 3512 01b6 7B68     		ldr	r3, [r7, #4]
 3513 01b8 0433     		adds	r3, r3, #4
 3514 01ba 1B68     		ldr	r3, [r3]
 3515 01bc FA68     		ldr	r2, [r7, #12]
 3516 01be 9B00     		lsls	r3, r3, #2
 3517 01c0 1344     		add	r3, r3, r2
 3518 01c2 5B68     		ldr	r3, [r3, #4]
 3519 01c4 03F11402 		add	r2, r3, #20
 3520 01c8 F968     		ldr	r1, [r7, #12]
 3521 01ca 8300     		lsls	r3, r0, #2
 3522 01cc 0B44     		add	r3, r3, r1
 3523 01ce 5A60     		str	r2, [r3, #4]
 639:.\tic_tac_all.c **** 		ai->grid_eval[empty_places[2]] += 20;
 3524              		.loc 1 639 0
 3525 01d0 7B68     		ldr	r3, [r7, #4]
 3526 01d2 0833     		adds	r3, r3, #8
 3527 01d4 1868     		ldr	r0, [r3]
 3528 01d6 7B68     		ldr	r3, [r7, #4]
 3529 01d8 0833     		adds	r3, r3, #8
 3530 01da 1B68     		ldr	r3, [r3]
 3531 01dc FA68     		ldr	r2, [r7, #12]
 3532 01de 9B00     		lsls	r3, r3, #2
 3533 01e0 1344     		add	r3, r3, r2
 3534 01e2 5B68     		ldr	r3, [r3, #4]
 3535 01e4 03F11402 		add	r2, r3, #20
 3536 01e8 F968     		ldr	r1, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 76


 3537 01ea 8300     		lsls	r3, r0, #2
 3538 01ec 0B44     		add	r3, r3, r1
 3539 01ee 5A60     		str	r2, [r3, #4]
 3540              	.L186:
 640:.\tic_tac_all.c **** 	}
 641:.\tic_tac_all.c **** 	return 1; // done
 3541              		.loc 1 641 0
 3542 01f0 0123     		movs	r3, #1
 642:.\tic_tac_all.c **** }
 3543              		.loc 1 642 0
 3544 01f2 1846     		mov	r0, r3
 3545 01f4 1437     		adds	r7, r7, #20
 3546              		.cfi_def_cfa_offset 4
 3547 01f6 BD46     		mov	sp, r7
 3548              		.cfi_def_cfa_register 13
 3549              		@ sp needed
 3550 01f8 5DF8047B 		ldr	r7, [sp], #4
 3551              		.cfi_restore 7
 3552              		.cfi_def_cfa_offset 0
 3553 01fc 7047     		bx	lr
 3554              		.cfi_endproc
 3555              	.LFE79:
 3556              		.size	ai_define_score, .-ai_define_score
 3557 01fe 00BF     		.section	.rodata
 3558 00a6 0000     		.align	2
 3559              	.LC9:
 3560 00a8 0A506C61 		.ascii	"\012Player %i grid eval\012\000"
 3560      79657220 
 3560      25692067 
 3560      72696420 
 3560      6576616C 
 3561 00be 0000     		.section	.text.ai_print_grid_eval,"ax",%progbits
 3562              		.align	2
 3563              		.global	ai_print_grid_eval
 3564              		.thumb
 3565              		.thumb_func
 3566              		.type	ai_print_grid_eval, %function
 3567              	ai_print_grid_eval:
 3568              	.LFB80:
 643:.\tic_tac_all.c **** 
 644:.\tic_tac_all.c **** void ai_print_grid_eval(struct ai* ai){
 3569              		.loc 1 644 0
 3570              		.cfi_startproc
 3571              		@ args = 0, pretend = 0, frame = 16
 3572              		@ frame_needed = 1, uses_anonymous_args = 0
 3573 0000 80B5     		push	{r7, lr}
 3574              		.cfi_def_cfa_offset 8
 3575              		.cfi_offset 7, -8
 3576              		.cfi_offset 14, -4
 3577 0002 84B0     		sub	sp, sp, #16
 3578              		.cfi_def_cfa_offset 24
 3579 0004 00AF     		add	r7, sp, #0
 3580              		.cfi_def_cfa_register 7
 3581 0006 7860     		str	r0, [r7, #4]
 645:.\tic_tac_all.c **** 	// this function prints the eval board of the AI
 646:.\tic_tac_all.c ****     // used on terminal, not psoc
 647:.\tic_tac_all.c **** 	int i;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 77


 648:.\tic_tac_all.c **** 	for (i = 0; i < 64; i++){
 3582              		.loc 1 648 0
 3583 0008 0023     		movs	r3, #0
 3584 000a FB60     		str	r3, [r7, #12]
 3585 000c 1BE0     		b	.L193
 3586              	.L196:
 649:.\tic_tac_all.c **** 		if (i % 4 == 0){
 3587              		.loc 1 649 0
 3588 000e FB68     		ldr	r3, [r7, #12]
 3589 0010 03F00303 		and	r3, r3, #3
 3590 0014 002B     		cmp	r3, #0
 3591 0016 02D1     		bne	.L194
 650:.\tic_tac_all.c **** 			printf("\n");
 3592              		.loc 1 650 0
 3593 0018 0A20     		movs	r0, #10
 3594 001a FFF7FEFF 		bl	putchar
 3595              	.L194:
 651:.\tic_tac_all.c **** 		}
 652:.\tic_tac_all.c **** 		if (i % 16 == 0){
 3596              		.loc 1 652 0
 3597 001e FB68     		ldr	r3, [r7, #12]
 3598 0020 03F00F03 		and	r3, r3, #15
 3599 0024 002B     		cmp	r3, #0
 3600 0026 02D1     		bne	.L195
 653:.\tic_tac_all.c **** 			printf("\n");
 3601              		.loc 1 653 0
 3602 0028 0A20     		movs	r0, #10
 3603 002a FFF7FEFF 		bl	putchar
 3604              	.L195:
 654:.\tic_tac_all.c **** 		}
 655:.\tic_tac_all.c **** 		printf("%i ",ai->grid_eval[i]);
 3605              		.loc 1 655 0 discriminator 2
 3606 002e 7A68     		ldr	r2, [r7, #4]
 3607 0030 FB68     		ldr	r3, [r7, #12]
 3608 0032 9B00     		lsls	r3, r3, #2
 3609 0034 1344     		add	r3, r3, r2
 3610 0036 5B68     		ldr	r3, [r3, #4]
 3611 0038 0948     		ldr	r0, .L197
 3612 003a 1946     		mov	r1, r3
 3613 003c FFF7FEFF 		bl	printf
 648:.\tic_tac_all.c **** 		if (i % 4 == 0){
 3614              		.loc 1 648 0 discriminator 2
 3615 0040 FB68     		ldr	r3, [r7, #12]
 3616 0042 0133     		adds	r3, r3, #1
 3617 0044 FB60     		str	r3, [r7, #12]
 3618              	.L193:
 648:.\tic_tac_all.c **** 		if (i % 4 == 0){
 3619              		.loc 1 648 0 is_stmt 0 discriminator 1
 3620 0046 FB68     		ldr	r3, [r7, #12]
 3621 0048 3F2B     		cmp	r3, #63
 3622 004a E0DD     		ble	.L196
 656:.\tic_tac_all.c **** 	}
 657:.\tic_tac_all.c **** 	printf("\nPlayer %i grid eval\n",ai->player_id);
 3623              		.loc 1 657 0 is_stmt 1
 3624 004c 7B68     		ldr	r3, [r7, #4]
 3625 004e 1B68     		ldr	r3, [r3]
 3626 0050 0448     		ldr	r0, .L197+4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 78


 3627 0052 1946     		mov	r1, r3
 3628 0054 FFF7FEFF 		bl	printf
 658:.\tic_tac_all.c **** }
 3629              		.loc 1 658 0
 3630 0058 1037     		adds	r7, r7, #16
 3631              		.cfi_def_cfa_offset 8
 3632 005a BD46     		mov	sp, r7
 3633              		.cfi_def_cfa_register 13
 3634              		@ sp needed
 3635 005c 80BD     		pop	{r7, pc}
 3636              	.L198:
 3637 005e 00BF     		.align	2
 3638              	.L197:
 3639 0060 68000000 		.word	.LC5
 3640 0064 A8000000 		.word	.LC9
 3641              		.cfi_endproc
 3642              	.LFE80:
 3643              		.size	ai_print_grid_eval, .-ai_print_grid_eval
 3644              		.section	.text.ai_play_best_move,"ax",%progbits
 3645              		.align	2
 3646              		.global	ai_play_best_move
 3647              		.thumb
 3648              		.thumb_func
 3649              		.type	ai_play_best_move, %function
 3650              	ai_play_best_move:
 3651              	.LFB81:
 659:.\tic_tac_all.c **** 
 660:.\tic_tac_all.c **** void ai_play_best_move(struct tic_tac_toe* t, struct ai* ai, struct disp_grid_81* disp){
 3652              		.loc 1 660 0
 3653              		.cfi_startproc
 3654              		@ args = 0, pretend = 0, frame = 24
 3655              		@ frame_needed = 1, uses_anonymous_args = 0
 3656 0000 80B5     		push	{r7, lr}
 3657              		.cfi_def_cfa_offset 8
 3658              		.cfi_offset 7, -8
 3659              		.cfi_offset 14, -4
 3660 0002 86B0     		sub	sp, sp, #24
 3661              		.cfi_def_cfa_offset 32
 3662 0004 00AF     		add	r7, sp, #0
 3663              		.cfi_def_cfa_register 7
 3664 0006 F860     		str	r0, [r7, #12]
 3665 0008 B960     		str	r1, [r7, #8]
 3666 000a 7A60     		str	r2, [r7, #4]
 661:.\tic_tac_all.c **** 	int loc = max_array(ai->grid_eval,64);
 3667              		.loc 1 661 0
 3668 000c BB68     		ldr	r3, [r7, #8]
 3669 000e 0433     		adds	r3, r3, #4
 3670 0010 1846     		mov	r0, r3
 3671 0012 4021     		movs	r1, #64
 3672 0014 FFF7FEFF 		bl	max_array
 3673 0018 7861     		str	r0, [r7, #20]
 662:.\tic_tac_all.c **** 	t->grid[loc] = ai->player_id; // place move at maximum value
 3674              		.loc 1 662 0
 3675 001a BB68     		ldr	r3, [r7, #8]
 3676 001c 1A68     		ldr	r2, [r3]
 3677 001e F968     		ldr	r1, [r7, #12]
 3678 0020 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 79


 3679 0022 0433     		adds	r3, r3, #4
 3680 0024 9B00     		lsls	r3, r3, #2
 3681 0026 0B44     		add	r3, r3, r1
 3682 0028 5A60     		str	r2, [r3, #4]
 663:.\tic_tac_all.c ****     disp_grid_ttc_place(disp,loc, ai->player_id); // for PSoC
 3683              		.loc 1 663 0
 3684 002a BB68     		ldr	r3, [r7, #8]
 3685 002c 1B68     		ldr	r3, [r3]
 3686 002e 7868     		ldr	r0, [r7, #4]
 3687 0030 7969     		ldr	r1, [r7, #20]
 3688 0032 1A46     		mov	r2, r3
 3689 0034 FFF7FEFF 		bl	disp_grid_ttc_place
 664:.\tic_tac_all.c **** }
 3690              		.loc 1 664 0
 3691 0038 1837     		adds	r7, r7, #24
 3692              		.cfi_def_cfa_offset 8
 3693 003a BD46     		mov	sp, r7
 3694              		.cfi_def_cfa_register 13
 3695              		@ sp needed
 3696 003c 80BD     		pop	{r7, pc}
 3697              		.cfi_endproc
 3698              	.LFE81:
 3699              		.size	ai_play_best_move, .-ai_play_best_move
 3700 003e 00BF     		.section	.text.tta_ai_algorithm,"ax",%progbits
 3701              		.align	2
 3702              		.global	tta_ai_algorithm
 3703              		.thumb
 3704              		.thumb_func
 3705              		.type	tta_ai_algorithm, %function
 3706              	tta_ai_algorithm:
 3707              	.LFB82:
 665:.\tic_tac_all.c **** 
 666:.\tic_tac_all.c **** void tta_ai_algorithm(struct disp_grid_81* disp,struct tic_tac_ai* tta, int player){
 3708              		.loc 1 666 0
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 16
 3711              		@ frame_needed = 1, uses_anonymous_args = 0
 3712 0000 80B5     		push	{r7, lr}
 3713              		.cfi_def_cfa_offset 8
 3714              		.cfi_offset 7, -8
 3715              		.cfi_offset 14, -4
 3716 0002 84B0     		sub	sp, sp, #16
 3717              		.cfi_def_cfa_offset 24
 3718 0004 00AF     		add	r7, sp, #0
 3719              		.cfi_def_cfa_register 7
 3720 0006 F860     		str	r0, [r7, #12]
 3721 0008 B960     		str	r1, [r7, #8]
 3722 000a 7A60     		str	r2, [r7, #4]
 667:.\tic_tac_all.c **** 	//knowing that the player is an AI, we run AI algoirthm
 668:.\tic_tac_all.c **** 	if (player == 1){
 3723              		.loc 1 668 0
 3724 000c 7B68     		ldr	r3, [r7, #4]
 3725 000e 012B     		cmp	r3, #1
 3726 0010 18D1     		bne	.L201
 669:.\tic_tac_all.c **** 		ai_evaluate_board(&tta->game,&tta->ai_1);
 3727              		.loc 1 669 0
 3728 0012 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 80


 3729 0014 03F58E62 		add	r2, r3, #1136
 3730 0018 BB68     		ldr	r3, [r7, #8]
 3731 001a 0833     		adds	r3, r3, #8
 3732 001c 1046     		mov	r0, r2
 3733 001e 1946     		mov	r1, r3
 3734 0020 FFF7FEFF 		bl	ai_evaluate_board
 670:.\tic_tac_all.c **** 		ai_play_best_move(&tta->game,&tta->ai_1,disp);
 3735              		.loc 1 670 0
 3736 0024 BB68     		ldr	r3, [r7, #8]
 3737 0026 03F58E62 		add	r2, r3, #1136
 3738 002a BB68     		ldr	r3, [r7, #8]
 3739 002c 0833     		adds	r3, r3, #8
 3740 002e 1046     		mov	r0, r2
 3741 0030 1946     		mov	r1, r3
 3742 0032 FA68     		ldr	r2, [r7, #12]
 3743 0034 FFF7FEFF 		bl	ai_play_best_move
 671:.\tic_tac_all.c **** 		ai_print_grid_eval(&tta->ai_1);
 3744              		.loc 1 671 0
 3745 0038 BB68     		ldr	r3, [r7, #8]
 3746 003a 0833     		adds	r3, r3, #8
 3747 003c 1846     		mov	r0, r3
 3748 003e FFF7FEFF 		bl	ai_print_grid_eval
 3749 0042 1EE0     		b	.L200
 3750              	.L201:
 672:.\tic_tac_all.c **** 	}
 673:.\tic_tac_all.c **** 	else if (player == -1){
 3751              		.loc 1 673 0
 3752 0044 7B68     		ldr	r3, [r7, #4]
 3753 0046 B3F1FF3F 		cmp	r3, #-1
 3754 004a 1AD1     		bne	.L200
 674:.\tic_tac_all.c **** 		ai_evaluate_board(&tta->game,&tta->ai_2);	
 3755              		.loc 1 674 0
 3756 004c BB68     		ldr	r3, [r7, #8]
 3757 004e 03F58E62 		add	r2, r3, #1136
 3758 0052 BB68     		ldr	r3, [r7, #8]
 3759 0054 03F50F73 		add	r3, r3, #572
 3760 0058 1046     		mov	r0, r2
 3761 005a 1946     		mov	r1, r3
 3762 005c FFF7FEFF 		bl	ai_evaluate_board
 675:.\tic_tac_all.c **** 		ai_play_best_move(&tta->game,&tta->ai_2,disp);
 3763              		.loc 1 675 0
 3764 0060 BB68     		ldr	r3, [r7, #8]
 3765 0062 03F58E62 		add	r2, r3, #1136
 3766 0066 BB68     		ldr	r3, [r7, #8]
 3767 0068 03F50F73 		add	r3, r3, #572
 3768 006c 1046     		mov	r0, r2
 3769 006e 1946     		mov	r1, r3
 3770 0070 FA68     		ldr	r2, [r7, #12]
 3771 0072 FFF7FEFF 		bl	ai_play_best_move
 676:.\tic_tac_all.c **** 		ai_print_grid_eval(&tta->ai_2);
 3772              		.loc 1 676 0
 3773 0076 BB68     		ldr	r3, [r7, #8]
 3774 0078 03F50F73 		add	r3, r3, #572
 3775 007c 1846     		mov	r0, r3
 3776 007e FFF7FEFF 		bl	ai_print_grid_eval
 3777              	.L200:
 677:.\tic_tac_all.c **** 	}
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 81


 678:.\tic_tac_all.c **** }
 3778              		.loc 1 678 0
 3779 0082 1037     		adds	r7, r7, #16
 3780              		.cfi_def_cfa_offset 8
 3781 0084 BD46     		mov	sp, r7
 3782              		.cfi_def_cfa_register 13
 3783              		@ sp needed
 3784 0086 80BD     		pop	{r7, pc}
 3785              		.cfi_endproc
 3786              	.LFE82:
 3787              		.size	tta_ai_algorithm, .-tta_ai_algorithm
 3788              		.section	.text.tta_step,"ax",%progbits
 3789              		.align	2
 3790              		.global	tta_step
 3791              		.thumb
 3792              		.thumb_func
 3793              		.type	tta_step, %function
 3794              	tta_step:
 3795              	.LFB83:
 679:.\tic_tac_all.c **** 
 680:.\tic_tac_all.c **** void tta_step(struct disp_grid_81* disp,struct tic_tac_ai* tta, int x, int y, int z){
 3796              		.loc 1 680 0
 3797              		.cfi_startproc
 3798              		@ args = 4, pretend = 0, frame = 16
 3799              		@ frame_needed = 1, uses_anonymous_args = 0
 3800 0000 80B5     		push	{r7, lr}
 3801              		.cfi_def_cfa_offset 8
 3802              		.cfi_offset 7, -8
 3803              		.cfi_offset 14, -4
 3804 0002 86B0     		sub	sp, sp, #24
 3805              		.cfi_def_cfa_offset 32
 3806 0004 02AF     		add	r7, sp, #8
 3807              		.cfi_def_cfa 7, 24
 3808 0006 F860     		str	r0, [r7, #12]
 3809 0008 B960     		str	r1, [r7, #8]
 3810 000a 7A60     		str	r2, [r7, #4]
 3811 000c 3B60     		str	r3, [r7]
 681:.\tic_tac_all.c **** 	//this function is a game step
 682:.\tic_tac_all.c **** 	//printf("\nCurrently player %i turn %i", tta->game.player, tta->game.turn);
 683:.\tic_tac_all.c ****     //x,y,z not used if on AI
 684:.\tic_tac_all.c **** 	if (tta->game.player == 1 && tta->is_ai[0] == 1){
 3812              		.loc 1 684 0
 3813 000e BB68     		ldr	r3, [r7, #8]
 3814 0010 D3F87834 		ldr	r3, [r3, #1144]
 3815 0014 012B     		cmp	r3, #1
 3816 0016 0FD1     		bne	.L204
 3817              		.loc 1 684 0 is_stmt 0 discriminator 1
 3818 0018 BB68     		ldr	r3, [r7, #8]
 3819 001a 1B68     		ldr	r3, [r3]
 3820 001c 012B     		cmp	r3, #1
 3821 001e 0BD1     		bne	.L204
 685:.\tic_tac_all.c **** 		tta_ai_algorithm(disp,tta,1);
 3822              		.loc 1 685 0 is_stmt 1
 3823 0020 F868     		ldr	r0, [r7, #12]
 3824 0022 B968     		ldr	r1, [r7, #8]
 3825 0024 0122     		movs	r2, #1
 3826 0026 FFF7FEFF 		bl	tta_ai_algorithm
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 82


 686:.\tic_tac_all.c **** 		ttc_change_player(&tta->game); // change player
 3827              		.loc 1 686 0
 3828 002a BB68     		ldr	r3, [r7, #8]
 3829 002c 03F58E63 		add	r3, r3, #1136
 3830 0030 1846     		mov	r0, r3
 3831 0032 FFF7FEFF 		bl	ttc_change_player
 3832 0036 21E0     		b	.L203
 3833              	.L204:
 687:.\tic_tac_all.c **** 		//ttc_print_grid(&tta->game); //print board
 688:.\tic_tac_all.c **** 	}
 689:.\tic_tac_all.c **** 	else if (tta->game.player == -1 && tta->is_ai[1] == 1){
 3834              		.loc 1 689 0
 3835 0038 BB68     		ldr	r3, [r7, #8]
 3836 003a D3F87834 		ldr	r3, [r3, #1144]
 3837 003e B3F1FF3F 		cmp	r3, #-1
 3838 0042 10D1     		bne	.L206
 3839              		.loc 1 689 0 is_stmt 0 discriminator 1
 3840 0044 BB68     		ldr	r3, [r7, #8]
 3841 0046 5B68     		ldr	r3, [r3, #4]
 3842 0048 012B     		cmp	r3, #1
 3843 004a 0CD1     		bne	.L206
 690:.\tic_tac_all.c **** 		tta_ai_algorithm(disp,tta,-1);
 3844              		.loc 1 690 0 is_stmt 1
 3845 004c F868     		ldr	r0, [r7, #12]
 3846 004e B968     		ldr	r1, [r7, #8]
 3847 0050 4FF0FF32 		mov	r2, #-1
 3848 0054 FFF7FEFF 		bl	tta_ai_algorithm
 691:.\tic_tac_all.c **** 		ttc_change_player(&tta->game); // change player
 3849              		.loc 1 691 0
 3850 0058 BB68     		ldr	r3, [r7, #8]
 3851 005a 03F58E63 		add	r3, r3, #1136
 3852 005e 1846     		mov	r0, r3
 3853 0060 FFF7FEFF 		bl	ttc_change_player
 3854 0064 0AE0     		b	.L203
 3855              	.L206:
 692:.\tic_tac_all.c **** 		//ttc_print_grid(&tta->game); //print board
 693:.\tic_tac_all.c **** 	}
 694:.\tic_tac_all.c **** 	else{
 695:.\tic_tac_all.c **** 		ttc_step(disp,&tta->game,x,y,z); // human player goes
 3856              		.loc 1 695 0
 3857 0066 BB68     		ldr	r3, [r7, #8]
 3858 0068 03F58E62 		add	r2, r3, #1136
 3859 006c BB69     		ldr	r3, [r7, #24]
 3860 006e 0093     		str	r3, [sp]
 3861 0070 F868     		ldr	r0, [r7, #12]
 3862 0072 1146     		mov	r1, r2
 3863 0074 7A68     		ldr	r2, [r7, #4]
 3864 0076 3B68     		ldr	r3, [r7]
 3865 0078 FFF7FEFF 		bl	ttc_step
 3866              	.L203:
 696:.\tic_tac_all.c **** 	}
 697:.\tic_tac_all.c **** }
 3867              		.loc 1 697 0
 3868 007c 1037     		adds	r7, r7, #16
 3869              		.cfi_def_cfa_offset 8
 3870 007e BD46     		mov	sp, r7
 3871              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 83


 3872              		@ sp needed
 3873 0080 80BD     		pop	{r7, pc}
 3874              		.cfi_endproc
 3875              	.LFE83:
 3876              		.size	tta_step, .-tta_step
 3877 0082 00BF     		.bss
 3878              		.align	2
 3879              	ret.7391:
 3880 0000 00000000 		.space	12
 3880      00000000 
 3880      00000000 
 3881              		.text
 3882              	.Letext0:
 3883              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3884              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3885              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3886              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 3887              		.section	.debug_info,"",%progbits
 3888              	.Ldebug_info0:
 3889 0000 45090000 		.4byte	0x945
 3890 0004 0400     		.2byte	0x4
 3891 0006 00000000 		.4byte	.Ldebug_abbrev0
 3892 000a 04       		.byte	0x4
 3893 000b 01       		.uleb128 0x1
 3894 000c E4000000 		.4byte	.LASF67
 3895 0010 01       		.byte	0x1
 3896 0011 C0010000 		.4byte	.LASF68
 3897 0015 FC020000 		.4byte	.LASF69
 3898 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3899 001d 00000000 		.4byte	0
 3900 0021 00000000 		.4byte	.Ldebug_line0
 3901 0025 02       		.uleb128 0x2
 3902 0026 01       		.byte	0x1
 3903 0027 06       		.byte	0x6
 3904 0028 F8010000 		.4byte	.LASF0
 3905 002c 02       		.uleb128 0x2
 3906 002d 01       		.byte	0x1
 3907 002e 08       		.byte	0x8
 3908 002f D0010000 		.4byte	.LASF1
 3909 0033 02       		.uleb128 0x2
 3910 0034 02       		.byte	0x2
 3911 0035 05       		.byte	0x5
 3912 0036 61000000 		.4byte	.LASF2
 3913 003a 02       		.uleb128 0x2
 3914 003b 02       		.byte	0x2
 3915 003c 07       		.byte	0x7
 3916 003d 53020000 		.4byte	.LASF3
 3917 0041 03       		.uleb128 0x3
 3918 0042 DA020000 		.4byte	.LASF9
 3919 0046 02       		.byte	0x2
 3920 0047 3F       		.byte	0x3f
 3921 0048 4C000000 		.4byte	0x4c
 3922 004c 02       		.uleb128 0x2
 3923 004d 04       		.byte	0x4
 3924 004e 05       		.byte	0x5
 3925 004f 70020000 		.4byte	.LASF4
 3926 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 84


 3927 0054 04       		.byte	0x4
 3928 0055 07       		.byte	0x7
 3929 0056 AF020000 		.4byte	.LASF5
 3930 005a 02       		.uleb128 0x2
 3931 005b 08       		.byte	0x8
 3932 005c 05       		.byte	0x5
 3933 005d AE000000 		.4byte	.LASF6
 3934 0061 02       		.uleb128 0x2
 3935 0062 08       		.byte	0x8
 3936 0063 07       		.byte	0x7
 3937 0064 04020000 		.4byte	.LASF7
 3938 0068 04       		.uleb128 0x4
 3939 0069 04       		.byte	0x4
 3940 006a 05       		.byte	0x5
 3941 006b 696E7400 		.ascii	"int\000"
 3942 006f 02       		.uleb128 0x2
 3943 0070 04       		.byte	0x4
 3944 0071 07       		.byte	0x7
 3945 0072 1B020000 		.4byte	.LASF8
 3946 0076 03       		.uleb128 0x3
 3947 0077 35000000 		.4byte	.LASF10
 3948 007b 03       		.byte	0x3
 3949 007c D4       		.byte	0xd4
 3950 007d 6F000000 		.4byte	0x6f
 3951 0081 02       		.uleb128 0x2
 3952 0082 04       		.byte	0x4
 3953 0083 07       		.byte	0x7
 3954 0084 45000000 		.4byte	.LASF11
 3955 0088 02       		.uleb128 0x2
 3956 0089 01       		.byte	0x1
 3957 008a 08       		.byte	0x8
 3958 008b 6B020000 		.4byte	.LASF12
 3959 008f 02       		.uleb128 0x2
 3960 0090 08       		.byte	0x8
 3961 0091 04       		.byte	0x4
 3962 0092 C1020000 		.4byte	.LASF13
 3963 0096 02       		.uleb128 0x2
 3964 0097 04       		.byte	0x4
 3965 0098 04       		.byte	0x4
 3966 0099 96000000 		.4byte	.LASF14
 3967 009d 02       		.uleb128 0x2
 3968 009e 08       		.byte	0x8
 3969 009f 04       		.byte	0x4
 3970 00a0 B4010000 		.4byte	.LASF15
 3971 00a4 03       		.uleb128 0x3
 3972 00a5 91000000 		.4byte	.LASF16
 3973 00a9 01       		.byte	0x1
 3974 00aa 12       		.byte	0x12
 3975 00ab 68000000 		.4byte	0x68
 3976 00af 03       		.uleb128 0x3
 3977 00b0 88020000 		.4byte	.LASF17
 3978 00b4 04       		.byte	0x4
 3979 00b5 2C       		.byte	0x2c
 3980 00b6 41000000 		.4byte	0x41
 3981 00ba 05       		.uleb128 0x5
 3982 00bb 0A000000 		.4byte	.LASF24
 3983 00bf 1401     		.2byte	0x114
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 85


 3984 00c1 01       		.byte	0x1
 3985 00c2 1C       		.byte	0x1c
 3986 00c3 10010000 		.4byte	0x110
 3987 00c7 06       		.uleb128 0x6
 3988 00c8 D5020000 		.4byte	.LASF18
 3989 00cc 01       		.byte	0x1
 3990 00cd 1D       		.byte	0x1d
 3991 00ce 68000000 		.4byte	0x68
 3992 00d2 00       		.byte	0
 3993 00d3 06       		.uleb128 0x6
 3994 00d4 00000000 		.4byte	.LASF19
 3995 00d8 01       		.byte	0x1
 3996 00d9 1E       		.byte	0x1e
 3997 00da 68000000 		.4byte	0x68
 3998 00de 04       		.byte	0x4
 3999 00df 06       		.uleb128 0x6
 4000 00e0 BF030000 		.4byte	.LASF20
 4001 00e4 01       		.byte	0x1
 4002 00e5 20       		.byte	0x20
 4003 00e6 68000000 		.4byte	0x68
 4004 00ea 08       		.byte	0x8
 4005 00eb 06       		.uleb128 0x6
 4006 00ec 32020000 		.4byte	.LASF21
 4007 00f0 01       		.byte	0x1
 4008 00f1 21       		.byte	0x21
 4009 00f2 68000000 		.4byte	0x68
 4010 00f6 0C       		.byte	0xc
 4011 00f7 06       		.uleb128 0x6
 4012 00f8 EB010000 		.4byte	.LASF22
 4013 00fc 01       		.byte	0x1
 4014 00fd 22       		.byte	0x22
 4015 00fe 68000000 		.4byte	0x68
 4016 0102 10       		.byte	0x10
 4017 0103 06       		.uleb128 0x6
 4018 0104 4E020000 		.4byte	.LASF23
 4019 0108 01       		.byte	0x1
 4020 0109 24       		.byte	0x24
 4021 010a 10010000 		.4byte	0x110
 4022 010e 14       		.byte	0x14
 4023 010f 00       		.byte	0
 4024 0110 07       		.uleb128 0x7
 4025 0111 68000000 		.4byte	0x68
 4026 0115 20010000 		.4byte	0x120
 4027 0119 08       		.uleb128 0x8
 4028 011a 81000000 		.4byte	0x81
 4029 011e 3F       		.byte	0x3f
 4030 011f 00       		.byte	0
 4031 0120 09       		.uleb128 0x9
 4032 0121 616900   		.ascii	"ai\000"
 4033 0124 3402     		.2byte	0x234
 4034 0126 01       		.byte	0x1
 4035 0127 4101     		.2byte	0x141
 4036 0129 56010000 		.4byte	0x156
 4037 012d 0A       		.uleb128 0xa
 4038 012e AA010000 		.4byte	.LASF25
 4039 0132 01       		.byte	0x1
 4040 0133 4201     		.2byte	0x142
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 86


 4041 0135 68000000 		.4byte	0x68
 4042 0139 00       		.byte	0
 4043 013a 0A       		.uleb128 0xa
 4044 013b A0010000 		.4byte	.LASF26
 4045 013f 01       		.byte	0x1
 4046 0140 4301     		.2byte	0x143
 4047 0142 10010000 		.4byte	0x110
 4048 0146 04       		.byte	0x4
 4049 0147 0B       		.uleb128 0xb
 4050 0148 16000000 		.4byte	.LASF27
 4051 014c 01       		.byte	0x1
 4052 014d 4401     		.2byte	0x144
 4053 014f 56010000 		.4byte	0x156
 4054 0153 0401     		.2byte	0x104
 4055 0155 00       		.byte	0
 4056 0156 07       		.uleb128 0x7
 4057 0157 68000000 		.4byte	0x68
 4058 015b 66010000 		.4byte	0x166
 4059 015f 08       		.uleb128 0x8
 4060 0160 81000000 		.4byte	0x81
 4061 0164 4B       		.byte	0x4b
 4062 0165 00       		.byte	0
 4063 0166 0C       		.uleb128 0xc
 4064 0167 E4020000 		.4byte	.LASF28
 4065 016b 8405     		.2byte	0x584
 4066 016d 01       		.byte	0x1
 4067 016e 4701     		.2byte	0x147
 4068 0170 AB010000 		.4byte	0x1ab
 4069 0174 0A       		.uleb128 0xa
 4070 0175 B9030000 		.4byte	.LASF29
 4071 0179 01       		.byte	0x1
 4072 017a 4801     		.2byte	0x148
 4073 017c AB010000 		.4byte	0x1ab
 4074 0180 00       		.byte	0
 4075 0181 0A       		.uleb128 0xa
 4076 0182 83010000 		.4byte	.LASF30
 4077 0186 01       		.byte	0x1
 4078 0187 4901     		.2byte	0x149
 4079 0189 20010000 		.4byte	0x120
 4080 018d 08       		.byte	0x8
 4081 018e 0B       		.uleb128 0xb
 4082 018f 79000000 		.4byte	.LASF31
 4083 0193 01       		.byte	0x1
 4084 0194 4A01     		.2byte	0x14a
 4085 0196 20010000 		.4byte	0x120
 4086 019a 3C02     		.2byte	0x23c
 4087 019c 0B       		.uleb128 0xb
 4088 019d 66020000 		.4byte	.LASF32
 4089 01a1 01       		.byte	0x1
 4090 01a2 4B01     		.2byte	0x14b
 4091 01a4 BA000000 		.4byte	0xba
 4092 01a8 7004     		.2byte	0x470
 4093 01aa 00       		.byte	0
 4094 01ab 07       		.uleb128 0x7
 4095 01ac 68000000 		.4byte	0x68
 4096 01b0 BB010000 		.4byte	0x1bb
 4097 01b4 08       		.uleb128 0x8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 87


 4098 01b5 81000000 		.4byte	0x81
 4099 01b9 01       		.byte	0x1
 4100 01ba 00       		.byte	0
 4101 01bb 0D       		.uleb128 0xd
 4102 01bc 45020000 		.4byte	.LASF37
 4103 01c0 01       		.byte	0x1
 4104 01c1 28       		.byte	0x28
 4105 01c2 00000000 		.4byte	.LFB63
 4106 01c6 6C000000 		.4byte	.LFE63-.LFB63
 4107 01ca 01       		.uleb128 0x1
 4108 01cb 9C       		.byte	0x9c
 4109 01cc 1D020000 		.4byte	0x21d
 4110 01d0 0E       		.uleb128 0xe
 4111 01d1 7400     		.ascii	"t\000"
 4112 01d3 01       		.byte	0x1
 4113 01d4 28       		.byte	0x28
 4114 01d5 1D020000 		.4byte	0x21d
 4115 01d9 02       		.uleb128 0x2
 4116 01da 91       		.byte	0x91
 4117 01db 6C       		.sleb128 -20
 4118 01dc 0F       		.uleb128 0xf
 4119 01dd D5020000 		.4byte	.LASF18
 4120 01e1 01       		.byte	0x1
 4121 01e2 28       		.byte	0x28
 4122 01e3 68000000 		.4byte	0x68
 4123 01e7 02       		.uleb128 0x2
 4124 01e8 91       		.byte	0x91
 4125 01e9 68       		.sleb128 -24
 4126 01ea 0F       		.uleb128 0xf
 4127 01eb 00000000 		.4byte	.LASF19
 4128 01ef 01       		.byte	0x1
 4129 01f0 28       		.byte	0x28
 4130 01f1 68000000 		.4byte	0x68
 4131 01f5 02       		.uleb128 0x2
 4132 01f6 91       		.byte	0x91
 4133 01f7 64       		.sleb128 -28
 4134 01f8 10       		.uleb128 0x10
 4135 01f9 1E000000 		.4byte	.LBB2
 4136 01fd 32000000 		.4byte	.LBE2-.LBB2
 4137 0201 11       		.uleb128 0x11
 4138 0202 6900     		.ascii	"i\000"
 4139 0204 01       		.byte	0x1
 4140 0205 2C       		.byte	0x2c
 4141 0206 68000000 		.4byte	0x68
 4142 020a 02       		.uleb128 0x2
 4143 020b 91       		.byte	0x91
 4144 020c 74       		.sleb128 -12
 4145 020d 11       		.uleb128 0x11
 4146 020e 6E756D00 		.ascii	"num\000"
 4147 0212 01       		.byte	0x1
 4148 0213 2D       		.byte	0x2d
 4149 0214 68000000 		.4byte	0x68
 4150 0218 02       		.uleb128 0x2
 4151 0219 91       		.byte	0x91
 4152 021a 70       		.sleb128 -16
 4153 021b 00       		.byte	0
 4154 021c 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 88


 4155 021d 12       		.uleb128 0x12
 4156 021e 04       		.byte	0x4
 4157 021f BA000000 		.4byte	0xba
 4158 0223 13       		.uleb128 0x13
 4159 0224 DE010000 		.4byte	.LASF34
 4160 0228 01       		.byte	0x1
 4161 0229 37       		.byte	0x37
 4162 022a 68000000 		.4byte	0x68
 4163 022e 00000000 		.4byte	.LFB64
 4164 0232 3A000000 		.4byte	.LFE64-.LFB64
 4165 0236 01       		.uleb128 0x1
 4166 0237 9C       		.byte	0x9c
 4167 0238 89020000 		.4byte	0x289
 4168 023c 0E       		.uleb128 0xe
 4169 023d 7400     		.ascii	"t\000"
 4170 023f 01       		.byte	0x1
 4171 0240 37       		.byte	0x37
 4172 0241 1D020000 		.4byte	0x21d
 4173 0245 02       		.uleb128 0x2
 4174 0246 91       		.byte	0x91
 4175 0247 6C       		.sleb128 -20
 4176 0248 0E       		.uleb128 0xe
 4177 0249 7800     		.ascii	"x\000"
 4178 024b 01       		.byte	0x1
 4179 024c 37       		.byte	0x37
 4180 024d 68000000 		.4byte	0x68
 4181 0251 02       		.uleb128 0x2
 4182 0252 91       		.byte	0x91
 4183 0253 68       		.sleb128 -24
 4184 0254 0E       		.uleb128 0xe
 4185 0255 7900     		.ascii	"y\000"
 4186 0257 01       		.byte	0x1
 4187 0258 37       		.byte	0x37
 4188 0259 68000000 		.4byte	0x68
 4189 025d 02       		.uleb128 0x2
 4190 025e 91       		.byte	0x91
 4191 025f 64       		.sleb128 -28
 4192 0260 0E       		.uleb128 0xe
 4193 0261 7A00     		.ascii	"z\000"
 4194 0263 01       		.byte	0x1
 4195 0264 37       		.byte	0x37
 4196 0265 68000000 		.4byte	0x68
 4197 0269 02       		.uleb128 0x2
 4198 026a 91       		.byte	0x91
 4199 026b 60       		.sleb128 -32
 4200 026c 0F       		.uleb128 0xf
 4201 026d 6B000000 		.4byte	.LASF33
 4202 0271 01       		.byte	0x1
 4203 0272 37       		.byte	0x37
 4204 0273 68000000 		.4byte	0x68
 4205 0277 02       		.uleb128 0x2
 4206 0278 91       		.byte	0x91
 4207 0279 00       		.sleb128 0
 4208 027a 11       		.uleb128 0x11
 4209 027b 6C6F6300 		.ascii	"loc\000"
 4210 027f 01       		.byte	0x1
 4211 0280 38       		.byte	0x38
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 89


 4212 0281 68000000 		.4byte	0x68
 4213 0285 02       		.uleb128 0x2
 4214 0286 91       		.byte	0x91
 4215 0287 74       		.sleb128 -12
 4216 0288 00       		.byte	0
 4217 0289 13       		.uleb128 0x13
 4218 028a EF020000 		.4byte	.LASF35
 4219 028e 01       		.byte	0x1
 4220 028f 3E       		.byte	0x3e
 4221 0290 68000000 		.4byte	0x68
 4222 0294 00000000 		.4byte	.LFB65
 4223 0298 3A000000 		.4byte	.LFE65-.LFB65
 4224 029c 01       		.uleb128 0x1
 4225 029d 9C       		.byte	0x9c
 4226 029e EF020000 		.4byte	0x2ef
 4227 02a2 0E       		.uleb128 0xe
 4228 02a3 7400     		.ascii	"t\000"
 4229 02a5 01       		.byte	0x1
 4230 02a6 3E       		.byte	0x3e
 4231 02a7 1D020000 		.4byte	0x21d
 4232 02ab 02       		.uleb128 0x2
 4233 02ac 91       		.byte	0x91
 4234 02ad 6C       		.sleb128 -20
 4235 02ae 0E       		.uleb128 0xe
 4236 02af 7800     		.ascii	"x\000"
 4237 02b1 01       		.byte	0x1
 4238 02b2 3E       		.byte	0x3e
 4239 02b3 68000000 		.4byte	0x68
 4240 02b7 02       		.uleb128 0x2
 4241 02b8 91       		.byte	0x91
 4242 02b9 68       		.sleb128 -24
 4243 02ba 0E       		.uleb128 0xe
 4244 02bb 7900     		.ascii	"y\000"
 4245 02bd 01       		.byte	0x1
 4246 02be 3E       		.byte	0x3e
 4247 02bf 68000000 		.4byte	0x68
 4248 02c3 02       		.uleb128 0x2
 4249 02c4 91       		.byte	0x91
 4250 02c5 64       		.sleb128 -28
 4251 02c6 0E       		.uleb128 0xe
 4252 02c7 7A00     		.ascii	"z\000"
 4253 02c9 01       		.byte	0x1
 4254 02ca 3E       		.byte	0x3e
 4255 02cb 68000000 		.4byte	0x68
 4256 02cf 02       		.uleb128 0x2
 4257 02d0 91       		.byte	0x91
 4258 02d1 60       		.sleb128 -32
 4259 02d2 11       		.uleb128 0x11
 4260 02d3 6C6F6300 		.ascii	"loc\000"
 4261 02d7 01       		.byte	0x1
 4262 02d8 3F       		.byte	0x3f
 4263 02d9 68000000 		.4byte	0x68
 4264 02dd 02       		.uleb128 0x2
 4265 02de 91       		.byte	0x91
 4266 02df 74       		.sleb128 -12
 4267 02e0 11       		.uleb128 0x11
 4268 02e1 72657400 		.ascii	"ret\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 90


 4269 02e5 01       		.byte	0x1
 4270 02e6 40       		.byte	0x40
 4271 02e7 68000000 		.4byte	0x68
 4272 02eb 02       		.uleb128 0x2
 4273 02ec 91       		.byte	0x91
 4274 02ed 70       		.sleb128 -16
 4275 02ee 00       		.byte	0
 4276 02ef 14       		.uleb128 0x14
 4277 02f0 BC000000 		.4byte	.LASF36
 4278 02f4 01       		.byte	0x1
 4279 02f5 45       		.byte	0x45
 4280 02f6 68000000 		.4byte	0x68
 4281 02fa 00000000 		.4byte	.LFB66
 4282 02fe A0000000 		.4byte	.LFE66-.LFB66
 4283 0302 01       		.uleb128 0x1
 4284 0303 9C       		.byte	0x9c
 4285 0304 47030000 		.4byte	0x347
 4286 0308 0E       		.uleb128 0xe
 4287 0309 7400     		.ascii	"t\000"
 4288 030b 01       		.byte	0x1
 4289 030c 45       		.byte	0x45
 4290 030d 1D020000 		.4byte	0x21d
 4291 0311 02       		.uleb128 0x2
 4292 0312 91       		.byte	0x91
 4293 0313 6C       		.sleb128 -20
 4294 0314 0E       		.uleb128 0xe
 4295 0315 7800     		.ascii	"x\000"
 4296 0317 01       		.byte	0x1
 4297 0318 45       		.byte	0x45
 4298 0319 68000000 		.4byte	0x68
 4299 031d 02       		.uleb128 0x2
 4300 031e 91       		.byte	0x91
 4301 031f 68       		.sleb128 -24
 4302 0320 0E       		.uleb128 0xe
 4303 0321 7900     		.ascii	"y\000"
 4304 0323 01       		.byte	0x1
 4305 0324 45       		.byte	0x45
 4306 0325 68000000 		.4byte	0x68
 4307 0329 02       		.uleb128 0x2
 4308 032a 91       		.byte	0x91
 4309 032b 64       		.sleb128 -28
 4310 032c 0E       		.uleb128 0xe
 4311 032d 7A00     		.ascii	"z\000"
 4312 032f 01       		.byte	0x1
 4313 0330 45       		.byte	0x45
 4314 0331 68000000 		.4byte	0x68
 4315 0335 02       		.uleb128 0x2
 4316 0336 91       		.byte	0x91
 4317 0337 60       		.sleb128 -32
 4318 0338 11       		.uleb128 0x11
 4319 0339 6C6F6300 		.ascii	"loc\000"
 4320 033d 01       		.byte	0x1
 4321 033e 46       		.byte	0x46
 4322 033f 68000000 		.4byte	0x68
 4323 0343 02       		.uleb128 0x2
 4324 0344 91       		.byte	0x91
 4325 0345 74       		.sleb128 -12
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 91


 4326 0346 00       		.byte	0
 4327 0347 0D       		.uleb128 0xd
 4328 0348 CF030000 		.4byte	.LASF38
 4329 034c 01       		.byte	0x1
 4330 034d 59       		.byte	0x59
 4331 034e 00000000 		.4byte	.LFB67
 4332 0352 3E000000 		.4byte	.LFE67-.LFB67
 4333 0356 01       		.uleb128 0x1
 4334 0357 9C       		.byte	0x9c
 4335 0358 69030000 		.4byte	0x369
 4336 035c 0E       		.uleb128 0xe
 4337 035d 7400     		.ascii	"t\000"
 4338 035f 01       		.byte	0x1
 4339 0360 59       		.byte	0x59
 4340 0361 1D020000 		.4byte	0x21d
 4341 0365 02       		.uleb128 0x2
 4342 0366 91       		.byte	0x91
 4343 0367 74       		.sleb128 -12
 4344 0368 00       		.byte	0
 4345 0369 15       		.uleb128 0x15
 4346 036a 91010000 		.4byte	.LASF39
 4347 036e 01       		.byte	0x1
 4348 036f 63       		.byte	0x63
 4349 0370 A2030000 		.4byte	0x3a2
 4350 0374 00000000 		.4byte	.LFB68
 4351 0378 5C000000 		.4byte	.LFE68-.LFB68
 4352 037c 01       		.uleb128 0x1
 4353 037d 9C       		.byte	0x9c
 4354 037e A2030000 		.4byte	0x3a2
 4355 0382 16       		.uleb128 0x16
 4356 0383 1C000000 		.4byte	.LASF40
 4357 0387 01       		.byte	0x1
 4358 0388 66       		.byte	0x66
 4359 0389 A8030000 		.4byte	0x3a8
 4360 038d 02       		.uleb128 0x2
 4361 038e 91       		.byte	0x91
 4362 038f 74       		.sleb128 -12
 4363 0390 11       		.uleb128 0x11
 4364 0391 72657400 		.ascii	"ret\000"
 4365 0395 01       		.byte	0x1
 4366 0396 68       		.byte	0x68
 4367 0397 B8030000 		.4byte	0x3b8
 4368 039b 05       		.uleb128 0x5
 4369 039c 03       		.byte	0x3
 4370 039d 00000000 		.4byte	ret.7391
 4371 03a1 00       		.byte	0
 4372 03a2 12       		.uleb128 0x12
 4373 03a3 04       		.byte	0x4
 4374 03a4 68000000 		.4byte	0x68
 4375 03a8 07       		.uleb128 0x7
 4376 03a9 88000000 		.4byte	0x88
 4377 03ad B8030000 		.4byte	0x3b8
 4378 03b1 08       		.uleb128 0x8
 4379 03b2 81000000 		.4byte	0x81
 4380 03b6 02       		.byte	0x2
 4381 03b7 00       		.byte	0
 4382 03b8 07       		.uleb128 0x7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 92


 4383 03b9 68000000 		.4byte	0x68
 4384 03bd C8030000 		.4byte	0x3c8
 4385 03c1 08       		.uleb128 0x8
 4386 03c2 81000000 		.4byte	0x81
 4387 03c6 02       		.byte	0x2
 4388 03c7 00       		.byte	0
 4389 03c8 17       		.uleb128 0x17
 4390 03c9 79020000 		.4byte	.LASF41
 4391 03cd 01       		.byte	0x1
 4392 03ce 71       		.byte	0x71
 4393 03cf 00000000 		.4byte	.LFB69
 4394 03d3 88000000 		.4byte	.LFE69-.LFB69
 4395 03d7 01       		.uleb128 0x1
 4396 03d8 9C       		.byte	0x9c
 4397 03d9 F6030000 		.4byte	0x3f6
 4398 03dd 0E       		.uleb128 0xe
 4399 03de 7400     		.ascii	"t\000"
 4400 03e0 01       		.byte	0x1
 4401 03e1 71       		.byte	0x71
 4402 03e2 1D020000 		.4byte	0x21d
 4403 03e6 02       		.uleb128 0x2
 4404 03e7 91       		.byte	0x91
 4405 03e8 6C       		.sleb128 -20
 4406 03e9 11       		.uleb128 0x11
 4407 03ea 6900     		.ascii	"i\000"
 4408 03ec 01       		.byte	0x1
 4409 03ed 73       		.byte	0x73
 4410 03ee 68000000 		.4byte	0x68
 4411 03f2 02       		.uleb128 0x2
 4412 03f3 91       		.byte	0x91
 4413 03f4 74       		.sleb128 -12
 4414 03f5 00       		.byte	0
 4415 03f6 14       		.uleb128 0x14
 4416 03f7 71030000 		.4byte	.LASF42
 4417 03fb 01       		.byte	0x1
 4418 03fc 84       		.byte	0x84
 4419 03fd 68000000 		.4byte	0x68
 4420 0401 00000000 		.4byte	.LFB70
 4421 0405 7C040000 		.4byte	.LFE70-.LFB70
 4422 0409 01       		.uleb128 0x1
 4423 040a 9C       		.byte	0x9c
 4424 040b 5B040000 		.4byte	0x45b
 4425 040f 0E       		.uleb128 0xe
 4426 0410 7400     		.ascii	"t\000"
 4427 0412 01       		.byte	0x1
 4428 0413 84       		.byte	0x84
 4429 0414 1D020000 		.4byte	0x21d
 4430 0418 02       		.uleb128 0x2
 4431 0419 91       		.byte	0x91
 4432 041a 5C       		.sleb128 -36
 4433 041b 11       		.uleb128 0x11
 4434 041c 7800     		.ascii	"x\000"
 4435 041e 01       		.byte	0x1
 4436 041f 86       		.byte	0x86
 4437 0420 68000000 		.4byte	0x68
 4438 0424 02       		.uleb128 0x2
 4439 0425 91       		.byte	0x91
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 93


 4440 0426 74       		.sleb128 -12
 4441 0427 11       		.uleb128 0x11
 4442 0428 7900     		.ascii	"y\000"
 4443 042a 01       		.byte	0x1
 4444 042b 86       		.byte	0x86
 4445 042c 68000000 		.4byte	0x68
 4446 0430 02       		.uleb128 0x2
 4447 0431 91       		.byte	0x91
 4448 0432 70       		.sleb128 -16
 4449 0433 11       		.uleb128 0x11
 4450 0434 7A00     		.ascii	"z\000"
 4451 0436 01       		.byte	0x1
 4452 0437 86       		.byte	0x86
 4453 0438 68000000 		.4byte	0x68
 4454 043c 02       		.uleb128 0x2
 4455 043d 91       		.byte	0x91
 4456 043e 6C       		.sleb128 -20
 4457 043f 11       		.uleb128 0x11
 4458 0440 7A7000   		.ascii	"zp\000"
 4459 0443 01       		.byte	0x1
 4460 0444 86       		.byte	0x86
 4461 0445 68000000 		.4byte	0x68
 4462 0449 02       		.uleb128 0x2
 4463 044a 91       		.byte	0x91
 4464 044b 68       		.sleb128 -24
 4465 044c 16       		.uleb128 0x16
 4466 044d 87000000 		.4byte	.LASF43
 4467 0451 01       		.byte	0x1
 4468 0452 87       		.byte	0x87
 4469 0453 68000000 		.4byte	0x68
 4470 0457 02       		.uleb128 0x2
 4471 0458 91       		.byte	0x91
 4472 0459 64       		.sleb128 -28
 4473 045a 00       		.byte	0
 4474 045b 14       		.uleb128 0x14
 4475 045c 88010000 		.4byte	.LASF44
 4476 0460 01       		.byte	0x1
 4477 0461 FC       		.byte	0xfc
 4478 0462 68000000 		.4byte	0x68
 4479 0466 00000000 		.4byte	.LFB71
 4480 046a 72000000 		.4byte	.LFE71-.LFB71
 4481 046e 01       		.uleb128 0x1
 4482 046f 9C       		.byte	0x9c
 4483 0470 D0040000 		.4byte	0x4d0
 4484 0474 18       		.uleb128 0x18
 4485 0475 7F030000 		.4byte	.LASF64
 4486 0479 0F       		.uleb128 0xf
 4487 047a 40020000 		.4byte	.LASF45
 4488 047e 01       		.byte	0x1
 4489 047f FC       		.byte	0xfc
 4490 0480 D0040000 		.4byte	0x4d0
 4491 0484 02       		.uleb128 0x2
 4492 0485 91       		.byte	0x91
 4493 0486 6C       		.sleb128 -20
 4494 0487 0E       		.uleb128 0xe
 4495 0488 7400     		.ascii	"t\000"
 4496 048a 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 94


 4497 048b FC       		.byte	0xfc
 4498 048c 1D020000 		.4byte	0x21d
 4499 0490 02       		.uleb128 0x2
 4500 0491 91       		.byte	0x91
 4501 0492 68       		.sleb128 -24
 4502 0493 0E       		.uleb128 0xe
 4503 0494 7800     		.ascii	"x\000"
 4504 0496 01       		.byte	0x1
 4505 0497 FC       		.byte	0xfc
 4506 0498 68000000 		.4byte	0x68
 4507 049c 02       		.uleb128 0x2
 4508 049d 91       		.byte	0x91
 4509 049e 64       		.sleb128 -28
 4510 049f 0E       		.uleb128 0xe
 4511 04a0 7900     		.ascii	"y\000"
 4512 04a2 01       		.byte	0x1
 4513 04a3 FC       		.byte	0xfc
 4514 04a4 68000000 		.4byte	0x68
 4515 04a8 02       		.uleb128 0x2
 4516 04a9 91       		.byte	0x91
 4517 04aa 60       		.sleb128 -32
 4518 04ab 0E       		.uleb128 0xe
 4519 04ac 7A00     		.ascii	"z\000"
 4520 04ae 01       		.byte	0x1
 4521 04af FC       		.byte	0xfc
 4522 04b0 68000000 		.4byte	0x68
 4523 04b4 02       		.uleb128 0x2
 4524 04b5 91       		.byte	0x91
 4525 04b6 00       		.sleb128 0
 4526 04b7 10       		.uleb128 0x10
 4527 04b8 20000000 		.4byte	.LBB3
 4528 04bc 48000000 		.4byte	.LBE3-.LBB3
 4529 04c0 19       		.uleb128 0x19
 4530 04c1 9B030000 		.4byte	.LASF61
 4531 04c5 01       		.byte	0x1
 4532 04c6 0501     		.2byte	0x105
 4533 04c8 68000000 		.4byte	0x68
 4534 04cc 1A       		.uleb128 0x1a
 4535 04cd 00       		.byte	0
 4536 04ce 00       		.byte	0
 4537 04cf 00       		.byte	0
 4538 04d0 12       		.uleb128 0x12
 4539 04d1 04       		.byte	0x4
 4540 04d2 74040000 		.4byte	0x474
 4541 04d6 1B       		.uleb128 0x1b
 4542 04d7 D6000000 		.4byte	.LASF46
 4543 04db 01       		.byte	0x1
 4544 04dc 0D01     		.2byte	0x10d
 4545 04de 68000000 		.4byte	0x68
 4546 04e2 00000000 		.4byte	.LFB72
 4547 04e6 2C000000 		.4byte	.LFE72-.LFB72
 4548 04ea 01       		.uleb128 0x1
 4549 04eb 9C       		.byte	0x9c
 4550 04ec FE040000 		.4byte	0x4fe
 4551 04f0 1C       		.uleb128 0x1c
 4552 04f1 7400     		.ascii	"t\000"
 4553 04f3 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 95


 4554 04f4 0D01     		.2byte	0x10d
 4555 04f6 1D020000 		.4byte	0x21d
 4556 04fa 02       		.uleb128 0x2
 4557 04fb 91       		.byte	0x91
 4558 04fc 74       		.sleb128 -12
 4559 04fd 00       		.byte	0
 4560 04fe 1D       		.uleb128 0x1d
 4561 04ff 7E000000 		.4byte	.LASF47
 4562 0503 01       		.byte	0x1
 4563 0504 1601     		.2byte	0x116
 4564 0506 00000000 		.4byte	.LFB73
 4565 050a 1E000000 		.4byte	.LFE73-.LFB73
 4566 050e 01       		.uleb128 0x1
 4567 050f 9C       		.byte	0x9c
 4568 0510 22050000 		.4byte	0x522
 4569 0514 1C       		.uleb128 0x1c
 4570 0515 7400     		.ascii	"t\000"
 4571 0517 01       		.byte	0x1
 4572 0518 1601     		.2byte	0x116
 4573 051a 1D020000 		.4byte	0x21d
 4574 051e 02       		.uleb128 0x2
 4575 051f 91       		.byte	0x91
 4576 0520 74       		.sleb128 -12
 4577 0521 00       		.byte	0
 4578 0522 1B       		.uleb128 0x1b
 4579 0523 28020000 		.4byte	.LASF48
 4580 0527 01       		.byte	0x1
 4581 0528 1E01     		.2byte	0x11e
 4582 052a 68000000 		.4byte	0x68
 4583 052e 00000000 		.4byte	.LFB74
 4584 0532 D8000000 		.4byte	.LFE74-.LFB74
 4585 0536 01       		.uleb128 0x1
 4586 0537 9C       		.byte	0x9c
 4587 0538 95050000 		.4byte	0x595
 4588 053c 1E       		.uleb128 0x1e
 4589 053d 95030000 		.4byte	.LASF49
 4590 0541 01       		.byte	0x1
 4591 0542 1E01     		.2byte	0x11e
 4592 0544 A2030000 		.4byte	0x3a2
 4593 0548 02       		.uleb128 0x2
 4594 0549 91       		.byte	0x91
 4595 054a 64       		.sleb128 -28
 4596 054b 1E       		.uleb128 0x1e
 4597 054c D5020000 		.4byte	.LASF18
 4598 0550 01       		.byte	0x1
 4599 0551 1E01     		.2byte	0x11e
 4600 0553 76000000 		.4byte	0x76
 4601 0557 02       		.uleb128 0x2
 4602 0558 91       		.byte	0x91
 4603 0559 60       		.sleb128 -32
 4604 055a 1F       		.uleb128 0x1f
 4605 055b 6900     		.ascii	"i\000"
 4606 055d 01       		.byte	0x1
 4607 055e 2101     		.2byte	0x121
 4608 0560 76000000 		.4byte	0x76
 4609 0564 02       		.uleb128 0x2
 4610 0565 91       		.byte	0x91
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 96


 4611 0566 74       		.sleb128 -12
 4612 0567 1F       		.uleb128 0x1f
 4613 0568 6D617800 		.ascii	"max\000"
 4614 056c 01       		.byte	0x1
 4615 056d 2201     		.2byte	0x122
 4616 056f 68000000 		.4byte	0x68
 4617 0573 02       		.uleb128 0x2
 4618 0574 91       		.byte	0x91
 4619 0575 70       		.sleb128 -16
 4620 0576 20       		.uleb128 0x20
 4621 0577 CC000000 		.4byte	.LASF50
 4622 057b 01       		.byte	0x1
 4623 057c 2301     		.2byte	0x123
 4624 057e A2030000 		.4byte	0x3a2
 4625 0582 02       		.uleb128 0x2
 4626 0583 91       		.byte	0x91
 4627 0584 68       		.sleb128 -24
 4628 0585 20       		.uleb128 0x20
 4629 0586 AF030000 		.4byte	.LASF51
 4630 058a 01       		.byte	0x1
 4631 058b 2401     		.2byte	0x124
 4632 058d 68000000 		.4byte	0x68
 4633 0591 02       		.uleb128 0x2
 4634 0592 91       		.byte	0x91
 4635 0593 6C       		.sleb128 -20
 4636 0594 00       		.byte	0
 4637 0595 1D       		.uleb128 0x1d
 4638 0596 C6030000 		.4byte	.LASF52
 4639 059a 01       		.byte	0x1
 4640 059b 4E01     		.2byte	0x14e
 4641 059d 00000000 		.4byte	.LFB75
 4642 05a1 30000000 		.4byte	.LFE75-.LFB75
 4643 05a5 01       		.uleb128 0x1
 4644 05a6 9C       		.byte	0x9c
 4645 05a7 BA050000 		.4byte	0x5ba
 4646 05ab 1C       		.uleb128 0x1c
 4647 05ac 616900   		.ascii	"ai\000"
 4648 05af 01       		.byte	0x1
 4649 05b0 4E01     		.2byte	0x14e
 4650 05b2 BA050000 		.4byte	0x5ba
 4651 05b6 02       		.uleb128 0x2
 4652 05b7 91       		.byte	0x91
 4653 05b8 74       		.sleb128 -12
 4654 05b9 00       		.byte	0
 4655 05ba 12       		.uleb128 0x12
 4656 05bb 04       		.byte	0x4
 4657 05bc 20010000 		.4byte	0x120
 4658 05c0 1D       		.uleb128 0x1d
 4659 05c1 71000000 		.4byte	.LASF53
 4660 05c5 01       		.byte	0x1
 4661 05c6 5301     		.2byte	0x153
 4662 05c8 00000000 		.4byte	.LFB76
 4663 05cc 20000000 		.4byte	.LFE76-.LFB76
 4664 05d0 01       		.uleb128 0x1
 4665 05d1 9C       		.byte	0x9c
 4666 05d2 12060000 		.4byte	0x612
 4667 05d6 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 97


 4668 05d7 616900   		.ascii	"ai\000"
 4669 05da 01       		.byte	0x1
 4670 05db 5301     		.2byte	0x153
 4671 05dd BA050000 		.4byte	0x5ba
 4672 05e1 02       		.uleb128 0x2
 4673 05e2 91       		.byte	0x91
 4674 05e3 74       		.sleb128 -12
 4675 05e4 1E       		.uleb128 0x1e
 4676 05e5 AA010000 		.4byte	.LASF25
 4677 05e9 01       		.byte	0x1
 4678 05ea 5301     		.2byte	0x153
 4679 05ec 68000000 		.4byte	0x68
 4680 05f0 02       		.uleb128 0x2
 4681 05f1 91       		.byte	0x91
 4682 05f2 70       		.sleb128 -16
 4683 05f3 1E       		.uleb128 0x1e
 4684 05f4 D5020000 		.4byte	.LASF18
 4685 05f8 01       		.byte	0x1
 4686 05f9 5301     		.2byte	0x153
 4687 05fb 68000000 		.4byte	0x68
 4688 05ff 02       		.uleb128 0x2
 4689 0600 91       		.byte	0x91
 4690 0601 6C       		.sleb128 -20
 4691 0602 1E       		.uleb128 0x1e
 4692 0603 00000000 		.4byte	.LASF19
 4693 0607 01       		.byte	0x1
 4694 0608 5301     		.2byte	0x153
 4695 060a 68000000 		.4byte	0x68
 4696 060e 02       		.uleb128 0x2
 4697 060f 91       		.byte	0x91
 4698 0610 68       		.sleb128 -24
 4699 0611 00       		.byte	0
 4700 0612 1D       		.uleb128 0x1d
 4701 0613 3C000000 		.4byte	.LASF54
 4702 0617 01       		.byte	0x1
 4703 0618 5801     		.2byte	0x158
 4704 061a 00000000 		.4byte	.LFB77
 4705 061e 70000000 		.4byte	.LFE77-.LFB77
 4706 0622 01       		.uleb128 0x1
 4707 0623 9C       		.byte	0x9c
 4708 0624 73060000 		.4byte	0x673
 4709 0628 1C       		.uleb128 0x1c
 4710 0629 616900   		.ascii	"ai\000"
 4711 062c 01       		.byte	0x1
 4712 062d 5801     		.2byte	0x158
 4713 062f 73060000 		.4byte	0x673
 4714 0633 02       		.uleb128 0x2
 4715 0634 91       		.byte	0x91
 4716 0635 74       		.sleb128 -12
 4717 0636 1E       		.uleb128 0x1e
 4718 0637 D5020000 		.4byte	.LASF18
 4719 063b 01       		.byte	0x1
 4720 063c 5801     		.2byte	0x158
 4721 063e 68000000 		.4byte	0x68
 4722 0642 02       		.uleb128 0x2
 4723 0643 91       		.byte	0x91
 4724 0644 70       		.sleb128 -16
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 98


 4725 0645 1E       		.uleb128 0x1e
 4726 0646 00000000 		.4byte	.LASF19
 4727 064a 01       		.byte	0x1
 4728 064b 5801     		.2byte	0x158
 4729 064d 68000000 		.4byte	0x68
 4730 0651 02       		.uleb128 0x2
 4731 0652 91       		.byte	0x91
 4732 0653 6C       		.sleb128 -20
 4733 0654 1E       		.uleb128 0x1e
 4734 0655 21000000 		.4byte	.LASF55
 4735 0659 01       		.byte	0x1
 4736 065a 5901     		.2byte	0x159
 4737 065c A4000000 		.4byte	0xa4
 4738 0660 02       		.uleb128 0x2
 4739 0661 91       		.byte	0x91
 4740 0662 68       		.sleb128 -24
 4741 0663 1E       		.uleb128 0x1e
 4742 0664 37020000 		.4byte	.LASF56
 4743 0668 01       		.byte	0x1
 4744 0669 5901     		.2byte	0x159
 4745 066b A4000000 		.4byte	0xa4
 4746 066f 02       		.uleb128 0x2
 4747 0670 91       		.byte	0x91
 4748 0671 00       		.sleb128 0
 4749 0672 00       		.byte	0
 4750 0673 12       		.uleb128 0x12
 4751 0674 04       		.byte	0x4
 4752 0675 66010000 		.4byte	0x166
 4753 0679 1B       		.uleb128 0x1b
 4754 067a 90020000 		.4byte	.LASF57
 4755 067e 01       		.byte	0x1
 4756 067f 7001     		.2byte	0x170
 4757 0681 68000000 		.4byte	0x68
 4758 0685 00000000 		.4byte	.LFB78
 4759 0689 060A0000 		.4byte	.LFE78-.LFB78
 4760 068d 01       		.uleb128 0x1
 4761 068e 9C       		.byte	0x9c
 4762 068f 8F070000 		.4byte	0x78f
 4763 0693 1C       		.uleb128 0x1c
 4764 0694 7400     		.ascii	"t\000"
 4765 0696 01       		.byte	0x1
 4766 0697 7001     		.2byte	0x170
 4767 0699 1D020000 		.4byte	0x21d
 4768 069d 02       		.uleb128 0x2
 4769 069e 91       		.byte	0x91
 4770 069f 44       		.sleb128 -60
 4771 06a0 1C       		.uleb128 0x1c
 4772 06a1 616900   		.ascii	"ai\000"
 4773 06a4 01       		.byte	0x1
 4774 06a5 7001     		.2byte	0x170
 4775 06a7 BA050000 		.4byte	0x5ba
 4776 06ab 02       		.uleb128 0x2
 4777 06ac 91       		.byte	0x91
 4778 06ad 40       		.sleb128 -64
 4779 06ae 1F       		.uleb128 0x1f
 4780 06af 7800     		.ascii	"x\000"
 4781 06b1 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 99


 4782 06b2 7301     		.2byte	0x173
 4783 06b4 68000000 		.4byte	0x68
 4784 06b8 02       		.uleb128 0x2
 4785 06b9 91       		.byte	0x91
 4786 06ba 6C       		.sleb128 -20
 4787 06bb 1F       		.uleb128 0x1f
 4788 06bc 7900     		.ascii	"y\000"
 4789 06be 01       		.byte	0x1
 4790 06bf 7301     		.2byte	0x173
 4791 06c1 68000000 		.4byte	0x68
 4792 06c5 02       		.uleb128 0x2
 4793 06c6 91       		.byte	0x91
 4794 06c7 68       		.sleb128 -24
 4795 06c8 1F       		.uleb128 0x1f
 4796 06c9 7A00     		.ascii	"z\000"
 4797 06cb 01       		.byte	0x1
 4798 06cc 7301     		.2byte	0x173
 4799 06ce 68000000 		.4byte	0x68
 4800 06d2 02       		.uleb128 0x2
 4801 06d3 91       		.byte	0x91
 4802 06d4 64       		.sleb128 -28
 4803 06d5 1F       		.uleb128 0x1f
 4804 06d6 7A7000   		.ascii	"zp\000"
 4805 06d9 01       		.byte	0x1
 4806 06da 7301     		.2byte	0x173
 4807 06dc 68000000 		.4byte	0x68
 4808 06e0 02       		.uleb128 0x2
 4809 06e1 91       		.byte	0x91
 4810 06e2 60       		.sleb128 -32
 4811 06e3 20       		.uleb128 0x20
 4812 06e4 87000000 		.4byte	.LASF43
 4813 06e8 01       		.byte	0x1
 4814 06e9 7401     		.2byte	0x174
 4815 06eb 68000000 		.4byte	0x68
 4816 06ef 02       		.uleb128 0x2
 4817 06f0 91       		.byte	0x91
 4818 06f1 5C       		.sleb128 -36
 4819 06f2 20       		.uleb128 0x20
 4820 06f3 A2020000 		.4byte	.LASF58
 4821 06f7 01       		.byte	0x1
 4822 06f8 7501     		.2byte	0x175
 4823 06fa 8F070000 		.4byte	0x78f
 4824 06fe 02       		.uleb128 0x2
 4825 06ff 91       		.byte	0x91
 4826 0700 48       		.sleb128 -56
 4827 0701 20       		.uleb128 0x20
 4828 0702 2A000000 		.4byte	.LASF59
 4829 0706 01       		.byte	0x1
 4830 0707 7601     		.2byte	0x176
 4831 0709 68000000 		.4byte	0x68
 4832 070d 02       		.uleb128 0x2
 4833 070e 91       		.byte	0x91
 4834 070f 58       		.sleb128 -40
 4835 0710 21       		.uleb128 0x21
 4836 0711 61030000 		.4byte	.LASF60
 4837 0715 01       		.byte	0x1
 4838 0716 8C01     		.2byte	0x18c
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 100


 4839 0718 68000000 		.4byte	0x68
 4840 071c 22070000 		.4byte	0x722
 4841 0720 1A       		.uleb128 0x1a
 4842 0721 00       		.byte	0
 4843 0722 10       		.uleb128 0x10
 4844 0723 16000000 		.4byte	.LBB4
 4845 0727 CA060000 		.4byte	.LBE4-.LBB4
 4846 072b 21       		.uleb128 0x21
 4847 072c 61030000 		.4byte	.LASF60
 4848 0730 01       		.byte	0x1
 4849 0731 8C01     		.2byte	0x18c
 4850 0733 68000000 		.4byte	0x68
 4851 0737 3D070000 		.4byte	0x73d
 4852 073b 1A       		.uleb128 0x1a
 4853 073c 00       		.byte	0
 4854 073d 22       		.uleb128 0x22
 4855 073e C4000000 		.4byte	.LBB5
 4856 0742 0E000000 		.4byte	.LBE5-.LBB5
 4857 0746 59070000 		.4byte	0x759
 4858 074a 19       		.uleb128 0x19
 4859 074b 61030000 		.4byte	.LASF60
 4860 074f 01       		.byte	0x1
 4861 0750 8C01     		.2byte	0x18c
 4862 0752 68000000 		.4byte	0x68
 4863 0756 1A       		.uleb128 0x1a
 4864 0757 00       		.byte	0
 4865 0758 00       		.byte	0
 4866 0759 22       		.uleb128 0x22
 4867 075a E8000000 		.4byte	.LBB6
 4868 075e B6000000 		.4byte	.LBE6-.LBB6
 4869 0762 75070000 		.4byte	0x775
 4870 0766 19       		.uleb128 0x19
 4871 0767 61030000 		.4byte	.LASF60
 4872 076b 01       		.byte	0x1
 4873 076c 8C01     		.2byte	0x18c
 4874 076e 68000000 		.4byte	0x68
 4875 0772 1A       		.uleb128 0x1a
 4876 0773 00       		.byte	0
 4877 0774 00       		.byte	0
 4878 0775 10       		.uleb128 0x10
 4879 0776 B4010000 		.4byte	.LBB7
 4880 077a B4000000 		.4byte	.LBE7-.LBB7
 4881 077e 19       		.uleb128 0x19
 4882 077f 61030000 		.4byte	.LASF60
 4883 0783 01       		.byte	0x1
 4884 0784 8C01     		.2byte	0x18c
 4885 0786 68000000 		.4byte	0x68
 4886 078a 1A       		.uleb128 0x1a
 4887 078b 00       		.byte	0
 4888 078c 00       		.byte	0
 4889 078d 00       		.byte	0
 4890 078e 00       		.byte	0
 4891 078f 07       		.uleb128 0x7
 4892 0790 68000000 		.4byte	0x68
 4893 0794 9F070000 		.4byte	0x79f
 4894 0798 08       		.uleb128 0x8
 4895 0799 81000000 		.4byte	0x81
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 101


 4896 079d 03       		.byte	0x3
 4897 079e 00       		.byte	0
 4898 079f 23       		.uleb128 0x23
 4899 07a0 61030000 		.4byte	.LASF60
 4900 07a4 01       		.byte	0x1
 4901 07a5 6502     		.2byte	0x265
 4902 07a7 68000000 		.4byte	0x68
 4903 07ab 00000000 		.4byte	.LFB79
 4904 07af FE010000 		.4byte	.LFE79-.LFB79
 4905 07b3 01       		.uleb128 0x1
 4906 07b4 9C       		.byte	0x9c
 4907 07b5 E6070000 		.4byte	0x7e6
 4908 07b9 1C       		.uleb128 0x1c
 4909 07ba 616900   		.ascii	"ai\000"
 4910 07bd 01       		.byte	0x1
 4911 07be 6502     		.2byte	0x265
 4912 07c0 BA050000 		.4byte	0x5ba
 4913 07c4 02       		.uleb128 0x2
 4914 07c5 91       		.byte	0x91
 4915 07c6 74       		.sleb128 -12
 4916 07c7 1E       		.uleb128 0x1e
 4917 07c8 87000000 		.4byte	.LASF43
 4918 07cc 01       		.byte	0x1
 4919 07cd 6502     		.2byte	0x265
 4920 07cf 68000000 		.4byte	0x68
 4921 07d3 02       		.uleb128 0x2
 4922 07d4 91       		.byte	0x91
 4923 07d5 70       		.sleb128 -16
 4924 07d6 1E       		.uleb128 0x1e
 4925 07d7 A2020000 		.4byte	.LASF58
 4926 07db 01       		.byte	0x1
 4927 07dc 6502     		.2byte	0x265
 4928 07de A2030000 		.4byte	0x3a2
 4929 07e2 02       		.uleb128 0x2
 4930 07e3 91       		.byte	0x91
 4931 07e4 6C       		.sleb128 -20
 4932 07e5 00       		.byte	0
 4933 07e6 1D       		.uleb128 0x1d
 4934 07e7 4E000000 		.4byte	.LASF62
 4935 07eb 01       		.byte	0x1
 4936 07ec 8402     		.2byte	0x284
 4937 07ee 00000000 		.4byte	.LFB80
 4938 07f2 68000000 		.4byte	.LFE80-.LFB80
 4939 07f6 01       		.uleb128 0x1
 4940 07f7 9C       		.byte	0x9c
 4941 07f8 18080000 		.4byte	0x818
 4942 07fc 1C       		.uleb128 0x1c
 4943 07fd 616900   		.ascii	"ai\000"
 4944 0800 01       		.byte	0x1
 4945 0801 8402     		.2byte	0x284
 4946 0803 BA050000 		.4byte	0x5ba
 4947 0807 02       		.uleb128 0x2
 4948 0808 91       		.byte	0x91
 4949 0809 6C       		.sleb128 -20
 4950 080a 1F       		.uleb128 0x1f
 4951 080b 6900     		.ascii	"i\000"
 4952 080d 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 102


 4953 080e 8702     		.2byte	0x287
 4954 0810 68000000 		.4byte	0x68
 4955 0814 02       		.uleb128 0x2
 4956 0815 91       		.byte	0x91
 4957 0816 74       		.sleb128 -12
 4958 0817 00       		.byte	0
 4959 0818 1D       		.uleb128 0x1d
 4960 0819 9C000000 		.4byte	.LASF63
 4961 081d 01       		.byte	0x1
 4962 081e 9402     		.2byte	0x294
 4963 0820 00000000 		.4byte	.LFB81
 4964 0824 3E000000 		.4byte	.LFE81-.LFB81
 4965 0828 01       		.uleb128 0x1
 4966 0829 9C       		.byte	0x9c
 4967 082a 7B080000 		.4byte	0x87b
 4968 082e 1C       		.uleb128 0x1c
 4969 082f 7400     		.ascii	"t\000"
 4970 0831 01       		.byte	0x1
 4971 0832 9402     		.2byte	0x294
 4972 0834 1D020000 		.4byte	0x21d
 4973 0838 02       		.uleb128 0x2
 4974 0839 91       		.byte	0x91
 4975 083a 6C       		.sleb128 -20
 4976 083b 1C       		.uleb128 0x1c
 4977 083c 616900   		.ascii	"ai\000"
 4978 083f 01       		.byte	0x1
 4979 0840 9402     		.2byte	0x294
 4980 0842 BA050000 		.4byte	0x5ba
 4981 0846 02       		.uleb128 0x2
 4982 0847 91       		.byte	0x91
 4983 0848 68       		.sleb128 -24
 4984 0849 18       		.uleb128 0x18
 4985 084a 7F030000 		.4byte	.LASF64
 4986 084e 1E       		.uleb128 0x1e
 4987 084f 40020000 		.4byte	.LASF45
 4988 0853 01       		.byte	0x1
 4989 0854 9402     		.2byte	0x294
 4990 0856 7B080000 		.4byte	0x87b
 4991 085a 02       		.uleb128 0x2
 4992 085b 91       		.byte	0x91
 4993 085c 64       		.sleb128 -28
 4994 085d 1F       		.uleb128 0x1f
 4995 085e 6C6F6300 		.ascii	"loc\000"
 4996 0862 01       		.byte	0x1
 4997 0863 9502     		.2byte	0x295
 4998 0865 68000000 		.4byte	0x68
 4999 0869 02       		.uleb128 0x2
 5000 086a 91       		.byte	0x91
 5001 086b 74       		.sleb128 -12
 5002 086c 19       		.uleb128 0x19
 5003 086d 9B030000 		.4byte	.LASF61
 5004 0871 01       		.byte	0x1
 5005 0872 0501     		.2byte	0x105
 5006 0874 68000000 		.4byte	0x68
 5007 0878 1A       		.uleb128 0x1a
 5008 0879 00       		.byte	0
 5009 087a 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 103


 5010 087b 12       		.uleb128 0x12
 5011 087c 04       		.byte	0x4
 5012 087d 49080000 		.4byte	0x849
 5013 0881 1D       		.uleb128 0x1d
 5014 0882 72010000 		.4byte	.LASF65
 5015 0886 01       		.byte	0x1
 5016 0887 9A02     		.2byte	0x29a
 5017 0889 00000000 		.4byte	.LFB82
 5018 088d 88000000 		.4byte	.LFE82-.LFB82
 5019 0891 01       		.uleb128 0x1
 5020 0892 9C       		.byte	0x9c
 5021 0893 CA080000 		.4byte	0x8ca
 5022 0897 18       		.uleb128 0x18
 5023 0898 7F030000 		.4byte	.LASF64
 5024 089c 1E       		.uleb128 0x1e
 5025 089d 40020000 		.4byte	.LASF45
 5026 08a1 01       		.byte	0x1
 5027 08a2 9A02     		.2byte	0x29a
 5028 08a4 CA080000 		.4byte	0x8ca
 5029 08a8 02       		.uleb128 0x2
 5030 08a9 91       		.byte	0x91
 5031 08aa 74       		.sleb128 -12
 5032 08ab 1C       		.uleb128 0x1c
 5033 08ac 74746100 		.ascii	"tta\000"
 5034 08b0 01       		.byte	0x1
 5035 08b1 9A02     		.2byte	0x29a
 5036 08b3 73060000 		.4byte	0x673
 5037 08b7 02       		.uleb128 0x2
 5038 08b8 91       		.byte	0x91
 5039 08b9 70       		.sleb128 -16
 5040 08ba 1E       		.uleb128 0x1e
 5041 08bb BF030000 		.4byte	.LASF20
 5042 08bf 01       		.byte	0x1
 5043 08c0 9A02     		.2byte	0x29a
 5044 08c2 68000000 		.4byte	0x68
 5045 08c6 02       		.uleb128 0x2
 5046 08c7 91       		.byte	0x91
 5047 08c8 6C       		.sleb128 -20
 5048 08c9 00       		.byte	0
 5049 08ca 12       		.uleb128 0x12
 5050 08cb 04       		.byte	0x4
 5051 08cc 97080000 		.4byte	0x897
 5052 08d0 1D       		.uleb128 0x1d
 5053 08d1 8C030000 		.4byte	.LASF66
 5054 08d5 01       		.byte	0x1
 5055 08d6 A802     		.2byte	0x2a8
 5056 08d8 00000000 		.4byte	.LFB83
 5057 08dc 82000000 		.4byte	.LFE83-.LFB83
 5058 08e0 01       		.uleb128 0x1
 5059 08e1 9C       		.byte	0x9c
 5060 08e2 31090000 		.4byte	0x931
 5061 08e6 18       		.uleb128 0x18
 5062 08e7 7F030000 		.4byte	.LASF64
 5063 08eb 1E       		.uleb128 0x1e
 5064 08ec 40020000 		.4byte	.LASF45
 5065 08f0 01       		.byte	0x1
 5066 08f1 A802     		.2byte	0x2a8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 104


 5067 08f3 31090000 		.4byte	0x931
 5068 08f7 02       		.uleb128 0x2
 5069 08f8 91       		.byte	0x91
 5070 08f9 74       		.sleb128 -12
 5071 08fa 1C       		.uleb128 0x1c
 5072 08fb 74746100 		.ascii	"tta\000"
 5073 08ff 01       		.byte	0x1
 5074 0900 A802     		.2byte	0x2a8
 5075 0902 73060000 		.4byte	0x673
 5076 0906 02       		.uleb128 0x2
 5077 0907 91       		.byte	0x91
 5078 0908 70       		.sleb128 -16
 5079 0909 1C       		.uleb128 0x1c
 5080 090a 7800     		.ascii	"x\000"
 5081 090c 01       		.byte	0x1
 5082 090d A802     		.2byte	0x2a8
 5083 090f 68000000 		.4byte	0x68
 5084 0913 02       		.uleb128 0x2
 5085 0914 91       		.byte	0x91
 5086 0915 6C       		.sleb128 -20
 5087 0916 1C       		.uleb128 0x1c
 5088 0917 7900     		.ascii	"y\000"
 5089 0919 01       		.byte	0x1
 5090 091a A802     		.2byte	0x2a8
 5091 091c 68000000 		.4byte	0x68
 5092 0920 02       		.uleb128 0x2
 5093 0921 91       		.byte	0x91
 5094 0922 68       		.sleb128 -24
 5095 0923 1C       		.uleb128 0x1c
 5096 0924 7A00     		.ascii	"z\000"
 5097 0926 01       		.byte	0x1
 5098 0927 A802     		.2byte	0x2a8
 5099 0929 68000000 		.4byte	0x68
 5100 092d 02       		.uleb128 0x2
 5101 092e 91       		.byte	0x91
 5102 092f 00       		.sleb128 0
 5103 0930 00       		.byte	0
 5104 0931 12       		.uleb128 0x12
 5105 0932 04       		.byte	0x4
 5106 0933 E6080000 		.4byte	0x8e6
 5107 0937 24       		.uleb128 0x24
 5108 0938 C8020000 		.4byte	.LASF70
 5109 093c 05       		.byte	0x5
 5110 093d 5506     		.2byte	0x655
 5111 093f 43090000 		.4byte	0x943
 5112 0943 25       		.uleb128 0x25
 5113 0944 AF000000 		.4byte	0xaf
 5114 0948 00       		.byte	0
 5115              		.section	.debug_abbrev,"",%progbits
 5116              	.Ldebug_abbrev0:
 5117 0000 01       		.uleb128 0x1
 5118 0001 11       		.uleb128 0x11
 5119 0002 01       		.byte	0x1
 5120 0003 25       		.uleb128 0x25
 5121 0004 0E       		.uleb128 0xe
 5122 0005 13       		.uleb128 0x13
 5123 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 105


 5124 0007 03       		.uleb128 0x3
 5125 0008 0E       		.uleb128 0xe
 5126 0009 1B       		.uleb128 0x1b
 5127 000a 0E       		.uleb128 0xe
 5128 000b 55       		.uleb128 0x55
 5129 000c 17       		.uleb128 0x17
 5130 000d 11       		.uleb128 0x11
 5131 000e 01       		.uleb128 0x1
 5132 000f 10       		.uleb128 0x10
 5133 0010 17       		.uleb128 0x17
 5134 0011 00       		.byte	0
 5135 0012 00       		.byte	0
 5136 0013 02       		.uleb128 0x2
 5137 0014 24       		.uleb128 0x24
 5138 0015 00       		.byte	0
 5139 0016 0B       		.uleb128 0xb
 5140 0017 0B       		.uleb128 0xb
 5141 0018 3E       		.uleb128 0x3e
 5142 0019 0B       		.uleb128 0xb
 5143 001a 03       		.uleb128 0x3
 5144 001b 0E       		.uleb128 0xe
 5145 001c 00       		.byte	0
 5146 001d 00       		.byte	0
 5147 001e 03       		.uleb128 0x3
 5148 001f 16       		.uleb128 0x16
 5149 0020 00       		.byte	0
 5150 0021 03       		.uleb128 0x3
 5151 0022 0E       		.uleb128 0xe
 5152 0023 3A       		.uleb128 0x3a
 5153 0024 0B       		.uleb128 0xb
 5154 0025 3B       		.uleb128 0x3b
 5155 0026 0B       		.uleb128 0xb
 5156 0027 49       		.uleb128 0x49
 5157 0028 13       		.uleb128 0x13
 5158 0029 00       		.byte	0
 5159 002a 00       		.byte	0
 5160 002b 04       		.uleb128 0x4
 5161 002c 24       		.uleb128 0x24
 5162 002d 00       		.byte	0
 5163 002e 0B       		.uleb128 0xb
 5164 002f 0B       		.uleb128 0xb
 5165 0030 3E       		.uleb128 0x3e
 5166 0031 0B       		.uleb128 0xb
 5167 0032 03       		.uleb128 0x3
 5168 0033 08       		.uleb128 0x8
 5169 0034 00       		.byte	0
 5170 0035 00       		.byte	0
 5171 0036 05       		.uleb128 0x5
 5172 0037 13       		.uleb128 0x13
 5173 0038 01       		.byte	0x1
 5174 0039 03       		.uleb128 0x3
 5175 003a 0E       		.uleb128 0xe
 5176 003b 0B       		.uleb128 0xb
 5177 003c 05       		.uleb128 0x5
 5178 003d 3A       		.uleb128 0x3a
 5179 003e 0B       		.uleb128 0xb
 5180 003f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 106


 5181 0040 0B       		.uleb128 0xb
 5182 0041 01       		.uleb128 0x1
 5183 0042 13       		.uleb128 0x13
 5184 0043 00       		.byte	0
 5185 0044 00       		.byte	0
 5186 0045 06       		.uleb128 0x6
 5187 0046 0D       		.uleb128 0xd
 5188 0047 00       		.byte	0
 5189 0048 03       		.uleb128 0x3
 5190 0049 0E       		.uleb128 0xe
 5191 004a 3A       		.uleb128 0x3a
 5192 004b 0B       		.uleb128 0xb
 5193 004c 3B       		.uleb128 0x3b
 5194 004d 0B       		.uleb128 0xb
 5195 004e 49       		.uleb128 0x49
 5196 004f 13       		.uleb128 0x13
 5197 0050 38       		.uleb128 0x38
 5198 0051 0B       		.uleb128 0xb
 5199 0052 00       		.byte	0
 5200 0053 00       		.byte	0
 5201 0054 07       		.uleb128 0x7
 5202 0055 01       		.uleb128 0x1
 5203 0056 01       		.byte	0x1
 5204 0057 49       		.uleb128 0x49
 5205 0058 13       		.uleb128 0x13
 5206 0059 01       		.uleb128 0x1
 5207 005a 13       		.uleb128 0x13
 5208 005b 00       		.byte	0
 5209 005c 00       		.byte	0
 5210 005d 08       		.uleb128 0x8
 5211 005e 21       		.uleb128 0x21
 5212 005f 00       		.byte	0
 5213 0060 49       		.uleb128 0x49
 5214 0061 13       		.uleb128 0x13
 5215 0062 2F       		.uleb128 0x2f
 5216 0063 0B       		.uleb128 0xb
 5217 0064 00       		.byte	0
 5218 0065 00       		.byte	0
 5219 0066 09       		.uleb128 0x9
 5220 0067 13       		.uleb128 0x13
 5221 0068 01       		.byte	0x1
 5222 0069 03       		.uleb128 0x3
 5223 006a 08       		.uleb128 0x8
 5224 006b 0B       		.uleb128 0xb
 5225 006c 05       		.uleb128 0x5
 5226 006d 3A       		.uleb128 0x3a
 5227 006e 0B       		.uleb128 0xb
 5228 006f 3B       		.uleb128 0x3b
 5229 0070 05       		.uleb128 0x5
 5230 0071 01       		.uleb128 0x1
 5231 0072 13       		.uleb128 0x13
 5232 0073 00       		.byte	0
 5233 0074 00       		.byte	0
 5234 0075 0A       		.uleb128 0xa
 5235 0076 0D       		.uleb128 0xd
 5236 0077 00       		.byte	0
 5237 0078 03       		.uleb128 0x3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 107


 5238 0079 0E       		.uleb128 0xe
 5239 007a 3A       		.uleb128 0x3a
 5240 007b 0B       		.uleb128 0xb
 5241 007c 3B       		.uleb128 0x3b
 5242 007d 05       		.uleb128 0x5
 5243 007e 49       		.uleb128 0x49
 5244 007f 13       		.uleb128 0x13
 5245 0080 38       		.uleb128 0x38
 5246 0081 0B       		.uleb128 0xb
 5247 0082 00       		.byte	0
 5248 0083 00       		.byte	0
 5249 0084 0B       		.uleb128 0xb
 5250 0085 0D       		.uleb128 0xd
 5251 0086 00       		.byte	0
 5252 0087 03       		.uleb128 0x3
 5253 0088 0E       		.uleb128 0xe
 5254 0089 3A       		.uleb128 0x3a
 5255 008a 0B       		.uleb128 0xb
 5256 008b 3B       		.uleb128 0x3b
 5257 008c 05       		.uleb128 0x5
 5258 008d 49       		.uleb128 0x49
 5259 008e 13       		.uleb128 0x13
 5260 008f 38       		.uleb128 0x38
 5261 0090 05       		.uleb128 0x5
 5262 0091 00       		.byte	0
 5263 0092 00       		.byte	0
 5264 0093 0C       		.uleb128 0xc
 5265 0094 13       		.uleb128 0x13
 5266 0095 01       		.byte	0x1
 5267 0096 03       		.uleb128 0x3
 5268 0097 0E       		.uleb128 0xe
 5269 0098 0B       		.uleb128 0xb
 5270 0099 05       		.uleb128 0x5
 5271 009a 3A       		.uleb128 0x3a
 5272 009b 0B       		.uleb128 0xb
 5273 009c 3B       		.uleb128 0x3b
 5274 009d 05       		.uleb128 0x5
 5275 009e 01       		.uleb128 0x1
 5276 009f 13       		.uleb128 0x13
 5277 00a0 00       		.byte	0
 5278 00a1 00       		.byte	0
 5279 00a2 0D       		.uleb128 0xd
 5280 00a3 2E       		.uleb128 0x2e
 5281 00a4 01       		.byte	0x1
 5282 00a5 3F       		.uleb128 0x3f
 5283 00a6 19       		.uleb128 0x19
 5284 00a7 03       		.uleb128 0x3
 5285 00a8 0E       		.uleb128 0xe
 5286 00a9 3A       		.uleb128 0x3a
 5287 00aa 0B       		.uleb128 0xb
 5288 00ab 3B       		.uleb128 0x3b
 5289 00ac 0B       		.uleb128 0xb
 5290 00ad 27       		.uleb128 0x27
 5291 00ae 19       		.uleb128 0x19
 5292 00af 11       		.uleb128 0x11
 5293 00b0 01       		.uleb128 0x1
 5294 00b1 12       		.uleb128 0x12
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 108


 5295 00b2 06       		.uleb128 0x6
 5296 00b3 40       		.uleb128 0x40
 5297 00b4 18       		.uleb128 0x18
 5298 00b5 9742     		.uleb128 0x2117
 5299 00b7 19       		.uleb128 0x19
 5300 00b8 01       		.uleb128 0x1
 5301 00b9 13       		.uleb128 0x13
 5302 00ba 00       		.byte	0
 5303 00bb 00       		.byte	0
 5304 00bc 0E       		.uleb128 0xe
 5305 00bd 05       		.uleb128 0x5
 5306 00be 00       		.byte	0
 5307 00bf 03       		.uleb128 0x3
 5308 00c0 08       		.uleb128 0x8
 5309 00c1 3A       		.uleb128 0x3a
 5310 00c2 0B       		.uleb128 0xb
 5311 00c3 3B       		.uleb128 0x3b
 5312 00c4 0B       		.uleb128 0xb
 5313 00c5 49       		.uleb128 0x49
 5314 00c6 13       		.uleb128 0x13
 5315 00c7 02       		.uleb128 0x2
 5316 00c8 18       		.uleb128 0x18
 5317 00c9 00       		.byte	0
 5318 00ca 00       		.byte	0
 5319 00cb 0F       		.uleb128 0xf
 5320 00cc 05       		.uleb128 0x5
 5321 00cd 00       		.byte	0
 5322 00ce 03       		.uleb128 0x3
 5323 00cf 0E       		.uleb128 0xe
 5324 00d0 3A       		.uleb128 0x3a
 5325 00d1 0B       		.uleb128 0xb
 5326 00d2 3B       		.uleb128 0x3b
 5327 00d3 0B       		.uleb128 0xb
 5328 00d4 49       		.uleb128 0x49
 5329 00d5 13       		.uleb128 0x13
 5330 00d6 02       		.uleb128 0x2
 5331 00d7 18       		.uleb128 0x18
 5332 00d8 00       		.byte	0
 5333 00d9 00       		.byte	0
 5334 00da 10       		.uleb128 0x10
 5335 00db 0B       		.uleb128 0xb
 5336 00dc 01       		.byte	0x1
 5337 00dd 11       		.uleb128 0x11
 5338 00de 01       		.uleb128 0x1
 5339 00df 12       		.uleb128 0x12
 5340 00e0 06       		.uleb128 0x6
 5341 00e1 00       		.byte	0
 5342 00e2 00       		.byte	0
 5343 00e3 11       		.uleb128 0x11
 5344 00e4 34       		.uleb128 0x34
 5345 00e5 00       		.byte	0
 5346 00e6 03       		.uleb128 0x3
 5347 00e7 08       		.uleb128 0x8
 5348 00e8 3A       		.uleb128 0x3a
 5349 00e9 0B       		.uleb128 0xb
 5350 00ea 3B       		.uleb128 0x3b
 5351 00eb 0B       		.uleb128 0xb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 109


 5352 00ec 49       		.uleb128 0x49
 5353 00ed 13       		.uleb128 0x13
 5354 00ee 02       		.uleb128 0x2
 5355 00ef 18       		.uleb128 0x18
 5356 00f0 00       		.byte	0
 5357 00f1 00       		.byte	0
 5358 00f2 12       		.uleb128 0x12
 5359 00f3 0F       		.uleb128 0xf
 5360 00f4 00       		.byte	0
 5361 00f5 0B       		.uleb128 0xb
 5362 00f6 0B       		.uleb128 0xb
 5363 00f7 49       		.uleb128 0x49
 5364 00f8 13       		.uleb128 0x13
 5365 00f9 00       		.byte	0
 5366 00fa 00       		.byte	0
 5367 00fb 13       		.uleb128 0x13
 5368 00fc 2E       		.uleb128 0x2e
 5369 00fd 01       		.byte	0x1
 5370 00fe 3F       		.uleb128 0x3f
 5371 00ff 19       		.uleb128 0x19
 5372 0100 03       		.uleb128 0x3
 5373 0101 0E       		.uleb128 0xe
 5374 0102 3A       		.uleb128 0x3a
 5375 0103 0B       		.uleb128 0xb
 5376 0104 3B       		.uleb128 0x3b
 5377 0105 0B       		.uleb128 0xb
 5378 0106 27       		.uleb128 0x27
 5379 0107 19       		.uleb128 0x19
 5380 0108 49       		.uleb128 0x49
 5381 0109 13       		.uleb128 0x13
 5382 010a 11       		.uleb128 0x11
 5383 010b 01       		.uleb128 0x1
 5384 010c 12       		.uleb128 0x12
 5385 010d 06       		.uleb128 0x6
 5386 010e 40       		.uleb128 0x40
 5387 010f 18       		.uleb128 0x18
 5388 0110 9742     		.uleb128 0x2117
 5389 0112 19       		.uleb128 0x19
 5390 0113 01       		.uleb128 0x1
 5391 0114 13       		.uleb128 0x13
 5392 0115 00       		.byte	0
 5393 0116 00       		.byte	0
 5394 0117 14       		.uleb128 0x14
 5395 0118 2E       		.uleb128 0x2e
 5396 0119 01       		.byte	0x1
 5397 011a 3F       		.uleb128 0x3f
 5398 011b 19       		.uleb128 0x19
 5399 011c 03       		.uleb128 0x3
 5400 011d 0E       		.uleb128 0xe
 5401 011e 3A       		.uleb128 0x3a
 5402 011f 0B       		.uleb128 0xb
 5403 0120 3B       		.uleb128 0x3b
 5404 0121 0B       		.uleb128 0xb
 5405 0122 27       		.uleb128 0x27
 5406 0123 19       		.uleb128 0x19
 5407 0124 49       		.uleb128 0x49
 5408 0125 13       		.uleb128 0x13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 110


 5409 0126 11       		.uleb128 0x11
 5410 0127 01       		.uleb128 0x1
 5411 0128 12       		.uleb128 0x12
 5412 0129 06       		.uleb128 0x6
 5413 012a 40       		.uleb128 0x40
 5414 012b 18       		.uleb128 0x18
 5415 012c 9642     		.uleb128 0x2116
 5416 012e 19       		.uleb128 0x19
 5417 012f 01       		.uleb128 0x1
 5418 0130 13       		.uleb128 0x13
 5419 0131 00       		.byte	0
 5420 0132 00       		.byte	0
 5421 0133 15       		.uleb128 0x15
 5422 0134 2E       		.uleb128 0x2e
 5423 0135 01       		.byte	0x1
 5424 0136 3F       		.uleb128 0x3f
 5425 0137 19       		.uleb128 0x19
 5426 0138 03       		.uleb128 0x3
 5427 0139 0E       		.uleb128 0xe
 5428 013a 3A       		.uleb128 0x3a
 5429 013b 0B       		.uleb128 0xb
 5430 013c 3B       		.uleb128 0x3b
 5431 013d 0B       		.uleb128 0xb
 5432 013e 49       		.uleb128 0x49
 5433 013f 13       		.uleb128 0x13
 5434 0140 11       		.uleb128 0x11
 5435 0141 01       		.uleb128 0x1
 5436 0142 12       		.uleb128 0x12
 5437 0143 06       		.uleb128 0x6
 5438 0144 40       		.uleb128 0x40
 5439 0145 18       		.uleb128 0x18
 5440 0146 9642     		.uleb128 0x2116
 5441 0148 19       		.uleb128 0x19
 5442 0149 01       		.uleb128 0x1
 5443 014a 13       		.uleb128 0x13
 5444 014b 00       		.byte	0
 5445 014c 00       		.byte	0
 5446 014d 16       		.uleb128 0x16
 5447 014e 34       		.uleb128 0x34
 5448 014f 00       		.byte	0
 5449 0150 03       		.uleb128 0x3
 5450 0151 0E       		.uleb128 0xe
 5451 0152 3A       		.uleb128 0x3a
 5452 0153 0B       		.uleb128 0xb
 5453 0154 3B       		.uleb128 0x3b
 5454 0155 0B       		.uleb128 0xb
 5455 0156 49       		.uleb128 0x49
 5456 0157 13       		.uleb128 0x13
 5457 0158 02       		.uleb128 0x2
 5458 0159 18       		.uleb128 0x18
 5459 015a 00       		.byte	0
 5460 015b 00       		.byte	0
 5461 015c 17       		.uleb128 0x17
 5462 015d 2E       		.uleb128 0x2e
 5463 015e 01       		.byte	0x1
 5464 015f 3F       		.uleb128 0x3f
 5465 0160 19       		.uleb128 0x19
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 111


 5466 0161 03       		.uleb128 0x3
 5467 0162 0E       		.uleb128 0xe
 5468 0163 3A       		.uleb128 0x3a
 5469 0164 0B       		.uleb128 0xb
 5470 0165 3B       		.uleb128 0x3b
 5471 0166 0B       		.uleb128 0xb
 5472 0167 27       		.uleb128 0x27
 5473 0168 19       		.uleb128 0x19
 5474 0169 11       		.uleb128 0x11
 5475 016a 01       		.uleb128 0x1
 5476 016b 12       		.uleb128 0x12
 5477 016c 06       		.uleb128 0x6
 5478 016d 40       		.uleb128 0x40
 5479 016e 18       		.uleb128 0x18
 5480 016f 9642     		.uleb128 0x2116
 5481 0171 19       		.uleb128 0x19
 5482 0172 01       		.uleb128 0x1
 5483 0173 13       		.uleb128 0x13
 5484 0174 00       		.byte	0
 5485 0175 00       		.byte	0
 5486 0176 18       		.uleb128 0x18
 5487 0177 13       		.uleb128 0x13
 5488 0178 00       		.byte	0
 5489 0179 03       		.uleb128 0x3
 5490 017a 0E       		.uleb128 0xe
 5491 017b 3C       		.uleb128 0x3c
 5492 017c 19       		.uleb128 0x19
 5493 017d 00       		.byte	0
 5494 017e 00       		.byte	0
 5495 017f 19       		.uleb128 0x19
 5496 0180 2E       		.uleb128 0x2e
 5497 0181 01       		.byte	0x1
 5498 0182 3F       		.uleb128 0x3f
 5499 0183 19       		.uleb128 0x19
 5500 0184 03       		.uleb128 0x3
 5501 0185 0E       		.uleb128 0xe
 5502 0186 3A       		.uleb128 0x3a
 5503 0187 0B       		.uleb128 0xb
 5504 0188 3B       		.uleb128 0x3b
 5505 0189 05       		.uleb128 0x5
 5506 018a 49       		.uleb128 0x49
 5507 018b 13       		.uleb128 0x13
 5508 018c 3C       		.uleb128 0x3c
 5509 018d 19       		.uleb128 0x19
 5510 018e 00       		.byte	0
 5511 018f 00       		.byte	0
 5512 0190 1A       		.uleb128 0x1a
 5513 0191 18       		.uleb128 0x18
 5514 0192 00       		.byte	0
 5515 0193 00       		.byte	0
 5516 0194 00       		.byte	0
 5517 0195 1B       		.uleb128 0x1b
 5518 0196 2E       		.uleb128 0x2e
 5519 0197 01       		.byte	0x1
 5520 0198 3F       		.uleb128 0x3f
 5521 0199 19       		.uleb128 0x19
 5522 019a 03       		.uleb128 0x3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 112


 5523 019b 0E       		.uleb128 0xe
 5524 019c 3A       		.uleb128 0x3a
 5525 019d 0B       		.uleb128 0xb
 5526 019e 3B       		.uleb128 0x3b
 5527 019f 05       		.uleb128 0x5
 5528 01a0 27       		.uleb128 0x27
 5529 01a1 19       		.uleb128 0x19
 5530 01a2 49       		.uleb128 0x49
 5531 01a3 13       		.uleb128 0x13
 5532 01a4 11       		.uleb128 0x11
 5533 01a5 01       		.uleb128 0x1
 5534 01a6 12       		.uleb128 0x12
 5535 01a7 06       		.uleb128 0x6
 5536 01a8 40       		.uleb128 0x40
 5537 01a9 18       		.uleb128 0x18
 5538 01aa 9642     		.uleb128 0x2116
 5539 01ac 19       		.uleb128 0x19
 5540 01ad 01       		.uleb128 0x1
 5541 01ae 13       		.uleb128 0x13
 5542 01af 00       		.byte	0
 5543 01b0 00       		.byte	0
 5544 01b1 1C       		.uleb128 0x1c
 5545 01b2 05       		.uleb128 0x5
 5546 01b3 00       		.byte	0
 5547 01b4 03       		.uleb128 0x3
 5548 01b5 08       		.uleb128 0x8
 5549 01b6 3A       		.uleb128 0x3a
 5550 01b7 0B       		.uleb128 0xb
 5551 01b8 3B       		.uleb128 0x3b
 5552 01b9 05       		.uleb128 0x5
 5553 01ba 49       		.uleb128 0x49
 5554 01bb 13       		.uleb128 0x13
 5555 01bc 02       		.uleb128 0x2
 5556 01bd 18       		.uleb128 0x18
 5557 01be 00       		.byte	0
 5558 01bf 00       		.byte	0
 5559 01c0 1D       		.uleb128 0x1d
 5560 01c1 2E       		.uleb128 0x2e
 5561 01c2 01       		.byte	0x1
 5562 01c3 3F       		.uleb128 0x3f
 5563 01c4 19       		.uleb128 0x19
 5564 01c5 03       		.uleb128 0x3
 5565 01c6 0E       		.uleb128 0xe
 5566 01c7 3A       		.uleb128 0x3a
 5567 01c8 0B       		.uleb128 0xb
 5568 01c9 3B       		.uleb128 0x3b
 5569 01ca 05       		.uleb128 0x5
 5570 01cb 27       		.uleb128 0x27
 5571 01cc 19       		.uleb128 0x19
 5572 01cd 11       		.uleb128 0x11
 5573 01ce 01       		.uleb128 0x1
 5574 01cf 12       		.uleb128 0x12
 5575 01d0 06       		.uleb128 0x6
 5576 01d1 40       		.uleb128 0x40
 5577 01d2 18       		.uleb128 0x18
 5578 01d3 9642     		.uleb128 0x2116
 5579 01d5 19       		.uleb128 0x19
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 113


 5580 01d6 01       		.uleb128 0x1
 5581 01d7 13       		.uleb128 0x13
 5582 01d8 00       		.byte	0
 5583 01d9 00       		.byte	0
 5584 01da 1E       		.uleb128 0x1e
 5585 01db 05       		.uleb128 0x5
 5586 01dc 00       		.byte	0
 5587 01dd 03       		.uleb128 0x3
 5588 01de 0E       		.uleb128 0xe
 5589 01df 3A       		.uleb128 0x3a
 5590 01e0 0B       		.uleb128 0xb
 5591 01e1 3B       		.uleb128 0x3b
 5592 01e2 05       		.uleb128 0x5
 5593 01e3 49       		.uleb128 0x49
 5594 01e4 13       		.uleb128 0x13
 5595 01e5 02       		.uleb128 0x2
 5596 01e6 18       		.uleb128 0x18
 5597 01e7 00       		.byte	0
 5598 01e8 00       		.byte	0
 5599 01e9 1F       		.uleb128 0x1f
 5600 01ea 34       		.uleb128 0x34
 5601 01eb 00       		.byte	0
 5602 01ec 03       		.uleb128 0x3
 5603 01ed 08       		.uleb128 0x8
 5604 01ee 3A       		.uleb128 0x3a
 5605 01ef 0B       		.uleb128 0xb
 5606 01f0 3B       		.uleb128 0x3b
 5607 01f1 05       		.uleb128 0x5
 5608 01f2 49       		.uleb128 0x49
 5609 01f3 13       		.uleb128 0x13
 5610 01f4 02       		.uleb128 0x2
 5611 01f5 18       		.uleb128 0x18
 5612 01f6 00       		.byte	0
 5613 01f7 00       		.byte	0
 5614 01f8 20       		.uleb128 0x20
 5615 01f9 34       		.uleb128 0x34
 5616 01fa 00       		.byte	0
 5617 01fb 03       		.uleb128 0x3
 5618 01fc 0E       		.uleb128 0xe
 5619 01fd 3A       		.uleb128 0x3a
 5620 01fe 0B       		.uleb128 0xb
 5621 01ff 3B       		.uleb128 0x3b
 5622 0200 05       		.uleb128 0x5
 5623 0201 49       		.uleb128 0x49
 5624 0202 13       		.uleb128 0x13
 5625 0203 02       		.uleb128 0x2
 5626 0204 18       		.uleb128 0x18
 5627 0205 00       		.byte	0
 5628 0206 00       		.byte	0
 5629 0207 21       		.uleb128 0x21
 5630 0208 2E       		.uleb128 0x2e
 5631 0209 01       		.byte	0x1
 5632 020a 3F       		.uleb128 0x3f
 5633 020b 19       		.uleb128 0x19
 5634 020c 03       		.uleb128 0x3
 5635 020d 0E       		.uleb128 0xe
 5636 020e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 114


 5637 020f 0B       		.uleb128 0xb
 5638 0210 3B       		.uleb128 0x3b
 5639 0211 05       		.uleb128 0x5
 5640 0212 49       		.uleb128 0x49
 5641 0213 13       		.uleb128 0x13
 5642 0214 3C       		.uleb128 0x3c
 5643 0215 19       		.uleb128 0x19
 5644 0216 01       		.uleb128 0x1
 5645 0217 13       		.uleb128 0x13
 5646 0218 00       		.byte	0
 5647 0219 00       		.byte	0
 5648 021a 22       		.uleb128 0x22
 5649 021b 0B       		.uleb128 0xb
 5650 021c 01       		.byte	0x1
 5651 021d 11       		.uleb128 0x11
 5652 021e 01       		.uleb128 0x1
 5653 021f 12       		.uleb128 0x12
 5654 0220 06       		.uleb128 0x6
 5655 0221 01       		.uleb128 0x1
 5656 0222 13       		.uleb128 0x13
 5657 0223 00       		.byte	0
 5658 0224 00       		.byte	0
 5659 0225 23       		.uleb128 0x23
 5660 0226 2E       		.uleb128 0x2e
 5661 0227 01       		.byte	0x1
 5662 0228 3F       		.uleb128 0x3f
 5663 0229 19       		.uleb128 0x19
 5664 022a 03       		.uleb128 0x3
 5665 022b 0E       		.uleb128 0xe
 5666 022c 3A       		.uleb128 0x3a
 5667 022d 0B       		.uleb128 0xb
 5668 022e 3B       		.uleb128 0x3b
 5669 022f 05       		.uleb128 0x5
 5670 0230 27       		.uleb128 0x27
 5671 0231 19       		.uleb128 0x19
 5672 0232 49       		.uleb128 0x49
 5673 0233 13       		.uleb128 0x13
 5674 0234 11       		.uleb128 0x11
 5675 0235 01       		.uleb128 0x1
 5676 0236 12       		.uleb128 0x12
 5677 0237 06       		.uleb128 0x6
 5678 0238 40       		.uleb128 0x40
 5679 0239 18       		.uleb128 0x18
 5680 023a 9742     		.uleb128 0x2117
 5681 023c 19       		.uleb128 0x19
 5682 023d 01       		.uleb128 0x1
 5683 023e 13       		.uleb128 0x13
 5684 023f 00       		.byte	0
 5685 0240 00       		.byte	0
 5686 0241 24       		.uleb128 0x24
 5687 0242 34       		.uleb128 0x34
 5688 0243 00       		.byte	0
 5689 0244 03       		.uleb128 0x3
 5690 0245 0E       		.uleb128 0xe
 5691 0246 3A       		.uleb128 0x3a
 5692 0247 0B       		.uleb128 0xb
 5693 0248 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 115


 5694 0249 05       		.uleb128 0x5
 5695 024a 49       		.uleb128 0x49
 5696 024b 13       		.uleb128 0x13
 5697 024c 3F       		.uleb128 0x3f
 5698 024d 19       		.uleb128 0x19
 5699 024e 3C       		.uleb128 0x3c
 5700 024f 19       		.uleb128 0x19
 5701 0250 00       		.byte	0
 5702 0251 00       		.byte	0
 5703 0252 25       		.uleb128 0x25
 5704 0253 35       		.uleb128 0x35
 5705 0254 00       		.byte	0
 5706 0255 49       		.uleb128 0x49
 5707 0256 13       		.uleb128 0x13
 5708 0257 00       		.byte	0
 5709 0258 00       		.byte	0
 5710 0259 00       		.byte	0
 5711              		.section	.debug_aranges,"",%progbits
 5712 0000 BC000000 		.4byte	0xbc
 5713 0004 0200     		.2byte	0x2
 5714 0006 00000000 		.4byte	.Ldebug_info0
 5715 000a 04       		.byte	0x4
 5716 000b 00       		.byte	0
 5717 000c 0000     		.2byte	0
 5718 000e 0000     		.2byte	0
 5719 0010 00000000 		.4byte	.LFB63
 5720 0014 6C000000 		.4byte	.LFE63-.LFB63
 5721 0018 00000000 		.4byte	.LFB64
 5722 001c 3A000000 		.4byte	.LFE64-.LFB64
 5723 0020 00000000 		.4byte	.LFB65
 5724 0024 3A000000 		.4byte	.LFE65-.LFB65
 5725 0028 00000000 		.4byte	.LFB66
 5726 002c A0000000 		.4byte	.LFE66-.LFB66
 5727 0030 00000000 		.4byte	.LFB67
 5728 0034 3E000000 		.4byte	.LFE67-.LFB67
 5729 0038 00000000 		.4byte	.LFB68
 5730 003c 5C000000 		.4byte	.LFE68-.LFB68
 5731 0040 00000000 		.4byte	.LFB69
 5732 0044 88000000 		.4byte	.LFE69-.LFB69
 5733 0048 00000000 		.4byte	.LFB70
 5734 004c 7C040000 		.4byte	.LFE70-.LFB70
 5735 0050 00000000 		.4byte	.LFB71
 5736 0054 72000000 		.4byte	.LFE71-.LFB71
 5737 0058 00000000 		.4byte	.LFB72
 5738 005c 2C000000 		.4byte	.LFE72-.LFB72
 5739 0060 00000000 		.4byte	.LFB73
 5740 0064 1E000000 		.4byte	.LFE73-.LFB73
 5741 0068 00000000 		.4byte	.LFB74
 5742 006c D8000000 		.4byte	.LFE74-.LFB74
 5743 0070 00000000 		.4byte	.LFB75
 5744 0074 30000000 		.4byte	.LFE75-.LFB75
 5745 0078 00000000 		.4byte	.LFB76
 5746 007c 20000000 		.4byte	.LFE76-.LFB76
 5747 0080 00000000 		.4byte	.LFB77
 5748 0084 70000000 		.4byte	.LFE77-.LFB77
 5749 0088 00000000 		.4byte	.LFB78
 5750 008c 060A0000 		.4byte	.LFE78-.LFB78
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 116


 5751 0090 00000000 		.4byte	.LFB79
 5752 0094 FE010000 		.4byte	.LFE79-.LFB79
 5753 0098 00000000 		.4byte	.LFB80
 5754 009c 68000000 		.4byte	.LFE80-.LFB80
 5755 00a0 00000000 		.4byte	.LFB81
 5756 00a4 3E000000 		.4byte	.LFE81-.LFB81
 5757 00a8 00000000 		.4byte	.LFB82
 5758 00ac 88000000 		.4byte	.LFE82-.LFB82
 5759 00b0 00000000 		.4byte	.LFB83
 5760 00b4 82000000 		.4byte	.LFE83-.LFB83
 5761 00b8 00000000 		.4byte	0
 5762 00bc 00000000 		.4byte	0
 5763              		.section	.debug_ranges,"",%progbits
 5764              	.Ldebug_ranges0:
 5765 0000 00000000 		.4byte	.LFB63
 5766 0004 6C000000 		.4byte	.LFE63
 5767 0008 00000000 		.4byte	.LFB64
 5768 000c 3A000000 		.4byte	.LFE64
 5769 0010 00000000 		.4byte	.LFB65
 5770 0014 3A000000 		.4byte	.LFE65
 5771 0018 00000000 		.4byte	.LFB66
 5772 001c A0000000 		.4byte	.LFE66
 5773 0020 00000000 		.4byte	.LFB67
 5774 0024 3E000000 		.4byte	.LFE67
 5775 0028 00000000 		.4byte	.LFB68
 5776 002c 5C000000 		.4byte	.LFE68
 5777 0030 00000000 		.4byte	.LFB69
 5778 0034 88000000 		.4byte	.LFE69
 5779 0038 00000000 		.4byte	.LFB70
 5780 003c 7C040000 		.4byte	.LFE70
 5781 0040 00000000 		.4byte	.LFB71
 5782 0044 72000000 		.4byte	.LFE71
 5783 0048 00000000 		.4byte	.LFB72
 5784 004c 2C000000 		.4byte	.LFE72
 5785 0050 00000000 		.4byte	.LFB73
 5786 0054 1E000000 		.4byte	.LFE73
 5787 0058 00000000 		.4byte	.LFB74
 5788 005c D8000000 		.4byte	.LFE74
 5789 0060 00000000 		.4byte	.LFB75
 5790 0064 30000000 		.4byte	.LFE75
 5791 0068 00000000 		.4byte	.LFB76
 5792 006c 20000000 		.4byte	.LFE76
 5793 0070 00000000 		.4byte	.LFB77
 5794 0074 70000000 		.4byte	.LFE77
 5795 0078 00000000 		.4byte	.LFB78
 5796 007c 060A0000 		.4byte	.LFE78
 5797 0080 00000000 		.4byte	.LFB79
 5798 0084 FE010000 		.4byte	.LFE79
 5799 0088 00000000 		.4byte	.LFB80
 5800 008c 68000000 		.4byte	.LFE80
 5801 0090 00000000 		.4byte	.LFB81
 5802 0094 3E000000 		.4byte	.LFE81
 5803 0098 00000000 		.4byte	.LFB82
 5804 009c 88000000 		.4byte	.LFE82
 5805 00a0 00000000 		.4byte	.LFB83
 5806 00a4 82000000 		.4byte	.LFE83
 5807 00a8 00000000 		.4byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 117


 5808 00ac 00000000 		.4byte	0
 5809              		.section	.debug_line,"",%progbits
 5810              	.Ldebug_line0:
 5811 0000 28070000 		.section	.debug_str,"MS",%progbits,1
 5811      0200C501 
 5811      00000201 
 5811      FB0E0D00 
 5811      01010101 
 5812              	.LASF19:
 5813 0000 64696D65 		.ascii	"dimension\000"
 5813      6E73696F 
 5813      6E00
 5814              	.LASF24:
 5815 000a 7469635F 		.ascii	"tic_tac_toe\000"
 5815      7461635F 
 5815      746F6500 
 5816              	.LASF27:
 5817 0016 64696167 		.ascii	"diags\000"
 5817      7300
 5818              	.LASF40:
 5819 001c 73747232 		.ascii	"str2\000"
 5819      00
 5820              	.LASF55:
 5821 0021 706C6179 		.ascii	"player_1\000"
 5821      65725F31 
 5821      00
 5822              	.LASF59:
 5823 002a 6E756D5F 		.ascii	"num_filled\000"
 5823      66696C6C 
 5823      656400
 5824              	.LASF10:
 5825 0035 73697A65 		.ascii	"size_t\000"
 5825      5F7400
 5826              	.LASF54:
 5827 003c 7474615F 		.ascii	"tta_init\000"
 5827      696E6974 
 5827      00
 5828              	.LASF11:
 5829 0045 73697A65 		.ascii	"sizetype\000"
 5829      74797065 
 5829      00
 5830              	.LASF62:
 5831 004e 61695F70 		.ascii	"ai_print_grid_eval\000"
 5831      72696E74 
 5831      5F677269 
 5831      645F6576 
 5831      616C00
 5832              	.LASF2:
 5833 0061 73686F72 		.ascii	"short int\000"
 5833      7420696E 
 5833      7400
 5834              	.LASF33:
 5835 006b 76616C75 		.ascii	"value\000"
 5835      6500
 5836              	.LASF53:
 5837 0071 61695F69 		.ascii	"ai_init\000"
 5837      6E697400 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 118


 5838              	.LASF31:
 5839 0079 61695F32 		.ascii	"ai_2\000"
 5839      00
 5840              	.LASF47:
 5841 007e 7474635F 		.ascii	"ttc_free\000"
 5841      66726565 
 5841      00
 5842              	.LASF43:
 5843 0087 636F6E6E 		.ascii	"connected\000"
 5843      65637465 
 5843      6400
 5844              	.LASF16:
 5845 0091 626F6F6C 		.ascii	"bool\000"
 5845      00
 5846              	.LASF14:
 5847 0096 666C6F61 		.ascii	"float\000"
 5847      7400
 5848              	.LASF63:
 5849 009c 61695F70 		.ascii	"ai_play_best_move\000"
 5849      6C61795F 
 5849      62657374 
 5849      5F6D6F76 
 5849      6500
 5850              	.LASF6:
 5851 00ae 6C6F6E67 		.ascii	"long long int\000"
 5851      206C6F6E 
 5851      6720696E 
 5851      7400
 5852              	.LASF36:
 5853 00bc 7474635F 		.ascii	"ttc_check_valid\000"
 5853      63686563 
 5853      6B5F7661 
 5853      6C696400 
 5854              	.LASF50:
 5855 00cc 616C6C5F 		.ascii	"all_index\000"
 5855      696E6465 
 5855      7800
 5856              	.LASF46:
 5857 00d6 7474635F 		.ascii	"ttc_play_game\000"
 5857      706C6179 
 5857      5F67616D 
 5857      6500
 5858              	.LASF67:
 5859 00e4 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5859      4320342E 
 5859      392E3320 
 5859      32303135 
 5859      30333033 
 5860 0117 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 5860      20726576 
 5860      6973696F 
 5860      6E203232 
 5860      31323230 
 5861 014a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5861      66756E63 
 5861      74696F6E 
 5861      2D736563 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 119


 5861      74696F6E 
 5862              	.LASF65:
 5863 0172 7474615F 		.ascii	"tta_ai_algorithm\000"
 5863      61695F61 
 5863      6C676F72 
 5863      6974686D 
 5863      00
 5864              	.LASF30:
 5865 0183 61695F31 		.ascii	"ai_1\000"
 5865      00
 5866              	.LASF44:
 5867 0188 7474635F 		.ascii	"ttc_step\000"
 5867      73746570 
 5867      00
 5868              	.LASF39:
 5869 0191 7474635F 		.ascii	"ttc_take_input\000"
 5869      74616B65 
 5869      5F696E70 
 5869      757400
 5870              	.LASF26:
 5871 01a0 67726964 		.ascii	"grid_eval\000"
 5871      5F657661 
 5871      6C00
 5872              	.LASF25:
 5873 01aa 706C6179 		.ascii	"player_id\000"
 5873      65725F69 
 5873      6400
 5874              	.LASF15:
 5875 01b4 6C6F6E67 		.ascii	"long double\000"
 5875      20646F75 
 5875      626C6500 
 5876              	.LASF68:
 5877 01c0 2E5C7469 		.ascii	".\\tic_tac_all.c\000"
 5877      635F7461 
 5877      635F616C 
 5877      6C2E6300 
 5878              	.LASF1:
 5879 01d0 756E7369 		.ascii	"unsigned char\000"
 5879      676E6564 
 5879      20636861 
 5879      7200
 5880              	.LASF34:
 5881 01de 7474635F 		.ascii	"ttc_set_grid\000"
 5881      7365745F 
 5881      67726964 
 5881      00
 5882              	.LASF22:
 5883 01eb 67616D65 		.ascii	"game_not_won\000"
 5883      5F6E6F74 
 5883      5F776F6E 
 5883      00
 5884              	.LASF0:
 5885 01f8 7369676E 		.ascii	"signed char\000"
 5885      65642063 
 5885      68617200 
 5886              	.LASF7:
 5887 0204 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 120


 5887      206C6F6E 
 5887      6720756E 
 5887      7369676E 
 5887      65642069 
 5888              	.LASF8:
 5889 021b 756E7369 		.ascii	"unsigned int\000"
 5889      676E6564 
 5889      20696E74 
 5889      00
 5890              	.LASF48:
 5891 0228 6D61785F 		.ascii	"max_array\000"
 5891      61727261 
 5891      7900
 5892              	.LASF21:
 5893 0232 7475726E 		.ascii	"turn\000"
 5893      00
 5894              	.LASF56:
 5895 0237 706C6179 		.ascii	"player_2\000"
 5895      65725F32 
 5895      00
 5896              	.LASF45:
 5897 0240 64697370 		.ascii	"disp\000"
 5897      00
 5898              	.LASF37:
 5899 0245 7474635F 		.ascii	"ttc_init\000"
 5899      696E6974 
 5899      00
 5900              	.LASF23:
 5901 024e 67726964 		.ascii	"grid\000"
 5901      00
 5902              	.LASF3:
 5903 0253 73686F72 		.ascii	"short unsigned int\000"
 5903      7420756E 
 5903      7369676E 
 5903      65642069 
 5903      6E7400
 5904              	.LASF32:
 5905 0266 67616D65 		.ascii	"game\000"
 5905      00
 5906              	.LASF12:
 5907 026b 63686172 		.ascii	"char\000"
 5907      00
 5908              	.LASF4:
 5909 0270 6C6F6E67 		.ascii	"long int\000"
 5909      20696E74 
 5909      00
 5910              	.LASF41:
 5911 0279 7474635F 		.ascii	"ttc_print_grid\000"
 5911      7072696E 
 5911      745F6772 
 5911      696400
 5912              	.LASF17:
 5913 0288 696E7433 		.ascii	"int32_t\000"
 5913      325F7400 
 5914              	.LASF57:
 5915 0290 61695F65 		.ascii	"ai_evaluate_board\000"
 5915      76616C75 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 121


 5915      6174655F 
 5915      626F6172 
 5915      6400
 5916              	.LASF58:
 5917 02a2 656D7074 		.ascii	"empty_places\000"
 5917      795F706C 
 5917      61636573 
 5917      00
 5918              	.LASF5:
 5919 02af 6C6F6E67 		.ascii	"long unsigned int\000"
 5919      20756E73 
 5919      69676E65 
 5919      6420696E 
 5919      7400
 5920              	.LASF13:
 5921 02c1 646F7562 		.ascii	"double\000"
 5921      6C6500
 5922              	.LASF70:
 5923 02c8 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5923      52784275 
 5923      66666572 
 5923      00
 5924              	.LASF18:
 5925 02d5 73697A65 		.ascii	"size\000"
 5925      00
 5926              	.LASF9:
 5927 02da 5F5F696E 		.ascii	"__int32_t\000"
 5927      7433325F 
 5927      7400
 5928              	.LASF28:
 5929 02e4 7469635F 		.ascii	"tic_tac_ai\000"
 5929      7461635F 
 5929      616900
 5930              	.LASF35:
 5931 02ef 7474635F 		.ascii	"ttc_get_grid\000"
 5931      6765745F 
 5931      67726964 
 5931      00
 5932              	.LASF69:
 5933 02fc 433A5C55 		.ascii	"C:\\Users\\Andrew\\Dropbox (Personal)\\MIT\\MIT 201"
 5933      73657273 
 5933      5C416E64 
 5933      7265775C 
 5933      44726F70 
 5934 032a 36205370 		.ascii	"6 Spring\\6115\\Final Project\\Code\\VGA\\Tic Tac T"
 5934      72696E67 
 5934      5C363131 
 5934      355C4669 
 5934      6E616C20 
 5935 0358 6F652E63 		.ascii	"oe.cydsn\000"
 5935      7964736E 
 5935      00
 5936              	.LASF60:
 5937 0361 61695F64 		.ascii	"ai_define_score\000"
 5937      6566696E 
 5937      655F7363 
 5937      6F726500 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccRW4j1V.s 			page 122


 5938              	.LASF42:
 5939 0371 7474635F 		.ascii	"ttc_check_win\000"
 5939      63686563 
 5939      6B5F7769 
 5939      6E00
 5940              	.LASF64:
 5941 037f 64697370 		.ascii	"disp_grid_81\000"
 5941      5F677269 
 5941      645F3831 
 5941      00
 5942              	.LASF66:
 5943 038c 7474615F 		.ascii	"tta_step\000"
 5943      73746570 
 5943      00
 5944              	.LASF49:
 5945 0395 61727261 		.ascii	"array\000"
 5945      7900
 5946              	.LASF61:
 5947 039b 64697370 		.ascii	"disp_grid_ttc_place\000"
 5947      5F677269 
 5947      645F7474 
 5947      635F706C 
 5947      61636500 
 5948              	.LASF51:
 5949 03af 6E756D5F 		.ascii	"num_index\000"
 5949      696E6465 
 5949      7800
 5950              	.LASF29:
 5951 03b9 69735F61 		.ascii	"is_ai\000"
 5951      6900
 5952              	.LASF20:
 5953 03bf 706C6179 		.ascii	"player\000"
 5953      657200
 5954              	.LASF52:
 5955 03c6 61695F72 		.ascii	"ai_reset\000"
 5955      65736574 
 5955      00
 5956              	.LASF38:
 5957 03cf 7474635F 		.ascii	"ttc_change_player\000"
 5957      6368616E 
 5957      67655F70 
 5957      6C617965 
 5957      7200
 5958              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
