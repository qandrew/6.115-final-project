ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"tic_tac_toe.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ttc_init,"ax",%progbits
  19              		.align	2
  20              		.global	ttc_init
  21              		.thumb
  22              		.thumb_func
  23              		.type	ttc_init, %function
  24              	ttc_init:
  25              	.LFB63:
  26              		.file 1 ".\\tic_tac_toe.c"
   1:.\tic_tac_toe.c **** /* ========================================
   2:.\tic_tac_toe.c ****  *
   3:.\tic_tac_toe.c ****  * Copyright HUDING ENTERPRISES, 2016
   4:.\tic_tac_toe.c ****  * All Rights Reserved
   5:.\tic_tac_toe.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\tic_tac_toe.c ****  *
   7:.\tic_tac_toe.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\tic_tac_toe.c ****  * WHICH IS THE PROPERTY OF Andrew Xia.
   9:.\tic_tac_toe.c ****  *
  10:.\tic_tac_toe.c ****  * ========================================
  11:.\tic_tac_toe.c **** */
  12:.\tic_tac_toe.c **** 
  13:.\tic_tac_toe.c **** // Andrew Xia
  14:.\tic_tac_toe.c **** // 6.115 Microcontrollers
  15:.\tic_tac_toe.c **** // Final Project
  16:.\tic_tac_toe.c **** // Apr 26 2016
  17:.\tic_tac_toe.c **** // Tic Tac Toe Structure for my game
  18:.\tic_tac_toe.c **** 
  19:.\tic_tac_toe.c **** #include <stdio.h>
  20:.\tic_tac_toe.c **** #include <stdlib.h>
  21:.\tic_tac_toe.c **** #include <string.h>
  22:.\tic_tac_toe.c **** 
  23:.\tic_tac_toe.c **** typedef int bool;
  24:.\tic_tac_toe.c **** #define true 1
  25:.\tic_tac_toe.c **** #define false 0
  26:.\tic_tac_toe.c **** 
  27:.\tic_tac_toe.c **** #ifndef DEVICE_H
  28:.\tic_tac_toe.c **** #define DEVICE_H
  29:.\tic_tac_toe.c **** #include <project.h>
  30:.\tic_tac_toe.c **** 
  31:.\tic_tac_toe.c **** #endif
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 2


  32:.\tic_tac_toe.c **** 
  33:.\tic_tac_toe.c **** //#ifndef DISP_C
  34:.\tic_tac_toe.c **** //#define DISP_C
  35:.\tic_tac_toe.c **** //#include <disp.c>
  36:.\tic_tac_toe.c **** //
  37:.\tic_tac_toe.c **** //#endif
  38:.\tic_tac_toe.c **** 
  39:.\tic_tac_toe.c **** struct tic_tac_toe{
  40:.\tic_tac_toe.c **** 	int size;
  41:.\tic_tac_toe.c **** 	int dimension;
  42:.\tic_tac_toe.c **** 	// grid = {'A','B','A'}; // make this an array of length 64
  43:.\tic_tac_toe.c **** 	int player; // 1 is player A, -1 is player B
  44:.\tic_tac_toe.c **** 	int turn;
  45:.\tic_tac_toe.c **** 	int game_not_won;
  46:.\tic_tac_toe.c **** 	// int grid_eval[]; //this keeps track of scores of all diagonals
  47:.\tic_tac_toe.c **** 	int grid[64]; // a usually size 64 grid containing our board
  48:.\tic_tac_toe.c **** 	// if don't specify grid size, could get memory overlap
  49:.\tic_tac_toe.c **** };
  50:.\tic_tac_toe.c **** 
  51:.\tic_tac_toe.c **** void ttc_init(struct tic_tac_toe* t, int size, int dimension){
  27              		.loc 1 51 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 87B0     		sub	sp, sp, #28
  36              		.cfi_def_cfa_offset 32
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 B960     		str	r1, [r7, #8]
  41 000a 7A60     		str	r2, [r7, #4]
  52:.\tic_tac_toe.c **** 	t->size = size;
  42              		.loc 1 52 0
  43 000c FB68     		ldr	r3, [r7, #12]
  44 000e BA68     		ldr	r2, [r7, #8]
  45 0010 1A60     		str	r2, [r3]
  53:.\tic_tac_toe.c **** 	t->dimension = dimension;
  46              		.loc 1 53 0
  47 0012 FB68     		ldr	r3, [r7, #12]
  48 0014 7A68     		ldr	r2, [r7, #4]
  49 0016 5A60     		str	r2, [r3, #4]
  54:.\tic_tac_toe.c **** 	if (dimension == 3){
  50              		.loc 1 54 0
  51 0018 7B68     		ldr	r3, [r7, #4]
  52 001a 032B     		cmp	r3, #3
  53 001c 18D1     		bne	.L2
  54              	.LBB2:
  55:.\tic_tac_toe.c **** 		int i;
  56:.\tic_tac_toe.c **** 		int num = size*size*size;
  55              		.loc 1 56 0
  56 001e BB68     		ldr	r3, [r7, #8]
  57 0020 BA68     		ldr	r2, [r7, #8]
  58 0022 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 3


  59 0026 BA68     		ldr	r2, [r7, #8]
  60 0028 02FB03F3 		mul	r3, r2, r3
  61 002c 3B61     		str	r3, [r7, #16]
  57:.\tic_tac_toe.c **** 		for (i = 0; i < num;i++){
  62              		.loc 1 57 0
  63 002e 0023     		movs	r3, #0
  64 0030 7B61     		str	r3, [r7, #20]
  65 0032 09E0     		b	.L3
  66              	.L4:
  58:.\tic_tac_toe.c **** 			t->grid[i] = 0;
  67              		.loc 1 58 0 discriminator 3
  68 0034 FA68     		ldr	r2, [r7, #12]
  69 0036 7B69     		ldr	r3, [r7, #20]
  70 0038 0433     		adds	r3, r3, #4
  71 003a 9B00     		lsls	r3, r3, #2
  72 003c 1344     		add	r3, r3, r2
  73 003e 0022     		movs	r2, #0
  74 0040 5A60     		str	r2, [r3, #4]
  57:.\tic_tac_toe.c **** 		for (i = 0; i < num;i++){
  75              		.loc 1 57 0 discriminator 3
  76 0042 7B69     		ldr	r3, [r7, #20]
  77 0044 0133     		adds	r3, r3, #1
  78 0046 7B61     		str	r3, [r7, #20]
  79              	.L3:
  57:.\tic_tac_toe.c **** 		for (i = 0; i < num;i++){
  80              		.loc 1 57 0 is_stmt 0 discriminator 1
  81 0048 7A69     		ldr	r2, [r7, #20]
  82 004a 3B69     		ldr	r3, [r7, #16]
  83 004c 9A42     		cmp	r2, r3
  84 004e F1DB     		blt	.L4
  85              	.L2:
  86              	.LBE2:
  59:.\tic_tac_toe.c **** 		}
  60:.\tic_tac_toe.c **** 	}
  61:.\tic_tac_toe.c **** 	t->player = 1; // default to player 1
  87              		.loc 1 61 0 is_stmt 1
  88 0050 FB68     		ldr	r3, [r7, #12]
  89 0052 0122     		movs	r2, #1
  90 0054 9A60     		str	r2, [r3, #8]
  62:.\tic_tac_toe.c **** 	t->game_not_won = 0;
  91              		.loc 1 62 0
  92 0056 FB68     		ldr	r3, [r7, #12]
  93 0058 0022     		movs	r2, #0
  94 005a 1A61     		str	r2, [r3, #16]
  63:.\tic_tac_toe.c **** 	t->turn = 1;
  95              		.loc 1 63 0
  96 005c FB68     		ldr	r3, [r7, #12]
  97 005e 0122     		movs	r2, #1
  98 0060 DA60     		str	r2, [r3, #12]
  64:.\tic_tac_toe.c **** };
  99              		.loc 1 64 0
 100 0062 1C37     		adds	r7, r7, #28
 101              		.cfi_def_cfa_offset 4
 102 0064 BD46     		mov	sp, r7
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0066 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 4


 106              		.cfi_restore 7
 107              		.cfi_def_cfa_offset 0
 108 006a 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE63:
 111              		.size	ttc_init, .-ttc_init
 112              		.section	.text.ttc_set_grid,"ax",%progbits
 113              		.align	2
 114              		.global	ttc_set_grid
 115              		.thumb
 116              		.thumb_func
 117              		.type	ttc_set_grid, %function
 118              	ttc_set_grid:
 119              	.LFB64:
  65:.\tic_tac_toe.c **** 
  66:.\tic_tac_toe.c **** int ttc_set_grid(struct tic_tac_toe* t, int x, int y, int z, int value){
 120              		.loc 1 66 0
 121              		.cfi_startproc
 122              		@ args = 4, pretend = 0, frame = 24
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125 0000 80B4     		push	{r7}
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 7, -4
 128 0002 87B0     		sub	sp, sp, #28
 129              		.cfi_def_cfa_offset 32
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 132 0006 F860     		str	r0, [r7, #12]
 133 0008 B960     		str	r1, [r7, #8]
 134 000a 7A60     		str	r2, [r7, #4]
 135 000c 3B60     		str	r3, [r7]
  67:.\tic_tac_toe.c **** 	int loc = z*16 + y*4 + x;
 136              		.loc 1 67 0
 137 000e 3B68     		ldr	r3, [r7]
 138 0010 9A00     		lsls	r2, r3, #2
 139 0012 7B68     		ldr	r3, [r7, #4]
 140 0014 1344     		add	r3, r3, r2
 141 0016 9A00     		lsls	r2, r3, #2
 142 0018 BB68     		ldr	r3, [r7, #8]
 143 001a 1344     		add	r3, r3, r2
 144 001c 7B61     		str	r3, [r7, #20]
  68:.\tic_tac_toe.c **** 	t->grid[loc] = value;
 145              		.loc 1 68 0
 146 001e FA68     		ldr	r2, [r7, #12]
 147 0020 7B69     		ldr	r3, [r7, #20]
 148 0022 0433     		adds	r3, r3, #4
 149 0024 9B00     		lsls	r3, r3, #2
 150 0026 1344     		add	r3, r3, r2
 151 0028 3A6A     		ldr	r2, [r7, #32]
 152 002a 5A60     		str	r2, [r3, #4]
  69:.\tic_tac_toe.c **** 	// printf("\nSet Value %i %i %i %i",x,y,z,value); 
  70:.\tic_tac_toe.c **** 	return 1; // return 1 to show completed properly
 153              		.loc 1 70 0
 154 002c 0123     		movs	r3, #1
  71:.\tic_tac_toe.c **** }
 155              		.loc 1 71 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 5


 156 002e 1846     		mov	r0, r3
 157 0030 1C37     		adds	r7, r7, #28
 158              		.cfi_def_cfa_offset 4
 159 0032 BD46     		mov	sp, r7
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 0034 5DF8047B 		ldr	r7, [sp], #4
 163              		.cfi_restore 7
 164              		.cfi_def_cfa_offset 0
 165 0038 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE64:
 168              		.size	ttc_set_grid, .-ttc_set_grid
 169 003a 00BF     		.section	.text.ttc_get_grid,"ax",%progbits
 170              		.align	2
 171              		.global	ttc_get_grid
 172              		.thumb
 173              		.thumb_func
 174              		.type	ttc_get_grid, %function
 175              	ttc_get_grid:
 176              	.LFB65:
  72:.\tic_tac_toe.c **** 
  73:.\tic_tac_toe.c **** int ttc_get_grid(struct tic_tac_toe* t, int x, int y, int z){
 177              		.loc 1 73 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 24
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182 0000 80B4     		push	{r7}
 183              		.cfi_def_cfa_offset 4
 184              		.cfi_offset 7, -4
 185 0002 87B0     		sub	sp, sp, #28
 186              		.cfi_def_cfa_offset 32
 187 0004 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
 189 0006 F860     		str	r0, [r7, #12]
 190 0008 B960     		str	r1, [r7, #8]
 191 000a 7A60     		str	r2, [r7, #4]
 192 000c 3B60     		str	r3, [r7]
  74:.\tic_tac_toe.c **** 	int loc = z*16 + y*4 + x;
 193              		.loc 1 74 0
 194 000e 3B68     		ldr	r3, [r7]
 195 0010 9A00     		lsls	r2, r3, #2
 196 0012 7B68     		ldr	r3, [r7, #4]
 197 0014 1344     		add	r3, r3, r2
 198 0016 9A00     		lsls	r2, r3, #2
 199 0018 BB68     		ldr	r3, [r7, #8]
 200 001a 1344     		add	r3, r3, r2
 201 001c 7B61     		str	r3, [r7, #20]
  75:.\tic_tac_toe.c **** 	int ret = t->grid[loc];
 202              		.loc 1 75 0
 203 001e FA68     		ldr	r2, [r7, #12]
 204 0020 7B69     		ldr	r3, [r7, #20]
 205 0022 0433     		adds	r3, r3, #4
 206 0024 9B00     		lsls	r3, r3, #2
 207 0026 1344     		add	r3, r3, r2
 208 0028 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 6


 209 002a 3B61     		str	r3, [r7, #16]
  76:.\tic_tac_toe.c **** 	// printf("\nGet Value %i %i %i %i",x,y,z,ret); 
  77:.\tic_tac_toe.c **** 	return ret;
 210              		.loc 1 77 0
 211 002c 3B69     		ldr	r3, [r7, #16]
  78:.\tic_tac_toe.c **** }
 212              		.loc 1 78 0
 213 002e 1846     		mov	r0, r3
 214 0030 1C37     		adds	r7, r7, #28
 215              		.cfi_def_cfa_offset 4
 216 0032 BD46     		mov	sp, r7
 217              		.cfi_def_cfa_register 13
 218              		@ sp needed
 219 0034 5DF8047B 		ldr	r7, [sp], #4
 220              		.cfi_restore 7
 221              		.cfi_def_cfa_offset 0
 222 0038 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE65:
 225              		.size	ttc_get_grid, .-ttc_get_grid
 226 003a 00BF     		.section	.rodata
 227              		.align	2
 228              	.LC0:
 229 0000 0A4F7574 		.ascii	"\012Out of bounds %i %i %i\000"
 229      206F6620 
 229      626F756E 
 229      64732025 
 229      69202569 
 230              		.align	2
 231              	.LC1:
 232 0018 0A506F73 		.ascii	"\012Position already occupied %i %i %i\000"
 232      6974696F 
 232      6E20616C 
 232      72656164 
 232      79206F63 
 233              		.section	.text.ttc_check_valid,"ax",%progbits
 234              		.align	2
 235              		.global	ttc_check_valid
 236              		.thumb
 237              		.thumb_func
 238              		.type	ttc_check_valid, %function
 239              	ttc_check_valid:
 240              	.LFB66:
  79:.\tic_tac_toe.c **** 
  80:.\tic_tac_toe.c **** int ttc_check_valid(struct tic_tac_toe* t, int x, int y, int z){
 241              		.loc 1 80 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 24
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0000 80B5     		push	{r7, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 86B0     		sub	sp, sp, #24
 250              		.cfi_def_cfa_offset 32
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 7


 253 0006 F860     		str	r0, [r7, #12]
 254 0008 B960     		str	r1, [r7, #8]
 255 000a 7A60     		str	r2, [r7, #4]
 256 000c 3B60     		str	r3, [r7]
  81:.\tic_tac_toe.c **** 	int loc = z*16 + y*4 + x;
 257              		.loc 1 81 0
 258 000e 3B68     		ldr	r3, [r7]
 259 0010 9A00     		lsls	r2, r3, #2
 260 0012 7B68     		ldr	r3, [r7, #4]
 261 0014 1344     		add	r3, r3, r2
 262 0016 9A00     		lsls	r2, r3, #2
 263 0018 BB68     		ldr	r3, [r7, #8]
 264 001a 1344     		add	r3, r3, r2
 265 001c 7B61     		str	r3, [r7, #20]
  82:.\tic_tac_toe.c **** 	if (x < 0 || y < 0 || z < 0){
 266              		.loc 1 82 0
 267 001e BB68     		ldr	r3, [r7, #8]
 268 0020 002B     		cmp	r3, #0
 269 0022 05DB     		blt	.L10
 270              		.loc 1 82 0 is_stmt 0 discriminator 1
 271 0024 7B68     		ldr	r3, [r7, #4]
 272 0026 002B     		cmp	r3, #0
 273 0028 02DB     		blt	.L10
 274              		.loc 1 82 0 discriminator 2
 275 002a 3B68     		ldr	r3, [r7]
 276 002c 002B     		cmp	r3, #0
 277 002e 07DA     		bge	.L11
 278              	.L10:
  83:.\tic_tac_toe.c **** 		printf("\nOut of bounds %i %i %i",x,y,z); 
 279              		.loc 1 83 0 is_stmt 1
 280 0030 1948     		ldr	r0, .L16
 281 0032 B968     		ldr	r1, [r7, #8]
 282 0034 7A68     		ldr	r2, [r7, #4]
 283 0036 3B68     		ldr	r3, [r7]
 284 0038 FFF7FEFF 		bl	printf
  84:.\tic_tac_toe.c **** 		return 0;
 285              		.loc 1 84 0
 286 003c 0023     		movs	r3, #0
 287 003e 27E0     		b	.L12
 288              	.L11:
  85:.\tic_tac_toe.c **** 	}
  86:.\tic_tac_toe.c **** 	else if (x >= t->size || y >= t->size || z >= t->size){
 289              		.loc 1 86 0
 290 0040 FB68     		ldr	r3, [r7, #12]
 291 0042 1A68     		ldr	r2, [r3]
 292 0044 BB68     		ldr	r3, [r7, #8]
 293 0046 9A42     		cmp	r2, r3
 294 0048 09DD     		ble	.L13
 295              		.loc 1 86 0 is_stmt 0 discriminator 1
 296 004a FB68     		ldr	r3, [r7, #12]
 297 004c 1A68     		ldr	r2, [r3]
 298 004e 7B68     		ldr	r3, [r7, #4]
 299 0050 9A42     		cmp	r2, r3
 300 0052 04DD     		ble	.L13
 301              		.loc 1 86 0 discriminator 2
 302 0054 FB68     		ldr	r3, [r7, #12]
 303 0056 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 8


 304 0058 3B68     		ldr	r3, [r7]
 305 005a 9A42     		cmp	r2, r3
 306 005c 07DC     		bgt	.L14
 307              	.L13:
  87:.\tic_tac_toe.c **** 		printf("\nOut of bounds %i %i %i",x,y,z); 
 308              		.loc 1 87 0 is_stmt 1
 309 005e 0E48     		ldr	r0, .L16
 310 0060 B968     		ldr	r1, [r7, #8]
 311 0062 7A68     		ldr	r2, [r7, #4]
 312 0064 3B68     		ldr	r3, [r7]
 313 0066 FFF7FEFF 		bl	printf
  88:.\tic_tac_toe.c **** 		return 0;
 314              		.loc 1 88 0
 315 006a 0023     		movs	r3, #0
 316 006c 10E0     		b	.L12
 317              	.L14:
  89:.\tic_tac_toe.c **** 	}
  90:.\tic_tac_toe.c **** 	else if (t->grid[loc] != 0){ // already occupied position
 318              		.loc 1 90 0
 319 006e FA68     		ldr	r2, [r7, #12]
 320 0070 7B69     		ldr	r3, [r7, #20]
 321 0072 0433     		adds	r3, r3, #4
 322 0074 9B00     		lsls	r3, r3, #2
 323 0076 1344     		add	r3, r3, r2
 324 0078 5B68     		ldr	r3, [r3, #4]
 325 007a 002B     		cmp	r3, #0
 326 007c 07D0     		beq	.L15
  91:.\tic_tac_toe.c **** 		printf("\nPosition already occupied %i %i %i",x,y,z); 
 327              		.loc 1 91 0
 328 007e 0748     		ldr	r0, .L16+4
 329 0080 B968     		ldr	r1, [r7, #8]
 330 0082 7A68     		ldr	r2, [r7, #4]
 331 0084 3B68     		ldr	r3, [r7]
 332 0086 FFF7FEFF 		bl	printf
  92:.\tic_tac_toe.c **** 		return 0;
 333              		.loc 1 92 0
 334 008a 0023     		movs	r3, #0
 335 008c 00E0     		b	.L12
 336              	.L15:
  93:.\tic_tac_toe.c **** 	}
  94:.\tic_tac_toe.c **** 	else{
  95:.\tic_tac_toe.c **** 		return 1; //free position
 337              		.loc 1 95 0
 338 008e 0123     		movs	r3, #1
 339              	.L12:
  96:.\tic_tac_toe.c **** 	}
  97:.\tic_tac_toe.c **** 
  98:.\tic_tac_toe.c **** }
 340              		.loc 1 98 0
 341 0090 1846     		mov	r0, r3
 342 0092 1837     		adds	r7, r7, #24
 343              		.cfi_def_cfa_offset 8
 344 0094 BD46     		mov	sp, r7
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 0096 80BD     		pop	{r7, pc}
 348              	.L17:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 9


 349              		.align	2
 350              	.L16:
 351 0098 00000000 		.word	.LC0
 352 009c 18000000 		.word	.LC1
 353              		.cfi_endproc
 354              	.LFE66:
 355              		.size	ttc_check_valid, .-ttc_check_valid
 356              		.section	.text.ttc_change_player,"ax",%progbits
 357              		.align	2
 358              		.global	ttc_change_player
 359              		.thumb
 360              		.thumb_func
 361              		.type	ttc_change_player, %function
 362              	ttc_change_player:
 363              	.LFB67:
  99:.\tic_tac_toe.c **** 
 100:.\tic_tac_toe.c **** void ttc_change_player(struct tic_tac_toe* t){
 364              		.loc 1 100 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 7, -4
 372 0002 83B0     		sub	sp, sp, #12
 373              		.cfi_def_cfa_offset 16
 374 0004 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
 376 0006 7860     		str	r0, [r7, #4]
 101:.\tic_tac_toe.c **** 	if (t->player == 1){
 377              		.loc 1 101 0
 378 0008 7B68     		ldr	r3, [r7, #4]
 379 000a 9B68     		ldr	r3, [r3, #8]
 380 000c 012B     		cmp	r3, #1
 381 000e 04D1     		bne	.L19
 102:.\tic_tac_toe.c **** 		t->player = -1;
 382              		.loc 1 102 0
 383 0010 7B68     		ldr	r3, [r7, #4]
 384 0012 4FF0FF32 		mov	r2, #-1
 385 0016 9A60     		str	r2, [r3, #8]
 386 0018 07E0     		b	.L20
 387              	.L19:
 103:.\tic_tac_toe.c **** 	}
 104:.\tic_tac_toe.c **** 	else if (t-> player == -1){
 388              		.loc 1 104 0
 389 001a 7B68     		ldr	r3, [r7, #4]
 390 001c 9B68     		ldr	r3, [r3, #8]
 391 001e B3F1FF3F 		cmp	r3, #-1
 392 0022 02D1     		bne	.L20
 105:.\tic_tac_toe.c **** 		t->player = 1;
 393              		.loc 1 105 0
 394 0024 7B68     		ldr	r3, [r7, #4]
 395 0026 0122     		movs	r2, #1
 396 0028 9A60     		str	r2, [r3, #8]
 397              	.L20:
 106:.\tic_tac_toe.c **** 	}
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 10


 107:.\tic_tac_toe.c **** 	t->turn++;
 398              		.loc 1 107 0
 399 002a 7B68     		ldr	r3, [r7, #4]
 400 002c DB68     		ldr	r3, [r3, #12]
 401 002e 5A1C     		adds	r2, r3, #1
 402 0030 7B68     		ldr	r3, [r7, #4]
 403 0032 DA60     		str	r2, [r3, #12]
 108:.\tic_tac_toe.c **** }
 404              		.loc 1 108 0
 405 0034 0C37     		adds	r7, r7, #12
 406              		.cfi_def_cfa_offset 4
 407 0036 BD46     		mov	sp, r7
 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 0038 5DF8047B 		ldr	r7, [sp], #4
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 003c 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE67:
 416              		.size	ttc_change_player, .-ttc_change_player
 417 003e 00BF     		.section	.rodata
 418              		.align	2
 419              	.LC2:
 420 003c 0A456E74 		.ascii	"\012Enter a position: \000"
 420      65722061 
 420      20706F73 
 420      6974696F 
 420      6E3A2000 
 421              		.align	2
 422              	.LC3:
 423 0050 257300   		.ascii	"%s\000"
 424 0053 00       		.align	2
 425              	.LC4:
 426 0054 456E7465 		.ascii	"Entered %i %i %i\000"
 426      72656420 
 426      25692025 
 426      69202569 
 426      00
 427              		.section	.text.ttc_take_input,"ax",%progbits
 428              		.align	2
 429              		.global	ttc_take_input
 430              		.thumb
 431              		.thumb_func
 432              		.type	ttc_take_input, %function
 433              	ttc_take_input:
 434              	.LFB68:
 109:.\tic_tac_toe.c **** 
 110:.\tic_tac_toe.c **** int * ttc_take_input(){ 
 435              		.loc 1 110 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 8
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439 0000 80B5     		push	{r7, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 11


 443 0002 82B0     		sub	sp, sp, #8
 444              		.cfi_def_cfa_offset 16
 445 0004 00AF     		add	r7, sp, #0
 446              		.cfi_def_cfa_register 7
 111:.\tic_tac_toe.c **** 	// take a user input, return x y z array pointer
 112:.\tic_tac_toe.c **** 	printf("\nEnter a position: ");
 447              		.loc 1 112 0
 448 0006 1148     		ldr	r0, .L23
 449 0008 FFF7FEFF 		bl	printf
 113:.\tic_tac_toe.c **** 	char str2[3];
 114:.\tic_tac_toe.c **** 	scanf("%s", str2);
 450              		.loc 1 114 0
 451 000c 3B1D     		adds	r3, r7, #4
 452 000e 1048     		ldr	r0, .L23+4
 453 0010 1946     		mov	r1, r3
 454 0012 FFF7FEFF 		bl	scanf
 115:.\tic_tac_toe.c **** 	static int ret[3];
 116:.\tic_tac_toe.c **** 	ret[0] = str2[0]-48; //without atoi, we get ascii value
 455              		.loc 1 116 0
 456 0016 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 457 0018 303B     		subs	r3, r3, #48
 458 001a 0E4A     		ldr	r2, .L23+8
 459 001c 1360     		str	r3, [r2]
 117:.\tic_tac_toe.c **** 	ret[1] = str2[1]-48; //or can do ascii conversion
 460              		.loc 1 117 0
 461 001e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 462 0020 303B     		subs	r3, r3, #48
 463 0022 0C4A     		ldr	r2, .L23+8
 464 0024 5360     		str	r3, [r2, #4]
 118:.\tic_tac_toe.c **** 	ret[2] = str2[2]-48; // int temp = atoi(str2);
 465              		.loc 1 118 0
 466 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 467 0028 303B     		subs	r3, r3, #48
 468 002a 0A4A     		ldr	r2, .L23+8
 469 002c 9360     		str	r3, [r2, #8]
 119:.\tic_tac_toe.c **** 	// free(str2);
 120:.\tic_tac_toe.c **** 	printf("Entered %i %i %i",ret[0],ret[1],ret[2]);
 470              		.loc 1 120 0
 471 002e 094B     		ldr	r3, .L23+8
 472 0030 1968     		ldr	r1, [r3]
 473 0032 084B     		ldr	r3, .L23+8
 474 0034 5A68     		ldr	r2, [r3, #4]
 475 0036 074B     		ldr	r3, .L23+8
 476 0038 9B68     		ldr	r3, [r3, #8]
 477 003a 0748     		ldr	r0, .L23+12
 478 003c FFF7FEFF 		bl	printf
 121:.\tic_tac_toe.c **** 	return ret;
 479              		.loc 1 121 0
 480 0040 044B     		ldr	r3, .L23+8
 122:.\tic_tac_toe.c **** }
 481              		.loc 1 122 0
 482 0042 1846     		mov	r0, r3
 483 0044 0837     		adds	r7, r7, #8
 484              		.cfi_def_cfa_offset 8
 485 0046 BD46     		mov	sp, r7
 486              		.cfi_def_cfa_register 13
 487              		@ sp needed
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 12


 488 0048 80BD     		pop	{r7, pc}
 489              	.L24:
 490 004a 00BF     		.align	2
 491              	.L23:
 492 004c 3C000000 		.word	.LC2
 493 0050 50000000 		.word	.LC3
 494 0054 00000000 		.word	ret.6798
 495 0058 54000000 		.word	.LC4
 496              		.cfi_endproc
 497              	.LFE68:
 498              		.size	ttc_take_input, .-ttc_take_input
 499              		.section	.rodata
 500 0065 000000   		.align	2
 501              	.LC5:
 502 0068 25692000 		.ascii	"%i \000"
 503              		.align	2
 504              	.LC6:
 505 006c 0A416674 		.ascii	"\012After turn %i player %i\012\000"
 505      65722074 
 505      75726E20 
 505      25692070 
 505      6C617965 
 506              		.section	.text.ttc_print_grid,"ax",%progbits
 507              		.align	2
 508              		.global	ttc_print_grid
 509              		.thumb
 510              		.thumb_func
 511              		.type	ttc_print_grid, %function
 512              	ttc_print_grid:
 513              	.LFB69:
 123:.\tic_tac_toe.c **** 
 124:.\tic_tac_toe.c **** void ttc_print_grid(struct tic_tac_toe* t){
 514              		.loc 1 124 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 16
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518 0000 80B5     		push	{r7, lr}
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 84B0     		sub	sp, sp, #16
 523              		.cfi_def_cfa_offset 24
 524 0004 00AF     		add	r7, sp, #0
 525              		.cfi_def_cfa_register 7
 526 0006 7860     		str	r0, [r7, #4]
 125:.\tic_tac_toe.c **** 	// this function prints the board
 126:.\tic_tac_toe.c **** 	int i;
 127:.\tic_tac_toe.c **** 	for (i = 0; i < 64; i++){
 527              		.loc 1 127 0
 528 0008 0023     		movs	r3, #0
 529 000a FB60     		str	r3, [r7, #12]
 530 000c 28E0     		b	.L26
 531              	.L30:
 128:.\tic_tac_toe.c **** 		if (i % 4 == 0){
 532              		.loc 1 128 0
 533 000e FB68     		ldr	r3, [r7, #12]
 534 0010 03F00303 		and	r3, r3, #3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 13


 535 0014 002B     		cmp	r3, #0
 536 0016 02D1     		bne	.L27
 129:.\tic_tac_toe.c **** 			printf("\n");
 537              		.loc 1 129 0
 538 0018 0A20     		movs	r0, #10
 539 001a FFF7FEFF 		bl	putchar
 540              	.L27:
 130:.\tic_tac_toe.c **** 		}
 131:.\tic_tac_toe.c **** 		if (i % 16 == 0){
 541              		.loc 1 131 0
 542 001e FB68     		ldr	r3, [r7, #12]
 543 0020 03F00F03 		and	r3, r3, #15
 544 0024 002B     		cmp	r3, #0
 545 0026 02D1     		bne	.L28
 132:.\tic_tac_toe.c **** 			printf("\n");
 546              		.loc 1 132 0
 547 0028 0A20     		movs	r0, #10
 548 002a FFF7FEFF 		bl	putchar
 549              	.L28:
 133:.\tic_tac_toe.c **** 		}
 134:.\tic_tac_toe.c **** 		printf("%i ",t->grid[i]);
 550              		.loc 1 134 0
 551 002e 7A68     		ldr	r2, [r7, #4]
 552 0030 FB68     		ldr	r3, [r7, #12]
 553 0032 0433     		adds	r3, r3, #4
 554 0034 9B00     		lsls	r3, r3, #2
 555 0036 1344     		add	r3, r3, r2
 556 0038 5B68     		ldr	r3, [r3, #4]
 557 003a 1148     		ldr	r0, .L31
 558 003c 1946     		mov	r1, r3
 559 003e FFF7FEFF 		bl	printf
 135:.\tic_tac_toe.c **** 		if (t->grid[i] != -1){
 560              		.loc 1 135 0
 561 0042 7A68     		ldr	r2, [r7, #4]
 562 0044 FB68     		ldr	r3, [r7, #12]
 563 0046 0433     		adds	r3, r3, #4
 564 0048 9B00     		lsls	r3, r3, #2
 565 004a 1344     		add	r3, r3, r2
 566 004c 5B68     		ldr	r3, [r3, #4]
 567 004e B3F1FF3F 		cmp	r3, #-1
 568 0052 02D0     		beq	.L29
 136:.\tic_tac_toe.c **** 			printf(" ");
 569              		.loc 1 136 0
 570 0054 2020     		movs	r0, #32
 571 0056 FFF7FEFF 		bl	putchar
 572              	.L29:
 127:.\tic_tac_toe.c **** 		if (i % 4 == 0){
 573              		.loc 1 127 0 discriminator 2
 574 005a FB68     		ldr	r3, [r7, #12]
 575 005c 0133     		adds	r3, r3, #1
 576 005e FB60     		str	r3, [r7, #12]
 577              	.L26:
 127:.\tic_tac_toe.c **** 		if (i % 4 == 0){
 578              		.loc 1 127 0 is_stmt 0 discriminator 1
 579 0060 FB68     		ldr	r3, [r7, #12]
 580 0062 3F2B     		cmp	r3, #63
 581 0064 D3DD     		ble	.L30
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 14


 137:.\tic_tac_toe.c **** 		}
 138:.\tic_tac_toe.c **** 	}
 139:.\tic_tac_toe.c **** 	printf("\nAfter turn %i player %i\n",t->turn,t->player);
 582              		.loc 1 139 0 is_stmt 1
 583 0066 7B68     		ldr	r3, [r7, #4]
 584 0068 DA68     		ldr	r2, [r3, #12]
 585 006a 7B68     		ldr	r3, [r7, #4]
 586 006c 9B68     		ldr	r3, [r3, #8]
 587 006e 0548     		ldr	r0, .L31+4
 588 0070 1146     		mov	r1, r2
 589 0072 1A46     		mov	r2, r3
 590 0074 FFF7FEFF 		bl	printf
 140:.\tic_tac_toe.c **** }
 591              		.loc 1 140 0
 592 0078 1037     		adds	r7, r7, #16
 593              		.cfi_def_cfa_offset 8
 594 007a BD46     		mov	sp, r7
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 007c 80BD     		pop	{r7, pc}
 598              	.L32:
 599 007e 00BF     		.align	2
 600              	.L31:
 601 0080 68000000 		.word	.LC5
 602 0084 6C000000 		.word	.LC6
 603              		.cfi_endproc
 604              	.LFE69:
 605              		.size	ttc_print_grid, .-ttc_print_grid
 606              		.section	.rodata
 607 0086 0000     		.align	2
 608              	.LC7:
 609 0088 0A506C61 		.ascii	"\012Player %i\000"
 609      79657220 
 609      256900
 610              		.section	.text.ttc_check_win,"ax",%progbits
 611              		.align	2
 612              		.global	ttc_check_win
 613              		.thumb
 614              		.thumb_func
 615              		.type	ttc_check_win, %function
 616              	ttc_check_win:
 617              	.LFB70:
 141:.\tic_tac_toe.c **** 
 142:.\tic_tac_toe.c **** 
 143:.\tic_tac_toe.c **** int ttc_check_win(struct tic_tac_toe* t){
 618              		.loc 1 143 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 32
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622 0000 80B5     		push	{r7, lr}
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 7, -8
 625              		.cfi_offset 14, -4
 626 0002 88B0     		sub	sp, sp, #32
 627              		.cfi_def_cfa_offset 40
 628 0004 00AF     		add	r7, sp, #0
 629              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 15


 630 0006 7860     		str	r0, [r7, #4]
 144:.\tic_tac_toe.c **** 	printf("\nPlayer %i",t->player);
 631              		.loc 1 144 0
 632 0008 7B68     		ldr	r3, [r7, #4]
 633 000a 9B68     		ldr	r3, [r3, #8]
 634 000c 8948     		ldr	r0, .L82
 635 000e 1946     		mov	r1, r3
 636 0010 FFF7FEFF 		bl	printf
 145:.\tic_tac_toe.c **** 	int x,y,z,zp;
 146:.\tic_tac_toe.c **** 	int connected;
 147:.\tic_tac_toe.c **** 	for (z = 0; z < t->size; z++){
 637              		.loc 1 147 0
 638 0014 0023     		movs	r3, #0
 639 0016 7B61     		str	r3, [r7, #20]
 640 0018 84E1     		b	.L34
 641              	.L69:
 148:.\tic_tac_toe.c **** 		for (y = 0; y < t->size; y++){ // flat
 642              		.loc 1 148 0
 643 001a 0023     		movs	r3, #0
 644 001c BB61     		str	r3, [r7, #24]
 645 001e 28E0     		b	.L35
 646              	.L40:
 149:.\tic_tac_toe.c **** 			connected = 0;
 647              		.loc 1 149 0
 648 0020 0023     		movs	r3, #0
 649 0022 FB60     		str	r3, [r7, #12]
 150:.\tic_tac_toe.c **** 			for (x = 0; x < t->size;x++){
 650              		.loc 1 150 0
 651 0024 0023     		movs	r3, #0
 652 0026 FB61     		str	r3, [r7, #28]
 653 0028 0CE0     		b	.L36
 654              	.L37:
 151:.\tic_tac_toe.c **** 				connected += ttc_get_grid(t,x,y,z);
 655              		.loc 1 151 0 discriminator 3
 656 002a 7868     		ldr	r0, [r7, #4]
 657 002c F969     		ldr	r1, [r7, #28]
 658 002e BA69     		ldr	r2, [r7, #24]
 659 0030 7B69     		ldr	r3, [r7, #20]
 660 0032 FFF7FEFF 		bl	ttc_get_grid
 661 0036 0246     		mov	r2, r0
 662 0038 FB68     		ldr	r3, [r7, #12]
 663 003a 1344     		add	r3, r3, r2
 664 003c FB60     		str	r3, [r7, #12]
 150:.\tic_tac_toe.c **** 			for (x = 0; x < t->size;x++){
 665              		.loc 1 150 0 discriminator 3
 666 003e FB69     		ldr	r3, [r7, #28]
 667 0040 0133     		adds	r3, r3, #1
 668 0042 FB61     		str	r3, [r7, #28]
 669              	.L36:
 150:.\tic_tac_toe.c **** 			for (x = 0; x < t->size;x++){
 670              		.loc 1 150 0 is_stmt 0 discriminator 1
 671 0044 7B68     		ldr	r3, [r7, #4]
 672 0046 1A68     		ldr	r2, [r3]
 673 0048 FB69     		ldr	r3, [r7, #28]
 674 004a 9A42     		cmp	r2, r3
 675 004c EDDC     		bgt	.L37
 152:.\tic_tac_toe.c **** 			}
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 16


 153:.\tic_tac_toe.c **** 			if (connected == t->player*t->size){
 676              		.loc 1 153 0 is_stmt 1
 677 004e 7B68     		ldr	r3, [r7, #4]
 678 0050 9B68     		ldr	r3, [r3, #8]
 679 0052 7A68     		ldr	r2, [r7, #4]
 680 0054 1268     		ldr	r2, [r2]
 681 0056 02FB03F2 		mul	r2, r2, r3
 682 005a FB68     		ldr	r3, [r7, #12]
 683 005c 9A42     		cmp	r2, r3
 684 005e 05D1     		bne	.L38
 154:.\tic_tac_toe.c **** 				t->game_not_won = t->player; //when win, set to player id
 685              		.loc 1 154 0
 686 0060 7B68     		ldr	r3, [r7, #4]
 687 0062 9A68     		ldr	r2, [r3, #8]
 688 0064 7B68     		ldr	r3, [r7, #4]
 689 0066 1A61     		str	r2, [r3, #16]
 155:.\tic_tac_toe.c **** 				return 1; //there is a win
 690              		.loc 1 155 0
 691 0068 0123     		movs	r3, #1
 692 006a 03E2     		b	.L39
 693              	.L38:
 148:.\tic_tac_toe.c **** 			connected = 0;
 694              		.loc 1 148 0 discriminator 2
 695 006c BB69     		ldr	r3, [r7, #24]
 696 006e 0133     		adds	r3, r3, #1
 697 0070 BB61     		str	r3, [r7, #24]
 698              	.L35:
 148:.\tic_tac_toe.c **** 			connected = 0;
 699              		.loc 1 148 0 is_stmt 0 discriminator 1
 700 0072 7B68     		ldr	r3, [r7, #4]
 701 0074 1A68     		ldr	r2, [r3]
 702 0076 BB69     		ldr	r3, [r7, #24]
 703 0078 9A42     		cmp	r2, r3
 704 007a D1DC     		bgt	.L40
 156:.\tic_tac_toe.c **** 			}
 157:.\tic_tac_toe.c **** 		}
 158:.\tic_tac_toe.c **** 		for (x = 0; x < t->size; x++){ //horiz
 705              		.loc 1 158 0 is_stmt 1
 706 007c 0023     		movs	r3, #0
 707 007e FB61     		str	r3, [r7, #28]
 708 0080 28E0     		b	.L41
 709              	.L45:
 159:.\tic_tac_toe.c **** 			connected = 0;
 710              		.loc 1 159 0
 711 0082 0023     		movs	r3, #0
 712 0084 FB60     		str	r3, [r7, #12]
 160:.\tic_tac_toe.c **** 			for (y = 0; y < t->size;y++){
 713              		.loc 1 160 0
 714 0086 0023     		movs	r3, #0
 715 0088 BB61     		str	r3, [r7, #24]
 716 008a 0CE0     		b	.L42
 717              	.L43:
 161:.\tic_tac_toe.c **** 				connected += ttc_get_grid(t,x,y,z);
 718              		.loc 1 161 0 discriminator 3
 719 008c 7868     		ldr	r0, [r7, #4]
 720 008e F969     		ldr	r1, [r7, #28]
 721 0090 BA69     		ldr	r2, [r7, #24]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 17


 722 0092 7B69     		ldr	r3, [r7, #20]
 723 0094 FFF7FEFF 		bl	ttc_get_grid
 724 0098 0246     		mov	r2, r0
 725 009a FB68     		ldr	r3, [r7, #12]
 726 009c 1344     		add	r3, r3, r2
 727 009e FB60     		str	r3, [r7, #12]
 160:.\tic_tac_toe.c **** 			for (y = 0; y < t->size;y++){
 728              		.loc 1 160 0 discriminator 3
 729 00a0 BB69     		ldr	r3, [r7, #24]
 730 00a2 0133     		adds	r3, r3, #1
 731 00a4 BB61     		str	r3, [r7, #24]
 732              	.L42:
 160:.\tic_tac_toe.c **** 			for (y = 0; y < t->size;y++){
 733              		.loc 1 160 0 is_stmt 0 discriminator 1
 734 00a6 7B68     		ldr	r3, [r7, #4]
 735 00a8 1A68     		ldr	r2, [r3]
 736 00aa BB69     		ldr	r3, [r7, #24]
 737 00ac 9A42     		cmp	r2, r3
 738 00ae EDDC     		bgt	.L43
 162:.\tic_tac_toe.c **** 			}
 163:.\tic_tac_toe.c **** 			if (connected == t->player*t->size){
 739              		.loc 1 163 0 is_stmt 1
 740 00b0 7B68     		ldr	r3, [r7, #4]
 741 00b2 9B68     		ldr	r3, [r3, #8]
 742 00b4 7A68     		ldr	r2, [r7, #4]
 743 00b6 1268     		ldr	r2, [r2]
 744 00b8 02FB03F2 		mul	r2, r2, r3
 745 00bc FB68     		ldr	r3, [r7, #12]
 746 00be 9A42     		cmp	r2, r3
 747 00c0 05D1     		bne	.L44
 164:.\tic_tac_toe.c **** 				t->game_not_won = t->player; //when win, set to player id
 748              		.loc 1 164 0
 749 00c2 7B68     		ldr	r3, [r7, #4]
 750 00c4 9A68     		ldr	r2, [r3, #8]
 751 00c6 7B68     		ldr	r3, [r7, #4]
 752 00c8 1A61     		str	r2, [r3, #16]
 165:.\tic_tac_toe.c **** 				return 1; //there is a win
 753              		.loc 1 165 0
 754 00ca 0123     		movs	r3, #1
 755 00cc D2E1     		b	.L39
 756              	.L44:
 158:.\tic_tac_toe.c **** 			connected = 0;
 757              		.loc 1 158 0 discriminator 2
 758 00ce FB69     		ldr	r3, [r7, #28]
 759 00d0 0133     		adds	r3, r3, #1
 760 00d2 FB61     		str	r3, [r7, #28]
 761              	.L41:
 158:.\tic_tac_toe.c **** 			connected = 0;
 762              		.loc 1 158 0 is_stmt 0 discriminator 1
 763 00d4 7B68     		ldr	r3, [r7, #4]
 764 00d6 1A68     		ldr	r2, [r3]
 765 00d8 FB69     		ldr	r3, [r7, #28]
 766 00da 9A42     		cmp	r2, r3
 767 00dc D1DC     		bgt	.L45
 166:.\tic_tac_toe.c **** 			}
 167:.\tic_tac_toe.c **** 		}
 168:.\tic_tac_toe.c **** 		for (x = 0; x < t->size; x++){ //vert, where z is y coord
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 18


 768              		.loc 1 168 0 is_stmt 1
 769 00de 0023     		movs	r3, #0
 770 00e0 FB61     		str	r3, [r7, #28]
 771 00e2 28E0     		b	.L46
 772              	.L50:
 169:.\tic_tac_toe.c **** 			connected = 0;
 773              		.loc 1 169 0
 774 00e4 0023     		movs	r3, #0
 775 00e6 FB60     		str	r3, [r7, #12]
 170:.\tic_tac_toe.c **** 			for (zp = 0; zp < t->size;zp++){
 776              		.loc 1 170 0
 777 00e8 0023     		movs	r3, #0
 778 00ea 3B61     		str	r3, [r7, #16]
 779 00ec 0CE0     		b	.L47
 780              	.L48:
 171:.\tic_tac_toe.c **** 				connected += ttc_get_grid(t,x,z,zp);
 781              		.loc 1 171 0 discriminator 3
 782 00ee 7868     		ldr	r0, [r7, #4]
 783 00f0 F969     		ldr	r1, [r7, #28]
 784 00f2 7A69     		ldr	r2, [r7, #20]
 785 00f4 3B69     		ldr	r3, [r7, #16]
 786 00f6 FFF7FEFF 		bl	ttc_get_grid
 787 00fa 0246     		mov	r2, r0
 788 00fc FB68     		ldr	r3, [r7, #12]
 789 00fe 1344     		add	r3, r3, r2
 790 0100 FB60     		str	r3, [r7, #12]
 170:.\tic_tac_toe.c **** 			for (zp = 0; zp < t->size;zp++){
 791              		.loc 1 170 0 discriminator 3
 792 0102 3B69     		ldr	r3, [r7, #16]
 793 0104 0133     		adds	r3, r3, #1
 794 0106 3B61     		str	r3, [r7, #16]
 795              	.L47:
 170:.\tic_tac_toe.c **** 			for (zp = 0; zp < t->size;zp++){
 796              		.loc 1 170 0 is_stmt 0 discriminator 1
 797 0108 7B68     		ldr	r3, [r7, #4]
 798 010a 1A68     		ldr	r2, [r3]
 799 010c 3B69     		ldr	r3, [r7, #16]
 800 010e 9A42     		cmp	r2, r3
 801 0110 EDDC     		bgt	.L48
 172:.\tic_tac_toe.c **** 			}
 173:.\tic_tac_toe.c **** 			if (connected == t->player*t->size){
 802              		.loc 1 173 0 is_stmt 1
 803 0112 7B68     		ldr	r3, [r7, #4]
 804 0114 9B68     		ldr	r3, [r3, #8]
 805 0116 7A68     		ldr	r2, [r7, #4]
 806 0118 1268     		ldr	r2, [r2]
 807 011a 02FB03F2 		mul	r2, r2, r3
 808 011e FB68     		ldr	r3, [r7, #12]
 809 0120 9A42     		cmp	r2, r3
 810 0122 05D1     		bne	.L49
 174:.\tic_tac_toe.c **** 				t->game_not_won = t->player; //when win, set to player id
 811              		.loc 1 174 0
 812 0124 7B68     		ldr	r3, [r7, #4]
 813 0126 9A68     		ldr	r2, [r3, #8]
 814 0128 7B68     		ldr	r3, [r7, #4]
 815 012a 1A61     		str	r2, [r3, #16]
 175:.\tic_tac_toe.c **** 				return 1; //there is a win
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 19


 816              		.loc 1 175 0
 817 012c 0123     		movs	r3, #1
 818 012e A1E1     		b	.L39
 819              	.L49:
 168:.\tic_tac_toe.c **** 			connected = 0;
 820              		.loc 1 168 0 discriminator 2
 821 0130 FB69     		ldr	r3, [r7, #28]
 822 0132 0133     		adds	r3, r3, #1
 823 0134 FB61     		str	r3, [r7, #28]
 824              	.L46:
 168:.\tic_tac_toe.c **** 			connected = 0;
 825              		.loc 1 168 0 is_stmt 0 discriminator 1
 826 0136 7B68     		ldr	r3, [r7, #4]
 827 0138 1A68     		ldr	r2, [r3]
 828 013a FB69     		ldr	r3, [r7, #28]
 829 013c 9A42     		cmp	r2, r3
 830 013e D1DC     		bgt	.L50
 176:.\tic_tac_toe.c **** 			}
 177:.\tic_tac_toe.c **** 		}
 178:.\tic_tac_toe.c **** 		connected = 0; //planar
 831              		.loc 1 178 0 is_stmt 1
 832 0140 0023     		movs	r3, #0
 833 0142 FB60     		str	r3, [r7, #12]
 179:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 834              		.loc 1 179 0
 835 0144 0023     		movs	r3, #0
 836 0146 3B61     		str	r3, [r7, #16]
 837 0148 0CE0     		b	.L51
 838              	.L52:
 180:.\tic_tac_toe.c **** 			connected += ttc_get_grid(t,z,zp,zp);
 839              		.loc 1 180 0 discriminator 3
 840 014a 7868     		ldr	r0, [r7, #4]
 841 014c 7969     		ldr	r1, [r7, #20]
 842 014e 3A69     		ldr	r2, [r7, #16]
 843 0150 3B69     		ldr	r3, [r7, #16]
 844 0152 FFF7FEFF 		bl	ttc_get_grid
 845 0156 0246     		mov	r2, r0
 846 0158 FB68     		ldr	r3, [r7, #12]
 847 015a 1344     		add	r3, r3, r2
 848 015c FB60     		str	r3, [r7, #12]
 179:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 849              		.loc 1 179 0 discriminator 3
 850 015e 3B69     		ldr	r3, [r7, #16]
 851 0160 0133     		adds	r3, r3, #1
 852 0162 3B61     		str	r3, [r7, #16]
 853              	.L51:
 179:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 854              		.loc 1 179 0 is_stmt 0 discriminator 1
 855 0164 7B68     		ldr	r3, [r7, #4]
 856 0166 1A68     		ldr	r2, [r3]
 857 0168 3B69     		ldr	r3, [r7, #16]
 858 016a 9A42     		cmp	r2, r3
 859 016c EDDC     		bgt	.L52
 181:.\tic_tac_toe.c **** 		}
 182:.\tic_tac_toe.c **** 		if (connected == t->player*t->size){
 860              		.loc 1 182 0 is_stmt 1
 861 016e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 20


 862 0170 9B68     		ldr	r3, [r3, #8]
 863 0172 7A68     		ldr	r2, [r7, #4]
 864 0174 1268     		ldr	r2, [r2]
 865 0176 02FB03F2 		mul	r2, r2, r3
 866 017a FB68     		ldr	r3, [r7, #12]
 867 017c 9A42     		cmp	r2, r3
 868 017e 05D1     		bne	.L53
 183:.\tic_tac_toe.c **** 			t->game_not_won = t->player; //when win, set to player id
 869              		.loc 1 183 0
 870 0180 7B68     		ldr	r3, [r7, #4]
 871 0182 9A68     		ldr	r2, [r3, #8]
 872 0184 7B68     		ldr	r3, [r7, #4]
 873 0186 1A61     		str	r2, [r3, #16]
 184:.\tic_tac_toe.c **** 			return 1; //there is a win
 874              		.loc 1 184 0
 875 0188 0123     		movs	r3, #1
 876 018a 73E1     		b	.L39
 877              	.L53:
 185:.\tic_tac_toe.c **** 		}
 186:.\tic_tac_toe.c **** 		connected = 0; //planar
 878              		.loc 1 186 0
 879 018c 0023     		movs	r3, #0
 880 018e FB60     		str	r3, [r7, #12]
 187:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 881              		.loc 1 187 0
 882 0190 0023     		movs	r3, #0
 883 0192 3B61     		str	r3, [r7, #16]
 884 0194 0FE0     		b	.L54
 885              	.L55:
 188:.\tic_tac_toe.c **** 			connected += ttc_get_grid(t,z,3-zp,zp);
 886              		.loc 1 188 0 discriminator 3
 887 0196 3B69     		ldr	r3, [r7, #16]
 888 0198 C3F10303 		rsb	r3, r3, #3
 889 019c 7868     		ldr	r0, [r7, #4]
 890 019e 7969     		ldr	r1, [r7, #20]
 891 01a0 1A46     		mov	r2, r3
 892 01a2 3B69     		ldr	r3, [r7, #16]
 893 01a4 FFF7FEFF 		bl	ttc_get_grid
 894 01a8 0246     		mov	r2, r0
 895 01aa FB68     		ldr	r3, [r7, #12]
 896 01ac 1344     		add	r3, r3, r2
 897 01ae FB60     		str	r3, [r7, #12]
 187:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 898              		.loc 1 187 0 discriminator 3
 899 01b0 3B69     		ldr	r3, [r7, #16]
 900 01b2 0133     		adds	r3, r3, #1
 901 01b4 3B61     		str	r3, [r7, #16]
 902              	.L54:
 187:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 903              		.loc 1 187 0 is_stmt 0 discriminator 1
 904 01b6 7B68     		ldr	r3, [r7, #4]
 905 01b8 1A68     		ldr	r2, [r3]
 906 01ba 3B69     		ldr	r3, [r7, #16]
 907 01bc 9A42     		cmp	r2, r3
 908 01be EADC     		bgt	.L55
 189:.\tic_tac_toe.c **** 		}
 190:.\tic_tac_toe.c **** 		if (connected == t->player*t->size){
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 21


 909              		.loc 1 190 0 is_stmt 1
 910 01c0 7B68     		ldr	r3, [r7, #4]
 911 01c2 9B68     		ldr	r3, [r3, #8]
 912 01c4 7A68     		ldr	r2, [r7, #4]
 913 01c6 1268     		ldr	r2, [r2]
 914 01c8 02FB03F2 		mul	r2, r2, r3
 915 01cc FB68     		ldr	r3, [r7, #12]
 916 01ce 9A42     		cmp	r2, r3
 917 01d0 05D1     		bne	.L56
 191:.\tic_tac_toe.c **** 			t->game_not_won = t->player; //when win, set to player id
 918              		.loc 1 191 0
 919 01d2 7B68     		ldr	r3, [r7, #4]
 920 01d4 9A68     		ldr	r2, [r3, #8]
 921 01d6 7B68     		ldr	r3, [r7, #4]
 922 01d8 1A61     		str	r2, [r3, #16]
 192:.\tic_tac_toe.c **** 			return 1; //there is a win
 923              		.loc 1 192 0
 924 01da 0123     		movs	r3, #1
 925 01dc 4AE1     		b	.L39
 926              	.L56:
 193:.\tic_tac_toe.c **** 		}
 194:.\tic_tac_toe.c **** 		connected = 0; //frontal
 927              		.loc 1 194 0
 928 01de 0023     		movs	r3, #0
 929 01e0 FB60     		str	r3, [r7, #12]
 195:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 930              		.loc 1 195 0
 931 01e2 0023     		movs	r3, #0
 932 01e4 3B61     		str	r3, [r7, #16]
 933 01e6 0CE0     		b	.L57
 934              	.L58:
 196:.\tic_tac_toe.c **** 			connected += ttc_get_grid(t,zp,z,zp);
 935              		.loc 1 196 0 discriminator 3
 936 01e8 7868     		ldr	r0, [r7, #4]
 937 01ea 3969     		ldr	r1, [r7, #16]
 938 01ec 7A69     		ldr	r2, [r7, #20]
 939 01ee 3B69     		ldr	r3, [r7, #16]
 940 01f0 FFF7FEFF 		bl	ttc_get_grid
 941 01f4 0246     		mov	r2, r0
 942 01f6 FB68     		ldr	r3, [r7, #12]
 943 01f8 1344     		add	r3, r3, r2
 944 01fa FB60     		str	r3, [r7, #12]
 195:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 945              		.loc 1 195 0 discriminator 3
 946 01fc 3B69     		ldr	r3, [r7, #16]
 947 01fe 0133     		adds	r3, r3, #1
 948 0200 3B61     		str	r3, [r7, #16]
 949              	.L57:
 195:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 950              		.loc 1 195 0 is_stmt 0 discriminator 1
 951 0202 7B68     		ldr	r3, [r7, #4]
 952 0204 1A68     		ldr	r2, [r3]
 953 0206 3B69     		ldr	r3, [r7, #16]
 954 0208 9A42     		cmp	r2, r3
 955 020a EDDC     		bgt	.L58
 197:.\tic_tac_toe.c **** 		}
 198:.\tic_tac_toe.c **** 		if (connected == t->player*t->size){
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 22


 956              		.loc 1 198 0 is_stmt 1
 957 020c 7B68     		ldr	r3, [r7, #4]
 958 020e 9B68     		ldr	r3, [r3, #8]
 959 0210 7A68     		ldr	r2, [r7, #4]
 960 0212 1268     		ldr	r2, [r2]
 961 0214 02FB03F2 		mul	r2, r2, r3
 962 0218 FB68     		ldr	r3, [r7, #12]
 963 021a 9A42     		cmp	r2, r3
 964 021c 05D1     		bne	.L59
 199:.\tic_tac_toe.c **** 			t->game_not_won = t->player; //when win, set to player id
 965              		.loc 1 199 0
 966 021e 7B68     		ldr	r3, [r7, #4]
 967 0220 9A68     		ldr	r2, [r3, #8]
 968 0222 7B68     		ldr	r3, [r7, #4]
 969 0224 1A61     		str	r2, [r3, #16]
 200:.\tic_tac_toe.c **** 			return 1; //there is a win
 970              		.loc 1 200 0
 971 0226 0123     		movs	r3, #1
 972 0228 24E1     		b	.L39
 973              	.L59:
 201:.\tic_tac_toe.c **** 		}
 202:.\tic_tac_toe.c **** 		connected = 0; //frontal
 974              		.loc 1 202 0
 975 022a 0023     		movs	r3, #0
 976 022c FB60     		str	r3, [r7, #12]
 203:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 977              		.loc 1 203 0
 978 022e 0023     		movs	r3, #0
 979 0230 3B61     		str	r3, [r7, #16]
 980 0232 11E0     		b	.L60
 981              	.L83:
 982              		.align	2
 983              	.L82:
 984 0234 88000000 		.word	.LC7
 985              	.L61:
 204:.\tic_tac_toe.c **** 			connected += ttc_get_grid(t,3-z,z,zp);
 986              		.loc 1 204 0 discriminator 3
 987 0238 7B69     		ldr	r3, [r7, #20]
 988 023a C3F10303 		rsb	r3, r3, #3
 989 023e 7868     		ldr	r0, [r7, #4]
 990 0240 1946     		mov	r1, r3
 991 0242 7A69     		ldr	r2, [r7, #20]
 992 0244 3B69     		ldr	r3, [r7, #16]
 993 0246 FFF7FEFF 		bl	ttc_get_grid
 994 024a 0246     		mov	r2, r0
 995 024c FB68     		ldr	r3, [r7, #12]
 996 024e 1344     		add	r3, r3, r2
 997 0250 FB60     		str	r3, [r7, #12]
 203:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 998              		.loc 1 203 0 discriminator 3
 999 0252 3B69     		ldr	r3, [r7, #16]
 1000 0254 0133     		adds	r3, r3, #1
 1001 0256 3B61     		str	r3, [r7, #16]
 1002              	.L60:
 203:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1003              		.loc 1 203 0 is_stmt 0 discriminator 1
 1004 0258 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 23


 1005 025a 1A68     		ldr	r2, [r3]
 1006 025c 3B69     		ldr	r3, [r7, #16]
 1007 025e 9A42     		cmp	r2, r3
 1008 0260 EADC     		bgt	.L61
 205:.\tic_tac_toe.c **** 		}
 206:.\tic_tac_toe.c **** 		if (connected == t->player*t->size){
 1009              		.loc 1 206 0 is_stmt 1
 1010 0262 7B68     		ldr	r3, [r7, #4]
 1011 0264 9B68     		ldr	r3, [r3, #8]
 1012 0266 7A68     		ldr	r2, [r7, #4]
 1013 0268 1268     		ldr	r2, [r2]
 1014 026a 02FB03F2 		mul	r2, r2, r3
 1015 026e FB68     		ldr	r3, [r7, #12]
 1016 0270 9A42     		cmp	r2, r3
 1017 0272 05D1     		bne	.L62
 207:.\tic_tac_toe.c **** 			t->game_not_won = t->player; //when win, set to player id
 1018              		.loc 1 207 0
 1019 0274 7B68     		ldr	r3, [r7, #4]
 1020 0276 9A68     		ldr	r2, [r3, #8]
 1021 0278 7B68     		ldr	r3, [r7, #4]
 1022 027a 1A61     		str	r2, [r3, #16]
 208:.\tic_tac_toe.c **** 			return 1; //there is a win
 1023              		.loc 1 208 0
 1024 027c 0123     		movs	r3, #1
 1025 027e F9E0     		b	.L39
 1026              	.L62:
 209:.\tic_tac_toe.c **** 		}
 210:.\tic_tac_toe.c **** 		connected = 0; //sidal
 1027              		.loc 1 210 0
 1028 0280 0023     		movs	r3, #0
 1029 0282 FB60     		str	r3, [r7, #12]
 211:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1030              		.loc 1 211 0
 1031 0284 0023     		movs	r3, #0
 1032 0286 3B61     		str	r3, [r7, #16]
 1033 0288 0CE0     		b	.L63
 1034              	.L64:
 212:.\tic_tac_toe.c **** 			connected += ttc_get_grid(t,zp,zp,z);
 1035              		.loc 1 212 0 discriminator 3
 1036 028a 7868     		ldr	r0, [r7, #4]
 1037 028c 3969     		ldr	r1, [r7, #16]
 1038 028e 3A69     		ldr	r2, [r7, #16]
 1039 0290 7B69     		ldr	r3, [r7, #20]
 1040 0292 FFF7FEFF 		bl	ttc_get_grid
 1041 0296 0246     		mov	r2, r0
 1042 0298 FB68     		ldr	r3, [r7, #12]
 1043 029a 1344     		add	r3, r3, r2
 1044 029c FB60     		str	r3, [r7, #12]
 211:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1045              		.loc 1 211 0 discriminator 3
 1046 029e 3B69     		ldr	r3, [r7, #16]
 1047 02a0 0133     		adds	r3, r3, #1
 1048 02a2 3B61     		str	r3, [r7, #16]
 1049              	.L63:
 211:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1050              		.loc 1 211 0 is_stmt 0 discriminator 1
 1051 02a4 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 24


 1052 02a6 1A68     		ldr	r2, [r3]
 1053 02a8 3B69     		ldr	r3, [r7, #16]
 1054 02aa 9A42     		cmp	r2, r3
 1055 02ac EDDC     		bgt	.L64
 213:.\tic_tac_toe.c **** 		}
 214:.\tic_tac_toe.c **** 		if (connected == t->player*t->size){
 1056              		.loc 1 214 0 is_stmt 1
 1057 02ae 7B68     		ldr	r3, [r7, #4]
 1058 02b0 9B68     		ldr	r3, [r3, #8]
 1059 02b2 7A68     		ldr	r2, [r7, #4]
 1060 02b4 1268     		ldr	r2, [r2]
 1061 02b6 02FB03F2 		mul	r2, r2, r3
 1062 02ba FB68     		ldr	r3, [r7, #12]
 1063 02bc 9A42     		cmp	r2, r3
 1064 02be 05D1     		bne	.L65
 215:.\tic_tac_toe.c **** 			t->game_not_won = t->player; //when win, set to player id
 1065              		.loc 1 215 0
 1066 02c0 7B68     		ldr	r3, [r7, #4]
 1067 02c2 9A68     		ldr	r2, [r3, #8]
 1068 02c4 7B68     		ldr	r3, [r7, #4]
 1069 02c6 1A61     		str	r2, [r3, #16]
 216:.\tic_tac_toe.c **** 			return 1; //there is a win
 1070              		.loc 1 216 0
 1071 02c8 0123     		movs	r3, #1
 1072 02ca D3E0     		b	.L39
 1073              	.L65:
 217:.\tic_tac_toe.c **** 		}
 218:.\tic_tac_toe.c **** 		connected = 0; //sidal
 1074              		.loc 1 218 0
 1075 02cc 0023     		movs	r3, #0
 1076 02ce FB60     		str	r3, [r7, #12]
 219:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1077              		.loc 1 219 0
 1078 02d0 0023     		movs	r3, #0
 1079 02d2 3B61     		str	r3, [r7, #16]
 1080 02d4 0FE0     		b	.L66
 1081              	.L67:
 220:.\tic_tac_toe.c **** 			connected += ttc_get_grid(t,zp,3-zp,z);
 1082              		.loc 1 220 0 discriminator 3
 1083 02d6 3B69     		ldr	r3, [r7, #16]
 1084 02d8 C3F10303 		rsb	r3, r3, #3
 1085 02dc 7868     		ldr	r0, [r7, #4]
 1086 02de 3969     		ldr	r1, [r7, #16]
 1087 02e0 1A46     		mov	r2, r3
 1088 02e2 7B69     		ldr	r3, [r7, #20]
 1089 02e4 FFF7FEFF 		bl	ttc_get_grid
 1090 02e8 0246     		mov	r2, r0
 1091 02ea FB68     		ldr	r3, [r7, #12]
 1092 02ec 1344     		add	r3, r3, r2
 1093 02ee FB60     		str	r3, [r7, #12]
 219:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1094              		.loc 1 219 0 discriminator 3
 1095 02f0 3B69     		ldr	r3, [r7, #16]
 1096 02f2 0133     		adds	r3, r3, #1
 1097 02f4 3B61     		str	r3, [r7, #16]
 1098              	.L66:
 219:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 25


 1099              		.loc 1 219 0 is_stmt 0 discriminator 1
 1100 02f6 7B68     		ldr	r3, [r7, #4]
 1101 02f8 1A68     		ldr	r2, [r3]
 1102 02fa 3B69     		ldr	r3, [r7, #16]
 1103 02fc 9A42     		cmp	r2, r3
 1104 02fe EADC     		bgt	.L67
 221:.\tic_tac_toe.c **** 		}
 222:.\tic_tac_toe.c **** 		if (connected == t->player*t->size){
 1105              		.loc 1 222 0 is_stmt 1
 1106 0300 7B68     		ldr	r3, [r7, #4]
 1107 0302 9B68     		ldr	r3, [r3, #8]
 1108 0304 7A68     		ldr	r2, [r7, #4]
 1109 0306 1268     		ldr	r2, [r2]
 1110 0308 02FB03F2 		mul	r2, r2, r3
 1111 030c FB68     		ldr	r3, [r7, #12]
 1112 030e 9A42     		cmp	r2, r3
 1113 0310 05D1     		bne	.L68
 223:.\tic_tac_toe.c **** 			t->game_not_won = t->player; //when win, set to player id
 1114              		.loc 1 223 0
 1115 0312 7B68     		ldr	r3, [r7, #4]
 1116 0314 9A68     		ldr	r2, [r3, #8]
 1117 0316 7B68     		ldr	r3, [r7, #4]
 1118 0318 1A61     		str	r2, [r3, #16]
 224:.\tic_tac_toe.c **** 			return 1; //there is a win
 1119              		.loc 1 224 0
 1120 031a 0123     		movs	r3, #1
 1121 031c AAE0     		b	.L39
 1122              	.L68:
 147:.\tic_tac_toe.c **** 		for (y = 0; y < t->size; y++){ // flat
 1123              		.loc 1 147 0 discriminator 2
 1124 031e 7B69     		ldr	r3, [r7, #20]
 1125 0320 0133     		adds	r3, r3, #1
 1126 0322 7B61     		str	r3, [r7, #20]
 1127              	.L34:
 147:.\tic_tac_toe.c **** 		for (y = 0; y < t->size; y++){ // flat
 1128              		.loc 1 147 0 is_stmt 0 discriminator 1
 1129 0324 7B68     		ldr	r3, [r7, #4]
 1130 0326 1A68     		ldr	r2, [r3]
 1131 0328 7B69     		ldr	r3, [r7, #20]
 1132 032a 9A42     		cmp	r2, r3
 1133 032c 3FF775AE 		bgt	.L69
 225:.\tic_tac_toe.c **** 		}
 226:.\tic_tac_toe.c **** 	}
 227:.\tic_tac_toe.c **** 	connected = 0; //superdiag 1
 1134              		.loc 1 227 0 is_stmt 1
 1135 0330 0023     		movs	r3, #0
 1136 0332 FB60     		str	r3, [r7, #12]
 228:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1137              		.loc 1 228 0
 1138 0334 0023     		movs	r3, #0
 1139 0336 3B61     		str	r3, [r7, #16]
 1140 0338 0CE0     		b	.L70
 1141              	.L71:
 229:.\tic_tac_toe.c **** 		connected += ttc_get_grid(t,zp,zp,zp);
 1142              		.loc 1 229 0 discriminator 3
 1143 033a 7868     		ldr	r0, [r7, #4]
 1144 033c 3969     		ldr	r1, [r7, #16]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 26


 1145 033e 3A69     		ldr	r2, [r7, #16]
 1146 0340 3B69     		ldr	r3, [r7, #16]
 1147 0342 FFF7FEFF 		bl	ttc_get_grid
 1148 0346 0246     		mov	r2, r0
 1149 0348 FB68     		ldr	r3, [r7, #12]
 1150 034a 1344     		add	r3, r3, r2
 1151 034c FB60     		str	r3, [r7, #12]
 228:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1152              		.loc 1 228 0 discriminator 3
 1153 034e 3B69     		ldr	r3, [r7, #16]
 1154 0350 0133     		adds	r3, r3, #1
 1155 0352 3B61     		str	r3, [r7, #16]
 1156              	.L70:
 228:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1157              		.loc 1 228 0 is_stmt 0 discriminator 1
 1158 0354 7B68     		ldr	r3, [r7, #4]
 1159 0356 1A68     		ldr	r2, [r3]
 1160 0358 3B69     		ldr	r3, [r7, #16]
 1161 035a 9A42     		cmp	r2, r3
 1162 035c EDDC     		bgt	.L71
 230:.\tic_tac_toe.c **** 	}
 231:.\tic_tac_toe.c **** 	if (connected == t->player*t->size){
 1163              		.loc 1 231 0 is_stmt 1
 1164 035e 7B68     		ldr	r3, [r7, #4]
 1165 0360 9B68     		ldr	r3, [r3, #8]
 1166 0362 7A68     		ldr	r2, [r7, #4]
 1167 0364 1268     		ldr	r2, [r2]
 1168 0366 02FB03F2 		mul	r2, r2, r3
 1169 036a FB68     		ldr	r3, [r7, #12]
 1170 036c 9A42     		cmp	r2, r3
 1171 036e 05D1     		bne	.L72
 232:.\tic_tac_toe.c **** 		t->game_not_won = t->player; //when win, set to player id
 1172              		.loc 1 232 0
 1173 0370 7B68     		ldr	r3, [r7, #4]
 1174 0372 9A68     		ldr	r2, [r3, #8]
 1175 0374 7B68     		ldr	r3, [r7, #4]
 1176 0376 1A61     		str	r2, [r3, #16]
 233:.\tic_tac_toe.c **** 		return 1; //there is a win
 1177              		.loc 1 233 0
 1178 0378 0123     		movs	r3, #1
 1179 037a 7BE0     		b	.L39
 1180              	.L72:
 234:.\tic_tac_toe.c **** 	}
 235:.\tic_tac_toe.c **** 	connected = 0; //superdiag 2
 1181              		.loc 1 235 0
 1182 037c 0023     		movs	r3, #0
 1183 037e FB60     		str	r3, [r7, #12]
 236:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1184              		.loc 1 236 0
 1185 0380 0023     		movs	r3, #0
 1186 0382 3B61     		str	r3, [r7, #16]
 1187 0384 0FE0     		b	.L73
 1188              	.L74:
 237:.\tic_tac_toe.c **** 		connected += ttc_get_grid(t,zp,3-zp,zp);
 1189              		.loc 1 237 0 discriminator 3
 1190 0386 3B69     		ldr	r3, [r7, #16]
 1191 0388 C3F10303 		rsb	r3, r3, #3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 27


 1192 038c 7868     		ldr	r0, [r7, #4]
 1193 038e 3969     		ldr	r1, [r7, #16]
 1194 0390 1A46     		mov	r2, r3
 1195 0392 3B69     		ldr	r3, [r7, #16]
 1196 0394 FFF7FEFF 		bl	ttc_get_grid
 1197 0398 0246     		mov	r2, r0
 1198 039a FB68     		ldr	r3, [r7, #12]
 1199 039c 1344     		add	r3, r3, r2
 1200 039e FB60     		str	r3, [r7, #12]
 236:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1201              		.loc 1 236 0 discriminator 3
 1202 03a0 3B69     		ldr	r3, [r7, #16]
 1203 03a2 0133     		adds	r3, r3, #1
 1204 03a4 3B61     		str	r3, [r7, #16]
 1205              	.L73:
 236:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1206              		.loc 1 236 0 is_stmt 0 discriminator 1
 1207 03a6 7B68     		ldr	r3, [r7, #4]
 1208 03a8 1A68     		ldr	r2, [r3]
 1209 03aa 3B69     		ldr	r3, [r7, #16]
 1210 03ac 9A42     		cmp	r2, r3
 1211 03ae EADC     		bgt	.L74
 238:.\tic_tac_toe.c **** 	}
 239:.\tic_tac_toe.c **** 	if (connected == t->player*t->size){
 1212              		.loc 1 239 0 is_stmt 1
 1213 03b0 7B68     		ldr	r3, [r7, #4]
 1214 03b2 9B68     		ldr	r3, [r3, #8]
 1215 03b4 7A68     		ldr	r2, [r7, #4]
 1216 03b6 1268     		ldr	r2, [r2]
 1217 03b8 02FB03F2 		mul	r2, r2, r3
 1218 03bc FB68     		ldr	r3, [r7, #12]
 1219 03be 9A42     		cmp	r2, r3
 1220 03c0 05D1     		bne	.L75
 240:.\tic_tac_toe.c **** 		t->game_not_won = t->player; //when win, set to player id
 1221              		.loc 1 240 0
 1222 03c2 7B68     		ldr	r3, [r7, #4]
 1223 03c4 9A68     		ldr	r2, [r3, #8]
 1224 03c6 7B68     		ldr	r3, [r7, #4]
 1225 03c8 1A61     		str	r2, [r3, #16]
 241:.\tic_tac_toe.c **** 		return 1; //there is a win
 1226              		.loc 1 241 0
 1227 03ca 0123     		movs	r3, #1
 1228 03cc 52E0     		b	.L39
 1229              	.L75:
 242:.\tic_tac_toe.c **** 	}
 243:.\tic_tac_toe.c **** 	connected = 0; //superdiag 3
 1230              		.loc 1 243 0
 1231 03ce 0023     		movs	r3, #0
 1232 03d0 FB60     		str	r3, [r7, #12]
 244:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1233              		.loc 1 244 0
 1234 03d2 0023     		movs	r3, #0
 1235 03d4 3B61     		str	r3, [r7, #16]
 1236 03d6 0EE0     		b	.L76
 1237              	.L77:
 245:.\tic_tac_toe.c **** 		connected += ttc_get_grid(t,zp,zp,3-zp);
 1238              		.loc 1 245 0 discriminator 3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 28


 1239 03d8 3B69     		ldr	r3, [r7, #16]
 1240 03da C3F10303 		rsb	r3, r3, #3
 1241 03de 7868     		ldr	r0, [r7, #4]
 1242 03e0 3969     		ldr	r1, [r7, #16]
 1243 03e2 3A69     		ldr	r2, [r7, #16]
 1244 03e4 FFF7FEFF 		bl	ttc_get_grid
 1245 03e8 0246     		mov	r2, r0
 1246 03ea FB68     		ldr	r3, [r7, #12]
 1247 03ec 1344     		add	r3, r3, r2
 1248 03ee FB60     		str	r3, [r7, #12]
 244:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1249              		.loc 1 244 0 discriminator 3
 1250 03f0 3B69     		ldr	r3, [r7, #16]
 1251 03f2 0133     		adds	r3, r3, #1
 1252 03f4 3B61     		str	r3, [r7, #16]
 1253              	.L76:
 244:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1254              		.loc 1 244 0 is_stmt 0 discriminator 1
 1255 03f6 7B68     		ldr	r3, [r7, #4]
 1256 03f8 1A68     		ldr	r2, [r3]
 1257 03fa 3B69     		ldr	r3, [r7, #16]
 1258 03fc 9A42     		cmp	r2, r3
 1259 03fe EBDC     		bgt	.L77
 246:.\tic_tac_toe.c **** 	}
 247:.\tic_tac_toe.c **** 	if (connected == t->player*t->size){
 1260              		.loc 1 247 0 is_stmt 1
 1261 0400 7B68     		ldr	r3, [r7, #4]
 1262 0402 9B68     		ldr	r3, [r3, #8]
 1263 0404 7A68     		ldr	r2, [r7, #4]
 1264 0406 1268     		ldr	r2, [r2]
 1265 0408 02FB03F2 		mul	r2, r2, r3
 1266 040c FB68     		ldr	r3, [r7, #12]
 1267 040e 9A42     		cmp	r2, r3
 1268 0410 05D1     		bne	.L78
 248:.\tic_tac_toe.c **** 		t->game_not_won = t->player; //when win, set to player id
 1269              		.loc 1 248 0
 1270 0412 7B68     		ldr	r3, [r7, #4]
 1271 0414 9A68     		ldr	r2, [r3, #8]
 1272 0416 7B68     		ldr	r3, [r7, #4]
 1273 0418 1A61     		str	r2, [r3, #16]
 249:.\tic_tac_toe.c **** 		return 1; //there is a win
 1274              		.loc 1 249 0
 1275 041a 0123     		movs	r3, #1
 1276 041c 2AE0     		b	.L39
 1277              	.L78:
 250:.\tic_tac_toe.c **** 	}
 251:.\tic_tac_toe.c **** 	connected = 0; //superdiag 4
 1278              		.loc 1 251 0
 1279 041e 0023     		movs	r3, #0
 1280 0420 FB60     		str	r3, [r7, #12]
 252:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1281              		.loc 1 252 0
 1282 0422 0023     		movs	r3, #0
 1283 0424 3B61     		str	r3, [r7, #16]
 1284 0426 10E0     		b	.L79
 1285              	.L80:
 253:.\tic_tac_toe.c **** 		connected += ttc_get_grid(t,zp,3-zp,3-zp);
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 29


 1286              		.loc 1 253 0 discriminator 3
 1287 0428 3B69     		ldr	r3, [r7, #16]
 1288 042a C3F10302 		rsb	r2, r3, #3
 1289 042e 3B69     		ldr	r3, [r7, #16]
 1290 0430 C3F10303 		rsb	r3, r3, #3
 1291 0434 7868     		ldr	r0, [r7, #4]
 1292 0436 3969     		ldr	r1, [r7, #16]
 1293 0438 FFF7FEFF 		bl	ttc_get_grid
 1294 043c 0246     		mov	r2, r0
 1295 043e FB68     		ldr	r3, [r7, #12]
 1296 0440 1344     		add	r3, r3, r2
 1297 0442 FB60     		str	r3, [r7, #12]
 252:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1298              		.loc 1 252 0 discriminator 3
 1299 0444 3B69     		ldr	r3, [r7, #16]
 1300 0446 0133     		adds	r3, r3, #1
 1301 0448 3B61     		str	r3, [r7, #16]
 1302              	.L79:
 252:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1303              		.loc 1 252 0 is_stmt 0 discriminator 1
 1304 044a 7B68     		ldr	r3, [r7, #4]
 1305 044c 1A68     		ldr	r2, [r3]
 1306 044e 3B69     		ldr	r3, [r7, #16]
 1307 0450 9A42     		cmp	r2, r3
 1308 0452 E9DC     		bgt	.L80
 254:.\tic_tac_toe.c **** 	}
 255:.\tic_tac_toe.c **** 	if (connected == t->player*t->size){
 1309              		.loc 1 255 0 is_stmt 1
 1310 0454 7B68     		ldr	r3, [r7, #4]
 1311 0456 9B68     		ldr	r3, [r3, #8]
 1312 0458 7A68     		ldr	r2, [r7, #4]
 1313 045a 1268     		ldr	r2, [r2]
 1314 045c 02FB03F2 		mul	r2, r2, r3
 1315 0460 FB68     		ldr	r3, [r7, #12]
 1316 0462 9A42     		cmp	r2, r3
 1317 0464 05D1     		bne	.L81
 256:.\tic_tac_toe.c **** 		t->game_not_won = t->player; //when win, set to player id
 1318              		.loc 1 256 0
 1319 0466 7B68     		ldr	r3, [r7, #4]
 1320 0468 9A68     		ldr	r2, [r3, #8]
 1321 046a 7B68     		ldr	r3, [r7, #4]
 1322 046c 1A61     		str	r2, [r3, #16]
 257:.\tic_tac_toe.c **** 		return 1; //there is a win
 1323              		.loc 1 257 0
 1324 046e 0123     		movs	r3, #1
 1325 0470 00E0     		b	.L39
 1326              	.L81:
 258:.\tic_tac_toe.c **** 	}
 259:.\tic_tac_toe.c **** 	return 0; //no win
 1327              		.loc 1 259 0
 1328 0472 0023     		movs	r3, #0
 1329              	.L39:
 260:.\tic_tac_toe.c **** }
 1330              		.loc 1 260 0
 1331 0474 1846     		mov	r0, r3
 1332 0476 2037     		adds	r7, r7, #32
 1333              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 30


 1334 0478 BD46     		mov	sp, r7
 1335              		.cfi_def_cfa_register 13
 1336              		@ sp needed
 1337 047a 80BD     		pop	{r7, pc}
 1338              		.cfi_endproc
 1339              	.LFE70:
 1340              		.size	ttc_check_win, .-ttc_check_win
 1341              		.section	.text.ttc_step,"ax",%progbits
 1342              		.align	2
 1343              		.global	ttc_step
 1344              		.thumb
 1345              		.thumb_func
 1346              		.type	ttc_step, %function
 1347              	ttc_step:
 1348              	.LFB71:
 261:.\tic_tac_toe.c **** 
 262:.\tic_tac_toe.c **** 
 263:.\tic_tac_toe.c **** int ttc_step(struct disp_grid_81* disp, struct tic_tac_toe* t,int x, int y, int z){
 1349              		.loc 1 263 0
 1350              		.cfi_startproc
 1351              		@ args = 4, pretend = 0, frame = 16
 1352              		@ frame_needed = 1, uses_anonymous_args = 0
 1353 0000 90B5     		push	{r4, r7, lr}
 1354              		.cfi_def_cfa_offset 12
 1355              		.cfi_offset 4, -12
 1356              		.cfi_offset 7, -8
 1357              		.cfi_offset 14, -4
 1358 0002 87B0     		sub	sp, sp, #28
 1359              		.cfi_def_cfa_offset 40
 1360 0004 02AF     		add	r7, sp, #8
 1361              		.cfi_def_cfa 7, 32
 1362 0006 F860     		str	r0, [r7, #12]
 1363 0008 B960     		str	r1, [r7, #8]
 1364 000a 7A60     		str	r2, [r7, #4]
 1365 000c 3B60     		str	r3, [r7]
 264:.\tic_tac_toe.c **** 	// generic take input to allow for both terminal and psoc
 265:.\tic_tac_toe.c **** 	if (ttc_check_valid(t,x,y,z) == 1){
 1366              		.loc 1 265 0
 1367 000e B868     		ldr	r0, [r7, #8]
 1368 0010 7968     		ldr	r1, [r7, #4]
 1369 0012 3A68     		ldr	r2, [r7]
 1370 0014 3B6A     		ldr	r3, [r7, #32]
 1371 0016 FFF7FEFF 		bl	ttc_check_valid
 1372 001a 0346     		mov	r3, r0
 1373 001c 012B     		cmp	r3, #1
 1374 001e 23D1     		bne	.L85
 1375              	.LBB3:
 266:.\tic_tac_toe.c **** 		ttc_set_grid(t,x,y,z,t->player);
 1376              		.loc 1 266 0
 1377 0020 BB68     		ldr	r3, [r7, #8]
 1378 0022 9B68     		ldr	r3, [r3, #8]
 1379 0024 0093     		str	r3, [sp]
 1380 0026 B868     		ldr	r0, [r7, #8]
 1381 0028 7968     		ldr	r1, [r7, #4]
 1382 002a 3A68     		ldr	r2, [r7]
 1383 002c 3B6A     		ldr	r3, [r7, #32]
 1384 002e FFF7FEFF 		bl	ttc_set_grid
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 31


 267:.\tic_tac_toe.c **** 		// ttc_get_grid(t,x,y,z);
 268:.\tic_tac_toe.c **** 		// printf("\nGot here"); 
 269:.\tic_tac_toe.c **** 		ttc_check_win(t);
 1385              		.loc 1 269 0
 1386 0032 B868     		ldr	r0, [r7, #8]
 1387 0034 FFF7FEFF 		bl	ttc_check_win
 270:.\tic_tac_toe.c **** 		ttc_change_player(t);
 1388              		.loc 1 270 0
 1389 0038 B868     		ldr	r0, [r7, #8]
 1390 003a FFF7FEFF 		bl	ttc_change_player
 271:.\tic_tac_toe.c **** 		//ttc_print_grid(t); // on terminal
 272:.\tic_tac_toe.c ****         disp_grid_ttc_place(disp,z*16+y*4+x, ttc_get_grid(t,x,y,z)); // for PSoC
 1391              		.loc 1 272 0
 1392 003e 3B6A     		ldr	r3, [r7, #32]
 1393 0040 9A00     		lsls	r2, r3, #2
 1394 0042 3B68     		ldr	r3, [r7]
 1395 0044 1344     		add	r3, r3, r2
 1396 0046 9A00     		lsls	r2, r3, #2
 1397 0048 7B68     		ldr	r3, [r7, #4]
 1398 004a D418     		adds	r4, r2, r3
 1399 004c B868     		ldr	r0, [r7, #8]
 1400 004e 7968     		ldr	r1, [r7, #4]
 1401 0050 3A68     		ldr	r2, [r7]
 1402 0052 3B6A     		ldr	r3, [r7, #32]
 1403 0054 FFF7FEFF 		bl	ttc_get_grid
 1404 0058 0346     		mov	r3, r0
 1405 005a F868     		ldr	r0, [r7, #12]
 1406 005c 2146     		mov	r1, r4
 1407 005e 1A46     		mov	r2, r3
 1408 0060 FFF7FEFF 		bl	disp_grid_ttc_place
 273:.\tic_tac_toe.c **** 		return 1;
 1409              		.loc 1 273 0
 1410 0064 0123     		movs	r3, #1
 1411 0066 00E0     		b	.L86
 1412              	.L85:
 1413              	.LBE3:
 274:.\tic_tac_toe.c **** 	}
 275:.\tic_tac_toe.c **** 	else{
 276:.\tic_tac_toe.c **** 		return 0; // did not work properly
 1414              		.loc 1 276 0
 1415 0068 0023     		movs	r3, #0
 1416              	.L86:
 277:.\tic_tac_toe.c **** 	}
 278:.\tic_tac_toe.c **** }
 1417              		.loc 1 278 0
 1418 006a 1846     		mov	r0, r3
 1419 006c 1437     		adds	r7, r7, #20
 1420              		.cfi_def_cfa_offset 12
 1421 006e BD46     		mov	sp, r7
 1422              		.cfi_def_cfa_register 13
 1423              		@ sp needed
 1424 0070 90BD     		pop	{r4, r7, pc}
 1425              		.cfi_endproc
 1426              	.LFE71:
 1427              		.size	ttc_step, .-ttc_step
 1428 0072 00BF     		.section	.rodata
 1429 0093 00       		.align	2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 32


 1430              	.LC8:
 1431 0094 506C6179 		.ascii	"Player %i has won\000"
 1431      65722025 
 1431      69206861 
 1431      7320776F 
 1431      6E00
 1432 00a6 0000     		.section	.text.ttc_play_game,"ax",%progbits
 1433              		.align	2
 1434              		.global	ttc_play_game
 1435              		.thumb
 1436              		.thumb_func
 1437              		.type	ttc_play_game, %function
 1438              	ttc_play_game:
 1439              	.LFB72:
 279:.\tic_tac_toe.c **** 
 280:.\tic_tac_toe.c **** int ttc_play_game(struct tic_tac_toe* t){
 1440              		.loc 1 280 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 8
 1443              		@ frame_needed = 1, uses_anonymous_args = 0
 1444 0000 80B5     		push	{r7, lr}
 1445              		.cfi_def_cfa_offset 8
 1446              		.cfi_offset 7, -8
 1447              		.cfi_offset 14, -4
 1448 0002 82B0     		sub	sp, sp, #8
 1449              		.cfi_def_cfa_offset 16
 1450 0004 00AF     		add	r7, sp, #0
 1451              		.cfi_def_cfa_register 7
 1452 0006 7860     		str	r0, [r7, #4]
 281:.\tic_tac_toe.c **** 	while (t->game_not_won == 0){
 1453              		.loc 1 281 0
 1454 0008 00BF     		nop
 1455              	.L88:
 1456              		.loc 1 281 0 is_stmt 0 discriminator 1
 1457 000a 7B68     		ldr	r3, [r7, #4]
 1458 000c 1B69     		ldr	r3, [r3, #16]
 1459 000e 002B     		cmp	r3, #0
 1460 0010 FBD0     		beq	.L88
 282:.\tic_tac_toe.c **** 		//ttc_play(t);
 283:.\tic_tac_toe.c ****         // IMPLEMENT FOR PSOC
 284:.\tic_tac_toe.c **** 	}
 285:.\tic_tac_toe.c **** 	printf("Player %i has won", t->game_not_won);
 1461              		.loc 1 285 0 is_stmt 1
 1462 0012 7B68     		ldr	r3, [r7, #4]
 1463 0014 1B69     		ldr	r3, [r3, #16]
 1464 0016 0448     		ldr	r0, .L90
 1465 0018 1946     		mov	r1, r3
 1466 001a FFF7FEFF 		bl	printf
 286:.\tic_tac_toe.c **** 	return 0;
 1467              		.loc 1 286 0
 1468 001e 0023     		movs	r3, #0
 287:.\tic_tac_toe.c **** }
 1469              		.loc 1 287 0
 1470 0020 1846     		mov	r0, r3
 1471 0022 0837     		adds	r7, r7, #8
 1472              		.cfi_def_cfa_offset 8
 1473 0024 BD46     		mov	sp, r7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 33


 1474              		.cfi_def_cfa_register 13
 1475              		@ sp needed
 1476 0026 80BD     		pop	{r7, pc}
 1477              	.L91:
 1478              		.align	2
 1479              	.L90:
 1480 0028 94000000 		.word	.LC8
 1481              		.cfi_endproc
 1482              	.LFE72:
 1483              		.size	ttc_play_game, .-ttc_play_game
 1484              		.section	.text.ttc_free,"ax",%progbits
 1485              		.align	2
 1486              		.global	ttc_free
 1487              		.thumb
 1488              		.thumb_func
 1489              		.type	ttc_free, %function
 1490              	ttc_free:
 1491              	.LFB73:
 288:.\tic_tac_toe.c **** 
 289:.\tic_tac_toe.c **** void ttc_free(struct tic_tac_toe* t){
 1492              		.loc 1 289 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 8
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
 1496 0000 80B5     		push	{r7, lr}
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 82B0     		sub	sp, sp, #8
 1501              		.cfi_def_cfa_offset 16
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 7860     		str	r0, [r7, #4]
 290:.\tic_tac_toe.c **** 	free(t->grid);
 1505              		.loc 1 290 0
 1506 0008 7B68     		ldr	r3, [r7, #4]
 1507 000a 1433     		adds	r3, r3, #20
 1508 000c 1846     		mov	r0, r3
 1509 000e FFF7FEFF 		bl	free
 291:.\tic_tac_toe.c **** 	free(t);
 1510              		.loc 1 291 0
 1511 0012 7868     		ldr	r0, [r7, #4]
 1512 0014 FFF7FEFF 		bl	free
 292:.\tic_tac_toe.c **** }
 1513              		.loc 1 292 0
 1514 0018 0837     		adds	r7, r7, #8
 1515              		.cfi_def_cfa_offset 8
 1516 001a BD46     		mov	sp, r7
 1517              		.cfi_def_cfa_register 13
 1518              		@ sp needed
 1519 001c 80BD     		pop	{r7, pc}
 1520              		.cfi_endproc
 1521              	.LFE73:
 1522              		.size	ttc_free, .-ttc_free
 1523 001e 00BF     		.bss
 1524              		.align	2
 1525              	ret.6798:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 34


 1526 0000 00000000 		.space	12
 1526      00000000 
 1526      00000000 
 1527              		.text
 1528              	.Letext0:
 1529              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1530              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1531              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 1532              		.section	.debug_info,"",%progbits
 1533              	.Ldebug_info0:
 1534 0000 7E040000 		.4byte	0x47e
 1535 0004 0400     		.2byte	0x4
 1536 0006 00000000 		.4byte	.Ldebug_abbrev0
 1537 000a 04       		.byte	0x4
 1538 000b 01       		.uleb128 0x1
 1539 000c 9E000000 		.4byte	.LASF36
 1540 0010 01       		.byte	0x1
 1541 0011 76020000 		.4byte	.LASF37
 1542 0015 1D000000 		.4byte	.LASF38
 1543 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1544 001d 00000000 		.4byte	0
 1545 0021 00000000 		.4byte	.Ldebug_line0
 1546 0025 02       		.uleb128 0x2
 1547 0026 01       		.byte	0x1
 1548 0027 06       		.byte	0x6
 1549 0028 9E020000 		.4byte	.LASF0
 1550 002c 02       		.uleb128 0x2
 1551 002d 01       		.byte	0x1
 1552 002e 08       		.byte	0x8
 1553 002f 7F010000 		.4byte	.LASF1
 1554 0033 02       		.uleb128 0x2
 1555 0034 02       		.byte	0x2
 1556 0035 05       		.byte	0x5
 1557 0036 86020000 		.4byte	.LASF2
 1558 003a 02       		.uleb128 0x2
 1559 003b 02       		.byte	0x2
 1560 003c 07       		.byte	0x7
 1561 003d AA020000 		.4byte	.LASF3
 1562 0041 03       		.uleb128 0x3
 1563 0042 88000000 		.4byte	.LASF11
 1564 0046 02       		.byte	0x2
 1565 0047 3F       		.byte	0x3f
 1566 0048 4C000000 		.4byte	0x4c
 1567 004c 02       		.uleb128 0x2
 1568 004d 04       		.byte	0x4
 1569 004e 05       		.byte	0x5
 1570 004f 95020000 		.4byte	.LASF4
 1571 0053 02       		.uleb128 0x2
 1572 0054 04       		.byte	0x4
 1573 0055 07       		.byte	0x7
 1574 0056 8D010000 		.4byte	.LASF5
 1575 005a 02       		.uleb128 0x2
 1576 005b 08       		.byte	0x8
 1577 005c 05       		.byte	0x5
 1578 005d 46020000 		.4byte	.LASF6
 1579 0061 02       		.uleb128 0x2
 1580 0062 08       		.byte	0x8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 35


 1581 0063 07       		.byte	0x7
 1582 0064 DC010000 		.4byte	.LASF7
 1583 0068 04       		.uleb128 0x4
 1584 0069 04       		.byte	0x4
 1585 006a 05       		.byte	0x5
 1586 006b 696E7400 		.ascii	"int\000"
 1587 006f 02       		.uleb128 0x2
 1588 0070 04       		.byte	0x4
 1589 0071 07       		.byte	0x7
 1590 0072 CF010000 		.4byte	.LASF8
 1591 0076 02       		.uleb128 0x2
 1592 0077 04       		.byte	0x4
 1593 0078 07       		.byte	0x7
 1594 0079 29020000 		.4byte	.LASF9
 1595 007d 02       		.uleb128 0x2
 1596 007e 01       		.byte	0x1
 1597 007f 08       		.byte	0x8
 1598 0080 54020000 		.4byte	.LASF10
 1599 0084 03       		.uleb128 0x3
 1600 0085 21020000 		.4byte	.LASF12
 1601 0089 03       		.byte	0x3
 1602 008a 2C       		.byte	0x2c
 1603 008b 41000000 		.4byte	0x41
 1604 008f 02       		.uleb128 0x2
 1605 0090 04       		.byte	0x4
 1606 0091 04       		.byte	0x4
 1607 0092 58010000 		.4byte	.LASF13
 1608 0096 02       		.uleb128 0x2
 1609 0097 08       		.byte	0x8
 1610 0098 04       		.byte	0x4
 1611 0099 2C010000 		.4byte	.LASF14
 1612 009d 05       		.uleb128 0x5
 1613 009e 92000000 		.4byte	.LASF39
 1614 00a2 1401     		.2byte	0x114
 1615 00a4 01       		.byte	0x1
 1616 00a5 27       		.byte	0x27
 1617 00a6 F3000000 		.4byte	0xf3
 1618 00aa 06       		.uleb128 0x6
 1619 00ab 5E010000 		.4byte	.LASF15
 1620 00af 01       		.byte	0x1
 1621 00b0 28       		.byte	0x28
 1622 00b1 68000000 		.4byte	0x68
 1623 00b5 00       		.byte	0
 1624 00b6 06       		.uleb128 0x6
 1625 00b7 45010000 		.4byte	.LASF16
 1626 00bb 01       		.byte	0x1
 1627 00bc 29       		.byte	0x29
 1628 00bd 68000000 		.4byte	0x68
 1629 00c1 04       		.byte	0x4
 1630 00c2 06       		.uleb128 0x6
 1631 00c3 9F010000 		.4byte	.LASF17
 1632 00c7 01       		.byte	0x1
 1633 00c8 2B       		.byte	0x2b
 1634 00c9 68000000 		.4byte	0x68
 1635 00cd 08       		.byte	0x8
 1636 00ce 06       		.uleb128 0x6
 1637 00cf 00000000 		.4byte	.LASF18
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 36


 1638 00d3 01       		.byte	0x1
 1639 00d4 2C       		.byte	0x2c
 1640 00d5 68000000 		.4byte	0x68
 1641 00d9 0C       		.byte	0xc
 1642 00da 06       		.uleb128 0x6
 1643 00db AB010000 		.4byte	.LASF19
 1644 00df 01       		.byte	0x1
 1645 00e0 2D       		.byte	0x2d
 1646 00e1 68000000 		.4byte	0x68
 1647 00e5 10       		.byte	0x10
 1648 00e6 06       		.uleb128 0x6
 1649 00e7 90020000 		.4byte	.LASF20
 1650 00eb 01       		.byte	0x1
 1651 00ec 2F       		.byte	0x2f
 1652 00ed F3000000 		.4byte	0xf3
 1653 00f1 14       		.byte	0x14
 1654 00f2 00       		.byte	0
 1655 00f3 07       		.uleb128 0x7
 1656 00f4 68000000 		.4byte	0x68
 1657 00f8 03010000 		.4byte	0x103
 1658 00fc 08       		.uleb128 0x8
 1659 00fd 76000000 		.4byte	0x76
 1660 0101 3F       		.byte	0x3f
 1661 0102 00       		.byte	0
 1662 0103 09       		.uleb128 0x9
 1663 0104 BD020000 		.4byte	.LASF25
 1664 0108 01       		.byte	0x1
 1665 0109 33       		.byte	0x33
 1666 010a 00000000 		.4byte	.LFB63
 1667 010e 6C000000 		.4byte	.LFE63-.LFB63
 1668 0112 01       		.uleb128 0x1
 1669 0113 9C       		.byte	0x9c
 1670 0114 65010000 		.4byte	0x165
 1671 0118 0A       		.uleb128 0xa
 1672 0119 7400     		.ascii	"t\000"
 1673 011b 01       		.byte	0x1
 1674 011c 33       		.byte	0x33
 1675 011d 65010000 		.4byte	0x165
 1676 0121 02       		.uleb128 0x2
 1677 0122 91       		.byte	0x91
 1678 0123 6C       		.sleb128 -20
 1679 0124 0B       		.uleb128 0xb
 1680 0125 5E010000 		.4byte	.LASF15
 1681 0129 01       		.byte	0x1
 1682 012a 33       		.byte	0x33
 1683 012b 68000000 		.4byte	0x68
 1684 012f 02       		.uleb128 0x2
 1685 0130 91       		.byte	0x91
 1686 0131 68       		.sleb128 -24
 1687 0132 0B       		.uleb128 0xb
 1688 0133 45010000 		.4byte	.LASF16
 1689 0137 01       		.byte	0x1
 1690 0138 33       		.byte	0x33
 1691 0139 68000000 		.4byte	0x68
 1692 013d 02       		.uleb128 0x2
 1693 013e 91       		.byte	0x91
 1694 013f 64       		.sleb128 -28
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 37


 1695 0140 0C       		.uleb128 0xc
 1696 0141 1E000000 		.4byte	.LBB2
 1697 0145 32000000 		.4byte	.LBE2-.LBB2
 1698 0149 0D       		.uleb128 0xd
 1699 014a 6900     		.ascii	"i\000"
 1700 014c 01       		.byte	0x1
 1701 014d 37       		.byte	0x37
 1702 014e 68000000 		.4byte	0x68
 1703 0152 02       		.uleb128 0x2
 1704 0153 91       		.byte	0x91
 1705 0154 74       		.sleb128 -12
 1706 0155 0D       		.uleb128 0xd
 1707 0156 6E756D00 		.ascii	"num\000"
 1708 015a 01       		.byte	0x1
 1709 015b 38       		.byte	0x38
 1710 015c 68000000 		.4byte	0x68
 1711 0160 02       		.uleb128 0x2
 1712 0161 91       		.byte	0x91
 1713 0162 70       		.sleb128 -16
 1714 0163 00       		.byte	0
 1715 0164 00       		.byte	0
 1716 0165 0E       		.uleb128 0xe
 1717 0166 04       		.byte	0x4
 1718 0167 9D000000 		.4byte	0x9d
 1719 016b 0F       		.uleb128 0xf
 1720 016c C2010000 		.4byte	.LASF22
 1721 0170 01       		.byte	0x1
 1722 0171 42       		.byte	0x42
 1723 0172 68000000 		.4byte	0x68
 1724 0176 00000000 		.4byte	.LFB64
 1725 017a 3A000000 		.4byte	.LFE64-.LFB64
 1726 017e 01       		.uleb128 0x1
 1727 017f 9C       		.byte	0x9c
 1728 0180 D1010000 		.4byte	0x1d1
 1729 0184 0A       		.uleb128 0xa
 1730 0185 7400     		.ascii	"t\000"
 1731 0187 01       		.byte	0x1
 1732 0188 42       		.byte	0x42
 1733 0189 65010000 		.4byte	0x165
 1734 018d 02       		.uleb128 0x2
 1735 018e 91       		.byte	0x91
 1736 018f 6C       		.sleb128 -20
 1737 0190 0A       		.uleb128 0xa
 1738 0191 7800     		.ascii	"x\000"
 1739 0193 01       		.byte	0x1
 1740 0194 42       		.byte	0x42
 1741 0195 68000000 		.4byte	0x68
 1742 0199 02       		.uleb128 0x2
 1743 019a 91       		.byte	0x91
 1744 019b 68       		.sleb128 -24
 1745 019c 0A       		.uleb128 0xa
 1746 019d 7900     		.ascii	"y\000"
 1747 019f 01       		.byte	0x1
 1748 01a0 42       		.byte	0x42
 1749 01a1 68000000 		.4byte	0x68
 1750 01a5 02       		.uleb128 0x2
 1751 01a6 91       		.byte	0x91
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 38


 1752 01a7 64       		.sleb128 -28
 1753 01a8 0A       		.uleb128 0xa
 1754 01a9 7A00     		.ascii	"z\000"
 1755 01ab 01       		.byte	0x1
 1756 01ac 42       		.byte	0x42
 1757 01ad 68000000 		.4byte	0x68
 1758 01b1 02       		.uleb128 0x2
 1759 01b2 91       		.byte	0x91
 1760 01b3 60       		.sleb128 -32
 1761 01b4 0B       		.uleb128 0xb
 1762 01b5 82000000 		.4byte	.LASF21
 1763 01b9 01       		.byte	0x1
 1764 01ba 42       		.byte	0x42
 1765 01bb 68000000 		.4byte	0x68
 1766 01bf 02       		.uleb128 0x2
 1767 01c0 91       		.byte	0x91
 1768 01c1 00       		.sleb128 0
 1769 01c2 0D       		.uleb128 0xd
 1770 01c3 6C6F6300 		.ascii	"loc\000"
 1771 01c7 01       		.byte	0x1
 1772 01c8 43       		.byte	0x43
 1773 01c9 68000000 		.4byte	0x68
 1774 01cd 02       		.uleb128 0x2
 1775 01ce 91       		.byte	0x91
 1776 01cf 74       		.sleb128 -12
 1777 01d0 00       		.byte	0
 1778 01d1 0F       		.uleb128 0xf
 1779 01d2 59020000 		.4byte	.LASF23
 1780 01d6 01       		.byte	0x1
 1781 01d7 49       		.byte	0x49
 1782 01d8 68000000 		.4byte	0x68
 1783 01dc 00000000 		.4byte	.LFB65
 1784 01e0 3A000000 		.4byte	.LFE65-.LFB65
 1785 01e4 01       		.uleb128 0x1
 1786 01e5 9C       		.byte	0x9c
 1787 01e6 37020000 		.4byte	0x237
 1788 01ea 0A       		.uleb128 0xa
 1789 01eb 7400     		.ascii	"t\000"
 1790 01ed 01       		.byte	0x1
 1791 01ee 49       		.byte	0x49
 1792 01ef 65010000 		.4byte	0x165
 1793 01f3 02       		.uleb128 0x2
 1794 01f4 91       		.byte	0x91
 1795 01f5 6C       		.sleb128 -20
 1796 01f6 0A       		.uleb128 0xa
 1797 01f7 7800     		.ascii	"x\000"
 1798 01f9 01       		.byte	0x1
 1799 01fa 49       		.byte	0x49
 1800 01fb 68000000 		.4byte	0x68
 1801 01ff 02       		.uleb128 0x2
 1802 0200 91       		.byte	0x91
 1803 0201 68       		.sleb128 -24
 1804 0202 0A       		.uleb128 0xa
 1805 0203 7900     		.ascii	"y\000"
 1806 0205 01       		.byte	0x1
 1807 0206 49       		.byte	0x49
 1808 0207 68000000 		.4byte	0x68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 39


 1809 020b 02       		.uleb128 0x2
 1810 020c 91       		.byte	0x91
 1811 020d 64       		.sleb128 -28
 1812 020e 0A       		.uleb128 0xa
 1813 020f 7A00     		.ascii	"z\000"
 1814 0211 01       		.byte	0x1
 1815 0212 49       		.byte	0x49
 1816 0213 68000000 		.4byte	0x68
 1817 0217 02       		.uleb128 0x2
 1818 0218 91       		.byte	0x91
 1819 0219 60       		.sleb128 -32
 1820 021a 0D       		.uleb128 0xd
 1821 021b 6C6F6300 		.ascii	"loc\000"
 1822 021f 01       		.byte	0x1
 1823 0220 4A       		.byte	0x4a
 1824 0221 68000000 		.4byte	0x68
 1825 0225 02       		.uleb128 0x2
 1826 0226 91       		.byte	0x91
 1827 0227 74       		.sleb128 -12
 1828 0228 0D       		.uleb128 0xd
 1829 0229 72657400 		.ascii	"ret\000"
 1830 022d 01       		.byte	0x1
 1831 022e 4B       		.byte	0x4b
 1832 022f 68000000 		.4byte	0x68
 1833 0233 02       		.uleb128 0x2
 1834 0234 91       		.byte	0x91
 1835 0235 70       		.sleb128 -16
 1836 0236 00       		.byte	0
 1837 0237 10       		.uleb128 0x10
 1838 0238 66020000 		.4byte	.LASF24
 1839 023c 01       		.byte	0x1
 1840 023d 50       		.byte	0x50
 1841 023e 68000000 		.4byte	0x68
 1842 0242 00000000 		.4byte	.LFB66
 1843 0246 A0000000 		.4byte	.LFE66-.LFB66
 1844 024a 01       		.uleb128 0x1
 1845 024b 9C       		.byte	0x9c
 1846 024c 8F020000 		.4byte	0x28f
 1847 0250 0A       		.uleb128 0xa
 1848 0251 7400     		.ascii	"t\000"
 1849 0253 01       		.byte	0x1
 1850 0254 50       		.byte	0x50
 1851 0255 65010000 		.4byte	0x165
 1852 0259 02       		.uleb128 0x2
 1853 025a 91       		.byte	0x91
 1854 025b 6C       		.sleb128 -20
 1855 025c 0A       		.uleb128 0xa
 1856 025d 7800     		.ascii	"x\000"
 1857 025f 01       		.byte	0x1
 1858 0260 50       		.byte	0x50
 1859 0261 68000000 		.4byte	0x68
 1860 0265 02       		.uleb128 0x2
 1861 0266 91       		.byte	0x91
 1862 0267 68       		.sleb128 -24
 1863 0268 0A       		.uleb128 0xa
 1864 0269 7900     		.ascii	"y\000"
 1865 026b 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 40


 1866 026c 50       		.byte	0x50
 1867 026d 68000000 		.4byte	0x68
 1868 0271 02       		.uleb128 0x2
 1869 0272 91       		.byte	0x91
 1870 0273 64       		.sleb128 -28
 1871 0274 0A       		.uleb128 0xa
 1872 0275 7A00     		.ascii	"z\000"
 1873 0277 01       		.byte	0x1
 1874 0278 50       		.byte	0x50
 1875 0279 68000000 		.4byte	0x68
 1876 027d 02       		.uleb128 0x2
 1877 027e 91       		.byte	0x91
 1878 027f 60       		.sleb128 -32
 1879 0280 0D       		.uleb128 0xd
 1880 0281 6C6F6300 		.ascii	"loc\000"
 1881 0285 01       		.byte	0x1
 1882 0286 51       		.byte	0x51
 1883 0287 68000000 		.4byte	0x68
 1884 028b 02       		.uleb128 0x2
 1885 028c 91       		.byte	0x91
 1886 028d 74       		.sleb128 -12
 1887 028e 00       		.byte	0
 1888 028f 09       		.uleb128 0x9
 1889 0290 33010000 		.4byte	.LASF26
 1890 0294 01       		.byte	0x1
 1891 0295 64       		.byte	0x64
 1892 0296 00000000 		.4byte	.LFB67
 1893 029a 3E000000 		.4byte	.LFE67-.LFB67
 1894 029e 01       		.uleb128 0x1
 1895 029f 9C       		.byte	0x9c
 1896 02a0 B1020000 		.4byte	0x2b1
 1897 02a4 0A       		.uleb128 0xa
 1898 02a5 7400     		.ascii	"t\000"
 1899 02a7 01       		.byte	0x1
 1900 02a8 64       		.byte	0x64
 1901 02a9 65010000 		.4byte	0x165
 1902 02ad 02       		.uleb128 0x2
 1903 02ae 91       		.byte	0x91
 1904 02af 74       		.sleb128 -12
 1905 02b0 00       		.byte	0
 1906 02b1 11       		.uleb128 0x11
 1907 02b2 0E000000 		.4byte	.LASF27
 1908 02b6 01       		.byte	0x1
 1909 02b7 6E       		.byte	0x6e
 1910 02b8 EA020000 		.4byte	0x2ea
 1911 02bc 00000000 		.4byte	.LFB68
 1912 02c0 5C000000 		.4byte	.LFE68-.LFB68
 1913 02c4 01       		.uleb128 0x1
 1914 02c5 9C       		.byte	0x9c
 1915 02c6 EA020000 		.4byte	0x2ea
 1916 02ca 12       		.uleb128 0x12
 1917 02cb A6010000 		.4byte	.LASF28
 1918 02cf 01       		.byte	0x1
 1919 02d0 71       		.byte	0x71
 1920 02d1 F0020000 		.4byte	0x2f0
 1921 02d5 02       		.uleb128 0x2
 1922 02d6 91       		.byte	0x91
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 41


 1923 02d7 74       		.sleb128 -12
 1924 02d8 0D       		.uleb128 0xd
 1925 02d9 72657400 		.ascii	"ret\000"
 1926 02dd 01       		.byte	0x1
 1927 02de 73       		.byte	0x73
 1928 02df 00030000 		.4byte	0x300
 1929 02e3 05       		.uleb128 0x5
 1930 02e4 03       		.byte	0x3
 1931 02e5 00000000 		.4byte	ret.6798
 1932 02e9 00       		.byte	0
 1933 02ea 0E       		.uleb128 0xe
 1934 02eb 04       		.byte	0x4
 1935 02ec 68000000 		.4byte	0x68
 1936 02f0 07       		.uleb128 0x7
 1937 02f1 7D000000 		.4byte	0x7d
 1938 02f5 00030000 		.4byte	0x300
 1939 02f9 08       		.uleb128 0x8
 1940 02fa 76000000 		.4byte	0x76
 1941 02fe 02       		.byte	0x2
 1942 02ff 00       		.byte	0
 1943 0300 07       		.uleb128 0x7
 1944 0301 68000000 		.4byte	0x68
 1945 0305 10030000 		.4byte	0x310
 1946 0309 08       		.uleb128 0x8
 1947 030a 76000000 		.4byte	0x76
 1948 030e 02       		.byte	0x2
 1949 030f 00       		.byte	0
 1950 0310 13       		.uleb128 0x13
 1951 0311 63010000 		.4byte	.LASF29
 1952 0315 01       		.byte	0x1
 1953 0316 7C       		.byte	0x7c
 1954 0317 00000000 		.4byte	.LFB69
 1955 031b 88000000 		.4byte	.LFE69-.LFB69
 1956 031f 01       		.uleb128 0x1
 1957 0320 9C       		.byte	0x9c
 1958 0321 3E030000 		.4byte	0x33e
 1959 0325 0A       		.uleb128 0xa
 1960 0326 7400     		.ascii	"t\000"
 1961 0328 01       		.byte	0x1
 1962 0329 7C       		.byte	0x7c
 1963 032a 65010000 		.4byte	0x165
 1964 032e 02       		.uleb128 0x2
 1965 032f 91       		.byte	0x91
 1966 0330 6C       		.sleb128 -20
 1967 0331 0D       		.uleb128 0xd
 1968 0332 6900     		.ascii	"i\000"
 1969 0334 01       		.byte	0x1
 1970 0335 7E       		.byte	0x7e
 1971 0336 68000000 		.4byte	0x68
 1972 033a 02       		.uleb128 0x2
 1973 033b 91       		.byte	0x91
 1974 033c 74       		.sleb128 -12
 1975 033d 00       		.byte	0
 1976 033e 10       		.uleb128 0x10
 1977 033f F3010000 		.4byte	.LASF30
 1978 0343 01       		.byte	0x1
 1979 0344 8F       		.byte	0x8f
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 42


 1980 0345 68000000 		.4byte	0x68
 1981 0349 00000000 		.4byte	.LFB70
 1982 034d 7C040000 		.4byte	.LFE70-.LFB70
 1983 0351 01       		.uleb128 0x1
 1984 0352 9C       		.byte	0x9c
 1985 0353 A3030000 		.4byte	0x3a3
 1986 0357 0A       		.uleb128 0xa
 1987 0358 7400     		.ascii	"t\000"
 1988 035a 01       		.byte	0x1
 1989 035b 8F       		.byte	0x8f
 1990 035c 65010000 		.4byte	0x165
 1991 0360 02       		.uleb128 0x2
 1992 0361 91       		.byte	0x91
 1993 0362 5C       		.sleb128 -36
 1994 0363 0D       		.uleb128 0xd
 1995 0364 7800     		.ascii	"x\000"
 1996 0366 01       		.byte	0x1
 1997 0367 91       		.byte	0x91
 1998 0368 68000000 		.4byte	0x68
 1999 036c 02       		.uleb128 0x2
 2000 036d 91       		.byte	0x91
 2001 036e 74       		.sleb128 -12
 2002 036f 0D       		.uleb128 0xd
 2003 0370 7900     		.ascii	"y\000"
 2004 0372 01       		.byte	0x1
 2005 0373 91       		.byte	0x91
 2006 0374 68000000 		.4byte	0x68
 2007 0378 02       		.uleb128 0x2
 2008 0379 91       		.byte	0x91
 2009 037a 70       		.sleb128 -16
 2010 037b 0D       		.uleb128 0xd
 2011 037c 7A00     		.ascii	"z\000"
 2012 037e 01       		.byte	0x1
 2013 037f 91       		.byte	0x91
 2014 0380 68000000 		.4byte	0x68
 2015 0384 02       		.uleb128 0x2
 2016 0385 91       		.byte	0x91
 2017 0386 6C       		.sleb128 -20
 2018 0387 0D       		.uleb128 0xd
 2019 0388 7A7000   		.ascii	"zp\000"
 2020 038b 01       		.byte	0x1
 2021 038c 91       		.byte	0x91
 2022 038d 68000000 		.4byte	0x68
 2023 0391 02       		.uleb128 0x2
 2024 0392 91       		.byte	0x91
 2025 0393 68       		.sleb128 -24
 2026 0394 12       		.uleb128 0x12
 2027 0395 B8010000 		.4byte	.LASF31
 2028 0399 01       		.byte	0x1
 2029 039a 92       		.byte	0x92
 2030 039b 68000000 		.4byte	0x68
 2031 039f 02       		.uleb128 0x2
 2032 03a0 91       		.byte	0x91
 2033 03a1 64       		.sleb128 -28
 2034 03a2 00       		.byte	0
 2035 03a3 14       		.uleb128 0x14
 2036 03a4 05000000 		.4byte	.LASF32
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 43


 2037 03a8 01       		.byte	0x1
 2038 03a9 0701     		.2byte	0x107
 2039 03ab 68000000 		.4byte	0x68
 2040 03af 00000000 		.4byte	.LFB71
 2041 03b3 72000000 		.4byte	.LFE71-.LFB71
 2042 03b7 01       		.uleb128 0x1
 2043 03b8 9C       		.byte	0x9c
 2044 03b9 1E040000 		.4byte	0x41e
 2045 03bd 15       		.uleb128 0x15
 2046 03be 14020000 		.4byte	.LASF40
 2047 03c2 16       		.uleb128 0x16
 2048 03c3 01020000 		.4byte	.LASF33
 2049 03c7 01       		.byte	0x1
 2050 03c8 0701     		.2byte	0x107
 2051 03ca 1E040000 		.4byte	0x41e
 2052 03ce 02       		.uleb128 0x2
 2053 03cf 91       		.byte	0x91
 2054 03d0 6C       		.sleb128 -20
 2055 03d1 17       		.uleb128 0x17
 2056 03d2 7400     		.ascii	"t\000"
 2057 03d4 01       		.byte	0x1
 2058 03d5 0701     		.2byte	0x107
 2059 03d7 65010000 		.4byte	0x165
 2060 03db 02       		.uleb128 0x2
 2061 03dc 91       		.byte	0x91
 2062 03dd 68       		.sleb128 -24
 2063 03de 17       		.uleb128 0x17
 2064 03df 7800     		.ascii	"x\000"
 2065 03e1 01       		.byte	0x1
 2066 03e2 0701     		.2byte	0x107
 2067 03e4 68000000 		.4byte	0x68
 2068 03e8 02       		.uleb128 0x2
 2069 03e9 91       		.byte	0x91
 2070 03ea 64       		.sleb128 -28
 2071 03eb 17       		.uleb128 0x17
 2072 03ec 7900     		.ascii	"y\000"
 2073 03ee 01       		.byte	0x1
 2074 03ef 0701     		.2byte	0x107
 2075 03f1 68000000 		.4byte	0x68
 2076 03f5 02       		.uleb128 0x2
 2077 03f6 91       		.byte	0x91
 2078 03f7 60       		.sleb128 -32
 2079 03f8 17       		.uleb128 0x17
 2080 03f9 7A00     		.ascii	"z\000"
 2081 03fb 01       		.byte	0x1
 2082 03fc 0701     		.2byte	0x107
 2083 03fe 68000000 		.4byte	0x68
 2084 0402 02       		.uleb128 0x2
 2085 0403 91       		.byte	0x91
 2086 0404 00       		.sleb128 0
 2087 0405 0C       		.uleb128 0xc
 2088 0406 20000000 		.4byte	.LBB3
 2089 040a 48000000 		.4byte	.LBE3-.LBB3
 2090 040e 18       		.uleb128 0x18
 2091 040f 32020000 		.4byte	.LASF41
 2092 0413 01       		.byte	0x1
 2093 0414 1001     		.2byte	0x110
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 44


 2094 0416 68000000 		.4byte	0x68
 2095 041a 19       		.uleb128 0x19
 2096 041b 00       		.byte	0
 2097 041c 00       		.byte	0
 2098 041d 00       		.byte	0
 2099 041e 0E       		.uleb128 0xe
 2100 041f 04       		.byte	0x4
 2101 0420 BD030000 		.4byte	0x3bd
 2102 0424 14       		.uleb128 0x14
 2103 0425 06020000 		.4byte	.LASF34
 2104 0429 01       		.byte	0x1
 2105 042a 1801     		.2byte	0x118
 2106 042c 68000000 		.4byte	0x68
 2107 0430 00000000 		.4byte	.LFB72
 2108 0434 2C000000 		.4byte	.LFE72-.LFB72
 2109 0438 01       		.uleb128 0x1
 2110 0439 9C       		.byte	0x9c
 2111 043a 4C040000 		.4byte	0x44c
 2112 043e 17       		.uleb128 0x17
 2113 043f 7400     		.ascii	"t\000"
 2114 0441 01       		.byte	0x1
 2115 0442 1801     		.2byte	0x118
 2116 0444 65010000 		.4byte	0x165
 2117 0448 02       		.uleb128 0x2
 2118 0449 91       		.byte	0x91
 2119 044a 74       		.sleb128 -12
 2120 044b 00       		.byte	0
 2121 044c 1A       		.uleb128 0x1a
 2122 044d 4F010000 		.4byte	.LASF35
 2123 0451 01       		.byte	0x1
 2124 0452 2101     		.2byte	0x121
 2125 0454 00000000 		.4byte	.LFB73
 2126 0458 1E000000 		.4byte	.LFE73-.LFB73
 2127 045c 01       		.uleb128 0x1
 2128 045d 9C       		.byte	0x9c
 2129 045e 70040000 		.4byte	0x470
 2130 0462 17       		.uleb128 0x17
 2131 0463 7400     		.ascii	"t\000"
 2132 0465 01       		.byte	0x1
 2133 0466 2101     		.2byte	0x121
 2134 0468 65010000 		.4byte	0x165
 2135 046c 02       		.uleb128 0x2
 2136 046d 91       		.byte	0x91
 2137 046e 74       		.sleb128 -12
 2138 046f 00       		.byte	0
 2139 0470 1B       		.uleb128 0x1b
 2140 0471 72010000 		.4byte	.LASF42
 2141 0475 04       		.byte	0x4
 2142 0476 5506     		.2byte	0x655
 2143 0478 7C040000 		.4byte	0x47c
 2144 047c 1C       		.uleb128 0x1c
 2145 047d 84000000 		.4byte	0x84
 2146 0481 00       		.byte	0
 2147              		.section	.debug_abbrev,"",%progbits
 2148              	.Ldebug_abbrev0:
 2149 0000 01       		.uleb128 0x1
 2150 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 45


 2151 0002 01       		.byte	0x1
 2152 0003 25       		.uleb128 0x25
 2153 0004 0E       		.uleb128 0xe
 2154 0005 13       		.uleb128 0x13
 2155 0006 0B       		.uleb128 0xb
 2156 0007 03       		.uleb128 0x3
 2157 0008 0E       		.uleb128 0xe
 2158 0009 1B       		.uleb128 0x1b
 2159 000a 0E       		.uleb128 0xe
 2160 000b 55       		.uleb128 0x55
 2161 000c 17       		.uleb128 0x17
 2162 000d 11       		.uleb128 0x11
 2163 000e 01       		.uleb128 0x1
 2164 000f 10       		.uleb128 0x10
 2165 0010 17       		.uleb128 0x17
 2166 0011 00       		.byte	0
 2167 0012 00       		.byte	0
 2168 0013 02       		.uleb128 0x2
 2169 0014 24       		.uleb128 0x24
 2170 0015 00       		.byte	0
 2171 0016 0B       		.uleb128 0xb
 2172 0017 0B       		.uleb128 0xb
 2173 0018 3E       		.uleb128 0x3e
 2174 0019 0B       		.uleb128 0xb
 2175 001a 03       		.uleb128 0x3
 2176 001b 0E       		.uleb128 0xe
 2177 001c 00       		.byte	0
 2178 001d 00       		.byte	0
 2179 001e 03       		.uleb128 0x3
 2180 001f 16       		.uleb128 0x16
 2181 0020 00       		.byte	0
 2182 0021 03       		.uleb128 0x3
 2183 0022 0E       		.uleb128 0xe
 2184 0023 3A       		.uleb128 0x3a
 2185 0024 0B       		.uleb128 0xb
 2186 0025 3B       		.uleb128 0x3b
 2187 0026 0B       		.uleb128 0xb
 2188 0027 49       		.uleb128 0x49
 2189 0028 13       		.uleb128 0x13
 2190 0029 00       		.byte	0
 2191 002a 00       		.byte	0
 2192 002b 04       		.uleb128 0x4
 2193 002c 24       		.uleb128 0x24
 2194 002d 00       		.byte	0
 2195 002e 0B       		.uleb128 0xb
 2196 002f 0B       		.uleb128 0xb
 2197 0030 3E       		.uleb128 0x3e
 2198 0031 0B       		.uleb128 0xb
 2199 0032 03       		.uleb128 0x3
 2200 0033 08       		.uleb128 0x8
 2201 0034 00       		.byte	0
 2202 0035 00       		.byte	0
 2203 0036 05       		.uleb128 0x5
 2204 0037 13       		.uleb128 0x13
 2205 0038 01       		.byte	0x1
 2206 0039 03       		.uleb128 0x3
 2207 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 46


 2208 003b 0B       		.uleb128 0xb
 2209 003c 05       		.uleb128 0x5
 2210 003d 3A       		.uleb128 0x3a
 2211 003e 0B       		.uleb128 0xb
 2212 003f 3B       		.uleb128 0x3b
 2213 0040 0B       		.uleb128 0xb
 2214 0041 01       		.uleb128 0x1
 2215 0042 13       		.uleb128 0x13
 2216 0043 00       		.byte	0
 2217 0044 00       		.byte	0
 2218 0045 06       		.uleb128 0x6
 2219 0046 0D       		.uleb128 0xd
 2220 0047 00       		.byte	0
 2221 0048 03       		.uleb128 0x3
 2222 0049 0E       		.uleb128 0xe
 2223 004a 3A       		.uleb128 0x3a
 2224 004b 0B       		.uleb128 0xb
 2225 004c 3B       		.uleb128 0x3b
 2226 004d 0B       		.uleb128 0xb
 2227 004e 49       		.uleb128 0x49
 2228 004f 13       		.uleb128 0x13
 2229 0050 38       		.uleb128 0x38
 2230 0051 0B       		.uleb128 0xb
 2231 0052 00       		.byte	0
 2232 0053 00       		.byte	0
 2233 0054 07       		.uleb128 0x7
 2234 0055 01       		.uleb128 0x1
 2235 0056 01       		.byte	0x1
 2236 0057 49       		.uleb128 0x49
 2237 0058 13       		.uleb128 0x13
 2238 0059 01       		.uleb128 0x1
 2239 005a 13       		.uleb128 0x13
 2240 005b 00       		.byte	0
 2241 005c 00       		.byte	0
 2242 005d 08       		.uleb128 0x8
 2243 005e 21       		.uleb128 0x21
 2244 005f 00       		.byte	0
 2245 0060 49       		.uleb128 0x49
 2246 0061 13       		.uleb128 0x13
 2247 0062 2F       		.uleb128 0x2f
 2248 0063 0B       		.uleb128 0xb
 2249 0064 00       		.byte	0
 2250 0065 00       		.byte	0
 2251 0066 09       		.uleb128 0x9
 2252 0067 2E       		.uleb128 0x2e
 2253 0068 01       		.byte	0x1
 2254 0069 3F       		.uleb128 0x3f
 2255 006a 19       		.uleb128 0x19
 2256 006b 03       		.uleb128 0x3
 2257 006c 0E       		.uleb128 0xe
 2258 006d 3A       		.uleb128 0x3a
 2259 006e 0B       		.uleb128 0xb
 2260 006f 3B       		.uleb128 0x3b
 2261 0070 0B       		.uleb128 0xb
 2262 0071 27       		.uleb128 0x27
 2263 0072 19       		.uleb128 0x19
 2264 0073 11       		.uleb128 0x11
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 47


 2265 0074 01       		.uleb128 0x1
 2266 0075 12       		.uleb128 0x12
 2267 0076 06       		.uleb128 0x6
 2268 0077 40       		.uleb128 0x40
 2269 0078 18       		.uleb128 0x18
 2270 0079 9742     		.uleb128 0x2117
 2271 007b 19       		.uleb128 0x19
 2272 007c 01       		.uleb128 0x1
 2273 007d 13       		.uleb128 0x13
 2274 007e 00       		.byte	0
 2275 007f 00       		.byte	0
 2276 0080 0A       		.uleb128 0xa
 2277 0081 05       		.uleb128 0x5
 2278 0082 00       		.byte	0
 2279 0083 03       		.uleb128 0x3
 2280 0084 08       		.uleb128 0x8
 2281 0085 3A       		.uleb128 0x3a
 2282 0086 0B       		.uleb128 0xb
 2283 0087 3B       		.uleb128 0x3b
 2284 0088 0B       		.uleb128 0xb
 2285 0089 49       		.uleb128 0x49
 2286 008a 13       		.uleb128 0x13
 2287 008b 02       		.uleb128 0x2
 2288 008c 18       		.uleb128 0x18
 2289 008d 00       		.byte	0
 2290 008e 00       		.byte	0
 2291 008f 0B       		.uleb128 0xb
 2292 0090 05       		.uleb128 0x5
 2293 0091 00       		.byte	0
 2294 0092 03       		.uleb128 0x3
 2295 0093 0E       		.uleb128 0xe
 2296 0094 3A       		.uleb128 0x3a
 2297 0095 0B       		.uleb128 0xb
 2298 0096 3B       		.uleb128 0x3b
 2299 0097 0B       		.uleb128 0xb
 2300 0098 49       		.uleb128 0x49
 2301 0099 13       		.uleb128 0x13
 2302 009a 02       		.uleb128 0x2
 2303 009b 18       		.uleb128 0x18
 2304 009c 00       		.byte	0
 2305 009d 00       		.byte	0
 2306 009e 0C       		.uleb128 0xc
 2307 009f 0B       		.uleb128 0xb
 2308 00a0 01       		.byte	0x1
 2309 00a1 11       		.uleb128 0x11
 2310 00a2 01       		.uleb128 0x1
 2311 00a3 12       		.uleb128 0x12
 2312 00a4 06       		.uleb128 0x6
 2313 00a5 00       		.byte	0
 2314 00a6 00       		.byte	0
 2315 00a7 0D       		.uleb128 0xd
 2316 00a8 34       		.uleb128 0x34
 2317 00a9 00       		.byte	0
 2318 00aa 03       		.uleb128 0x3
 2319 00ab 08       		.uleb128 0x8
 2320 00ac 3A       		.uleb128 0x3a
 2321 00ad 0B       		.uleb128 0xb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 48


 2322 00ae 3B       		.uleb128 0x3b
 2323 00af 0B       		.uleb128 0xb
 2324 00b0 49       		.uleb128 0x49
 2325 00b1 13       		.uleb128 0x13
 2326 00b2 02       		.uleb128 0x2
 2327 00b3 18       		.uleb128 0x18
 2328 00b4 00       		.byte	0
 2329 00b5 00       		.byte	0
 2330 00b6 0E       		.uleb128 0xe
 2331 00b7 0F       		.uleb128 0xf
 2332 00b8 00       		.byte	0
 2333 00b9 0B       		.uleb128 0xb
 2334 00ba 0B       		.uleb128 0xb
 2335 00bb 49       		.uleb128 0x49
 2336 00bc 13       		.uleb128 0x13
 2337 00bd 00       		.byte	0
 2338 00be 00       		.byte	0
 2339 00bf 0F       		.uleb128 0xf
 2340 00c0 2E       		.uleb128 0x2e
 2341 00c1 01       		.byte	0x1
 2342 00c2 3F       		.uleb128 0x3f
 2343 00c3 19       		.uleb128 0x19
 2344 00c4 03       		.uleb128 0x3
 2345 00c5 0E       		.uleb128 0xe
 2346 00c6 3A       		.uleb128 0x3a
 2347 00c7 0B       		.uleb128 0xb
 2348 00c8 3B       		.uleb128 0x3b
 2349 00c9 0B       		.uleb128 0xb
 2350 00ca 27       		.uleb128 0x27
 2351 00cb 19       		.uleb128 0x19
 2352 00cc 49       		.uleb128 0x49
 2353 00cd 13       		.uleb128 0x13
 2354 00ce 11       		.uleb128 0x11
 2355 00cf 01       		.uleb128 0x1
 2356 00d0 12       		.uleb128 0x12
 2357 00d1 06       		.uleb128 0x6
 2358 00d2 40       		.uleb128 0x40
 2359 00d3 18       		.uleb128 0x18
 2360 00d4 9742     		.uleb128 0x2117
 2361 00d6 19       		.uleb128 0x19
 2362 00d7 01       		.uleb128 0x1
 2363 00d8 13       		.uleb128 0x13
 2364 00d9 00       		.byte	0
 2365 00da 00       		.byte	0
 2366 00db 10       		.uleb128 0x10
 2367 00dc 2E       		.uleb128 0x2e
 2368 00dd 01       		.byte	0x1
 2369 00de 3F       		.uleb128 0x3f
 2370 00df 19       		.uleb128 0x19
 2371 00e0 03       		.uleb128 0x3
 2372 00e1 0E       		.uleb128 0xe
 2373 00e2 3A       		.uleb128 0x3a
 2374 00e3 0B       		.uleb128 0xb
 2375 00e4 3B       		.uleb128 0x3b
 2376 00e5 0B       		.uleb128 0xb
 2377 00e6 27       		.uleb128 0x27
 2378 00e7 19       		.uleb128 0x19
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 49


 2379 00e8 49       		.uleb128 0x49
 2380 00e9 13       		.uleb128 0x13
 2381 00ea 11       		.uleb128 0x11
 2382 00eb 01       		.uleb128 0x1
 2383 00ec 12       		.uleb128 0x12
 2384 00ed 06       		.uleb128 0x6
 2385 00ee 40       		.uleb128 0x40
 2386 00ef 18       		.uleb128 0x18
 2387 00f0 9642     		.uleb128 0x2116
 2388 00f2 19       		.uleb128 0x19
 2389 00f3 01       		.uleb128 0x1
 2390 00f4 13       		.uleb128 0x13
 2391 00f5 00       		.byte	0
 2392 00f6 00       		.byte	0
 2393 00f7 11       		.uleb128 0x11
 2394 00f8 2E       		.uleb128 0x2e
 2395 00f9 01       		.byte	0x1
 2396 00fa 3F       		.uleb128 0x3f
 2397 00fb 19       		.uleb128 0x19
 2398 00fc 03       		.uleb128 0x3
 2399 00fd 0E       		.uleb128 0xe
 2400 00fe 3A       		.uleb128 0x3a
 2401 00ff 0B       		.uleb128 0xb
 2402 0100 3B       		.uleb128 0x3b
 2403 0101 0B       		.uleb128 0xb
 2404 0102 49       		.uleb128 0x49
 2405 0103 13       		.uleb128 0x13
 2406 0104 11       		.uleb128 0x11
 2407 0105 01       		.uleb128 0x1
 2408 0106 12       		.uleb128 0x12
 2409 0107 06       		.uleb128 0x6
 2410 0108 40       		.uleb128 0x40
 2411 0109 18       		.uleb128 0x18
 2412 010a 9642     		.uleb128 0x2116
 2413 010c 19       		.uleb128 0x19
 2414 010d 01       		.uleb128 0x1
 2415 010e 13       		.uleb128 0x13
 2416 010f 00       		.byte	0
 2417 0110 00       		.byte	0
 2418 0111 12       		.uleb128 0x12
 2419 0112 34       		.uleb128 0x34
 2420 0113 00       		.byte	0
 2421 0114 03       		.uleb128 0x3
 2422 0115 0E       		.uleb128 0xe
 2423 0116 3A       		.uleb128 0x3a
 2424 0117 0B       		.uleb128 0xb
 2425 0118 3B       		.uleb128 0x3b
 2426 0119 0B       		.uleb128 0xb
 2427 011a 49       		.uleb128 0x49
 2428 011b 13       		.uleb128 0x13
 2429 011c 02       		.uleb128 0x2
 2430 011d 18       		.uleb128 0x18
 2431 011e 00       		.byte	0
 2432 011f 00       		.byte	0
 2433 0120 13       		.uleb128 0x13
 2434 0121 2E       		.uleb128 0x2e
 2435 0122 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 50


 2436 0123 3F       		.uleb128 0x3f
 2437 0124 19       		.uleb128 0x19
 2438 0125 03       		.uleb128 0x3
 2439 0126 0E       		.uleb128 0xe
 2440 0127 3A       		.uleb128 0x3a
 2441 0128 0B       		.uleb128 0xb
 2442 0129 3B       		.uleb128 0x3b
 2443 012a 0B       		.uleb128 0xb
 2444 012b 27       		.uleb128 0x27
 2445 012c 19       		.uleb128 0x19
 2446 012d 11       		.uleb128 0x11
 2447 012e 01       		.uleb128 0x1
 2448 012f 12       		.uleb128 0x12
 2449 0130 06       		.uleb128 0x6
 2450 0131 40       		.uleb128 0x40
 2451 0132 18       		.uleb128 0x18
 2452 0133 9642     		.uleb128 0x2116
 2453 0135 19       		.uleb128 0x19
 2454 0136 01       		.uleb128 0x1
 2455 0137 13       		.uleb128 0x13
 2456 0138 00       		.byte	0
 2457 0139 00       		.byte	0
 2458 013a 14       		.uleb128 0x14
 2459 013b 2E       		.uleb128 0x2e
 2460 013c 01       		.byte	0x1
 2461 013d 3F       		.uleb128 0x3f
 2462 013e 19       		.uleb128 0x19
 2463 013f 03       		.uleb128 0x3
 2464 0140 0E       		.uleb128 0xe
 2465 0141 3A       		.uleb128 0x3a
 2466 0142 0B       		.uleb128 0xb
 2467 0143 3B       		.uleb128 0x3b
 2468 0144 05       		.uleb128 0x5
 2469 0145 27       		.uleb128 0x27
 2470 0146 19       		.uleb128 0x19
 2471 0147 49       		.uleb128 0x49
 2472 0148 13       		.uleb128 0x13
 2473 0149 11       		.uleb128 0x11
 2474 014a 01       		.uleb128 0x1
 2475 014b 12       		.uleb128 0x12
 2476 014c 06       		.uleb128 0x6
 2477 014d 40       		.uleb128 0x40
 2478 014e 18       		.uleb128 0x18
 2479 014f 9642     		.uleb128 0x2116
 2480 0151 19       		.uleb128 0x19
 2481 0152 01       		.uleb128 0x1
 2482 0153 13       		.uleb128 0x13
 2483 0154 00       		.byte	0
 2484 0155 00       		.byte	0
 2485 0156 15       		.uleb128 0x15
 2486 0157 13       		.uleb128 0x13
 2487 0158 00       		.byte	0
 2488 0159 03       		.uleb128 0x3
 2489 015a 0E       		.uleb128 0xe
 2490 015b 3C       		.uleb128 0x3c
 2491 015c 19       		.uleb128 0x19
 2492 015d 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 51


 2493 015e 00       		.byte	0
 2494 015f 16       		.uleb128 0x16
 2495 0160 05       		.uleb128 0x5
 2496 0161 00       		.byte	0
 2497 0162 03       		.uleb128 0x3
 2498 0163 0E       		.uleb128 0xe
 2499 0164 3A       		.uleb128 0x3a
 2500 0165 0B       		.uleb128 0xb
 2501 0166 3B       		.uleb128 0x3b
 2502 0167 05       		.uleb128 0x5
 2503 0168 49       		.uleb128 0x49
 2504 0169 13       		.uleb128 0x13
 2505 016a 02       		.uleb128 0x2
 2506 016b 18       		.uleb128 0x18
 2507 016c 00       		.byte	0
 2508 016d 00       		.byte	0
 2509 016e 17       		.uleb128 0x17
 2510 016f 05       		.uleb128 0x5
 2511 0170 00       		.byte	0
 2512 0171 03       		.uleb128 0x3
 2513 0172 08       		.uleb128 0x8
 2514 0173 3A       		.uleb128 0x3a
 2515 0174 0B       		.uleb128 0xb
 2516 0175 3B       		.uleb128 0x3b
 2517 0176 05       		.uleb128 0x5
 2518 0177 49       		.uleb128 0x49
 2519 0178 13       		.uleb128 0x13
 2520 0179 02       		.uleb128 0x2
 2521 017a 18       		.uleb128 0x18
 2522 017b 00       		.byte	0
 2523 017c 00       		.byte	0
 2524 017d 18       		.uleb128 0x18
 2525 017e 2E       		.uleb128 0x2e
 2526 017f 01       		.byte	0x1
 2527 0180 3F       		.uleb128 0x3f
 2528 0181 19       		.uleb128 0x19
 2529 0182 03       		.uleb128 0x3
 2530 0183 0E       		.uleb128 0xe
 2531 0184 3A       		.uleb128 0x3a
 2532 0185 0B       		.uleb128 0xb
 2533 0186 3B       		.uleb128 0x3b
 2534 0187 05       		.uleb128 0x5
 2535 0188 49       		.uleb128 0x49
 2536 0189 13       		.uleb128 0x13
 2537 018a 3C       		.uleb128 0x3c
 2538 018b 19       		.uleb128 0x19
 2539 018c 00       		.byte	0
 2540 018d 00       		.byte	0
 2541 018e 19       		.uleb128 0x19
 2542 018f 18       		.uleb128 0x18
 2543 0190 00       		.byte	0
 2544 0191 00       		.byte	0
 2545 0192 00       		.byte	0
 2546 0193 1A       		.uleb128 0x1a
 2547 0194 2E       		.uleb128 0x2e
 2548 0195 01       		.byte	0x1
 2549 0196 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 52


 2550 0197 19       		.uleb128 0x19
 2551 0198 03       		.uleb128 0x3
 2552 0199 0E       		.uleb128 0xe
 2553 019a 3A       		.uleb128 0x3a
 2554 019b 0B       		.uleb128 0xb
 2555 019c 3B       		.uleb128 0x3b
 2556 019d 05       		.uleb128 0x5
 2557 019e 27       		.uleb128 0x27
 2558 019f 19       		.uleb128 0x19
 2559 01a0 11       		.uleb128 0x11
 2560 01a1 01       		.uleb128 0x1
 2561 01a2 12       		.uleb128 0x12
 2562 01a3 06       		.uleb128 0x6
 2563 01a4 40       		.uleb128 0x40
 2564 01a5 18       		.uleb128 0x18
 2565 01a6 9642     		.uleb128 0x2116
 2566 01a8 19       		.uleb128 0x19
 2567 01a9 01       		.uleb128 0x1
 2568 01aa 13       		.uleb128 0x13
 2569 01ab 00       		.byte	0
 2570 01ac 00       		.byte	0
 2571 01ad 1B       		.uleb128 0x1b
 2572 01ae 34       		.uleb128 0x34
 2573 01af 00       		.byte	0
 2574 01b0 03       		.uleb128 0x3
 2575 01b1 0E       		.uleb128 0xe
 2576 01b2 3A       		.uleb128 0x3a
 2577 01b3 0B       		.uleb128 0xb
 2578 01b4 3B       		.uleb128 0x3b
 2579 01b5 05       		.uleb128 0x5
 2580 01b6 49       		.uleb128 0x49
 2581 01b7 13       		.uleb128 0x13
 2582 01b8 3F       		.uleb128 0x3f
 2583 01b9 19       		.uleb128 0x19
 2584 01ba 3C       		.uleb128 0x3c
 2585 01bb 19       		.uleb128 0x19
 2586 01bc 00       		.byte	0
 2587 01bd 00       		.byte	0
 2588 01be 1C       		.uleb128 0x1c
 2589 01bf 35       		.uleb128 0x35
 2590 01c0 00       		.byte	0
 2591 01c1 49       		.uleb128 0x49
 2592 01c2 13       		.uleb128 0x13
 2593 01c3 00       		.byte	0
 2594 01c4 00       		.byte	0
 2595 01c5 00       		.byte	0
 2596              		.section	.debug_aranges,"",%progbits
 2597 0000 6C000000 		.4byte	0x6c
 2598 0004 0200     		.2byte	0x2
 2599 0006 00000000 		.4byte	.Ldebug_info0
 2600 000a 04       		.byte	0x4
 2601 000b 00       		.byte	0
 2602 000c 0000     		.2byte	0
 2603 000e 0000     		.2byte	0
 2604 0010 00000000 		.4byte	.LFB63
 2605 0014 6C000000 		.4byte	.LFE63-.LFB63
 2606 0018 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 53


 2607 001c 3A000000 		.4byte	.LFE64-.LFB64
 2608 0020 00000000 		.4byte	.LFB65
 2609 0024 3A000000 		.4byte	.LFE65-.LFB65
 2610 0028 00000000 		.4byte	.LFB66
 2611 002c A0000000 		.4byte	.LFE66-.LFB66
 2612 0030 00000000 		.4byte	.LFB67
 2613 0034 3E000000 		.4byte	.LFE67-.LFB67
 2614 0038 00000000 		.4byte	.LFB68
 2615 003c 5C000000 		.4byte	.LFE68-.LFB68
 2616 0040 00000000 		.4byte	.LFB69
 2617 0044 88000000 		.4byte	.LFE69-.LFB69
 2618 0048 00000000 		.4byte	.LFB70
 2619 004c 7C040000 		.4byte	.LFE70-.LFB70
 2620 0050 00000000 		.4byte	.LFB71
 2621 0054 72000000 		.4byte	.LFE71-.LFB71
 2622 0058 00000000 		.4byte	.LFB72
 2623 005c 2C000000 		.4byte	.LFE72-.LFB72
 2624 0060 00000000 		.4byte	.LFB73
 2625 0064 1E000000 		.4byte	.LFE73-.LFB73
 2626 0068 00000000 		.4byte	0
 2627 006c 00000000 		.4byte	0
 2628              		.section	.debug_ranges,"",%progbits
 2629              	.Ldebug_ranges0:
 2630 0000 00000000 		.4byte	.LFB63
 2631 0004 6C000000 		.4byte	.LFE63
 2632 0008 00000000 		.4byte	.LFB64
 2633 000c 3A000000 		.4byte	.LFE64
 2634 0010 00000000 		.4byte	.LFB65
 2635 0014 3A000000 		.4byte	.LFE65
 2636 0018 00000000 		.4byte	.LFB66
 2637 001c A0000000 		.4byte	.LFE66
 2638 0020 00000000 		.4byte	.LFB67
 2639 0024 3E000000 		.4byte	.LFE67
 2640 0028 00000000 		.4byte	.LFB68
 2641 002c 5C000000 		.4byte	.LFE68
 2642 0030 00000000 		.4byte	.LFB69
 2643 0034 88000000 		.4byte	.LFE69
 2644 0038 00000000 		.4byte	.LFB70
 2645 003c 7C040000 		.4byte	.LFE70
 2646 0040 00000000 		.4byte	.LFB71
 2647 0044 72000000 		.4byte	.LFE71
 2648 0048 00000000 		.4byte	.LFB72
 2649 004c 2C000000 		.4byte	.LFE72
 2650 0050 00000000 		.4byte	.LFB73
 2651 0054 1E000000 		.4byte	.LFE73
 2652 0058 00000000 		.4byte	0
 2653 005c 00000000 		.4byte	0
 2654              		.section	.debug_line,"",%progbits
 2655              	.Ldebug_line0:
 2656 0000 E4030000 		.section	.debug_str,"MS",%progbits,1
 2656      02004301 
 2656      00000201 
 2656      FB0E0D00 
 2656      01010101 
 2657              	.LASF18:
 2658 0000 7475726E 		.ascii	"turn\000"
 2658      00
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 54


 2659              	.LASF32:
 2660 0005 7474635F 		.ascii	"ttc_step\000"
 2660      73746570 
 2660      00
 2661              	.LASF27:
 2662 000e 7474635F 		.ascii	"ttc_take_input\000"
 2662      74616B65 
 2662      5F696E70 
 2662      757400
 2663              	.LASF38:
 2664 001d 433A5C55 		.ascii	"C:\\Users\\Andrew\\Dropbox (Personal)\\MIT\\MIT 201"
 2664      73657273 
 2664      5C416E64 
 2664      7265775C 
 2664      44726F70 
 2665 004b 36205370 		.ascii	"6 Spring\\6115\\Final Project\\Code\\VGA\\Tic Tac T"
 2665      72696E67 
 2665      5C363131 
 2665      355C4669 
 2665      6E616C20 
 2666 0079 6F652E63 		.ascii	"oe.cydsn\000"
 2666      7964736E 
 2666      00
 2667              	.LASF21:
 2668 0082 76616C75 		.ascii	"value\000"
 2668      6500
 2669              	.LASF11:
 2670 0088 5F5F696E 		.ascii	"__int32_t\000"
 2670      7433325F 
 2670      7400
 2671              	.LASF39:
 2672 0092 7469635F 		.ascii	"tic_tac_toe\000"
 2672      7461635F 
 2672      746F6500 
 2673              	.LASF36:
 2674 009e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2674      4320342E 
 2674      392E3320 
 2674      32303135 
 2674      30333033 
 2675 00d1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2675      20726576 
 2675      6973696F 
 2675      6E203232 
 2675      31323230 
 2676 0104 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2676      66756E63 
 2676      74696F6E 
 2676      2D736563 
 2676      74696F6E 
 2677              	.LASF14:
 2678 012c 646F7562 		.ascii	"double\000"
 2678      6C6500
 2679              	.LASF26:
 2680 0133 7474635F 		.ascii	"ttc_change_player\000"
 2680      6368616E 
 2680      67655F70 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 55


 2680      6C617965 
 2680      7200
 2681              	.LASF16:
 2682 0145 64696D65 		.ascii	"dimension\000"
 2682      6E73696F 
 2682      6E00
 2683              	.LASF35:
 2684 014f 7474635F 		.ascii	"ttc_free\000"
 2684      66726565 
 2684      00
 2685              	.LASF13:
 2686 0158 666C6F61 		.ascii	"float\000"
 2686      7400
 2687              	.LASF15:
 2688 015e 73697A65 		.ascii	"size\000"
 2688      00
 2689              	.LASF29:
 2690 0163 7474635F 		.ascii	"ttc_print_grid\000"
 2690      7072696E 
 2690      745F6772 
 2690      696400
 2691              	.LASF42:
 2692 0172 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2692      52784275 
 2692      66666572 
 2692      00
 2693              	.LASF1:
 2694 017f 756E7369 		.ascii	"unsigned char\000"
 2694      676E6564 
 2694      20636861 
 2694      7200
 2695              	.LASF5:
 2696 018d 6C6F6E67 		.ascii	"long unsigned int\000"
 2696      20756E73 
 2696      69676E65 
 2696      6420696E 
 2696      7400
 2697              	.LASF17:
 2698 019f 706C6179 		.ascii	"player\000"
 2698      657200
 2699              	.LASF28:
 2700 01a6 73747232 		.ascii	"str2\000"
 2700      00
 2701              	.LASF19:
 2702 01ab 67616D65 		.ascii	"game_not_won\000"
 2702      5F6E6F74 
 2702      5F776F6E 
 2702      00
 2703              	.LASF31:
 2704 01b8 636F6E6E 		.ascii	"connected\000"
 2704      65637465 
 2704      6400
 2705              	.LASF22:
 2706 01c2 7474635F 		.ascii	"ttc_set_grid\000"
 2706      7365745F 
 2706      67726964 
 2706      00
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 56


 2707              	.LASF8:
 2708 01cf 756E7369 		.ascii	"unsigned int\000"
 2708      676E6564 
 2708      20696E74 
 2708      00
 2709              	.LASF7:
 2710 01dc 6C6F6E67 		.ascii	"long long unsigned int\000"
 2710      206C6F6E 
 2710      6720756E 
 2710      7369676E 
 2710      65642069 
 2711              	.LASF30:
 2712 01f3 7474635F 		.ascii	"ttc_check_win\000"
 2712      63686563 
 2712      6B5F7769 
 2712      6E00
 2713              	.LASF33:
 2714 0201 64697370 		.ascii	"disp\000"
 2714      00
 2715              	.LASF34:
 2716 0206 7474635F 		.ascii	"ttc_play_game\000"
 2716      706C6179 
 2716      5F67616D 
 2716      6500
 2717              	.LASF40:
 2718 0214 64697370 		.ascii	"disp_grid_81\000"
 2718      5F677269 
 2718      645F3831 
 2718      00
 2719              	.LASF12:
 2720 0221 696E7433 		.ascii	"int32_t\000"
 2720      325F7400 
 2721              	.LASF9:
 2722 0229 73697A65 		.ascii	"sizetype\000"
 2722      74797065 
 2722      00
 2723              	.LASF41:
 2724 0232 64697370 		.ascii	"disp_grid_ttc_place\000"
 2724      5F677269 
 2724      645F7474 
 2724      635F706C 
 2724      61636500 
 2725              	.LASF6:
 2726 0246 6C6F6E67 		.ascii	"long long int\000"
 2726      206C6F6E 
 2726      6720696E 
 2726      7400
 2727              	.LASF10:
 2728 0254 63686172 		.ascii	"char\000"
 2728      00
 2729              	.LASF23:
 2730 0259 7474635F 		.ascii	"ttc_get_grid\000"
 2730      6765745F 
 2730      67726964 
 2730      00
 2731              	.LASF24:
 2732 0266 7474635F 		.ascii	"ttc_check_valid\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cc0jw8Qj.s 			page 57


 2732      63686563 
 2732      6B5F7661 
 2732      6C696400 
 2733              	.LASF37:
 2734 0276 2E5C7469 		.ascii	".\\tic_tac_toe.c\000"
 2734      635F7461 
 2734      635F746F 
 2734      652E6300 
 2735              	.LASF2:
 2736 0286 73686F72 		.ascii	"short int\000"
 2736      7420696E 
 2736      7400
 2737              	.LASF20:
 2738 0290 67726964 		.ascii	"grid\000"
 2738      00
 2739              	.LASF4:
 2740 0295 6C6F6E67 		.ascii	"long int\000"
 2740      20696E74 
 2740      00
 2741              	.LASF0:
 2742 029e 7369676E 		.ascii	"signed char\000"
 2742      65642063 
 2742      68617200 
 2743              	.LASF3:
 2744 02aa 73686F72 		.ascii	"short unsigned int\000"
 2744      7420756E 
 2744      7369676E 
 2744      65642069 
 2744      6E7400
 2745              	.LASF25:
 2746 02bd 7474635F 		.ascii	"ttc_init\000"
 2746      696E6974 
 2746      00
 2747              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
