ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"tic_tac_toe.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ttc_init,"ax",%progbits
  19              		.align	2
  20              		.global	ttc_init
  21              		.thumb
  22              		.thumb_func
  23              		.type	ttc_init, %function
  24              	ttc_init:
  25              	.LFB0:
  26              		.file 1 ".\\tic_tac_toe.c"
   1:.\tic_tac_toe.c **** /* ========================================
   2:.\tic_tac_toe.c ****  *
   3:.\tic_tac_toe.c ****  * Copyright HUDING ENTERPRISES, 2016
   4:.\tic_tac_toe.c ****  * All Rights Reserved
   5:.\tic_tac_toe.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\tic_tac_toe.c ****  *
   7:.\tic_tac_toe.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\tic_tac_toe.c ****  * WHICH IS THE PROPERTY OF Andrew Xia.
   9:.\tic_tac_toe.c ****  *
  10:.\tic_tac_toe.c ****  * ========================================
  11:.\tic_tac_toe.c **** */
  12:.\tic_tac_toe.c **** 
  13:.\tic_tac_toe.c **** // Andrew Xia
  14:.\tic_tac_toe.c **** // 6.115 Microcontrollers
  15:.\tic_tac_toe.c **** // Final Project
  16:.\tic_tac_toe.c **** // Apr 26 2016
  17:.\tic_tac_toe.c **** // Tic Tac Toe Structure for my game
  18:.\tic_tac_toe.c **** 
  19:.\tic_tac_toe.c **** #include <stdio.h>
  20:.\tic_tac_toe.c **** #include <stdlib.h>
  21:.\tic_tac_toe.c **** #include <string.h>
  22:.\tic_tac_toe.c **** 
  23:.\tic_tac_toe.c **** typedef int bool;
  24:.\tic_tac_toe.c **** #define true 1
  25:.\tic_tac_toe.c **** #define false 0
  26:.\tic_tac_toe.c **** 
  27:.\tic_tac_toe.c **** struct tic_tac_toe{
  28:.\tic_tac_toe.c **** 	int size;
  29:.\tic_tac_toe.c **** 	int dimension;
  30:.\tic_tac_toe.c **** 	// grid = {'A','B','A'}; // make this an array of length 64
  31:.\tic_tac_toe.c **** 	int player; // 1 is player A, -1 is player B
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 2


  32:.\tic_tac_toe.c **** 	int turn;
  33:.\tic_tac_toe.c **** 	int game_not_won;
  34:.\tic_tac_toe.c **** 	// int grid_eval[]; //this keeps track of scores of all diagonals
  35:.\tic_tac_toe.c **** 	int grid[64]; // a usually size 64 grid containing our board
  36:.\tic_tac_toe.c **** 	// if don't specify grid size, could get memory overlap
  37:.\tic_tac_toe.c **** };
  38:.\tic_tac_toe.c **** 
  39:.\tic_tac_toe.c **** void ttc_init(struct tic_tac_toe* t, int size, int dimension){
  27              		.loc 1 39 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 87B0     		sub	sp, sp, #28
  36              		.cfi_def_cfa_offset 32
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 B960     		str	r1, [r7, #8]
  41 000a 7A60     		str	r2, [r7, #4]
  40:.\tic_tac_toe.c **** 	t->size = size;
  42              		.loc 1 40 0
  43 000c FB68     		ldr	r3, [r7, #12]
  44 000e BA68     		ldr	r2, [r7, #8]
  45 0010 1A60     		str	r2, [r3]
  41:.\tic_tac_toe.c **** 	t->dimension = dimension;
  46              		.loc 1 41 0
  47 0012 FB68     		ldr	r3, [r7, #12]
  48 0014 7A68     		ldr	r2, [r7, #4]
  49 0016 5A60     		str	r2, [r3, #4]
  42:.\tic_tac_toe.c **** 	if (dimension == 3){
  50              		.loc 1 42 0
  51 0018 7B68     		ldr	r3, [r7, #4]
  52 001a 032B     		cmp	r3, #3
  53 001c 18D1     		bne	.L2
  54              	.LBB2:
  43:.\tic_tac_toe.c **** 		int i;
  44:.\tic_tac_toe.c **** 		int num = size*size*size;
  55              		.loc 1 44 0
  56 001e BB68     		ldr	r3, [r7, #8]
  57 0020 BA68     		ldr	r2, [r7, #8]
  58 0022 02FB03F3 		mul	r3, r2, r3
  59 0026 BA68     		ldr	r2, [r7, #8]
  60 0028 02FB03F3 		mul	r3, r2, r3
  61 002c 3B61     		str	r3, [r7, #16]
  45:.\tic_tac_toe.c **** 		for (i = 0; i < num;i++){
  62              		.loc 1 45 0
  63 002e 0023     		movs	r3, #0
  64 0030 7B61     		str	r3, [r7, #20]
  65 0032 09E0     		b	.L3
  66              	.L4:
  46:.\tic_tac_toe.c **** 			t->grid[i] = 0;
  67              		.loc 1 46 0 discriminator 3
  68 0034 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 3


  69 0036 7B69     		ldr	r3, [r7, #20]
  70 0038 0433     		adds	r3, r3, #4
  71 003a 9B00     		lsls	r3, r3, #2
  72 003c 1344     		add	r3, r3, r2
  73 003e 0022     		movs	r2, #0
  74 0040 5A60     		str	r2, [r3, #4]
  45:.\tic_tac_toe.c **** 		for (i = 0; i < num;i++){
  75              		.loc 1 45 0 discriminator 3
  76 0042 7B69     		ldr	r3, [r7, #20]
  77 0044 0133     		adds	r3, r3, #1
  78 0046 7B61     		str	r3, [r7, #20]
  79              	.L3:
  45:.\tic_tac_toe.c **** 		for (i = 0; i < num;i++){
  80              		.loc 1 45 0 is_stmt 0 discriminator 1
  81 0048 7A69     		ldr	r2, [r7, #20]
  82 004a 3B69     		ldr	r3, [r7, #16]
  83 004c 9A42     		cmp	r2, r3
  84 004e F1DB     		blt	.L4
  85              	.L2:
  86              	.LBE2:
  47:.\tic_tac_toe.c **** 		}
  48:.\tic_tac_toe.c **** 	}
  49:.\tic_tac_toe.c **** 	t->player = 1; // default to player 1
  87              		.loc 1 49 0 is_stmt 1
  88 0050 FB68     		ldr	r3, [r7, #12]
  89 0052 0122     		movs	r2, #1
  90 0054 9A60     		str	r2, [r3, #8]
  50:.\tic_tac_toe.c **** 	t->game_not_won = 0;
  91              		.loc 1 50 0
  92 0056 FB68     		ldr	r3, [r7, #12]
  93 0058 0022     		movs	r2, #0
  94 005a 1A61     		str	r2, [r3, #16]
  51:.\tic_tac_toe.c **** 	t->turn = 1;
  95              		.loc 1 51 0
  96 005c FB68     		ldr	r3, [r7, #12]
  97 005e 0122     		movs	r2, #1
  98 0060 DA60     		str	r2, [r3, #12]
  52:.\tic_tac_toe.c **** };
  99              		.loc 1 52 0
 100 0062 1C37     		adds	r7, r7, #28
 101              		.cfi_def_cfa_offset 4
 102 0064 BD46     		mov	sp, r7
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0066 5DF8047B 		ldr	r7, [sp], #4
 106              		.cfi_restore 7
 107              		.cfi_def_cfa_offset 0
 108 006a 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE0:
 111              		.size	ttc_init, .-ttc_init
 112              		.section	.text.ttc_set_grid,"ax",%progbits
 113              		.align	2
 114              		.global	ttc_set_grid
 115              		.thumb
 116              		.thumb_func
 117              		.type	ttc_set_grid, %function
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 4


 118              	ttc_set_grid:
 119              	.LFB1:
  53:.\tic_tac_toe.c **** 
  54:.\tic_tac_toe.c **** int ttc_set_grid(struct tic_tac_toe* t, int x, int y, int z, int value){
 120              		.loc 1 54 0
 121              		.cfi_startproc
 122              		@ args = 4, pretend = 0, frame = 24
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125 0000 80B4     		push	{r7}
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 7, -4
 128 0002 87B0     		sub	sp, sp, #28
 129              		.cfi_def_cfa_offset 32
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 132 0006 F860     		str	r0, [r7, #12]
 133 0008 B960     		str	r1, [r7, #8]
 134 000a 7A60     		str	r2, [r7, #4]
 135 000c 3B60     		str	r3, [r7]
  55:.\tic_tac_toe.c **** 	int loc = z*16 + y*4 + x;
 136              		.loc 1 55 0
 137 000e 3B68     		ldr	r3, [r7]
 138 0010 9A00     		lsls	r2, r3, #2
 139 0012 7B68     		ldr	r3, [r7, #4]
 140 0014 1344     		add	r3, r3, r2
 141 0016 9A00     		lsls	r2, r3, #2
 142 0018 BB68     		ldr	r3, [r7, #8]
 143 001a 1344     		add	r3, r3, r2
 144 001c 7B61     		str	r3, [r7, #20]
  56:.\tic_tac_toe.c **** 	t->grid[loc] = value;
 145              		.loc 1 56 0
 146 001e FA68     		ldr	r2, [r7, #12]
 147 0020 7B69     		ldr	r3, [r7, #20]
 148 0022 0433     		adds	r3, r3, #4
 149 0024 9B00     		lsls	r3, r3, #2
 150 0026 1344     		add	r3, r3, r2
 151 0028 3A6A     		ldr	r2, [r7, #32]
 152 002a 5A60     		str	r2, [r3, #4]
  57:.\tic_tac_toe.c **** 	// printf("\nSet Value %i %i %i %i",x,y,z,value); 
  58:.\tic_tac_toe.c **** 	return 1; // return 1 to show completed properly
 153              		.loc 1 58 0
 154 002c 0123     		movs	r3, #1
  59:.\tic_tac_toe.c **** }
 155              		.loc 1 59 0
 156 002e 1846     		mov	r0, r3
 157 0030 1C37     		adds	r7, r7, #28
 158              		.cfi_def_cfa_offset 4
 159 0032 BD46     		mov	sp, r7
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 0034 5DF8047B 		ldr	r7, [sp], #4
 163              		.cfi_restore 7
 164              		.cfi_def_cfa_offset 0
 165 0038 7047     		bx	lr
 166              		.cfi_endproc
 167              	.LFE1:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 5


 168              		.size	ttc_set_grid, .-ttc_set_grid
 169 003a 00BF     		.section	.text.ttc_get_grid,"ax",%progbits
 170              		.align	2
 171              		.global	ttc_get_grid
 172              		.thumb
 173              		.thumb_func
 174              		.type	ttc_get_grid, %function
 175              	ttc_get_grid:
 176              	.LFB2:
  60:.\tic_tac_toe.c **** 
  61:.\tic_tac_toe.c **** int ttc_get_grid(struct tic_tac_toe* t, int x, int y, int z){
 177              		.loc 1 61 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 24
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182 0000 80B4     		push	{r7}
 183              		.cfi_def_cfa_offset 4
 184              		.cfi_offset 7, -4
 185 0002 87B0     		sub	sp, sp, #28
 186              		.cfi_def_cfa_offset 32
 187 0004 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
 189 0006 F860     		str	r0, [r7, #12]
 190 0008 B960     		str	r1, [r7, #8]
 191 000a 7A60     		str	r2, [r7, #4]
 192 000c 3B60     		str	r3, [r7]
  62:.\tic_tac_toe.c **** 	int loc = z*16 + y*4 + x;
 193              		.loc 1 62 0
 194 000e 3B68     		ldr	r3, [r7]
 195 0010 9A00     		lsls	r2, r3, #2
 196 0012 7B68     		ldr	r3, [r7, #4]
 197 0014 1344     		add	r3, r3, r2
 198 0016 9A00     		lsls	r2, r3, #2
 199 0018 BB68     		ldr	r3, [r7, #8]
 200 001a 1344     		add	r3, r3, r2
 201 001c 7B61     		str	r3, [r7, #20]
  63:.\tic_tac_toe.c **** 	int ret = t->grid[loc];
 202              		.loc 1 63 0
 203 001e FA68     		ldr	r2, [r7, #12]
 204 0020 7B69     		ldr	r3, [r7, #20]
 205 0022 0433     		adds	r3, r3, #4
 206 0024 9B00     		lsls	r3, r3, #2
 207 0026 1344     		add	r3, r3, r2
 208 0028 5B68     		ldr	r3, [r3, #4]
 209 002a 3B61     		str	r3, [r7, #16]
  64:.\tic_tac_toe.c **** 	// printf("\nGet Value %i %i %i %i",x,y,z,ret); 
  65:.\tic_tac_toe.c **** 	return ret;
 210              		.loc 1 65 0
 211 002c 3B69     		ldr	r3, [r7, #16]
  66:.\tic_tac_toe.c **** }
 212              		.loc 1 66 0
 213 002e 1846     		mov	r0, r3
 214 0030 1C37     		adds	r7, r7, #28
 215              		.cfi_def_cfa_offset 4
 216 0032 BD46     		mov	sp, r7
 217              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 6


 218              		@ sp needed
 219 0034 5DF8047B 		ldr	r7, [sp], #4
 220              		.cfi_restore 7
 221              		.cfi_def_cfa_offset 0
 222 0038 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE2:
 225              		.size	ttc_get_grid, .-ttc_get_grid
 226 003a 00BF     		.section	.rodata
 227              		.align	2
 228              	.LC0:
 229 0000 0A4F7574 		.ascii	"\012Out of bounds %i %i %i\000"
 229      206F6620 
 229      626F756E 
 229      64732025 
 229      69202569 
 230              		.align	2
 231              	.LC1:
 232 0018 0A506F73 		.ascii	"\012Position already occupied %i %i %i\000"
 232      6974696F 
 232      6E20616C 
 232      72656164 
 232      79206F63 
 233              		.section	.text.ttc_check_valid,"ax",%progbits
 234              		.align	2
 235              		.global	ttc_check_valid
 236              		.thumb
 237              		.thumb_func
 238              		.type	ttc_check_valid, %function
 239              	ttc_check_valid:
 240              	.LFB3:
  67:.\tic_tac_toe.c **** 
  68:.\tic_tac_toe.c **** int ttc_check_valid(struct tic_tac_toe* t, int x, int y, int z){
 241              		.loc 1 68 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 24
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0000 80B5     		push	{r7, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 86B0     		sub	sp, sp, #24
 250              		.cfi_def_cfa_offset 32
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 253 0006 F860     		str	r0, [r7, #12]
 254 0008 B960     		str	r1, [r7, #8]
 255 000a 7A60     		str	r2, [r7, #4]
 256 000c 3B60     		str	r3, [r7]
  69:.\tic_tac_toe.c **** 	int loc = z*16 + y*4 + x;
 257              		.loc 1 69 0
 258 000e 3B68     		ldr	r3, [r7]
 259 0010 9A00     		lsls	r2, r3, #2
 260 0012 7B68     		ldr	r3, [r7, #4]
 261 0014 1344     		add	r3, r3, r2
 262 0016 9A00     		lsls	r2, r3, #2
 263 0018 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 7


 264 001a 1344     		add	r3, r3, r2
 265 001c 7B61     		str	r3, [r7, #20]
  70:.\tic_tac_toe.c **** 	if (x < 0 || y < 0 || z < 0){
 266              		.loc 1 70 0
 267 001e BB68     		ldr	r3, [r7, #8]
 268 0020 002B     		cmp	r3, #0
 269 0022 05DB     		blt	.L10
 270              		.loc 1 70 0 is_stmt 0 discriminator 1
 271 0024 7B68     		ldr	r3, [r7, #4]
 272 0026 002B     		cmp	r3, #0
 273 0028 02DB     		blt	.L10
 274              		.loc 1 70 0 discriminator 2
 275 002a 3B68     		ldr	r3, [r7]
 276 002c 002B     		cmp	r3, #0
 277 002e 07DA     		bge	.L11
 278              	.L10:
  71:.\tic_tac_toe.c **** 		printf("\nOut of bounds %i %i %i",x,y,z); 
 279              		.loc 1 71 0 is_stmt 1
 280 0030 1948     		ldr	r0, .L16
 281 0032 B968     		ldr	r1, [r7, #8]
 282 0034 7A68     		ldr	r2, [r7, #4]
 283 0036 3B68     		ldr	r3, [r7]
 284 0038 FFF7FEFF 		bl	printf
  72:.\tic_tac_toe.c **** 		return 0;
 285              		.loc 1 72 0
 286 003c 0023     		movs	r3, #0
 287 003e 27E0     		b	.L12
 288              	.L11:
  73:.\tic_tac_toe.c **** 	}
  74:.\tic_tac_toe.c **** 	else if (x >= t->size || y >= t->size || z >= t->size){
 289              		.loc 1 74 0
 290 0040 FB68     		ldr	r3, [r7, #12]
 291 0042 1A68     		ldr	r2, [r3]
 292 0044 BB68     		ldr	r3, [r7, #8]
 293 0046 9A42     		cmp	r2, r3
 294 0048 09DD     		ble	.L13
 295              		.loc 1 74 0 is_stmt 0 discriminator 1
 296 004a FB68     		ldr	r3, [r7, #12]
 297 004c 1A68     		ldr	r2, [r3]
 298 004e 7B68     		ldr	r3, [r7, #4]
 299 0050 9A42     		cmp	r2, r3
 300 0052 04DD     		ble	.L13
 301              		.loc 1 74 0 discriminator 2
 302 0054 FB68     		ldr	r3, [r7, #12]
 303 0056 1A68     		ldr	r2, [r3]
 304 0058 3B68     		ldr	r3, [r7]
 305 005a 9A42     		cmp	r2, r3
 306 005c 07DC     		bgt	.L14
 307              	.L13:
  75:.\tic_tac_toe.c **** 		printf("\nOut of bounds %i %i %i",x,y,z); 
 308              		.loc 1 75 0 is_stmt 1
 309 005e 0E48     		ldr	r0, .L16
 310 0060 B968     		ldr	r1, [r7, #8]
 311 0062 7A68     		ldr	r2, [r7, #4]
 312 0064 3B68     		ldr	r3, [r7]
 313 0066 FFF7FEFF 		bl	printf
  76:.\tic_tac_toe.c **** 		return 0;
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 8


 314              		.loc 1 76 0
 315 006a 0023     		movs	r3, #0
 316 006c 10E0     		b	.L12
 317              	.L14:
  77:.\tic_tac_toe.c **** 	}
  78:.\tic_tac_toe.c **** 	else if (t->grid[loc] != 0){ // already occupied position
 318              		.loc 1 78 0
 319 006e FA68     		ldr	r2, [r7, #12]
 320 0070 7B69     		ldr	r3, [r7, #20]
 321 0072 0433     		adds	r3, r3, #4
 322 0074 9B00     		lsls	r3, r3, #2
 323 0076 1344     		add	r3, r3, r2
 324 0078 5B68     		ldr	r3, [r3, #4]
 325 007a 002B     		cmp	r3, #0
 326 007c 07D0     		beq	.L15
  79:.\tic_tac_toe.c **** 		printf("\nPosition already occupied %i %i %i",x,y,z); 
 327              		.loc 1 79 0
 328 007e 0748     		ldr	r0, .L16+4
 329 0080 B968     		ldr	r1, [r7, #8]
 330 0082 7A68     		ldr	r2, [r7, #4]
 331 0084 3B68     		ldr	r3, [r7]
 332 0086 FFF7FEFF 		bl	printf
  80:.\tic_tac_toe.c **** 		return 0;
 333              		.loc 1 80 0
 334 008a 0023     		movs	r3, #0
 335 008c 00E0     		b	.L12
 336              	.L15:
  81:.\tic_tac_toe.c **** 	}
  82:.\tic_tac_toe.c **** 	else{
  83:.\tic_tac_toe.c **** 		return 1; //free position
 337              		.loc 1 83 0
 338 008e 0123     		movs	r3, #1
 339              	.L12:
  84:.\tic_tac_toe.c **** 	}
  85:.\tic_tac_toe.c **** 
  86:.\tic_tac_toe.c **** }
 340              		.loc 1 86 0
 341 0090 1846     		mov	r0, r3
 342 0092 1837     		adds	r7, r7, #24
 343              		.cfi_def_cfa_offset 8
 344 0094 BD46     		mov	sp, r7
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 0096 80BD     		pop	{r7, pc}
 348              	.L17:
 349              		.align	2
 350              	.L16:
 351 0098 00000000 		.word	.LC0
 352 009c 18000000 		.word	.LC1
 353              		.cfi_endproc
 354              	.LFE3:
 355              		.size	ttc_check_valid, .-ttc_check_valid
 356              		.section	.text.ttc_change_player,"ax",%progbits
 357              		.align	2
 358              		.global	ttc_change_player
 359              		.thumb
 360              		.thumb_func
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 9


 361              		.type	ttc_change_player, %function
 362              	ttc_change_player:
 363              	.LFB4:
  87:.\tic_tac_toe.c **** 
  88:.\tic_tac_toe.c **** void ttc_change_player(struct tic_tac_toe* t){
 364              		.loc 1 88 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 7, -4
 372 0002 83B0     		sub	sp, sp, #12
 373              		.cfi_def_cfa_offset 16
 374 0004 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
 376 0006 7860     		str	r0, [r7, #4]
  89:.\tic_tac_toe.c **** 	if (t->player == 1){
 377              		.loc 1 89 0
 378 0008 7B68     		ldr	r3, [r7, #4]
 379 000a 9B68     		ldr	r3, [r3, #8]
 380 000c 012B     		cmp	r3, #1
 381 000e 04D1     		bne	.L19
  90:.\tic_tac_toe.c **** 		t->player = -1;
 382              		.loc 1 90 0
 383 0010 7B68     		ldr	r3, [r7, #4]
 384 0012 4FF0FF32 		mov	r2, #-1
 385 0016 9A60     		str	r2, [r3, #8]
 386 0018 07E0     		b	.L20
 387              	.L19:
  91:.\tic_tac_toe.c **** 	}
  92:.\tic_tac_toe.c **** 	else if (t-> player == -1){
 388              		.loc 1 92 0
 389 001a 7B68     		ldr	r3, [r7, #4]
 390 001c 9B68     		ldr	r3, [r3, #8]
 391 001e B3F1FF3F 		cmp	r3, #-1
 392 0022 02D1     		bne	.L20
  93:.\tic_tac_toe.c **** 		t->player = 1;
 393              		.loc 1 93 0
 394 0024 7B68     		ldr	r3, [r7, #4]
 395 0026 0122     		movs	r2, #1
 396 0028 9A60     		str	r2, [r3, #8]
 397              	.L20:
  94:.\tic_tac_toe.c **** 	}
  95:.\tic_tac_toe.c **** 	t->turn++;
 398              		.loc 1 95 0
 399 002a 7B68     		ldr	r3, [r7, #4]
 400 002c DB68     		ldr	r3, [r3, #12]
 401 002e 5A1C     		adds	r2, r3, #1
 402 0030 7B68     		ldr	r3, [r7, #4]
 403 0032 DA60     		str	r2, [r3, #12]
  96:.\tic_tac_toe.c **** }
 404              		.loc 1 96 0
 405 0034 0C37     		adds	r7, r7, #12
 406              		.cfi_def_cfa_offset 4
 407 0036 BD46     		mov	sp, r7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 10


 408              		.cfi_def_cfa_register 13
 409              		@ sp needed
 410 0038 5DF8047B 		ldr	r7, [sp], #4
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 003c 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE4:
 416              		.size	ttc_change_player, .-ttc_change_player
 417 003e 00BF     		.section	.rodata
 418              		.align	2
 419              	.LC2:
 420 003c 0A456E74 		.ascii	"\012Enter a position: \000"
 420      65722061 
 420      20706F73 
 420      6974696F 
 420      6E3A2000 
 421              		.align	2
 422              	.LC3:
 423 0050 257300   		.ascii	"%s\000"
 424 0053 00       		.align	2
 425              	.LC4:
 426 0054 456E7465 		.ascii	"Entered %i %i %i\000"
 426      72656420 
 426      25692025 
 426      69202569 
 426      00
 427              		.section	.text.ttc_take_input,"ax",%progbits
 428              		.align	2
 429              		.global	ttc_take_input
 430              		.thumb
 431              		.thumb_func
 432              		.type	ttc_take_input, %function
 433              	ttc_take_input:
 434              	.LFB5:
  97:.\tic_tac_toe.c **** 
  98:.\tic_tac_toe.c **** int * ttc_take_input(){ 
 435              		.loc 1 98 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 8
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439 0000 80B5     		push	{r7, lr}
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 82B0     		sub	sp, sp, #8
 444              		.cfi_def_cfa_offset 16
 445 0004 00AF     		add	r7, sp, #0
 446              		.cfi_def_cfa_register 7
  99:.\tic_tac_toe.c **** 	// take a user input, return x y z array pointer
 100:.\tic_tac_toe.c **** 	printf("\nEnter a position: ");
 447              		.loc 1 100 0
 448 0006 1148     		ldr	r0, .L23
 449 0008 FFF7FEFF 		bl	printf
 101:.\tic_tac_toe.c **** 	char str2[3];
 102:.\tic_tac_toe.c **** 	scanf("%s", str2);
 450              		.loc 1 102 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 11


 451 000c 3B1D     		adds	r3, r7, #4
 452 000e 1048     		ldr	r0, .L23+4
 453 0010 1946     		mov	r1, r3
 454 0012 FFF7FEFF 		bl	scanf
 103:.\tic_tac_toe.c **** 	static int ret[3];
 104:.\tic_tac_toe.c **** 	ret[0] = str2[0]-48; //without atoi, we get ascii value
 455              		.loc 1 104 0
 456 0016 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 457 0018 303B     		subs	r3, r3, #48
 458 001a 0E4A     		ldr	r2, .L23+8
 459 001c 1360     		str	r3, [r2]
 105:.\tic_tac_toe.c **** 	ret[1] = str2[1]-48; //or can do ascii conversion
 460              		.loc 1 105 0
 461 001e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 462 0020 303B     		subs	r3, r3, #48
 463 0022 0C4A     		ldr	r2, .L23+8
 464 0024 5360     		str	r3, [r2, #4]
 106:.\tic_tac_toe.c **** 	ret[2] = str2[2]-48; // int temp = atoi(str2);
 465              		.loc 1 106 0
 466 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 467 0028 303B     		subs	r3, r3, #48
 468 002a 0A4A     		ldr	r2, .L23+8
 469 002c 9360     		str	r3, [r2, #8]
 107:.\tic_tac_toe.c **** 	// free(str2);
 108:.\tic_tac_toe.c **** 	printf("Entered %i %i %i",ret[0],ret[1],ret[2]);
 470              		.loc 1 108 0
 471 002e 094B     		ldr	r3, .L23+8
 472 0030 1968     		ldr	r1, [r3]
 473 0032 084B     		ldr	r3, .L23+8
 474 0034 5A68     		ldr	r2, [r3, #4]
 475 0036 074B     		ldr	r3, .L23+8
 476 0038 9B68     		ldr	r3, [r3, #8]
 477 003a 0748     		ldr	r0, .L23+12
 478 003c FFF7FEFF 		bl	printf
 109:.\tic_tac_toe.c **** 	return ret;
 479              		.loc 1 109 0
 480 0040 044B     		ldr	r3, .L23+8
 110:.\tic_tac_toe.c **** }
 481              		.loc 1 110 0
 482 0042 1846     		mov	r0, r3
 483 0044 0837     		adds	r7, r7, #8
 484              		.cfi_def_cfa_offset 8
 485 0046 BD46     		mov	sp, r7
 486              		.cfi_def_cfa_register 13
 487              		@ sp needed
 488 0048 80BD     		pop	{r7, pc}
 489              	.L24:
 490 004a 00BF     		.align	2
 491              	.L23:
 492 004c 3C000000 		.word	.LC2
 493 0050 50000000 		.word	.LC3
 494 0054 00000000 		.word	ret.5657
 495 0058 54000000 		.word	.LC4
 496              		.cfi_endproc
 497              	.LFE5:
 498              		.size	ttc_take_input, .-ttc_take_input
 499              		.section	.rodata
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 12


 500 0065 000000   		.align	2
 501              	.LC5:
 502 0068 25692000 		.ascii	"%i \000"
 503              		.align	2
 504              	.LC6:
 505 006c 0A416674 		.ascii	"\012After turn %i player %i\012\000"
 505      65722074 
 505      75726E20 
 505      25692070 
 505      6C617965 
 506              		.section	.text.ttc_print_grid,"ax",%progbits
 507              		.align	2
 508              		.global	ttc_print_grid
 509              		.thumb
 510              		.thumb_func
 511              		.type	ttc_print_grid, %function
 512              	ttc_print_grid:
 513              	.LFB6:
 111:.\tic_tac_toe.c **** 
 112:.\tic_tac_toe.c **** void ttc_print_grid(struct tic_tac_toe* t){
 514              		.loc 1 112 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 16
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518 0000 80B5     		push	{r7, lr}
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 84B0     		sub	sp, sp, #16
 523              		.cfi_def_cfa_offset 24
 524 0004 00AF     		add	r7, sp, #0
 525              		.cfi_def_cfa_register 7
 526 0006 7860     		str	r0, [r7, #4]
 113:.\tic_tac_toe.c **** 	// this function prints the board
 114:.\tic_tac_toe.c **** 	int i;
 115:.\tic_tac_toe.c **** 	for (i = 0; i < 64; i++){
 527              		.loc 1 115 0
 528 0008 0023     		movs	r3, #0
 529 000a FB60     		str	r3, [r7, #12]
 530 000c 28E0     		b	.L26
 531              	.L30:
 116:.\tic_tac_toe.c **** 		if (i % 4 == 0){
 532              		.loc 1 116 0
 533 000e FB68     		ldr	r3, [r7, #12]
 534 0010 03F00303 		and	r3, r3, #3
 535 0014 002B     		cmp	r3, #0
 536 0016 02D1     		bne	.L27
 117:.\tic_tac_toe.c **** 			printf("\n");
 537              		.loc 1 117 0
 538 0018 0A20     		movs	r0, #10
 539 001a FFF7FEFF 		bl	putchar
 540              	.L27:
 118:.\tic_tac_toe.c **** 		}
 119:.\tic_tac_toe.c **** 		if (i % 16 == 0){
 541              		.loc 1 119 0
 542 001e FB68     		ldr	r3, [r7, #12]
 543 0020 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 13


 544 0024 002B     		cmp	r3, #0
 545 0026 02D1     		bne	.L28
 120:.\tic_tac_toe.c **** 			printf("\n");
 546              		.loc 1 120 0
 547 0028 0A20     		movs	r0, #10
 548 002a FFF7FEFF 		bl	putchar
 549              	.L28:
 121:.\tic_tac_toe.c **** 		}
 122:.\tic_tac_toe.c **** 		printf("%i ",t->grid[i]);
 550              		.loc 1 122 0
 551 002e 7A68     		ldr	r2, [r7, #4]
 552 0030 FB68     		ldr	r3, [r7, #12]
 553 0032 0433     		adds	r3, r3, #4
 554 0034 9B00     		lsls	r3, r3, #2
 555 0036 1344     		add	r3, r3, r2
 556 0038 5B68     		ldr	r3, [r3, #4]
 557 003a 1148     		ldr	r0, .L31
 558 003c 1946     		mov	r1, r3
 559 003e FFF7FEFF 		bl	printf
 123:.\tic_tac_toe.c **** 		if (t->grid[i] != -1){
 560              		.loc 1 123 0
 561 0042 7A68     		ldr	r2, [r7, #4]
 562 0044 FB68     		ldr	r3, [r7, #12]
 563 0046 0433     		adds	r3, r3, #4
 564 0048 9B00     		lsls	r3, r3, #2
 565 004a 1344     		add	r3, r3, r2
 566 004c 5B68     		ldr	r3, [r3, #4]
 567 004e B3F1FF3F 		cmp	r3, #-1
 568 0052 02D0     		beq	.L29
 124:.\tic_tac_toe.c **** 			printf(" ");
 569              		.loc 1 124 0
 570 0054 2020     		movs	r0, #32
 571 0056 FFF7FEFF 		bl	putchar
 572              	.L29:
 115:.\tic_tac_toe.c **** 		if (i % 4 == 0){
 573              		.loc 1 115 0 discriminator 2
 574 005a FB68     		ldr	r3, [r7, #12]
 575 005c 0133     		adds	r3, r3, #1
 576 005e FB60     		str	r3, [r7, #12]
 577              	.L26:
 115:.\tic_tac_toe.c **** 		if (i % 4 == 0){
 578              		.loc 1 115 0 is_stmt 0 discriminator 1
 579 0060 FB68     		ldr	r3, [r7, #12]
 580 0062 3F2B     		cmp	r3, #63
 581 0064 D3DD     		ble	.L30
 125:.\tic_tac_toe.c **** 		}
 126:.\tic_tac_toe.c **** 	}
 127:.\tic_tac_toe.c **** 	printf("\nAfter turn %i player %i\n",t->turn,t->player);
 582              		.loc 1 127 0 is_stmt 1
 583 0066 7B68     		ldr	r3, [r7, #4]
 584 0068 DA68     		ldr	r2, [r3, #12]
 585 006a 7B68     		ldr	r3, [r7, #4]
 586 006c 9B68     		ldr	r3, [r3, #8]
 587 006e 0548     		ldr	r0, .L31+4
 588 0070 1146     		mov	r1, r2
 589 0072 1A46     		mov	r2, r3
 590 0074 FFF7FEFF 		bl	printf
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 14


 128:.\tic_tac_toe.c **** }
 591              		.loc 1 128 0
 592 0078 1037     		adds	r7, r7, #16
 593              		.cfi_def_cfa_offset 8
 594 007a BD46     		mov	sp, r7
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 007c 80BD     		pop	{r7, pc}
 598              	.L32:
 599 007e 00BF     		.align	2
 600              	.L31:
 601 0080 68000000 		.word	.LC5
 602 0084 6C000000 		.word	.LC6
 603              		.cfi_endproc
 604              	.LFE6:
 605              		.size	ttc_print_grid, .-ttc_print_grid
 606              		.section	.rodata
 607 0086 0000     		.align	2
 608              	.LC7:
 609 0088 0A506C61 		.ascii	"\012Player %i\000"
 609      79657220 
 609      256900
 610              		.section	.text.ttc_check_win,"ax",%progbits
 611              		.align	2
 612              		.global	ttc_check_win
 613              		.thumb
 614              		.thumb_func
 615              		.type	ttc_check_win, %function
 616              	ttc_check_win:
 617              	.LFB7:
 129:.\tic_tac_toe.c **** 
 130:.\tic_tac_toe.c **** 
 131:.\tic_tac_toe.c **** int ttc_check_win(struct tic_tac_toe* t){
 618              		.loc 1 131 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 32
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622 0000 80B5     		push	{r7, lr}
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 7, -8
 625              		.cfi_offset 14, -4
 626 0002 88B0     		sub	sp, sp, #32
 627              		.cfi_def_cfa_offset 40
 628 0004 00AF     		add	r7, sp, #0
 629              		.cfi_def_cfa_register 7
 630 0006 7860     		str	r0, [r7, #4]
 132:.\tic_tac_toe.c **** 	printf("\nPlayer %i",t->player);
 631              		.loc 1 132 0
 632 0008 7B68     		ldr	r3, [r7, #4]
 633 000a 9B68     		ldr	r3, [r3, #8]
 634 000c 8948     		ldr	r0, .L82
 635 000e 1946     		mov	r1, r3
 636 0010 FFF7FEFF 		bl	printf
 133:.\tic_tac_toe.c **** 	int x,y,z,zp;
 134:.\tic_tac_toe.c **** 	int connected;
 135:.\tic_tac_toe.c **** 	for (z = 0; z < t->size; z++){
 637              		.loc 1 135 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 15


 638 0014 0023     		movs	r3, #0
 639 0016 7B61     		str	r3, [r7, #20]
 640 0018 84E1     		b	.L34
 641              	.L69:
 136:.\tic_tac_toe.c **** 		for (y = 0; y < t->size; y++){ // flat
 642              		.loc 1 136 0
 643 001a 0023     		movs	r3, #0
 644 001c BB61     		str	r3, [r7, #24]
 645 001e 28E0     		b	.L35
 646              	.L40:
 137:.\tic_tac_toe.c **** 			connected = 0;
 647              		.loc 1 137 0
 648 0020 0023     		movs	r3, #0
 649 0022 FB60     		str	r3, [r7, #12]
 138:.\tic_tac_toe.c **** 			for (x = 0; x < t->size;x++){
 650              		.loc 1 138 0
 651 0024 0023     		movs	r3, #0
 652 0026 FB61     		str	r3, [r7, #28]
 653 0028 0CE0     		b	.L36
 654              	.L37:
 139:.\tic_tac_toe.c **** 				connected += ttc_get_grid(t,x,y,z);
 655              		.loc 1 139 0 discriminator 3
 656 002a 7868     		ldr	r0, [r7, #4]
 657 002c F969     		ldr	r1, [r7, #28]
 658 002e BA69     		ldr	r2, [r7, #24]
 659 0030 7B69     		ldr	r3, [r7, #20]
 660 0032 FFF7FEFF 		bl	ttc_get_grid
 661 0036 0246     		mov	r2, r0
 662 0038 FB68     		ldr	r3, [r7, #12]
 663 003a 1344     		add	r3, r3, r2
 664 003c FB60     		str	r3, [r7, #12]
 138:.\tic_tac_toe.c **** 			for (x = 0; x < t->size;x++){
 665              		.loc 1 138 0 discriminator 3
 666 003e FB69     		ldr	r3, [r7, #28]
 667 0040 0133     		adds	r3, r3, #1
 668 0042 FB61     		str	r3, [r7, #28]
 669              	.L36:
 138:.\tic_tac_toe.c **** 			for (x = 0; x < t->size;x++){
 670              		.loc 1 138 0 is_stmt 0 discriminator 1
 671 0044 7B68     		ldr	r3, [r7, #4]
 672 0046 1A68     		ldr	r2, [r3]
 673 0048 FB69     		ldr	r3, [r7, #28]
 674 004a 9A42     		cmp	r2, r3
 675 004c EDDC     		bgt	.L37
 140:.\tic_tac_toe.c **** 			}
 141:.\tic_tac_toe.c **** 			if (connected == t->player*t->size){
 676              		.loc 1 141 0 is_stmt 1
 677 004e 7B68     		ldr	r3, [r7, #4]
 678 0050 9B68     		ldr	r3, [r3, #8]
 679 0052 7A68     		ldr	r2, [r7, #4]
 680 0054 1268     		ldr	r2, [r2]
 681 0056 02FB03F2 		mul	r2, r2, r3
 682 005a FB68     		ldr	r3, [r7, #12]
 683 005c 9A42     		cmp	r2, r3
 684 005e 05D1     		bne	.L38
 142:.\tic_tac_toe.c **** 				t->game_not_won = t->player; //when win, set to player id
 685              		.loc 1 142 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 16


 686 0060 7B68     		ldr	r3, [r7, #4]
 687 0062 9A68     		ldr	r2, [r3, #8]
 688 0064 7B68     		ldr	r3, [r7, #4]
 689 0066 1A61     		str	r2, [r3, #16]
 143:.\tic_tac_toe.c **** 				return 1; //there is a win
 690              		.loc 1 143 0
 691 0068 0123     		movs	r3, #1
 692 006a 03E2     		b	.L39
 693              	.L38:
 136:.\tic_tac_toe.c **** 			connected = 0;
 694              		.loc 1 136 0 discriminator 2
 695 006c BB69     		ldr	r3, [r7, #24]
 696 006e 0133     		adds	r3, r3, #1
 697 0070 BB61     		str	r3, [r7, #24]
 698              	.L35:
 136:.\tic_tac_toe.c **** 			connected = 0;
 699              		.loc 1 136 0 is_stmt 0 discriminator 1
 700 0072 7B68     		ldr	r3, [r7, #4]
 701 0074 1A68     		ldr	r2, [r3]
 702 0076 BB69     		ldr	r3, [r7, #24]
 703 0078 9A42     		cmp	r2, r3
 704 007a D1DC     		bgt	.L40
 144:.\tic_tac_toe.c **** 			}
 145:.\tic_tac_toe.c **** 		}
 146:.\tic_tac_toe.c **** 		for (x = 0; x < t->size; x++){ //horiz
 705              		.loc 1 146 0 is_stmt 1
 706 007c 0023     		movs	r3, #0
 707 007e FB61     		str	r3, [r7, #28]
 708 0080 28E0     		b	.L41
 709              	.L45:
 147:.\tic_tac_toe.c **** 			connected = 0;
 710              		.loc 1 147 0
 711 0082 0023     		movs	r3, #0
 712 0084 FB60     		str	r3, [r7, #12]
 148:.\tic_tac_toe.c **** 			for (y = 0; y < t->size;y++){
 713              		.loc 1 148 0
 714 0086 0023     		movs	r3, #0
 715 0088 BB61     		str	r3, [r7, #24]
 716 008a 0CE0     		b	.L42
 717              	.L43:
 149:.\tic_tac_toe.c **** 				connected += ttc_get_grid(t,x,y,z);
 718              		.loc 1 149 0 discriminator 3
 719 008c 7868     		ldr	r0, [r7, #4]
 720 008e F969     		ldr	r1, [r7, #28]
 721 0090 BA69     		ldr	r2, [r7, #24]
 722 0092 7B69     		ldr	r3, [r7, #20]
 723 0094 FFF7FEFF 		bl	ttc_get_grid
 724 0098 0246     		mov	r2, r0
 725 009a FB68     		ldr	r3, [r7, #12]
 726 009c 1344     		add	r3, r3, r2
 727 009e FB60     		str	r3, [r7, #12]
 148:.\tic_tac_toe.c **** 			for (y = 0; y < t->size;y++){
 728              		.loc 1 148 0 discriminator 3
 729 00a0 BB69     		ldr	r3, [r7, #24]
 730 00a2 0133     		adds	r3, r3, #1
 731 00a4 BB61     		str	r3, [r7, #24]
 732              	.L42:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 17


 148:.\tic_tac_toe.c **** 			for (y = 0; y < t->size;y++){
 733              		.loc 1 148 0 is_stmt 0 discriminator 1
 734 00a6 7B68     		ldr	r3, [r7, #4]
 735 00a8 1A68     		ldr	r2, [r3]
 736 00aa BB69     		ldr	r3, [r7, #24]
 737 00ac 9A42     		cmp	r2, r3
 738 00ae EDDC     		bgt	.L43
 150:.\tic_tac_toe.c **** 			}
 151:.\tic_tac_toe.c **** 			if (connected == t->player*t->size){
 739              		.loc 1 151 0 is_stmt 1
 740 00b0 7B68     		ldr	r3, [r7, #4]
 741 00b2 9B68     		ldr	r3, [r3, #8]
 742 00b4 7A68     		ldr	r2, [r7, #4]
 743 00b6 1268     		ldr	r2, [r2]
 744 00b8 02FB03F2 		mul	r2, r2, r3
 745 00bc FB68     		ldr	r3, [r7, #12]
 746 00be 9A42     		cmp	r2, r3
 747 00c0 05D1     		bne	.L44
 152:.\tic_tac_toe.c **** 				t->game_not_won = t->player; //when win, set to player id
 748              		.loc 1 152 0
 749 00c2 7B68     		ldr	r3, [r7, #4]
 750 00c4 9A68     		ldr	r2, [r3, #8]
 751 00c6 7B68     		ldr	r3, [r7, #4]
 752 00c8 1A61     		str	r2, [r3, #16]
 153:.\tic_tac_toe.c **** 				return 1; //there is a win
 753              		.loc 1 153 0
 754 00ca 0123     		movs	r3, #1
 755 00cc D2E1     		b	.L39
 756              	.L44:
 146:.\tic_tac_toe.c **** 			connected = 0;
 757              		.loc 1 146 0 discriminator 2
 758 00ce FB69     		ldr	r3, [r7, #28]
 759 00d0 0133     		adds	r3, r3, #1
 760 00d2 FB61     		str	r3, [r7, #28]
 761              	.L41:
 146:.\tic_tac_toe.c **** 			connected = 0;
 762              		.loc 1 146 0 is_stmt 0 discriminator 1
 763 00d4 7B68     		ldr	r3, [r7, #4]
 764 00d6 1A68     		ldr	r2, [r3]
 765 00d8 FB69     		ldr	r3, [r7, #28]
 766 00da 9A42     		cmp	r2, r3
 767 00dc D1DC     		bgt	.L45
 154:.\tic_tac_toe.c **** 			}
 155:.\tic_tac_toe.c **** 		}
 156:.\tic_tac_toe.c **** 		for (x = 0; x < t->size; x++){ //vert, where z is y coord
 768              		.loc 1 156 0 is_stmt 1
 769 00de 0023     		movs	r3, #0
 770 00e0 FB61     		str	r3, [r7, #28]
 771 00e2 28E0     		b	.L46
 772              	.L50:
 157:.\tic_tac_toe.c **** 			connected = 0;
 773              		.loc 1 157 0
 774 00e4 0023     		movs	r3, #0
 775 00e6 FB60     		str	r3, [r7, #12]
 158:.\tic_tac_toe.c **** 			for (zp = 0; zp < t->size;zp++){
 776              		.loc 1 158 0
 777 00e8 0023     		movs	r3, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 18


 778 00ea 3B61     		str	r3, [r7, #16]
 779 00ec 0CE0     		b	.L47
 780              	.L48:
 159:.\tic_tac_toe.c **** 				connected += ttc_get_grid(t,x,z,zp);
 781              		.loc 1 159 0 discriminator 3
 782 00ee 7868     		ldr	r0, [r7, #4]
 783 00f0 F969     		ldr	r1, [r7, #28]
 784 00f2 7A69     		ldr	r2, [r7, #20]
 785 00f4 3B69     		ldr	r3, [r7, #16]
 786 00f6 FFF7FEFF 		bl	ttc_get_grid
 787 00fa 0246     		mov	r2, r0
 788 00fc FB68     		ldr	r3, [r7, #12]
 789 00fe 1344     		add	r3, r3, r2
 790 0100 FB60     		str	r3, [r7, #12]
 158:.\tic_tac_toe.c **** 			for (zp = 0; zp < t->size;zp++){
 791              		.loc 1 158 0 discriminator 3
 792 0102 3B69     		ldr	r3, [r7, #16]
 793 0104 0133     		adds	r3, r3, #1
 794 0106 3B61     		str	r3, [r7, #16]
 795              	.L47:
 158:.\tic_tac_toe.c **** 			for (zp = 0; zp < t->size;zp++){
 796              		.loc 1 158 0 is_stmt 0 discriminator 1
 797 0108 7B68     		ldr	r3, [r7, #4]
 798 010a 1A68     		ldr	r2, [r3]
 799 010c 3B69     		ldr	r3, [r7, #16]
 800 010e 9A42     		cmp	r2, r3
 801 0110 EDDC     		bgt	.L48
 160:.\tic_tac_toe.c **** 			}
 161:.\tic_tac_toe.c **** 			if (connected == t->player*t->size){
 802              		.loc 1 161 0 is_stmt 1
 803 0112 7B68     		ldr	r3, [r7, #4]
 804 0114 9B68     		ldr	r3, [r3, #8]
 805 0116 7A68     		ldr	r2, [r7, #4]
 806 0118 1268     		ldr	r2, [r2]
 807 011a 02FB03F2 		mul	r2, r2, r3
 808 011e FB68     		ldr	r3, [r7, #12]
 809 0120 9A42     		cmp	r2, r3
 810 0122 05D1     		bne	.L49
 162:.\tic_tac_toe.c **** 				t->game_not_won = t->player; //when win, set to player id
 811              		.loc 1 162 0
 812 0124 7B68     		ldr	r3, [r7, #4]
 813 0126 9A68     		ldr	r2, [r3, #8]
 814 0128 7B68     		ldr	r3, [r7, #4]
 815 012a 1A61     		str	r2, [r3, #16]
 163:.\tic_tac_toe.c **** 				return 1; //there is a win
 816              		.loc 1 163 0
 817 012c 0123     		movs	r3, #1
 818 012e A1E1     		b	.L39
 819              	.L49:
 156:.\tic_tac_toe.c **** 			connected = 0;
 820              		.loc 1 156 0 discriminator 2
 821 0130 FB69     		ldr	r3, [r7, #28]
 822 0132 0133     		adds	r3, r3, #1
 823 0134 FB61     		str	r3, [r7, #28]
 824              	.L46:
 156:.\tic_tac_toe.c **** 			connected = 0;
 825              		.loc 1 156 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 19


 826 0136 7B68     		ldr	r3, [r7, #4]
 827 0138 1A68     		ldr	r2, [r3]
 828 013a FB69     		ldr	r3, [r7, #28]
 829 013c 9A42     		cmp	r2, r3
 830 013e D1DC     		bgt	.L50
 164:.\tic_tac_toe.c **** 			}
 165:.\tic_tac_toe.c **** 		}
 166:.\tic_tac_toe.c **** 		connected = 0; //planar
 831              		.loc 1 166 0 is_stmt 1
 832 0140 0023     		movs	r3, #0
 833 0142 FB60     		str	r3, [r7, #12]
 167:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 834              		.loc 1 167 0
 835 0144 0023     		movs	r3, #0
 836 0146 3B61     		str	r3, [r7, #16]
 837 0148 0CE0     		b	.L51
 838              	.L52:
 168:.\tic_tac_toe.c **** 			connected += ttc_get_grid(t,z,zp,zp);
 839              		.loc 1 168 0 discriminator 3
 840 014a 7868     		ldr	r0, [r7, #4]
 841 014c 7969     		ldr	r1, [r7, #20]
 842 014e 3A69     		ldr	r2, [r7, #16]
 843 0150 3B69     		ldr	r3, [r7, #16]
 844 0152 FFF7FEFF 		bl	ttc_get_grid
 845 0156 0246     		mov	r2, r0
 846 0158 FB68     		ldr	r3, [r7, #12]
 847 015a 1344     		add	r3, r3, r2
 848 015c FB60     		str	r3, [r7, #12]
 167:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 849              		.loc 1 167 0 discriminator 3
 850 015e 3B69     		ldr	r3, [r7, #16]
 851 0160 0133     		adds	r3, r3, #1
 852 0162 3B61     		str	r3, [r7, #16]
 853              	.L51:
 167:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 854              		.loc 1 167 0 is_stmt 0 discriminator 1
 855 0164 7B68     		ldr	r3, [r7, #4]
 856 0166 1A68     		ldr	r2, [r3]
 857 0168 3B69     		ldr	r3, [r7, #16]
 858 016a 9A42     		cmp	r2, r3
 859 016c EDDC     		bgt	.L52
 169:.\tic_tac_toe.c **** 		}
 170:.\tic_tac_toe.c **** 		if (connected == t->player*t->size){
 860              		.loc 1 170 0 is_stmt 1
 861 016e 7B68     		ldr	r3, [r7, #4]
 862 0170 9B68     		ldr	r3, [r3, #8]
 863 0172 7A68     		ldr	r2, [r7, #4]
 864 0174 1268     		ldr	r2, [r2]
 865 0176 02FB03F2 		mul	r2, r2, r3
 866 017a FB68     		ldr	r3, [r7, #12]
 867 017c 9A42     		cmp	r2, r3
 868 017e 05D1     		bne	.L53
 171:.\tic_tac_toe.c **** 			t->game_not_won = t->player; //when win, set to player id
 869              		.loc 1 171 0
 870 0180 7B68     		ldr	r3, [r7, #4]
 871 0182 9A68     		ldr	r2, [r3, #8]
 872 0184 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 20


 873 0186 1A61     		str	r2, [r3, #16]
 172:.\tic_tac_toe.c **** 			return 1; //there is a win
 874              		.loc 1 172 0
 875 0188 0123     		movs	r3, #1
 876 018a 73E1     		b	.L39
 877              	.L53:
 173:.\tic_tac_toe.c **** 		}
 174:.\tic_tac_toe.c **** 		connected = 0; //planar
 878              		.loc 1 174 0
 879 018c 0023     		movs	r3, #0
 880 018e FB60     		str	r3, [r7, #12]
 175:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 881              		.loc 1 175 0
 882 0190 0023     		movs	r3, #0
 883 0192 3B61     		str	r3, [r7, #16]
 884 0194 0FE0     		b	.L54
 885              	.L55:
 176:.\tic_tac_toe.c **** 			connected += ttc_get_grid(t,z,3-zp,zp);
 886              		.loc 1 176 0 discriminator 3
 887 0196 3B69     		ldr	r3, [r7, #16]
 888 0198 C3F10303 		rsb	r3, r3, #3
 889 019c 7868     		ldr	r0, [r7, #4]
 890 019e 7969     		ldr	r1, [r7, #20]
 891 01a0 1A46     		mov	r2, r3
 892 01a2 3B69     		ldr	r3, [r7, #16]
 893 01a4 FFF7FEFF 		bl	ttc_get_grid
 894 01a8 0246     		mov	r2, r0
 895 01aa FB68     		ldr	r3, [r7, #12]
 896 01ac 1344     		add	r3, r3, r2
 897 01ae FB60     		str	r3, [r7, #12]
 175:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 898              		.loc 1 175 0 discriminator 3
 899 01b0 3B69     		ldr	r3, [r7, #16]
 900 01b2 0133     		adds	r3, r3, #1
 901 01b4 3B61     		str	r3, [r7, #16]
 902              	.L54:
 175:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 903              		.loc 1 175 0 is_stmt 0 discriminator 1
 904 01b6 7B68     		ldr	r3, [r7, #4]
 905 01b8 1A68     		ldr	r2, [r3]
 906 01ba 3B69     		ldr	r3, [r7, #16]
 907 01bc 9A42     		cmp	r2, r3
 908 01be EADC     		bgt	.L55
 177:.\tic_tac_toe.c **** 		}
 178:.\tic_tac_toe.c **** 		if (connected == t->player*t->size){
 909              		.loc 1 178 0 is_stmt 1
 910 01c0 7B68     		ldr	r3, [r7, #4]
 911 01c2 9B68     		ldr	r3, [r3, #8]
 912 01c4 7A68     		ldr	r2, [r7, #4]
 913 01c6 1268     		ldr	r2, [r2]
 914 01c8 02FB03F2 		mul	r2, r2, r3
 915 01cc FB68     		ldr	r3, [r7, #12]
 916 01ce 9A42     		cmp	r2, r3
 917 01d0 05D1     		bne	.L56
 179:.\tic_tac_toe.c **** 			t->game_not_won = t->player; //when win, set to player id
 918              		.loc 1 179 0
 919 01d2 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 21


 920 01d4 9A68     		ldr	r2, [r3, #8]
 921 01d6 7B68     		ldr	r3, [r7, #4]
 922 01d8 1A61     		str	r2, [r3, #16]
 180:.\tic_tac_toe.c **** 			return 1; //there is a win
 923              		.loc 1 180 0
 924 01da 0123     		movs	r3, #1
 925 01dc 4AE1     		b	.L39
 926              	.L56:
 181:.\tic_tac_toe.c **** 		}
 182:.\tic_tac_toe.c **** 		connected = 0; //frontal
 927              		.loc 1 182 0
 928 01de 0023     		movs	r3, #0
 929 01e0 FB60     		str	r3, [r7, #12]
 183:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 930              		.loc 1 183 0
 931 01e2 0023     		movs	r3, #0
 932 01e4 3B61     		str	r3, [r7, #16]
 933 01e6 0CE0     		b	.L57
 934              	.L58:
 184:.\tic_tac_toe.c **** 			connected += ttc_get_grid(t,zp,z,zp);
 935              		.loc 1 184 0 discriminator 3
 936 01e8 7868     		ldr	r0, [r7, #4]
 937 01ea 3969     		ldr	r1, [r7, #16]
 938 01ec 7A69     		ldr	r2, [r7, #20]
 939 01ee 3B69     		ldr	r3, [r7, #16]
 940 01f0 FFF7FEFF 		bl	ttc_get_grid
 941 01f4 0246     		mov	r2, r0
 942 01f6 FB68     		ldr	r3, [r7, #12]
 943 01f8 1344     		add	r3, r3, r2
 944 01fa FB60     		str	r3, [r7, #12]
 183:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 945              		.loc 1 183 0 discriminator 3
 946 01fc 3B69     		ldr	r3, [r7, #16]
 947 01fe 0133     		adds	r3, r3, #1
 948 0200 3B61     		str	r3, [r7, #16]
 949              	.L57:
 183:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 950              		.loc 1 183 0 is_stmt 0 discriminator 1
 951 0202 7B68     		ldr	r3, [r7, #4]
 952 0204 1A68     		ldr	r2, [r3]
 953 0206 3B69     		ldr	r3, [r7, #16]
 954 0208 9A42     		cmp	r2, r3
 955 020a EDDC     		bgt	.L58
 185:.\tic_tac_toe.c **** 		}
 186:.\tic_tac_toe.c **** 		if (connected == t->player*t->size){
 956              		.loc 1 186 0 is_stmt 1
 957 020c 7B68     		ldr	r3, [r7, #4]
 958 020e 9B68     		ldr	r3, [r3, #8]
 959 0210 7A68     		ldr	r2, [r7, #4]
 960 0212 1268     		ldr	r2, [r2]
 961 0214 02FB03F2 		mul	r2, r2, r3
 962 0218 FB68     		ldr	r3, [r7, #12]
 963 021a 9A42     		cmp	r2, r3
 964 021c 05D1     		bne	.L59
 187:.\tic_tac_toe.c **** 			t->game_not_won = t->player; //when win, set to player id
 965              		.loc 1 187 0
 966 021e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 22


 967 0220 9A68     		ldr	r2, [r3, #8]
 968 0222 7B68     		ldr	r3, [r7, #4]
 969 0224 1A61     		str	r2, [r3, #16]
 188:.\tic_tac_toe.c **** 			return 1; //there is a win
 970              		.loc 1 188 0
 971 0226 0123     		movs	r3, #1
 972 0228 24E1     		b	.L39
 973              	.L59:
 189:.\tic_tac_toe.c **** 		}
 190:.\tic_tac_toe.c **** 		connected = 0; //frontal
 974              		.loc 1 190 0
 975 022a 0023     		movs	r3, #0
 976 022c FB60     		str	r3, [r7, #12]
 191:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 977              		.loc 1 191 0
 978 022e 0023     		movs	r3, #0
 979 0230 3B61     		str	r3, [r7, #16]
 980 0232 11E0     		b	.L60
 981              	.L83:
 982              		.align	2
 983              	.L82:
 984 0234 88000000 		.word	.LC7
 985              	.L61:
 192:.\tic_tac_toe.c **** 			connected += ttc_get_grid(t,3-z,z,zp);
 986              		.loc 1 192 0 discriminator 3
 987 0238 7B69     		ldr	r3, [r7, #20]
 988 023a C3F10303 		rsb	r3, r3, #3
 989 023e 7868     		ldr	r0, [r7, #4]
 990 0240 1946     		mov	r1, r3
 991 0242 7A69     		ldr	r2, [r7, #20]
 992 0244 3B69     		ldr	r3, [r7, #16]
 993 0246 FFF7FEFF 		bl	ttc_get_grid
 994 024a 0246     		mov	r2, r0
 995 024c FB68     		ldr	r3, [r7, #12]
 996 024e 1344     		add	r3, r3, r2
 997 0250 FB60     		str	r3, [r7, #12]
 191:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 998              		.loc 1 191 0 discriminator 3
 999 0252 3B69     		ldr	r3, [r7, #16]
 1000 0254 0133     		adds	r3, r3, #1
 1001 0256 3B61     		str	r3, [r7, #16]
 1002              	.L60:
 191:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1003              		.loc 1 191 0 is_stmt 0 discriminator 1
 1004 0258 7B68     		ldr	r3, [r7, #4]
 1005 025a 1A68     		ldr	r2, [r3]
 1006 025c 3B69     		ldr	r3, [r7, #16]
 1007 025e 9A42     		cmp	r2, r3
 1008 0260 EADC     		bgt	.L61
 193:.\tic_tac_toe.c **** 		}
 194:.\tic_tac_toe.c **** 		if (connected == t->player*t->size){
 1009              		.loc 1 194 0 is_stmt 1
 1010 0262 7B68     		ldr	r3, [r7, #4]
 1011 0264 9B68     		ldr	r3, [r3, #8]
 1012 0266 7A68     		ldr	r2, [r7, #4]
 1013 0268 1268     		ldr	r2, [r2]
 1014 026a 02FB03F2 		mul	r2, r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 23


 1015 026e FB68     		ldr	r3, [r7, #12]
 1016 0270 9A42     		cmp	r2, r3
 1017 0272 05D1     		bne	.L62
 195:.\tic_tac_toe.c **** 			t->game_not_won = t->player; //when win, set to player id
 1018              		.loc 1 195 0
 1019 0274 7B68     		ldr	r3, [r7, #4]
 1020 0276 9A68     		ldr	r2, [r3, #8]
 1021 0278 7B68     		ldr	r3, [r7, #4]
 1022 027a 1A61     		str	r2, [r3, #16]
 196:.\tic_tac_toe.c **** 			return 1; //there is a win
 1023              		.loc 1 196 0
 1024 027c 0123     		movs	r3, #1
 1025 027e F9E0     		b	.L39
 1026              	.L62:
 197:.\tic_tac_toe.c **** 		}
 198:.\tic_tac_toe.c **** 		connected = 0; //sidal
 1027              		.loc 1 198 0
 1028 0280 0023     		movs	r3, #0
 1029 0282 FB60     		str	r3, [r7, #12]
 199:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1030              		.loc 1 199 0
 1031 0284 0023     		movs	r3, #0
 1032 0286 3B61     		str	r3, [r7, #16]
 1033 0288 0CE0     		b	.L63
 1034              	.L64:
 200:.\tic_tac_toe.c **** 			connected += ttc_get_grid(t,zp,zp,z);
 1035              		.loc 1 200 0 discriminator 3
 1036 028a 7868     		ldr	r0, [r7, #4]
 1037 028c 3969     		ldr	r1, [r7, #16]
 1038 028e 3A69     		ldr	r2, [r7, #16]
 1039 0290 7B69     		ldr	r3, [r7, #20]
 1040 0292 FFF7FEFF 		bl	ttc_get_grid
 1041 0296 0246     		mov	r2, r0
 1042 0298 FB68     		ldr	r3, [r7, #12]
 1043 029a 1344     		add	r3, r3, r2
 1044 029c FB60     		str	r3, [r7, #12]
 199:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1045              		.loc 1 199 0 discriminator 3
 1046 029e 3B69     		ldr	r3, [r7, #16]
 1047 02a0 0133     		adds	r3, r3, #1
 1048 02a2 3B61     		str	r3, [r7, #16]
 1049              	.L63:
 199:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1050              		.loc 1 199 0 is_stmt 0 discriminator 1
 1051 02a4 7B68     		ldr	r3, [r7, #4]
 1052 02a6 1A68     		ldr	r2, [r3]
 1053 02a8 3B69     		ldr	r3, [r7, #16]
 1054 02aa 9A42     		cmp	r2, r3
 1055 02ac EDDC     		bgt	.L64
 201:.\tic_tac_toe.c **** 		}
 202:.\tic_tac_toe.c **** 		if (connected == t->player*t->size){
 1056              		.loc 1 202 0 is_stmt 1
 1057 02ae 7B68     		ldr	r3, [r7, #4]
 1058 02b0 9B68     		ldr	r3, [r3, #8]
 1059 02b2 7A68     		ldr	r2, [r7, #4]
 1060 02b4 1268     		ldr	r2, [r2]
 1061 02b6 02FB03F2 		mul	r2, r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 24


 1062 02ba FB68     		ldr	r3, [r7, #12]
 1063 02bc 9A42     		cmp	r2, r3
 1064 02be 05D1     		bne	.L65
 203:.\tic_tac_toe.c **** 			t->game_not_won = t->player; //when win, set to player id
 1065              		.loc 1 203 0
 1066 02c0 7B68     		ldr	r3, [r7, #4]
 1067 02c2 9A68     		ldr	r2, [r3, #8]
 1068 02c4 7B68     		ldr	r3, [r7, #4]
 1069 02c6 1A61     		str	r2, [r3, #16]
 204:.\tic_tac_toe.c **** 			return 1; //there is a win
 1070              		.loc 1 204 0
 1071 02c8 0123     		movs	r3, #1
 1072 02ca D3E0     		b	.L39
 1073              	.L65:
 205:.\tic_tac_toe.c **** 		}
 206:.\tic_tac_toe.c **** 		connected = 0; //sidal
 1074              		.loc 1 206 0
 1075 02cc 0023     		movs	r3, #0
 1076 02ce FB60     		str	r3, [r7, #12]
 207:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1077              		.loc 1 207 0
 1078 02d0 0023     		movs	r3, #0
 1079 02d2 3B61     		str	r3, [r7, #16]
 1080 02d4 0FE0     		b	.L66
 1081              	.L67:
 208:.\tic_tac_toe.c **** 			connected += ttc_get_grid(t,zp,3-zp,z);
 1082              		.loc 1 208 0 discriminator 3
 1083 02d6 3B69     		ldr	r3, [r7, #16]
 1084 02d8 C3F10303 		rsb	r3, r3, #3
 1085 02dc 7868     		ldr	r0, [r7, #4]
 1086 02de 3969     		ldr	r1, [r7, #16]
 1087 02e0 1A46     		mov	r2, r3
 1088 02e2 7B69     		ldr	r3, [r7, #20]
 1089 02e4 FFF7FEFF 		bl	ttc_get_grid
 1090 02e8 0246     		mov	r2, r0
 1091 02ea FB68     		ldr	r3, [r7, #12]
 1092 02ec 1344     		add	r3, r3, r2
 1093 02ee FB60     		str	r3, [r7, #12]
 207:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1094              		.loc 1 207 0 discriminator 3
 1095 02f0 3B69     		ldr	r3, [r7, #16]
 1096 02f2 0133     		adds	r3, r3, #1
 1097 02f4 3B61     		str	r3, [r7, #16]
 1098              	.L66:
 207:.\tic_tac_toe.c **** 		for (zp = 0; zp < t->size;zp++){ //double iterator
 1099              		.loc 1 207 0 is_stmt 0 discriminator 1
 1100 02f6 7B68     		ldr	r3, [r7, #4]
 1101 02f8 1A68     		ldr	r2, [r3]
 1102 02fa 3B69     		ldr	r3, [r7, #16]
 1103 02fc 9A42     		cmp	r2, r3
 1104 02fe EADC     		bgt	.L67
 209:.\tic_tac_toe.c **** 		}
 210:.\tic_tac_toe.c **** 		if (connected == t->player*t->size){
 1105              		.loc 1 210 0 is_stmt 1
 1106 0300 7B68     		ldr	r3, [r7, #4]
 1107 0302 9B68     		ldr	r3, [r3, #8]
 1108 0304 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 25


 1109 0306 1268     		ldr	r2, [r2]
 1110 0308 02FB03F2 		mul	r2, r2, r3
 1111 030c FB68     		ldr	r3, [r7, #12]
 1112 030e 9A42     		cmp	r2, r3
 1113 0310 05D1     		bne	.L68
 211:.\tic_tac_toe.c **** 			t->game_not_won = t->player; //when win, set to player id
 1114              		.loc 1 211 0
 1115 0312 7B68     		ldr	r3, [r7, #4]
 1116 0314 9A68     		ldr	r2, [r3, #8]
 1117 0316 7B68     		ldr	r3, [r7, #4]
 1118 0318 1A61     		str	r2, [r3, #16]
 212:.\tic_tac_toe.c **** 			return 1; //there is a win
 1119              		.loc 1 212 0
 1120 031a 0123     		movs	r3, #1
 1121 031c AAE0     		b	.L39
 1122              	.L68:
 135:.\tic_tac_toe.c **** 		for (y = 0; y < t->size; y++){ // flat
 1123              		.loc 1 135 0 discriminator 2
 1124 031e 7B69     		ldr	r3, [r7, #20]
 1125 0320 0133     		adds	r3, r3, #1
 1126 0322 7B61     		str	r3, [r7, #20]
 1127              	.L34:
 135:.\tic_tac_toe.c **** 		for (y = 0; y < t->size; y++){ // flat
 1128              		.loc 1 135 0 is_stmt 0 discriminator 1
 1129 0324 7B68     		ldr	r3, [r7, #4]
 1130 0326 1A68     		ldr	r2, [r3]
 1131 0328 7B69     		ldr	r3, [r7, #20]
 1132 032a 9A42     		cmp	r2, r3
 1133 032c 3FF775AE 		bgt	.L69
 213:.\tic_tac_toe.c **** 		}
 214:.\tic_tac_toe.c **** 	}
 215:.\tic_tac_toe.c **** 	connected = 0; //superdiag 1
 1134              		.loc 1 215 0 is_stmt 1
 1135 0330 0023     		movs	r3, #0
 1136 0332 FB60     		str	r3, [r7, #12]
 216:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1137              		.loc 1 216 0
 1138 0334 0023     		movs	r3, #0
 1139 0336 3B61     		str	r3, [r7, #16]
 1140 0338 0CE0     		b	.L70
 1141              	.L71:
 217:.\tic_tac_toe.c **** 		connected += ttc_get_grid(t,zp,zp,zp);
 1142              		.loc 1 217 0 discriminator 3
 1143 033a 7868     		ldr	r0, [r7, #4]
 1144 033c 3969     		ldr	r1, [r7, #16]
 1145 033e 3A69     		ldr	r2, [r7, #16]
 1146 0340 3B69     		ldr	r3, [r7, #16]
 1147 0342 FFF7FEFF 		bl	ttc_get_grid
 1148 0346 0246     		mov	r2, r0
 1149 0348 FB68     		ldr	r3, [r7, #12]
 1150 034a 1344     		add	r3, r3, r2
 1151 034c FB60     		str	r3, [r7, #12]
 216:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1152              		.loc 1 216 0 discriminator 3
 1153 034e 3B69     		ldr	r3, [r7, #16]
 1154 0350 0133     		adds	r3, r3, #1
 1155 0352 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 26


 1156              	.L70:
 216:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1157              		.loc 1 216 0 is_stmt 0 discriminator 1
 1158 0354 7B68     		ldr	r3, [r7, #4]
 1159 0356 1A68     		ldr	r2, [r3]
 1160 0358 3B69     		ldr	r3, [r7, #16]
 1161 035a 9A42     		cmp	r2, r3
 1162 035c EDDC     		bgt	.L71
 218:.\tic_tac_toe.c **** 	}
 219:.\tic_tac_toe.c **** 	if (connected == t->player*t->size){
 1163              		.loc 1 219 0 is_stmt 1
 1164 035e 7B68     		ldr	r3, [r7, #4]
 1165 0360 9B68     		ldr	r3, [r3, #8]
 1166 0362 7A68     		ldr	r2, [r7, #4]
 1167 0364 1268     		ldr	r2, [r2]
 1168 0366 02FB03F2 		mul	r2, r2, r3
 1169 036a FB68     		ldr	r3, [r7, #12]
 1170 036c 9A42     		cmp	r2, r3
 1171 036e 05D1     		bne	.L72
 220:.\tic_tac_toe.c **** 		t->game_not_won = t->player; //when win, set to player id
 1172              		.loc 1 220 0
 1173 0370 7B68     		ldr	r3, [r7, #4]
 1174 0372 9A68     		ldr	r2, [r3, #8]
 1175 0374 7B68     		ldr	r3, [r7, #4]
 1176 0376 1A61     		str	r2, [r3, #16]
 221:.\tic_tac_toe.c **** 		return 1; //there is a win
 1177              		.loc 1 221 0
 1178 0378 0123     		movs	r3, #1
 1179 037a 7BE0     		b	.L39
 1180              	.L72:
 222:.\tic_tac_toe.c **** 	}
 223:.\tic_tac_toe.c **** 	connected = 0; //superdiag 2
 1181              		.loc 1 223 0
 1182 037c 0023     		movs	r3, #0
 1183 037e FB60     		str	r3, [r7, #12]
 224:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1184              		.loc 1 224 0
 1185 0380 0023     		movs	r3, #0
 1186 0382 3B61     		str	r3, [r7, #16]
 1187 0384 0FE0     		b	.L73
 1188              	.L74:
 225:.\tic_tac_toe.c **** 		connected += ttc_get_grid(t,zp,3-zp,zp);
 1189              		.loc 1 225 0 discriminator 3
 1190 0386 3B69     		ldr	r3, [r7, #16]
 1191 0388 C3F10303 		rsb	r3, r3, #3
 1192 038c 7868     		ldr	r0, [r7, #4]
 1193 038e 3969     		ldr	r1, [r7, #16]
 1194 0390 1A46     		mov	r2, r3
 1195 0392 3B69     		ldr	r3, [r7, #16]
 1196 0394 FFF7FEFF 		bl	ttc_get_grid
 1197 0398 0246     		mov	r2, r0
 1198 039a FB68     		ldr	r3, [r7, #12]
 1199 039c 1344     		add	r3, r3, r2
 1200 039e FB60     		str	r3, [r7, #12]
 224:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1201              		.loc 1 224 0 discriminator 3
 1202 03a0 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 27


 1203 03a2 0133     		adds	r3, r3, #1
 1204 03a4 3B61     		str	r3, [r7, #16]
 1205              	.L73:
 224:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1206              		.loc 1 224 0 is_stmt 0 discriminator 1
 1207 03a6 7B68     		ldr	r3, [r7, #4]
 1208 03a8 1A68     		ldr	r2, [r3]
 1209 03aa 3B69     		ldr	r3, [r7, #16]
 1210 03ac 9A42     		cmp	r2, r3
 1211 03ae EADC     		bgt	.L74
 226:.\tic_tac_toe.c **** 	}
 227:.\tic_tac_toe.c **** 	if (connected == t->player*t->size){
 1212              		.loc 1 227 0 is_stmt 1
 1213 03b0 7B68     		ldr	r3, [r7, #4]
 1214 03b2 9B68     		ldr	r3, [r3, #8]
 1215 03b4 7A68     		ldr	r2, [r7, #4]
 1216 03b6 1268     		ldr	r2, [r2]
 1217 03b8 02FB03F2 		mul	r2, r2, r3
 1218 03bc FB68     		ldr	r3, [r7, #12]
 1219 03be 9A42     		cmp	r2, r3
 1220 03c0 05D1     		bne	.L75
 228:.\tic_tac_toe.c **** 		t->game_not_won = t->player; //when win, set to player id
 1221              		.loc 1 228 0
 1222 03c2 7B68     		ldr	r3, [r7, #4]
 1223 03c4 9A68     		ldr	r2, [r3, #8]
 1224 03c6 7B68     		ldr	r3, [r7, #4]
 1225 03c8 1A61     		str	r2, [r3, #16]
 229:.\tic_tac_toe.c **** 		return 1; //there is a win
 1226              		.loc 1 229 0
 1227 03ca 0123     		movs	r3, #1
 1228 03cc 52E0     		b	.L39
 1229              	.L75:
 230:.\tic_tac_toe.c **** 	}
 231:.\tic_tac_toe.c **** 	connected = 0; //superdiag 3
 1230              		.loc 1 231 0
 1231 03ce 0023     		movs	r3, #0
 1232 03d0 FB60     		str	r3, [r7, #12]
 232:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1233              		.loc 1 232 0
 1234 03d2 0023     		movs	r3, #0
 1235 03d4 3B61     		str	r3, [r7, #16]
 1236 03d6 0EE0     		b	.L76
 1237              	.L77:
 233:.\tic_tac_toe.c **** 		connected += ttc_get_grid(t,zp,zp,3-zp);
 1238              		.loc 1 233 0 discriminator 3
 1239 03d8 3B69     		ldr	r3, [r7, #16]
 1240 03da C3F10303 		rsb	r3, r3, #3
 1241 03de 7868     		ldr	r0, [r7, #4]
 1242 03e0 3969     		ldr	r1, [r7, #16]
 1243 03e2 3A69     		ldr	r2, [r7, #16]
 1244 03e4 FFF7FEFF 		bl	ttc_get_grid
 1245 03e8 0246     		mov	r2, r0
 1246 03ea FB68     		ldr	r3, [r7, #12]
 1247 03ec 1344     		add	r3, r3, r2
 1248 03ee FB60     		str	r3, [r7, #12]
 232:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1249              		.loc 1 232 0 discriminator 3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 28


 1250 03f0 3B69     		ldr	r3, [r7, #16]
 1251 03f2 0133     		adds	r3, r3, #1
 1252 03f4 3B61     		str	r3, [r7, #16]
 1253              	.L76:
 232:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1254              		.loc 1 232 0 is_stmt 0 discriminator 1
 1255 03f6 7B68     		ldr	r3, [r7, #4]
 1256 03f8 1A68     		ldr	r2, [r3]
 1257 03fa 3B69     		ldr	r3, [r7, #16]
 1258 03fc 9A42     		cmp	r2, r3
 1259 03fe EBDC     		bgt	.L77
 234:.\tic_tac_toe.c **** 	}
 235:.\tic_tac_toe.c **** 	if (connected == t->player*t->size){
 1260              		.loc 1 235 0 is_stmt 1
 1261 0400 7B68     		ldr	r3, [r7, #4]
 1262 0402 9B68     		ldr	r3, [r3, #8]
 1263 0404 7A68     		ldr	r2, [r7, #4]
 1264 0406 1268     		ldr	r2, [r2]
 1265 0408 02FB03F2 		mul	r2, r2, r3
 1266 040c FB68     		ldr	r3, [r7, #12]
 1267 040e 9A42     		cmp	r2, r3
 1268 0410 05D1     		bne	.L78
 236:.\tic_tac_toe.c **** 		t->game_not_won = t->player; //when win, set to player id
 1269              		.loc 1 236 0
 1270 0412 7B68     		ldr	r3, [r7, #4]
 1271 0414 9A68     		ldr	r2, [r3, #8]
 1272 0416 7B68     		ldr	r3, [r7, #4]
 1273 0418 1A61     		str	r2, [r3, #16]
 237:.\tic_tac_toe.c **** 		return 1; //there is a win
 1274              		.loc 1 237 0
 1275 041a 0123     		movs	r3, #1
 1276 041c 2AE0     		b	.L39
 1277              	.L78:
 238:.\tic_tac_toe.c **** 	}
 239:.\tic_tac_toe.c **** 	connected = 0; //superdiag 4
 1278              		.loc 1 239 0
 1279 041e 0023     		movs	r3, #0
 1280 0420 FB60     		str	r3, [r7, #12]
 240:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1281              		.loc 1 240 0
 1282 0422 0023     		movs	r3, #0
 1283 0424 3B61     		str	r3, [r7, #16]
 1284 0426 10E0     		b	.L79
 1285              	.L80:
 241:.\tic_tac_toe.c **** 		connected += ttc_get_grid(t,zp,3-zp,3-zp);
 1286              		.loc 1 241 0 discriminator 3
 1287 0428 3B69     		ldr	r3, [r7, #16]
 1288 042a C3F10302 		rsb	r2, r3, #3
 1289 042e 3B69     		ldr	r3, [r7, #16]
 1290 0430 C3F10303 		rsb	r3, r3, #3
 1291 0434 7868     		ldr	r0, [r7, #4]
 1292 0436 3969     		ldr	r1, [r7, #16]
 1293 0438 FFF7FEFF 		bl	ttc_get_grid
 1294 043c 0246     		mov	r2, r0
 1295 043e FB68     		ldr	r3, [r7, #12]
 1296 0440 1344     		add	r3, r3, r2
 1297 0442 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 29


 240:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1298              		.loc 1 240 0 discriminator 3
 1299 0444 3B69     		ldr	r3, [r7, #16]
 1300 0446 0133     		adds	r3, r3, #1
 1301 0448 3B61     		str	r3, [r7, #16]
 1302              	.L79:
 240:.\tic_tac_toe.c **** 	for (zp = 0; zp < t->size;zp++){ //triple iterator
 1303              		.loc 1 240 0 is_stmt 0 discriminator 1
 1304 044a 7B68     		ldr	r3, [r7, #4]
 1305 044c 1A68     		ldr	r2, [r3]
 1306 044e 3B69     		ldr	r3, [r7, #16]
 1307 0450 9A42     		cmp	r2, r3
 1308 0452 E9DC     		bgt	.L80
 242:.\tic_tac_toe.c **** 	}
 243:.\tic_tac_toe.c **** 	if (connected == t->player*t->size){
 1309              		.loc 1 243 0 is_stmt 1
 1310 0454 7B68     		ldr	r3, [r7, #4]
 1311 0456 9B68     		ldr	r3, [r3, #8]
 1312 0458 7A68     		ldr	r2, [r7, #4]
 1313 045a 1268     		ldr	r2, [r2]
 1314 045c 02FB03F2 		mul	r2, r2, r3
 1315 0460 FB68     		ldr	r3, [r7, #12]
 1316 0462 9A42     		cmp	r2, r3
 1317 0464 05D1     		bne	.L81
 244:.\tic_tac_toe.c **** 		t->game_not_won = t->player; //when win, set to player id
 1318              		.loc 1 244 0
 1319 0466 7B68     		ldr	r3, [r7, #4]
 1320 0468 9A68     		ldr	r2, [r3, #8]
 1321 046a 7B68     		ldr	r3, [r7, #4]
 1322 046c 1A61     		str	r2, [r3, #16]
 245:.\tic_tac_toe.c **** 		return 1; //there is a win
 1323              		.loc 1 245 0
 1324 046e 0123     		movs	r3, #1
 1325 0470 00E0     		b	.L39
 1326              	.L81:
 246:.\tic_tac_toe.c **** 	}
 247:.\tic_tac_toe.c **** 	return 0; //no win
 1327              		.loc 1 247 0
 1328 0472 0023     		movs	r3, #0
 1329              	.L39:
 248:.\tic_tac_toe.c **** }
 1330              		.loc 1 248 0
 1331 0474 1846     		mov	r0, r3
 1332 0476 2037     		adds	r7, r7, #32
 1333              		.cfi_def_cfa_offset 8
 1334 0478 BD46     		mov	sp, r7
 1335              		.cfi_def_cfa_register 13
 1336              		@ sp needed
 1337 047a 80BD     		pop	{r7, pc}
 1338              		.cfi_endproc
 1339              	.LFE7:
 1340              		.size	ttc_check_win, .-ttc_check_win
 1341              		.section	.text.ttc_step,"ax",%progbits
 1342              		.align	2
 1343              		.global	ttc_step
 1344              		.thumb
 1345              		.thumb_func
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 30


 1346              		.type	ttc_step, %function
 1347              	ttc_step:
 1348              	.LFB8:
 249:.\tic_tac_toe.c **** 
 250:.\tic_tac_toe.c **** 
 251:.\tic_tac_toe.c **** int ttc_step(struct tic_tac_toe* t,int x, int y, int z){
 1349              		.loc 1 251 0
 1350              		.cfi_startproc
 1351              		@ args = 0, pretend = 0, frame = 16
 1352              		@ frame_needed = 1, uses_anonymous_args = 0
 1353 0000 80B5     		push	{r7, lr}
 1354              		.cfi_def_cfa_offset 8
 1355              		.cfi_offset 7, -8
 1356              		.cfi_offset 14, -4
 1357 0002 86B0     		sub	sp, sp, #24
 1358              		.cfi_def_cfa_offset 32
 1359 0004 02AF     		add	r7, sp, #8
 1360              		.cfi_def_cfa 7, 24
 1361 0006 F860     		str	r0, [r7, #12]
 1362 0008 B960     		str	r1, [r7, #8]
 1363 000a 7A60     		str	r2, [r7, #4]
 1364 000c 3B60     		str	r3, [r7]
 252:.\tic_tac_toe.c **** 	// generic take input to allow for both terminal and psoc
 253:.\tic_tac_toe.c **** 	if (ttc_check_valid(t,x,y,z) == 1){
 1365              		.loc 1 253 0
 1366 000e F868     		ldr	r0, [r7, #12]
 1367 0010 B968     		ldr	r1, [r7, #8]
 1368 0012 7A68     		ldr	r2, [r7, #4]
 1369 0014 3B68     		ldr	r3, [r7]
 1370 0016 FFF7FEFF 		bl	ttc_check_valid
 1371 001a 0346     		mov	r3, r0
 1372 001c 012B     		cmp	r3, #1
 1373 001e 13D1     		bne	.L85
 254:.\tic_tac_toe.c **** 		ttc_set_grid(t,x,y,z,t->player);
 1374              		.loc 1 254 0
 1375 0020 FB68     		ldr	r3, [r7, #12]
 1376 0022 9B68     		ldr	r3, [r3, #8]
 1377 0024 0093     		str	r3, [sp]
 1378 0026 F868     		ldr	r0, [r7, #12]
 1379 0028 B968     		ldr	r1, [r7, #8]
 1380 002a 7A68     		ldr	r2, [r7, #4]
 1381 002c 3B68     		ldr	r3, [r7]
 1382 002e FFF7FEFF 		bl	ttc_set_grid
 255:.\tic_tac_toe.c **** 		// ttc_get_grid(t,x,y,z);
 256:.\tic_tac_toe.c **** 		// printf("\nGot here"); 
 257:.\tic_tac_toe.c **** 		ttc_check_win(t);
 1383              		.loc 1 257 0
 1384 0032 F868     		ldr	r0, [r7, #12]
 1385 0034 FFF7FEFF 		bl	ttc_check_win
 258:.\tic_tac_toe.c **** 		ttc_change_player(t);
 1386              		.loc 1 258 0
 1387 0038 F868     		ldr	r0, [r7, #12]
 1388 003a FFF7FEFF 		bl	ttc_change_player
 259:.\tic_tac_toe.c **** 		ttc_print_grid(t);
 1389              		.loc 1 259 0
 1390 003e F868     		ldr	r0, [r7, #12]
 1391 0040 FFF7FEFF 		bl	ttc_print_grid
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 31


 260:.\tic_tac_toe.c **** 		return 1;
 1392              		.loc 1 260 0
 1393 0044 0123     		movs	r3, #1
 1394 0046 00E0     		b	.L86
 1395              	.L85:
 261:.\tic_tac_toe.c **** 	}
 262:.\tic_tac_toe.c **** 	else{
 263:.\tic_tac_toe.c **** 		return 0; // did not work properly
 1396              		.loc 1 263 0
 1397 0048 0023     		movs	r3, #0
 1398              	.L86:
 264:.\tic_tac_toe.c **** 	}
 265:.\tic_tac_toe.c **** }
 1399              		.loc 1 265 0
 1400 004a 1846     		mov	r0, r3
 1401 004c 1037     		adds	r7, r7, #16
 1402              		.cfi_def_cfa_offset 8
 1403 004e BD46     		mov	sp, r7
 1404              		.cfi_def_cfa_register 13
 1405              		@ sp needed
 1406 0050 80BD     		pop	{r7, pc}
 1407              		.cfi_endproc
 1408              	.LFE8:
 1409              		.size	ttc_step, .-ttc_step
 1410 0052 00BF     		.section	.text.ttc_play,"ax",%progbits
 1411              		.align	2
 1412              		.global	ttc_play
 1413              		.thumb
 1414              		.thumb_func
 1415              		.type	ttc_play, %function
 1416              	ttc_play:
 1417              	.LFB9:
 266:.\tic_tac_toe.c **** 
 267:.\tic_tac_toe.c **** void ttc_play(struct tic_tac_toe* t){
 1418              		.loc 1 267 0
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 16
 1421              		@ frame_needed = 1, uses_anonymous_args = 0
 1422 0000 80B5     		push	{r7, lr}
 1423              		.cfi_def_cfa_offset 8
 1424              		.cfi_offset 7, -8
 1425              		.cfi_offset 14, -4
 1426 0002 84B0     		sub	sp, sp, #16
 1427              		.cfi_def_cfa_offset 24
 1428 0004 00AF     		add	r7, sp, #0
 1429              		.cfi_def_cfa_register 7
 1430 0006 7860     		str	r0, [r7, #4]
 268:.\tic_tac_toe.c **** 	int *coords;
 269:.\tic_tac_toe.c **** 	coords = ttc_take_input(); //take input
 1431              		.loc 1 269 0
 1432 0008 FFF7FEFF 		bl	ttc_take_input
 1433 000c F860     		str	r0, [r7, #12]
 270:.\tic_tac_toe.c **** 	ttc_step(t,coords[0],coords[1],coords[2]); //play
 1434              		.loc 1 270 0
 1435 000e FB68     		ldr	r3, [r7, #12]
 1436 0010 1968     		ldr	r1, [r3]
 1437 0012 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 32


 1438 0014 0433     		adds	r3, r3, #4
 1439 0016 1A68     		ldr	r2, [r3]
 1440 0018 FB68     		ldr	r3, [r7, #12]
 1441 001a 0833     		adds	r3, r3, #8
 1442 001c 1B68     		ldr	r3, [r3]
 1443 001e 7868     		ldr	r0, [r7, #4]
 1444 0020 FFF7FEFF 		bl	ttc_step
 271:.\tic_tac_toe.c **** }
 1445              		.loc 1 271 0
 1446 0024 1037     		adds	r7, r7, #16
 1447              		.cfi_def_cfa_offset 8
 1448 0026 BD46     		mov	sp, r7
 1449              		.cfi_def_cfa_register 13
 1450              		@ sp needed
 1451 0028 80BD     		pop	{r7, pc}
 1452              		.cfi_endproc
 1453              	.LFE9:
 1454              		.size	ttc_play, .-ttc_play
 1455 002a 00BF     		.section	.rodata
 1456 0093 00       		.align	2
 1457              	.LC8:
 1458 0094 506C6179 		.ascii	"Player %i has won\000"
 1458      65722025 
 1458      69206861 
 1458      7320776F 
 1458      6E00
 1459 00a6 0000     		.section	.text.ttc_play_game,"ax",%progbits
 1460              		.align	2
 1461              		.global	ttc_play_game
 1462              		.thumb
 1463              		.thumb_func
 1464              		.type	ttc_play_game, %function
 1465              	ttc_play_game:
 1466              	.LFB10:
 272:.\tic_tac_toe.c **** 
 273:.\tic_tac_toe.c **** int ttc_play_game(struct tic_tac_toe* t){
 1467              		.loc 1 273 0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 8
 1470              		@ frame_needed = 1, uses_anonymous_args = 0
 1471 0000 80B5     		push	{r7, lr}
 1472              		.cfi_def_cfa_offset 8
 1473              		.cfi_offset 7, -8
 1474              		.cfi_offset 14, -4
 1475 0002 82B0     		sub	sp, sp, #8
 1476              		.cfi_def_cfa_offset 16
 1477 0004 00AF     		add	r7, sp, #0
 1478              		.cfi_def_cfa_register 7
 1479 0006 7860     		str	r0, [r7, #4]
 274:.\tic_tac_toe.c **** 	while (t->game_not_won == 0){
 1480              		.loc 1 274 0
 1481 0008 02E0     		b	.L89
 1482              	.L90:
 275:.\tic_tac_toe.c **** 		ttc_play(t);
 1483              		.loc 1 275 0
 1484 000a 7868     		ldr	r0, [r7, #4]
 1485 000c FFF7FEFF 		bl	ttc_play
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 33


 1486              	.L89:
 274:.\tic_tac_toe.c **** 	while (t->game_not_won == 0){
 1487              		.loc 1 274 0
 1488 0010 7B68     		ldr	r3, [r7, #4]
 1489 0012 1B69     		ldr	r3, [r3, #16]
 1490 0014 002B     		cmp	r3, #0
 1491 0016 F8D0     		beq	.L90
 276:.\tic_tac_toe.c **** 	}
 277:.\tic_tac_toe.c **** 	printf("Player %i has won", t->game_not_won);
 1492              		.loc 1 277 0
 1493 0018 7B68     		ldr	r3, [r7, #4]
 1494 001a 1B69     		ldr	r3, [r3, #16]
 1495 001c 0448     		ldr	r0, .L92
 1496 001e 1946     		mov	r1, r3
 1497 0020 FFF7FEFF 		bl	printf
 278:.\tic_tac_toe.c **** 	return 0;
 1498              		.loc 1 278 0
 1499 0024 0023     		movs	r3, #0
 279:.\tic_tac_toe.c **** }
 1500              		.loc 1 279 0
 1501 0026 1846     		mov	r0, r3
 1502 0028 0837     		adds	r7, r7, #8
 1503              		.cfi_def_cfa_offset 8
 1504 002a BD46     		mov	sp, r7
 1505              		.cfi_def_cfa_register 13
 1506              		@ sp needed
 1507 002c 80BD     		pop	{r7, pc}
 1508              	.L93:
 1509 002e 00BF     		.align	2
 1510              	.L92:
 1511 0030 94000000 		.word	.LC8
 1512              		.cfi_endproc
 1513              	.LFE10:
 1514              		.size	ttc_play_game, .-ttc_play_game
 1515              		.section	.text.ttc_free,"ax",%progbits
 1516              		.align	2
 1517              		.global	ttc_free
 1518              		.thumb
 1519              		.thumb_func
 1520              		.type	ttc_free, %function
 1521              	ttc_free:
 1522              	.LFB11:
 280:.\tic_tac_toe.c **** 
 281:.\tic_tac_toe.c **** void ttc_free(struct tic_tac_toe* t){
 1523              		.loc 1 281 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 8
 1526              		@ frame_needed = 1, uses_anonymous_args = 0
 1527 0000 80B5     		push	{r7, lr}
 1528              		.cfi_def_cfa_offset 8
 1529              		.cfi_offset 7, -8
 1530              		.cfi_offset 14, -4
 1531 0002 82B0     		sub	sp, sp, #8
 1532              		.cfi_def_cfa_offset 16
 1533 0004 00AF     		add	r7, sp, #0
 1534              		.cfi_def_cfa_register 7
 1535 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 34


 282:.\tic_tac_toe.c **** 	free(t->grid);
 1536              		.loc 1 282 0
 1537 0008 7B68     		ldr	r3, [r7, #4]
 1538 000a 1433     		adds	r3, r3, #20
 1539 000c 1846     		mov	r0, r3
 1540 000e FFF7FEFF 		bl	free
 283:.\tic_tac_toe.c **** 	free(t);
 1541              		.loc 1 283 0
 1542 0012 7868     		ldr	r0, [r7, #4]
 1543 0014 FFF7FEFF 		bl	free
 284:.\tic_tac_toe.c **** }
 1544              		.loc 1 284 0
 1545 0018 0837     		adds	r7, r7, #8
 1546              		.cfi_def_cfa_offset 8
 1547 001a BD46     		mov	sp, r7
 1548              		.cfi_def_cfa_register 13
 1549              		@ sp needed
 1550 001c 80BD     		pop	{r7, pc}
 1551              		.cfi_endproc
 1552              	.LFE11:
 1553              		.size	ttc_free, .-ttc_free
 1554 001e 00BF     		.bss
 1555              		.align	2
 1556              	ret.5657:
 1557 0000 00000000 		.space	12
 1557      00000000 
 1557      00000000 
 1558              		.text
 1559              	.Letext0:
 1560              		.section	.debug_info,"",%progbits
 1561              	.Ldebug_info0:
 1562 0000 41040000 		.4byte	0x441
 1563 0004 0400     		.2byte	0x4
 1564 0006 00000000 		.4byte	.Ldebug_abbrev0
 1565 000a 04       		.byte	0x4
 1566 000b 01       		.uleb128 0x1
 1567 000c 8F000000 		.4byte	.LASF32
 1568 0010 01       		.byte	0x1
 1569 0011 42020000 		.4byte	.LASF33
 1570 0015 18000000 		.4byte	.LASF34
 1571 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1572 001d 00000000 		.4byte	0
 1573 0021 00000000 		.4byte	.Ldebug_line0
 1574 0025 02       		.uleb128 0x2
 1575 0026 01       		.byte	0x1
 1576 0027 06       		.byte	0x6
 1577 0028 6F020000 		.4byte	.LASF0
 1578 002c 02       		.uleb128 0x2
 1579 002d 01       		.byte	0x1
 1580 002e 08       		.byte	0x8
 1581 002f 86010000 		.4byte	.LASF1
 1582 0033 02       		.uleb128 0x2
 1583 0034 02       		.byte	0x2
 1584 0035 05       		.byte	0x5
 1585 0036 52020000 		.4byte	.LASF2
 1586 003a 02       		.uleb128 0x2
 1587 003b 02       		.byte	0x2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 35


 1588 003c 07       		.byte	0x7
 1589 003d 73010000 		.4byte	.LASF3
 1590 0041 02       		.uleb128 0x2
 1591 0042 04       		.byte	0x4
 1592 0043 05       		.byte	0x5
 1593 0044 61020000 		.4byte	.LASF4
 1594 0048 02       		.uleb128 0x2
 1595 0049 04       		.byte	0x4
 1596 004a 07       		.byte	0x7
 1597 004b 61010000 		.4byte	.LASF5
 1598 004f 02       		.uleb128 0x2
 1599 0050 08       		.byte	0x8
 1600 0051 05       		.byte	0x5
 1601 0052 17020000 		.4byte	.LASF6
 1602 0056 02       		.uleb128 0x2
 1603 0057 08       		.byte	0x8
 1604 0058 07       		.byte	0x7
 1605 0059 D2010000 		.4byte	.LASF7
 1606 005d 03       		.uleb128 0x3
 1607 005e 04       		.byte	0x4
 1608 005f 05       		.byte	0x5
 1609 0060 696E7400 		.ascii	"int\000"
 1610 0064 02       		.uleb128 0x2
 1611 0065 04       		.byte	0x4
 1612 0066 07       		.byte	0x7
 1613 0067 BC010000 		.4byte	.LASF8
 1614 006b 02       		.uleb128 0x2
 1615 006c 04       		.byte	0x4
 1616 006d 07       		.byte	0x7
 1617 006e 0E020000 		.4byte	.LASF9
 1618 0072 02       		.uleb128 0x2
 1619 0073 01       		.byte	0x1
 1620 0074 08       		.byte	0x8
 1621 0075 6A020000 		.4byte	.LASF10
 1622 0079 04       		.uleb128 0x4
 1623 007a 83000000 		.4byte	.LASF35
 1624 007e 1401     		.2byte	0x114
 1625 0080 01       		.byte	0x1
 1626 0081 1B       		.byte	0x1b
 1627 0082 CF000000 		.4byte	0xcf
 1628 0086 05       		.uleb128 0x5
 1629 0087 5C010000 		.4byte	.LASF11
 1630 008b 01       		.byte	0x1
 1631 008c 1C       		.byte	0x1c
 1632 008d 5D000000 		.4byte	0x5d
 1633 0091 00       		.byte	0
 1634 0092 05       		.uleb128 0x5
 1635 0093 3C010000 		.4byte	.LASF12
 1636 0097 01       		.byte	0x1
 1637 0098 1D       		.byte	0x1d
 1638 0099 5D000000 		.4byte	0x5d
 1639 009d 04       		.byte	0x4
 1640 009e 05       		.uleb128 0x5
 1641 009f 94010000 		.4byte	.LASF13
 1642 00a3 01       		.byte	0x1
 1643 00a4 1F       		.byte	0x1f
 1644 00a5 5D000000 		.4byte	0x5d
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 36


 1645 00a9 08       		.byte	0x8
 1646 00aa 05       		.uleb128 0x5
 1647 00ab A0010000 		.4byte	.LASF14
 1648 00af 01       		.byte	0x1
 1649 00b0 20       		.byte	0x20
 1650 00b1 5D000000 		.4byte	0x5d
 1651 00b5 0C       		.byte	0xc
 1652 00b6 05       		.uleb128 0x5
 1653 00b7 1D010000 		.4byte	.LASF15
 1654 00bb 01       		.byte	0x1
 1655 00bc 21       		.byte	0x21
 1656 00bd 5D000000 		.4byte	0x5d
 1657 00c1 10       		.byte	0x10
 1658 00c2 05       		.uleb128 0x5
 1659 00c3 5C020000 		.4byte	.LASF16
 1660 00c7 01       		.byte	0x1
 1661 00c8 23       		.byte	0x23
 1662 00c9 CF000000 		.4byte	0xcf
 1663 00cd 14       		.byte	0x14
 1664 00ce 00       		.byte	0
 1665 00cf 06       		.uleb128 0x6
 1666 00d0 5D000000 		.4byte	0x5d
 1667 00d4 DF000000 		.4byte	0xdf
 1668 00d8 07       		.uleb128 0x7
 1669 00d9 6B000000 		.4byte	0x6b
 1670 00dd 3F       		.byte	0x3f
 1671 00de 00       		.byte	0
 1672 00df 08       		.uleb128 0x8
 1673 00e0 7B020000 		.4byte	.LASF21
 1674 00e4 01       		.byte	0x1
 1675 00e5 27       		.byte	0x27
 1676 00e6 00000000 		.4byte	.LFB0
 1677 00ea 6C000000 		.4byte	.LFE0-.LFB0
 1678 00ee 01       		.uleb128 0x1
 1679 00ef 9C       		.byte	0x9c
 1680 00f0 41010000 		.4byte	0x141
 1681 00f4 09       		.uleb128 0x9
 1682 00f5 7400     		.ascii	"t\000"
 1683 00f7 01       		.byte	0x1
 1684 00f8 27       		.byte	0x27
 1685 00f9 41010000 		.4byte	0x141
 1686 00fd 02       		.uleb128 0x2
 1687 00fe 91       		.byte	0x91
 1688 00ff 6C       		.sleb128 -20
 1689 0100 0A       		.uleb128 0xa
 1690 0101 5C010000 		.4byte	.LASF11
 1691 0105 01       		.byte	0x1
 1692 0106 27       		.byte	0x27
 1693 0107 5D000000 		.4byte	0x5d
 1694 010b 02       		.uleb128 0x2
 1695 010c 91       		.byte	0x91
 1696 010d 68       		.sleb128 -24
 1697 010e 0A       		.uleb128 0xa
 1698 010f 3C010000 		.4byte	.LASF12
 1699 0113 01       		.byte	0x1
 1700 0114 27       		.byte	0x27
 1701 0115 5D000000 		.4byte	0x5d
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 37


 1702 0119 02       		.uleb128 0x2
 1703 011a 91       		.byte	0x91
 1704 011b 64       		.sleb128 -28
 1705 011c 0B       		.uleb128 0xb
 1706 011d 1E000000 		.4byte	.LBB2
 1707 0121 32000000 		.4byte	.LBE2-.LBB2
 1708 0125 0C       		.uleb128 0xc
 1709 0126 6900     		.ascii	"i\000"
 1710 0128 01       		.byte	0x1
 1711 0129 2B       		.byte	0x2b
 1712 012a 5D000000 		.4byte	0x5d
 1713 012e 02       		.uleb128 0x2
 1714 012f 91       		.byte	0x91
 1715 0130 74       		.sleb128 -12
 1716 0131 0C       		.uleb128 0xc
 1717 0132 6E756D00 		.ascii	"num\000"
 1718 0136 01       		.byte	0x1
 1719 0137 2C       		.byte	0x2c
 1720 0138 5D000000 		.4byte	0x5d
 1721 013c 02       		.uleb128 0x2
 1722 013d 91       		.byte	0x91
 1723 013e 70       		.sleb128 -16
 1724 013f 00       		.byte	0
 1725 0140 00       		.byte	0
 1726 0141 0D       		.uleb128 0xd
 1727 0142 04       		.byte	0x4
 1728 0143 79000000 		.4byte	0x79
 1729 0147 0E       		.uleb128 0xe
 1730 0148 AF010000 		.4byte	.LASF18
 1731 014c 01       		.byte	0x1
 1732 014d 36       		.byte	0x36
 1733 014e 5D000000 		.4byte	0x5d
 1734 0152 00000000 		.4byte	.LFB1
 1735 0156 3A000000 		.4byte	.LFE1-.LFB1
 1736 015a 01       		.uleb128 0x1
 1737 015b 9C       		.byte	0x9c
 1738 015c AD010000 		.4byte	0x1ad
 1739 0160 09       		.uleb128 0x9
 1740 0161 7400     		.ascii	"t\000"
 1741 0163 01       		.byte	0x1
 1742 0164 36       		.byte	0x36
 1743 0165 41010000 		.4byte	0x141
 1744 0169 02       		.uleb128 0x2
 1745 016a 91       		.byte	0x91
 1746 016b 6C       		.sleb128 -20
 1747 016c 09       		.uleb128 0x9
 1748 016d 7800     		.ascii	"x\000"
 1749 016f 01       		.byte	0x1
 1750 0170 36       		.byte	0x36
 1751 0171 5D000000 		.4byte	0x5d
 1752 0175 02       		.uleb128 0x2
 1753 0176 91       		.byte	0x91
 1754 0177 68       		.sleb128 -24
 1755 0178 09       		.uleb128 0x9
 1756 0179 7900     		.ascii	"y\000"
 1757 017b 01       		.byte	0x1
 1758 017c 36       		.byte	0x36
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 38


 1759 017d 5D000000 		.4byte	0x5d
 1760 0181 02       		.uleb128 0x2
 1761 0182 91       		.byte	0x91
 1762 0183 64       		.sleb128 -28
 1763 0184 09       		.uleb128 0x9
 1764 0185 7A00     		.ascii	"z\000"
 1765 0187 01       		.byte	0x1
 1766 0188 36       		.byte	0x36
 1767 0189 5D000000 		.4byte	0x5d
 1768 018d 02       		.uleb128 0x2
 1769 018e 91       		.byte	0x91
 1770 018f 60       		.sleb128 -32
 1771 0190 0A       		.uleb128 0xa
 1772 0191 7D000000 		.4byte	.LASF17
 1773 0195 01       		.byte	0x1
 1774 0196 36       		.byte	0x36
 1775 0197 5D000000 		.4byte	0x5d
 1776 019b 02       		.uleb128 0x2
 1777 019c 91       		.byte	0x91
 1778 019d 00       		.sleb128 0
 1779 019e 0C       		.uleb128 0xc
 1780 019f 6C6F6300 		.ascii	"loc\000"
 1781 01a3 01       		.byte	0x1
 1782 01a4 37       		.byte	0x37
 1783 01a5 5D000000 		.4byte	0x5d
 1784 01a9 02       		.uleb128 0x2
 1785 01aa 91       		.byte	0x91
 1786 01ab 74       		.sleb128 -12
 1787 01ac 00       		.byte	0
 1788 01ad 0E       		.uleb128 0xe
 1789 01ae 25020000 		.4byte	.LASF19
 1790 01b2 01       		.byte	0x1
 1791 01b3 3D       		.byte	0x3d
 1792 01b4 5D000000 		.4byte	0x5d
 1793 01b8 00000000 		.4byte	.LFB2
 1794 01bc 3A000000 		.4byte	.LFE2-.LFB2
 1795 01c0 01       		.uleb128 0x1
 1796 01c1 9C       		.byte	0x9c
 1797 01c2 13020000 		.4byte	0x213
 1798 01c6 09       		.uleb128 0x9
 1799 01c7 7400     		.ascii	"t\000"
 1800 01c9 01       		.byte	0x1
 1801 01ca 3D       		.byte	0x3d
 1802 01cb 41010000 		.4byte	0x141
 1803 01cf 02       		.uleb128 0x2
 1804 01d0 91       		.byte	0x91
 1805 01d1 6C       		.sleb128 -20
 1806 01d2 09       		.uleb128 0x9
 1807 01d3 7800     		.ascii	"x\000"
 1808 01d5 01       		.byte	0x1
 1809 01d6 3D       		.byte	0x3d
 1810 01d7 5D000000 		.4byte	0x5d
 1811 01db 02       		.uleb128 0x2
 1812 01dc 91       		.byte	0x91
 1813 01dd 68       		.sleb128 -24
 1814 01de 09       		.uleb128 0x9
 1815 01df 7900     		.ascii	"y\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 39


 1816 01e1 01       		.byte	0x1
 1817 01e2 3D       		.byte	0x3d
 1818 01e3 5D000000 		.4byte	0x5d
 1819 01e7 02       		.uleb128 0x2
 1820 01e8 91       		.byte	0x91
 1821 01e9 64       		.sleb128 -28
 1822 01ea 09       		.uleb128 0x9
 1823 01eb 7A00     		.ascii	"z\000"
 1824 01ed 01       		.byte	0x1
 1825 01ee 3D       		.byte	0x3d
 1826 01ef 5D000000 		.4byte	0x5d
 1827 01f3 02       		.uleb128 0x2
 1828 01f4 91       		.byte	0x91
 1829 01f5 60       		.sleb128 -32
 1830 01f6 0C       		.uleb128 0xc
 1831 01f7 6C6F6300 		.ascii	"loc\000"
 1832 01fb 01       		.byte	0x1
 1833 01fc 3E       		.byte	0x3e
 1834 01fd 5D000000 		.4byte	0x5d
 1835 0201 02       		.uleb128 0x2
 1836 0202 91       		.byte	0x91
 1837 0203 74       		.sleb128 -12
 1838 0204 0C       		.uleb128 0xc
 1839 0205 72657400 		.ascii	"ret\000"
 1840 0209 01       		.byte	0x1
 1841 020a 3F       		.byte	0x3f
 1842 020b 5D000000 		.4byte	0x5d
 1843 020f 02       		.uleb128 0x2
 1844 0210 91       		.byte	0x91
 1845 0211 70       		.sleb128 -16
 1846 0212 00       		.byte	0
 1847 0213 0F       		.uleb128 0xf
 1848 0214 32020000 		.4byte	.LASF20
 1849 0218 01       		.byte	0x1
 1850 0219 44       		.byte	0x44
 1851 021a 5D000000 		.4byte	0x5d
 1852 021e 00000000 		.4byte	.LFB3
 1853 0222 A0000000 		.4byte	.LFE3-.LFB3
 1854 0226 01       		.uleb128 0x1
 1855 0227 9C       		.byte	0x9c
 1856 0228 6B020000 		.4byte	0x26b
 1857 022c 09       		.uleb128 0x9
 1858 022d 7400     		.ascii	"t\000"
 1859 022f 01       		.byte	0x1
 1860 0230 44       		.byte	0x44
 1861 0231 41010000 		.4byte	0x141
 1862 0235 02       		.uleb128 0x2
 1863 0236 91       		.byte	0x91
 1864 0237 6C       		.sleb128 -20
 1865 0238 09       		.uleb128 0x9
 1866 0239 7800     		.ascii	"x\000"
 1867 023b 01       		.byte	0x1
 1868 023c 44       		.byte	0x44
 1869 023d 5D000000 		.4byte	0x5d
 1870 0241 02       		.uleb128 0x2
 1871 0242 91       		.byte	0x91
 1872 0243 68       		.sleb128 -24
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 40


 1873 0244 09       		.uleb128 0x9
 1874 0245 7900     		.ascii	"y\000"
 1875 0247 01       		.byte	0x1
 1876 0248 44       		.byte	0x44
 1877 0249 5D000000 		.4byte	0x5d
 1878 024d 02       		.uleb128 0x2
 1879 024e 91       		.byte	0x91
 1880 024f 64       		.sleb128 -28
 1881 0250 09       		.uleb128 0x9
 1882 0251 7A00     		.ascii	"z\000"
 1883 0253 01       		.byte	0x1
 1884 0254 44       		.byte	0x44
 1885 0255 5D000000 		.4byte	0x5d
 1886 0259 02       		.uleb128 0x2
 1887 025a 91       		.byte	0x91
 1888 025b 60       		.sleb128 -32
 1889 025c 0C       		.uleb128 0xc
 1890 025d 6C6F6300 		.ascii	"loc\000"
 1891 0261 01       		.byte	0x1
 1892 0262 45       		.byte	0x45
 1893 0263 5D000000 		.4byte	0x5d
 1894 0267 02       		.uleb128 0x2
 1895 0268 91       		.byte	0x91
 1896 0269 74       		.sleb128 -12
 1897 026a 00       		.byte	0
 1898 026b 08       		.uleb128 0x8
 1899 026c 2A010000 		.4byte	.LASF22
 1900 0270 01       		.byte	0x1
 1901 0271 58       		.byte	0x58
 1902 0272 00000000 		.4byte	.LFB4
 1903 0276 3E000000 		.4byte	.LFE4-.LFB4
 1904 027a 01       		.uleb128 0x1
 1905 027b 9C       		.byte	0x9c
 1906 027c 8D020000 		.4byte	0x28d
 1907 0280 09       		.uleb128 0x9
 1908 0281 7400     		.ascii	"t\000"
 1909 0283 01       		.byte	0x1
 1910 0284 58       		.byte	0x58
 1911 0285 41010000 		.4byte	0x141
 1912 0289 02       		.uleb128 0x2
 1913 028a 91       		.byte	0x91
 1914 028b 74       		.sleb128 -12
 1915 028c 00       		.byte	0
 1916 028d 10       		.uleb128 0x10
 1917 028e 09000000 		.4byte	.LASF23
 1918 0292 01       		.byte	0x1
 1919 0293 62       		.byte	0x62
 1920 0294 C6020000 		.4byte	0x2c6
 1921 0298 00000000 		.4byte	.LFB5
 1922 029c 5C000000 		.4byte	.LFE5-.LFB5
 1923 02a0 01       		.uleb128 0x1
 1924 02a1 9C       		.byte	0x9c
 1925 02a2 C6020000 		.4byte	0x2c6
 1926 02a6 11       		.uleb128 0x11
 1927 02a7 9B010000 		.4byte	.LASF24
 1928 02ab 01       		.byte	0x1
 1929 02ac 65       		.byte	0x65
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 41


 1930 02ad CC020000 		.4byte	0x2cc
 1931 02b1 02       		.uleb128 0x2
 1932 02b2 91       		.byte	0x91
 1933 02b3 74       		.sleb128 -12
 1934 02b4 0C       		.uleb128 0xc
 1935 02b5 72657400 		.ascii	"ret\000"
 1936 02b9 01       		.byte	0x1
 1937 02ba 67       		.byte	0x67
 1938 02bb DC020000 		.4byte	0x2dc
 1939 02bf 05       		.uleb128 0x5
 1940 02c0 03       		.byte	0x3
 1941 02c1 00000000 		.4byte	ret.5657
 1942 02c5 00       		.byte	0
 1943 02c6 0D       		.uleb128 0xd
 1944 02c7 04       		.byte	0x4
 1945 02c8 5D000000 		.4byte	0x5d
 1946 02cc 06       		.uleb128 0x6
 1947 02cd 72000000 		.4byte	0x72
 1948 02d1 DC020000 		.4byte	0x2dc
 1949 02d5 07       		.uleb128 0x7
 1950 02d6 6B000000 		.4byte	0x6b
 1951 02da 02       		.byte	0x2
 1952 02db 00       		.byte	0
 1953 02dc 06       		.uleb128 0x6
 1954 02dd 5D000000 		.4byte	0x5d
 1955 02e1 EC020000 		.4byte	0x2ec
 1956 02e5 07       		.uleb128 0x7
 1957 02e6 6B000000 		.4byte	0x6b
 1958 02ea 02       		.byte	0x2
 1959 02eb 00       		.byte	0
 1960 02ec 12       		.uleb128 0x12
 1961 02ed 4D010000 		.4byte	.LASF25
 1962 02f1 01       		.byte	0x1
 1963 02f2 70       		.byte	0x70
 1964 02f3 00000000 		.4byte	.LFB6
 1965 02f7 88000000 		.4byte	.LFE6-.LFB6
 1966 02fb 01       		.uleb128 0x1
 1967 02fc 9C       		.byte	0x9c
 1968 02fd 1A030000 		.4byte	0x31a
 1969 0301 09       		.uleb128 0x9
 1970 0302 7400     		.ascii	"t\000"
 1971 0304 01       		.byte	0x1
 1972 0305 70       		.byte	0x70
 1973 0306 41010000 		.4byte	0x141
 1974 030a 02       		.uleb128 0x2
 1975 030b 91       		.byte	0x91
 1976 030c 6C       		.sleb128 -20
 1977 030d 0C       		.uleb128 0xc
 1978 030e 6900     		.ascii	"i\000"
 1979 0310 01       		.byte	0x1
 1980 0311 72       		.byte	0x72
 1981 0312 5D000000 		.4byte	0x5d
 1982 0316 02       		.uleb128 0x2
 1983 0317 91       		.byte	0x91
 1984 0318 74       		.sleb128 -12
 1985 0319 00       		.byte	0
 1986 031a 0F       		.uleb128 0xf
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 42


 1987 031b E9010000 		.4byte	.LASF26
 1988 031f 01       		.byte	0x1
 1989 0320 83       		.byte	0x83
 1990 0321 5D000000 		.4byte	0x5d
 1991 0325 00000000 		.4byte	.LFB7
 1992 0329 7C040000 		.4byte	.LFE7-.LFB7
 1993 032d 01       		.uleb128 0x1
 1994 032e 9C       		.byte	0x9c
 1995 032f 7F030000 		.4byte	0x37f
 1996 0333 09       		.uleb128 0x9
 1997 0334 7400     		.ascii	"t\000"
 1998 0336 01       		.byte	0x1
 1999 0337 83       		.byte	0x83
 2000 0338 41010000 		.4byte	0x141
 2001 033c 02       		.uleb128 0x2
 2002 033d 91       		.byte	0x91
 2003 033e 5C       		.sleb128 -36
 2004 033f 0C       		.uleb128 0xc
 2005 0340 7800     		.ascii	"x\000"
 2006 0342 01       		.byte	0x1
 2007 0343 85       		.byte	0x85
 2008 0344 5D000000 		.4byte	0x5d
 2009 0348 02       		.uleb128 0x2
 2010 0349 91       		.byte	0x91
 2011 034a 74       		.sleb128 -12
 2012 034b 0C       		.uleb128 0xc
 2013 034c 7900     		.ascii	"y\000"
 2014 034e 01       		.byte	0x1
 2015 034f 85       		.byte	0x85
 2016 0350 5D000000 		.4byte	0x5d
 2017 0354 02       		.uleb128 0x2
 2018 0355 91       		.byte	0x91
 2019 0356 70       		.sleb128 -16
 2020 0357 0C       		.uleb128 0xc
 2021 0358 7A00     		.ascii	"z\000"
 2022 035a 01       		.byte	0x1
 2023 035b 85       		.byte	0x85
 2024 035c 5D000000 		.4byte	0x5d
 2025 0360 02       		.uleb128 0x2
 2026 0361 91       		.byte	0x91
 2027 0362 6C       		.sleb128 -20
 2028 0363 0C       		.uleb128 0xc
 2029 0364 7A7000   		.ascii	"zp\000"
 2030 0367 01       		.byte	0x1
 2031 0368 85       		.byte	0x85
 2032 0369 5D000000 		.4byte	0x5d
 2033 036d 02       		.uleb128 0x2
 2034 036e 91       		.byte	0x91
 2035 036f 68       		.sleb128 -24
 2036 0370 11       		.uleb128 0x11
 2037 0371 A5010000 		.4byte	.LASF27
 2038 0375 01       		.byte	0x1
 2039 0376 86       		.byte	0x86
 2040 0377 5D000000 		.4byte	0x5d
 2041 037b 02       		.uleb128 0x2
 2042 037c 91       		.byte	0x91
 2043 037d 64       		.sleb128 -28
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 43


 2044 037e 00       		.byte	0
 2045 037f 0F       		.uleb128 0xf
 2046 0380 00000000 		.4byte	.LASF28
 2047 0384 01       		.byte	0x1
 2048 0385 FB       		.byte	0xfb
 2049 0386 5D000000 		.4byte	0x5d
 2050 038a 00000000 		.4byte	.LFB8
 2051 038e 52000000 		.4byte	.LFE8-.LFB8
 2052 0392 01       		.uleb128 0x1
 2053 0393 9C       		.byte	0x9c
 2054 0394 C9030000 		.4byte	0x3c9
 2055 0398 09       		.uleb128 0x9
 2056 0399 7400     		.ascii	"t\000"
 2057 039b 01       		.byte	0x1
 2058 039c FB       		.byte	0xfb
 2059 039d 41010000 		.4byte	0x141
 2060 03a1 02       		.uleb128 0x2
 2061 03a2 91       		.byte	0x91
 2062 03a3 74       		.sleb128 -12
 2063 03a4 09       		.uleb128 0x9
 2064 03a5 7800     		.ascii	"x\000"
 2065 03a7 01       		.byte	0x1
 2066 03a8 FB       		.byte	0xfb
 2067 03a9 5D000000 		.4byte	0x5d
 2068 03ad 02       		.uleb128 0x2
 2069 03ae 91       		.byte	0x91
 2070 03af 70       		.sleb128 -16
 2071 03b0 09       		.uleb128 0x9
 2072 03b1 7900     		.ascii	"y\000"
 2073 03b3 01       		.byte	0x1
 2074 03b4 FB       		.byte	0xfb
 2075 03b5 5D000000 		.4byte	0x5d
 2076 03b9 02       		.uleb128 0x2
 2077 03ba 91       		.byte	0x91
 2078 03bb 6C       		.sleb128 -20
 2079 03bc 09       		.uleb128 0x9
 2080 03bd 7A00     		.ascii	"z\000"
 2081 03bf 01       		.byte	0x1
 2082 03c0 FB       		.byte	0xfb
 2083 03c1 5D000000 		.4byte	0x5d
 2084 03c5 02       		.uleb128 0x2
 2085 03c6 91       		.byte	0x91
 2086 03c7 68       		.sleb128 -24
 2087 03c8 00       		.byte	0
 2088 03c9 13       		.uleb128 0x13
 2089 03ca C9010000 		.4byte	.LASF29
 2090 03ce 01       		.byte	0x1
 2091 03cf 0B01     		.2byte	0x10b
 2092 03d1 00000000 		.4byte	.LFB9
 2093 03d5 2A000000 		.4byte	.LFE9-.LFB9
 2094 03d9 01       		.uleb128 0x1
 2095 03da 9C       		.byte	0x9c
 2096 03db FC030000 		.4byte	0x3fc
 2097 03df 14       		.uleb128 0x14
 2098 03e0 7400     		.ascii	"t\000"
 2099 03e2 01       		.byte	0x1
 2100 03e3 0B01     		.2byte	0x10b
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 44


 2101 03e5 41010000 		.4byte	0x141
 2102 03e9 02       		.uleb128 0x2
 2103 03ea 91       		.byte	0x91
 2104 03eb 6C       		.sleb128 -20
 2105 03ec 15       		.uleb128 0x15
 2106 03ed 46010000 		.4byte	.LASF30
 2107 03f1 01       		.byte	0x1
 2108 03f2 0C01     		.2byte	0x10c
 2109 03f4 C6020000 		.4byte	0x2c6
 2110 03f8 02       		.uleb128 0x2
 2111 03f9 91       		.byte	0x91
 2112 03fa 74       		.sleb128 -12
 2113 03fb 00       		.byte	0
 2114 03fc 16       		.uleb128 0x16
 2115 03fd F7010000 		.4byte	.LASF31
 2116 0401 01       		.byte	0x1
 2117 0402 1101     		.2byte	0x111
 2118 0404 5D000000 		.4byte	0x5d
 2119 0408 00000000 		.4byte	.LFB10
 2120 040c 34000000 		.4byte	.LFE10-.LFB10
 2121 0410 01       		.uleb128 0x1
 2122 0411 9C       		.byte	0x9c
 2123 0412 24040000 		.4byte	0x424
 2124 0416 14       		.uleb128 0x14
 2125 0417 7400     		.ascii	"t\000"
 2126 0419 01       		.byte	0x1
 2127 041a 1101     		.2byte	0x111
 2128 041c 41010000 		.4byte	0x141
 2129 0420 02       		.uleb128 0x2
 2130 0421 91       		.byte	0x91
 2131 0422 74       		.sleb128 -12
 2132 0423 00       		.byte	0
 2133 0424 17       		.uleb128 0x17
 2134 0425 05020000 		.4byte	.LASF36
 2135 0429 01       		.byte	0x1
 2136 042a 1901     		.2byte	0x119
 2137 042c 00000000 		.4byte	.LFB11
 2138 0430 1E000000 		.4byte	.LFE11-.LFB11
 2139 0434 01       		.uleb128 0x1
 2140 0435 9C       		.byte	0x9c
 2141 0436 14       		.uleb128 0x14
 2142 0437 7400     		.ascii	"t\000"
 2143 0439 01       		.byte	0x1
 2144 043a 1901     		.2byte	0x119
 2145 043c 41010000 		.4byte	0x141
 2146 0440 02       		.uleb128 0x2
 2147 0441 91       		.byte	0x91
 2148 0442 74       		.sleb128 -12
 2149 0443 00       		.byte	0
 2150 0444 00       		.byte	0
 2151              		.section	.debug_abbrev,"",%progbits
 2152              	.Ldebug_abbrev0:
 2153 0000 01       		.uleb128 0x1
 2154 0001 11       		.uleb128 0x11
 2155 0002 01       		.byte	0x1
 2156 0003 25       		.uleb128 0x25
 2157 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 45


 2158 0005 13       		.uleb128 0x13
 2159 0006 0B       		.uleb128 0xb
 2160 0007 03       		.uleb128 0x3
 2161 0008 0E       		.uleb128 0xe
 2162 0009 1B       		.uleb128 0x1b
 2163 000a 0E       		.uleb128 0xe
 2164 000b 55       		.uleb128 0x55
 2165 000c 17       		.uleb128 0x17
 2166 000d 11       		.uleb128 0x11
 2167 000e 01       		.uleb128 0x1
 2168 000f 10       		.uleb128 0x10
 2169 0010 17       		.uleb128 0x17
 2170 0011 00       		.byte	0
 2171 0012 00       		.byte	0
 2172 0013 02       		.uleb128 0x2
 2173 0014 24       		.uleb128 0x24
 2174 0015 00       		.byte	0
 2175 0016 0B       		.uleb128 0xb
 2176 0017 0B       		.uleb128 0xb
 2177 0018 3E       		.uleb128 0x3e
 2178 0019 0B       		.uleb128 0xb
 2179 001a 03       		.uleb128 0x3
 2180 001b 0E       		.uleb128 0xe
 2181 001c 00       		.byte	0
 2182 001d 00       		.byte	0
 2183 001e 03       		.uleb128 0x3
 2184 001f 24       		.uleb128 0x24
 2185 0020 00       		.byte	0
 2186 0021 0B       		.uleb128 0xb
 2187 0022 0B       		.uleb128 0xb
 2188 0023 3E       		.uleb128 0x3e
 2189 0024 0B       		.uleb128 0xb
 2190 0025 03       		.uleb128 0x3
 2191 0026 08       		.uleb128 0x8
 2192 0027 00       		.byte	0
 2193 0028 00       		.byte	0
 2194 0029 04       		.uleb128 0x4
 2195 002a 13       		.uleb128 0x13
 2196 002b 01       		.byte	0x1
 2197 002c 03       		.uleb128 0x3
 2198 002d 0E       		.uleb128 0xe
 2199 002e 0B       		.uleb128 0xb
 2200 002f 05       		.uleb128 0x5
 2201 0030 3A       		.uleb128 0x3a
 2202 0031 0B       		.uleb128 0xb
 2203 0032 3B       		.uleb128 0x3b
 2204 0033 0B       		.uleb128 0xb
 2205 0034 01       		.uleb128 0x1
 2206 0035 13       		.uleb128 0x13
 2207 0036 00       		.byte	0
 2208 0037 00       		.byte	0
 2209 0038 05       		.uleb128 0x5
 2210 0039 0D       		.uleb128 0xd
 2211 003a 00       		.byte	0
 2212 003b 03       		.uleb128 0x3
 2213 003c 0E       		.uleb128 0xe
 2214 003d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 46


 2215 003e 0B       		.uleb128 0xb
 2216 003f 3B       		.uleb128 0x3b
 2217 0040 0B       		.uleb128 0xb
 2218 0041 49       		.uleb128 0x49
 2219 0042 13       		.uleb128 0x13
 2220 0043 38       		.uleb128 0x38
 2221 0044 0B       		.uleb128 0xb
 2222 0045 00       		.byte	0
 2223 0046 00       		.byte	0
 2224 0047 06       		.uleb128 0x6
 2225 0048 01       		.uleb128 0x1
 2226 0049 01       		.byte	0x1
 2227 004a 49       		.uleb128 0x49
 2228 004b 13       		.uleb128 0x13
 2229 004c 01       		.uleb128 0x1
 2230 004d 13       		.uleb128 0x13
 2231 004e 00       		.byte	0
 2232 004f 00       		.byte	0
 2233 0050 07       		.uleb128 0x7
 2234 0051 21       		.uleb128 0x21
 2235 0052 00       		.byte	0
 2236 0053 49       		.uleb128 0x49
 2237 0054 13       		.uleb128 0x13
 2238 0055 2F       		.uleb128 0x2f
 2239 0056 0B       		.uleb128 0xb
 2240 0057 00       		.byte	0
 2241 0058 00       		.byte	0
 2242 0059 08       		.uleb128 0x8
 2243 005a 2E       		.uleb128 0x2e
 2244 005b 01       		.byte	0x1
 2245 005c 3F       		.uleb128 0x3f
 2246 005d 19       		.uleb128 0x19
 2247 005e 03       		.uleb128 0x3
 2248 005f 0E       		.uleb128 0xe
 2249 0060 3A       		.uleb128 0x3a
 2250 0061 0B       		.uleb128 0xb
 2251 0062 3B       		.uleb128 0x3b
 2252 0063 0B       		.uleb128 0xb
 2253 0064 27       		.uleb128 0x27
 2254 0065 19       		.uleb128 0x19
 2255 0066 11       		.uleb128 0x11
 2256 0067 01       		.uleb128 0x1
 2257 0068 12       		.uleb128 0x12
 2258 0069 06       		.uleb128 0x6
 2259 006a 40       		.uleb128 0x40
 2260 006b 18       		.uleb128 0x18
 2261 006c 9742     		.uleb128 0x2117
 2262 006e 19       		.uleb128 0x19
 2263 006f 01       		.uleb128 0x1
 2264 0070 13       		.uleb128 0x13
 2265 0071 00       		.byte	0
 2266 0072 00       		.byte	0
 2267 0073 09       		.uleb128 0x9
 2268 0074 05       		.uleb128 0x5
 2269 0075 00       		.byte	0
 2270 0076 03       		.uleb128 0x3
 2271 0077 08       		.uleb128 0x8
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 47


 2272 0078 3A       		.uleb128 0x3a
 2273 0079 0B       		.uleb128 0xb
 2274 007a 3B       		.uleb128 0x3b
 2275 007b 0B       		.uleb128 0xb
 2276 007c 49       		.uleb128 0x49
 2277 007d 13       		.uleb128 0x13
 2278 007e 02       		.uleb128 0x2
 2279 007f 18       		.uleb128 0x18
 2280 0080 00       		.byte	0
 2281 0081 00       		.byte	0
 2282 0082 0A       		.uleb128 0xa
 2283 0083 05       		.uleb128 0x5
 2284 0084 00       		.byte	0
 2285 0085 03       		.uleb128 0x3
 2286 0086 0E       		.uleb128 0xe
 2287 0087 3A       		.uleb128 0x3a
 2288 0088 0B       		.uleb128 0xb
 2289 0089 3B       		.uleb128 0x3b
 2290 008a 0B       		.uleb128 0xb
 2291 008b 49       		.uleb128 0x49
 2292 008c 13       		.uleb128 0x13
 2293 008d 02       		.uleb128 0x2
 2294 008e 18       		.uleb128 0x18
 2295 008f 00       		.byte	0
 2296 0090 00       		.byte	0
 2297 0091 0B       		.uleb128 0xb
 2298 0092 0B       		.uleb128 0xb
 2299 0093 01       		.byte	0x1
 2300 0094 11       		.uleb128 0x11
 2301 0095 01       		.uleb128 0x1
 2302 0096 12       		.uleb128 0x12
 2303 0097 06       		.uleb128 0x6
 2304 0098 00       		.byte	0
 2305 0099 00       		.byte	0
 2306 009a 0C       		.uleb128 0xc
 2307 009b 34       		.uleb128 0x34
 2308 009c 00       		.byte	0
 2309 009d 03       		.uleb128 0x3
 2310 009e 08       		.uleb128 0x8
 2311 009f 3A       		.uleb128 0x3a
 2312 00a0 0B       		.uleb128 0xb
 2313 00a1 3B       		.uleb128 0x3b
 2314 00a2 0B       		.uleb128 0xb
 2315 00a3 49       		.uleb128 0x49
 2316 00a4 13       		.uleb128 0x13
 2317 00a5 02       		.uleb128 0x2
 2318 00a6 18       		.uleb128 0x18
 2319 00a7 00       		.byte	0
 2320 00a8 00       		.byte	0
 2321 00a9 0D       		.uleb128 0xd
 2322 00aa 0F       		.uleb128 0xf
 2323 00ab 00       		.byte	0
 2324 00ac 0B       		.uleb128 0xb
 2325 00ad 0B       		.uleb128 0xb
 2326 00ae 49       		.uleb128 0x49
 2327 00af 13       		.uleb128 0x13
 2328 00b0 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 48


 2329 00b1 00       		.byte	0
 2330 00b2 0E       		.uleb128 0xe
 2331 00b3 2E       		.uleb128 0x2e
 2332 00b4 01       		.byte	0x1
 2333 00b5 3F       		.uleb128 0x3f
 2334 00b6 19       		.uleb128 0x19
 2335 00b7 03       		.uleb128 0x3
 2336 00b8 0E       		.uleb128 0xe
 2337 00b9 3A       		.uleb128 0x3a
 2338 00ba 0B       		.uleb128 0xb
 2339 00bb 3B       		.uleb128 0x3b
 2340 00bc 0B       		.uleb128 0xb
 2341 00bd 27       		.uleb128 0x27
 2342 00be 19       		.uleb128 0x19
 2343 00bf 49       		.uleb128 0x49
 2344 00c0 13       		.uleb128 0x13
 2345 00c1 11       		.uleb128 0x11
 2346 00c2 01       		.uleb128 0x1
 2347 00c3 12       		.uleb128 0x12
 2348 00c4 06       		.uleb128 0x6
 2349 00c5 40       		.uleb128 0x40
 2350 00c6 18       		.uleb128 0x18
 2351 00c7 9742     		.uleb128 0x2117
 2352 00c9 19       		.uleb128 0x19
 2353 00ca 01       		.uleb128 0x1
 2354 00cb 13       		.uleb128 0x13
 2355 00cc 00       		.byte	0
 2356 00cd 00       		.byte	0
 2357 00ce 0F       		.uleb128 0xf
 2358 00cf 2E       		.uleb128 0x2e
 2359 00d0 01       		.byte	0x1
 2360 00d1 3F       		.uleb128 0x3f
 2361 00d2 19       		.uleb128 0x19
 2362 00d3 03       		.uleb128 0x3
 2363 00d4 0E       		.uleb128 0xe
 2364 00d5 3A       		.uleb128 0x3a
 2365 00d6 0B       		.uleb128 0xb
 2366 00d7 3B       		.uleb128 0x3b
 2367 00d8 0B       		.uleb128 0xb
 2368 00d9 27       		.uleb128 0x27
 2369 00da 19       		.uleb128 0x19
 2370 00db 49       		.uleb128 0x49
 2371 00dc 13       		.uleb128 0x13
 2372 00dd 11       		.uleb128 0x11
 2373 00de 01       		.uleb128 0x1
 2374 00df 12       		.uleb128 0x12
 2375 00e0 06       		.uleb128 0x6
 2376 00e1 40       		.uleb128 0x40
 2377 00e2 18       		.uleb128 0x18
 2378 00e3 9642     		.uleb128 0x2116
 2379 00e5 19       		.uleb128 0x19
 2380 00e6 01       		.uleb128 0x1
 2381 00e7 13       		.uleb128 0x13
 2382 00e8 00       		.byte	0
 2383 00e9 00       		.byte	0
 2384 00ea 10       		.uleb128 0x10
 2385 00eb 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 49


 2386 00ec 01       		.byte	0x1
 2387 00ed 3F       		.uleb128 0x3f
 2388 00ee 19       		.uleb128 0x19
 2389 00ef 03       		.uleb128 0x3
 2390 00f0 0E       		.uleb128 0xe
 2391 00f1 3A       		.uleb128 0x3a
 2392 00f2 0B       		.uleb128 0xb
 2393 00f3 3B       		.uleb128 0x3b
 2394 00f4 0B       		.uleb128 0xb
 2395 00f5 49       		.uleb128 0x49
 2396 00f6 13       		.uleb128 0x13
 2397 00f7 11       		.uleb128 0x11
 2398 00f8 01       		.uleb128 0x1
 2399 00f9 12       		.uleb128 0x12
 2400 00fa 06       		.uleb128 0x6
 2401 00fb 40       		.uleb128 0x40
 2402 00fc 18       		.uleb128 0x18
 2403 00fd 9642     		.uleb128 0x2116
 2404 00ff 19       		.uleb128 0x19
 2405 0100 01       		.uleb128 0x1
 2406 0101 13       		.uleb128 0x13
 2407 0102 00       		.byte	0
 2408 0103 00       		.byte	0
 2409 0104 11       		.uleb128 0x11
 2410 0105 34       		.uleb128 0x34
 2411 0106 00       		.byte	0
 2412 0107 03       		.uleb128 0x3
 2413 0108 0E       		.uleb128 0xe
 2414 0109 3A       		.uleb128 0x3a
 2415 010a 0B       		.uleb128 0xb
 2416 010b 3B       		.uleb128 0x3b
 2417 010c 0B       		.uleb128 0xb
 2418 010d 49       		.uleb128 0x49
 2419 010e 13       		.uleb128 0x13
 2420 010f 02       		.uleb128 0x2
 2421 0110 18       		.uleb128 0x18
 2422 0111 00       		.byte	0
 2423 0112 00       		.byte	0
 2424 0113 12       		.uleb128 0x12
 2425 0114 2E       		.uleb128 0x2e
 2426 0115 01       		.byte	0x1
 2427 0116 3F       		.uleb128 0x3f
 2428 0117 19       		.uleb128 0x19
 2429 0118 03       		.uleb128 0x3
 2430 0119 0E       		.uleb128 0xe
 2431 011a 3A       		.uleb128 0x3a
 2432 011b 0B       		.uleb128 0xb
 2433 011c 3B       		.uleb128 0x3b
 2434 011d 0B       		.uleb128 0xb
 2435 011e 27       		.uleb128 0x27
 2436 011f 19       		.uleb128 0x19
 2437 0120 11       		.uleb128 0x11
 2438 0121 01       		.uleb128 0x1
 2439 0122 12       		.uleb128 0x12
 2440 0123 06       		.uleb128 0x6
 2441 0124 40       		.uleb128 0x40
 2442 0125 18       		.uleb128 0x18
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 50


 2443 0126 9642     		.uleb128 0x2116
 2444 0128 19       		.uleb128 0x19
 2445 0129 01       		.uleb128 0x1
 2446 012a 13       		.uleb128 0x13
 2447 012b 00       		.byte	0
 2448 012c 00       		.byte	0
 2449 012d 13       		.uleb128 0x13
 2450 012e 2E       		.uleb128 0x2e
 2451 012f 01       		.byte	0x1
 2452 0130 3F       		.uleb128 0x3f
 2453 0131 19       		.uleb128 0x19
 2454 0132 03       		.uleb128 0x3
 2455 0133 0E       		.uleb128 0xe
 2456 0134 3A       		.uleb128 0x3a
 2457 0135 0B       		.uleb128 0xb
 2458 0136 3B       		.uleb128 0x3b
 2459 0137 05       		.uleb128 0x5
 2460 0138 27       		.uleb128 0x27
 2461 0139 19       		.uleb128 0x19
 2462 013a 11       		.uleb128 0x11
 2463 013b 01       		.uleb128 0x1
 2464 013c 12       		.uleb128 0x12
 2465 013d 06       		.uleb128 0x6
 2466 013e 40       		.uleb128 0x40
 2467 013f 18       		.uleb128 0x18
 2468 0140 9642     		.uleb128 0x2116
 2469 0142 19       		.uleb128 0x19
 2470 0143 01       		.uleb128 0x1
 2471 0144 13       		.uleb128 0x13
 2472 0145 00       		.byte	0
 2473 0146 00       		.byte	0
 2474 0147 14       		.uleb128 0x14
 2475 0148 05       		.uleb128 0x5
 2476 0149 00       		.byte	0
 2477 014a 03       		.uleb128 0x3
 2478 014b 08       		.uleb128 0x8
 2479 014c 3A       		.uleb128 0x3a
 2480 014d 0B       		.uleb128 0xb
 2481 014e 3B       		.uleb128 0x3b
 2482 014f 05       		.uleb128 0x5
 2483 0150 49       		.uleb128 0x49
 2484 0151 13       		.uleb128 0x13
 2485 0152 02       		.uleb128 0x2
 2486 0153 18       		.uleb128 0x18
 2487 0154 00       		.byte	0
 2488 0155 00       		.byte	0
 2489 0156 15       		.uleb128 0x15
 2490 0157 34       		.uleb128 0x34
 2491 0158 00       		.byte	0
 2492 0159 03       		.uleb128 0x3
 2493 015a 0E       		.uleb128 0xe
 2494 015b 3A       		.uleb128 0x3a
 2495 015c 0B       		.uleb128 0xb
 2496 015d 3B       		.uleb128 0x3b
 2497 015e 05       		.uleb128 0x5
 2498 015f 49       		.uleb128 0x49
 2499 0160 13       		.uleb128 0x13
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 51


 2500 0161 02       		.uleb128 0x2
 2501 0162 18       		.uleb128 0x18
 2502 0163 00       		.byte	0
 2503 0164 00       		.byte	0
 2504 0165 16       		.uleb128 0x16
 2505 0166 2E       		.uleb128 0x2e
 2506 0167 01       		.byte	0x1
 2507 0168 3F       		.uleb128 0x3f
 2508 0169 19       		.uleb128 0x19
 2509 016a 03       		.uleb128 0x3
 2510 016b 0E       		.uleb128 0xe
 2511 016c 3A       		.uleb128 0x3a
 2512 016d 0B       		.uleb128 0xb
 2513 016e 3B       		.uleb128 0x3b
 2514 016f 05       		.uleb128 0x5
 2515 0170 27       		.uleb128 0x27
 2516 0171 19       		.uleb128 0x19
 2517 0172 49       		.uleb128 0x49
 2518 0173 13       		.uleb128 0x13
 2519 0174 11       		.uleb128 0x11
 2520 0175 01       		.uleb128 0x1
 2521 0176 12       		.uleb128 0x12
 2522 0177 06       		.uleb128 0x6
 2523 0178 40       		.uleb128 0x40
 2524 0179 18       		.uleb128 0x18
 2525 017a 9642     		.uleb128 0x2116
 2526 017c 19       		.uleb128 0x19
 2527 017d 01       		.uleb128 0x1
 2528 017e 13       		.uleb128 0x13
 2529 017f 00       		.byte	0
 2530 0180 00       		.byte	0
 2531 0181 17       		.uleb128 0x17
 2532 0182 2E       		.uleb128 0x2e
 2533 0183 01       		.byte	0x1
 2534 0184 3F       		.uleb128 0x3f
 2535 0185 19       		.uleb128 0x19
 2536 0186 03       		.uleb128 0x3
 2537 0187 0E       		.uleb128 0xe
 2538 0188 3A       		.uleb128 0x3a
 2539 0189 0B       		.uleb128 0xb
 2540 018a 3B       		.uleb128 0x3b
 2541 018b 05       		.uleb128 0x5
 2542 018c 27       		.uleb128 0x27
 2543 018d 19       		.uleb128 0x19
 2544 018e 11       		.uleb128 0x11
 2545 018f 01       		.uleb128 0x1
 2546 0190 12       		.uleb128 0x12
 2547 0191 06       		.uleb128 0x6
 2548 0192 40       		.uleb128 0x40
 2549 0193 18       		.uleb128 0x18
 2550 0194 9642     		.uleb128 0x2116
 2551 0196 19       		.uleb128 0x19
 2552 0197 00       		.byte	0
 2553 0198 00       		.byte	0
 2554 0199 00       		.byte	0
 2555              		.section	.debug_aranges,"",%progbits
 2556 0000 74000000 		.4byte	0x74
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 52


 2557 0004 0200     		.2byte	0x2
 2558 0006 00000000 		.4byte	.Ldebug_info0
 2559 000a 04       		.byte	0x4
 2560 000b 00       		.byte	0
 2561 000c 0000     		.2byte	0
 2562 000e 0000     		.2byte	0
 2563 0010 00000000 		.4byte	.LFB0
 2564 0014 6C000000 		.4byte	.LFE0-.LFB0
 2565 0018 00000000 		.4byte	.LFB1
 2566 001c 3A000000 		.4byte	.LFE1-.LFB1
 2567 0020 00000000 		.4byte	.LFB2
 2568 0024 3A000000 		.4byte	.LFE2-.LFB2
 2569 0028 00000000 		.4byte	.LFB3
 2570 002c A0000000 		.4byte	.LFE3-.LFB3
 2571 0030 00000000 		.4byte	.LFB4
 2572 0034 3E000000 		.4byte	.LFE4-.LFB4
 2573 0038 00000000 		.4byte	.LFB5
 2574 003c 5C000000 		.4byte	.LFE5-.LFB5
 2575 0040 00000000 		.4byte	.LFB6
 2576 0044 88000000 		.4byte	.LFE6-.LFB6
 2577 0048 00000000 		.4byte	.LFB7
 2578 004c 7C040000 		.4byte	.LFE7-.LFB7
 2579 0050 00000000 		.4byte	.LFB8
 2580 0054 52000000 		.4byte	.LFE8-.LFB8
 2581 0058 00000000 		.4byte	.LFB9
 2582 005c 2A000000 		.4byte	.LFE9-.LFB9
 2583 0060 00000000 		.4byte	.LFB10
 2584 0064 34000000 		.4byte	.LFE10-.LFB10
 2585 0068 00000000 		.4byte	.LFB11
 2586 006c 1E000000 		.4byte	.LFE11-.LFB11
 2587 0070 00000000 		.4byte	0
 2588 0074 00000000 		.4byte	0
 2589              		.section	.debug_ranges,"",%progbits
 2590              	.Ldebug_ranges0:
 2591 0000 00000000 		.4byte	.LFB0
 2592 0004 6C000000 		.4byte	.LFE0
 2593 0008 00000000 		.4byte	.LFB1
 2594 000c 3A000000 		.4byte	.LFE1
 2595 0010 00000000 		.4byte	.LFB2
 2596 0014 3A000000 		.4byte	.LFE2
 2597 0018 00000000 		.4byte	.LFB3
 2598 001c A0000000 		.4byte	.LFE3
 2599 0020 00000000 		.4byte	.LFB4
 2600 0024 3E000000 		.4byte	.LFE4
 2601 0028 00000000 		.4byte	.LFB5
 2602 002c 5C000000 		.4byte	.LFE5
 2603 0030 00000000 		.4byte	.LFB6
 2604 0034 88000000 		.4byte	.LFE6
 2605 0038 00000000 		.4byte	.LFB7
 2606 003c 7C040000 		.4byte	.LFE7
 2607 0040 00000000 		.4byte	.LFB8
 2608 0044 52000000 		.4byte	.LFE8
 2609 0048 00000000 		.4byte	.LFB9
 2610 004c 2A000000 		.4byte	.LFE9
 2611 0050 00000000 		.4byte	.LFB10
 2612 0054 34000000 		.4byte	.LFE10
 2613 0058 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 53


 2614 005c 1E000000 		.4byte	.LFE11
 2615 0060 00000000 		.4byte	0
 2616 0064 00000000 		.4byte	0
 2617              		.section	.debug_line,"",%progbits
 2618              	.Ldebug_line0:
 2619 0000 D2020000 		.section	.debug_str,"MS",%progbits,1
 2619      02002600 
 2619      00000201 
 2619      FB0E0D00 
 2619      01010101 
 2620              	.LASF28:
 2621 0000 7474635F 		.ascii	"ttc_step\000"
 2621      73746570 
 2621      00
 2622              	.LASF23:
 2623 0009 7474635F 		.ascii	"ttc_take_input\000"
 2623      74616B65 
 2623      5F696E70 
 2623      757400
 2624              	.LASF34:
 2625 0018 433A5C55 		.ascii	"C:\\Users\\Andrew\\Dropbox (Personal)\\MIT\\MIT 201"
 2625      73657273 
 2625      5C416E64 
 2625      7265775C 
 2625      44726F70 
 2626 0046 36205370 		.ascii	"6 Spring\\6115\\Final Project\\Code\\VGA\\Tic Tac T"
 2626      72696E67 
 2626      5C363131 
 2626      355C4669 
 2626      6E616C20 
 2627 0074 6F652E63 		.ascii	"oe.cydsn\000"
 2627      7964736E 
 2627      00
 2628              	.LASF17:
 2629 007d 76616C75 		.ascii	"value\000"
 2629      6500
 2630              	.LASF35:
 2631 0083 7469635F 		.ascii	"tic_tac_toe\000"
 2631      7461635F 
 2631      746F6500 
 2632              	.LASF32:
 2633 008f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2633      4320342E 
 2633      392E3320 
 2633      32303135 
 2633      30333033 
 2634 00c2 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2634      20726576 
 2634      6973696F 
 2634      6E203232 
 2634      31323230 
 2635 00f5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2635      66756E63 
 2635      74696F6E 
 2635      2D736563 
 2635      74696F6E 
 2636              	.LASF15:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 54


 2637 011d 67616D65 		.ascii	"game_not_won\000"
 2637      5F6E6F74 
 2637      5F776F6E 
 2637      00
 2638              	.LASF22:
 2639 012a 7474635F 		.ascii	"ttc_change_player\000"
 2639      6368616E 
 2639      67655F70 
 2639      6C617965 
 2639      7200
 2640              	.LASF12:
 2641 013c 64696D65 		.ascii	"dimension\000"
 2641      6E73696F 
 2641      6E00
 2642              	.LASF30:
 2643 0146 636F6F72 		.ascii	"coords\000"
 2643      647300
 2644              	.LASF25:
 2645 014d 7474635F 		.ascii	"ttc_print_grid\000"
 2645      7072696E 
 2645      745F6772 
 2645      696400
 2646              	.LASF11:
 2647 015c 73697A65 		.ascii	"size\000"
 2647      00
 2648              	.LASF5:
 2649 0161 6C6F6E67 		.ascii	"long unsigned int\000"
 2649      20756E73 
 2649      69676E65 
 2649      6420696E 
 2649      7400
 2650              	.LASF3:
 2651 0173 73686F72 		.ascii	"short unsigned int\000"
 2651      7420756E 
 2651      7369676E 
 2651      65642069 
 2651      6E7400
 2652              	.LASF1:
 2653 0186 756E7369 		.ascii	"unsigned char\000"
 2653      676E6564 
 2653      20636861 
 2653      7200
 2654              	.LASF13:
 2655 0194 706C6179 		.ascii	"player\000"
 2655      657200
 2656              	.LASF24:
 2657 019b 73747232 		.ascii	"str2\000"
 2657      00
 2658              	.LASF14:
 2659 01a0 7475726E 		.ascii	"turn\000"
 2659      00
 2660              	.LASF27:
 2661 01a5 636F6E6E 		.ascii	"connected\000"
 2661      65637465 
 2661      6400
 2662              	.LASF18:
 2663 01af 7474635F 		.ascii	"ttc_set_grid\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 55


 2663      7365745F 
 2663      67726964 
 2663      00
 2664              	.LASF8:
 2665 01bc 756E7369 		.ascii	"unsigned int\000"
 2665      676E6564 
 2665      20696E74 
 2665      00
 2666              	.LASF29:
 2667 01c9 7474635F 		.ascii	"ttc_play\000"
 2667      706C6179 
 2667      00
 2668              	.LASF7:
 2669 01d2 6C6F6E67 		.ascii	"long long unsigned int\000"
 2669      206C6F6E 
 2669      6720756E 
 2669      7369676E 
 2669      65642069 
 2670              	.LASF26:
 2671 01e9 7474635F 		.ascii	"ttc_check_win\000"
 2671      63686563 
 2671      6B5F7769 
 2671      6E00
 2672              	.LASF31:
 2673 01f7 7474635F 		.ascii	"ttc_play_game\000"
 2673      706C6179 
 2673      5F67616D 
 2673      6500
 2674              	.LASF36:
 2675 0205 7474635F 		.ascii	"ttc_free\000"
 2675      66726565 
 2675      00
 2676              	.LASF9:
 2677 020e 73697A65 		.ascii	"sizetype\000"
 2677      74797065 
 2677      00
 2678              	.LASF6:
 2679 0217 6C6F6E67 		.ascii	"long long int\000"
 2679      206C6F6E 
 2679      6720696E 
 2679      7400
 2680              	.LASF19:
 2681 0225 7474635F 		.ascii	"ttc_get_grid\000"
 2681      6765745F 
 2681      67726964 
 2681      00
 2682              	.LASF20:
 2683 0232 7474635F 		.ascii	"ttc_check_valid\000"
 2683      63686563 
 2683      6B5F7661 
 2683      6C696400 
 2684              	.LASF33:
 2685 0242 2E5C7469 		.ascii	".\\tic_tac_toe.c\000"
 2685      635F7461 
 2685      635F746F 
 2685      652E6300 
 2686              	.LASF2:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccQ0gaff.s 			page 56


 2687 0252 73686F72 		.ascii	"short int\000"
 2687      7420696E 
 2687      7400
 2688              	.LASF16:
 2689 025c 67726964 		.ascii	"grid\000"
 2689      00
 2690              	.LASF4:
 2691 0261 6C6F6E67 		.ascii	"long int\000"
 2691      20696E74 
 2691      00
 2692              	.LASF10:
 2693 026a 63686172 		.ascii	"char\000"
 2693      00
 2694              	.LASF0:
 2695 026f 7369676E 		.ascii	"signed char\000"
 2695      65642063 
 2695      68617200 
 2696              	.LASF21:
 2697 027b 7474635F 		.ascii	"ttc_init\000"
 2697      696E6974 
 2697      00
 2698              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
