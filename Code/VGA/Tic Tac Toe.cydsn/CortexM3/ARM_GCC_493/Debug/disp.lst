ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"disp.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.waiter,"ax",%progbits
  19              		.align	2
  20              		.global	waiter
  21              		.thumb
  22              		.thumb_func
  23              		.type	waiter, %function
  24              	waiter:
  25              	.LFB63:
  26              		.file 1 ".\\disp.c"
   1:.\disp.c      **** /* ========================================
   2:.\disp.c      ****  *
   3:.\disp.c      ****  * Copyright HUDING ENTERPRISES, 2016
   4:.\disp.c      ****  * All Rights Reserved
   5:.\disp.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\disp.c      ****  *
   7:.\disp.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\disp.c      ****  * WHICH IS THE PROPERTY OF Andrew Xia.
   9:.\disp.c      ****  *
  10:.\disp.c      ****  * ========================================
  11:.\disp.c      **** */
  12:.\disp.c      **** 
  13:.\disp.c      **** //this file contains all relevant display structures and methods
  14:.\disp.c      **** 
  15:.\disp.c      **** #ifndef DEVICE_H
  16:.\disp.c      **** #define DEVICE_H
  17:.\disp.c      **** #include <project.h>
  18:.\disp.c      **** 
  19:.\disp.c      **** #endif
  20:.\disp.c      **** 
  21:.\disp.c      **** struct disp_grid_81{ //for 32x24 grid
  22:.\disp.c      ****     uint8 matrix[32][24];
  23:.\disp.c      ****     //uint8 damn
  24:.\disp.c      **** };
  25:.\disp.c      **** 
  26:.\disp.c      **** void waiter( int seconds ){   // dumb wait
  27              		.loc 1 26 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 2


  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 85B0     		sub	sp, sp, #20
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  27:.\disp.c      ****     int i,j;
  28:.\disp.c      ****     for (i = 0; i < seconds*10; i++){
  40              		.loc 1 28 0
  41 0008 0023     		movs	r3, #0
  42 000a FB60     		str	r3, [r7, #12]
  43 000c 0FE0     		b	.L2
  44              	.L5:
  29:.\disp.c      ****         for (j = 0; j < seconds*100; j++){
  45              		.loc 1 29 0
  46 000e 0023     		movs	r3, #0
  47 0010 BB60     		str	r3, [r7, #8]
  48 0012 02E0     		b	.L3
  49              	.L4:
  50              		.loc 1 29 0 is_stmt 0 discriminator 3
  51 0014 BB68     		ldr	r3, [r7, #8]
  52 0016 0133     		adds	r3, r3, #1
  53 0018 BB60     		str	r3, [r7, #8]
  54              	.L3:
  55              		.loc 1 29 0 discriminator 1
  56 001a 7B68     		ldr	r3, [r7, #4]
  57 001c 6422     		movs	r2, #100
  58 001e 02FB03F2 		mul	r2, r2, r3
  59 0022 BB68     		ldr	r3, [r7, #8]
  60 0024 9A42     		cmp	r2, r3
  61 0026 F5DC     		bgt	.L4
  28:.\disp.c      ****         for (j = 0; j < seconds*100; j++){
  62              		.loc 1 28 0 is_stmt 1 discriminator 2
  63 0028 FB68     		ldr	r3, [r7, #12]
  64 002a 0133     		adds	r3, r3, #1
  65 002c FB60     		str	r3, [r7, #12]
  66              	.L2:
  28:.\disp.c      ****         for (j = 0; j < seconds*100; j++){
  67              		.loc 1 28 0 is_stmt 0 discriminator 1
  68 002e 7A68     		ldr	r2, [r7, #4]
  69 0030 1346     		mov	r3, r2
  70 0032 9B00     		lsls	r3, r3, #2
  71 0034 1344     		add	r3, r3, r2
  72 0036 5B00     		lsls	r3, r3, #1
  73 0038 1A46     		mov	r2, r3
  74 003a FB68     		ldr	r3, [r7, #12]
  75 003c 9A42     		cmp	r2, r3
  76 003e E6DC     		bgt	.L5
  30:.\disp.c      ****         }
  31:.\disp.c      ****     }
  32:.\disp.c      **** }
  77              		.loc 1 32 0 is_stmt 1
  78 0040 1437     		adds	r7, r7, #20
  79              		.cfi_def_cfa_offset 4
  80 0042 BD46     		mov	sp, r7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 3


  81              		.cfi_def_cfa_register 13
  82              		@ sp needed
  83 0044 5DF8047B 		ldr	r7, [sp], #4
  84              		.cfi_restore 7
  85              		.cfi_def_cfa_offset 0
  86 0048 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE63:
  89              		.size	waiter, .-waiter
  90 004a 00BF     		.section	.text.disp_grid_init,"ax",%progbits
  91              		.align	2
  92              		.global	disp_grid_init
  93              		.thumb
  94              		.thumb_func
  95              		.type	disp_grid_init, %function
  96              	disp_grid_init:
  97              	.LFB64:
  33:.\disp.c      **** 
  34:.\disp.c      **** void disp_grid_init(struct disp_grid_81* disp, uint8 color){ 
  98              		.loc 1 34 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 16
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103 0000 80B4     		push	{r7}
 104              		.cfi_def_cfa_offset 4
 105              		.cfi_offset 7, -4
 106 0002 85B0     		sub	sp, sp, #20
 107              		.cfi_def_cfa_offset 24
 108 0004 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110 0006 7860     		str	r0, [r7, #4]
 111 0008 0B46     		mov	r3, r1
 112 000a FB70     		strb	r3, [r7, #3]
  35:.\disp.c      ****     int row,col;
  36:.\disp.c      ****     for (row = 0; row < 32; row++){
 113              		.loc 1 36 0
 114 000c 0023     		movs	r3, #0
 115 000e FB60     		str	r3, [r7, #12]
 116 0010 16E0     		b	.L7
 117              	.L10:
  37:.\disp.c      ****         for (col = 0; col < 24; col++){
 118              		.loc 1 37 0
 119 0012 0023     		movs	r3, #0
 120 0014 BB60     		str	r3, [r7, #8]
 121 0016 0DE0     		b	.L8
 122              	.L9:
  38:.\disp.c      ****             disp->matrix[row][col] = color; // init as please
 123              		.loc 1 38 0 discriminator 3
 124 0018 7968     		ldr	r1, [r7, #4]
 125 001a FA68     		ldr	r2, [r7, #12]
 126 001c 1346     		mov	r3, r2
 127 001e 5B00     		lsls	r3, r3, #1
 128 0020 1344     		add	r3, r3, r2
 129 0022 DB00     		lsls	r3, r3, #3
 130 0024 BA68     		ldr	r2, [r7, #8]
 131 0026 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 4


 132 0028 0B44     		add	r3, r3, r1
 133 002a FA78     		ldrb	r2, [r7, #3]
 134 002c 1A70     		strb	r2, [r3]
  37:.\disp.c      ****         for (col = 0; col < 24; col++){
 135              		.loc 1 37 0 discriminator 3
 136 002e BB68     		ldr	r3, [r7, #8]
 137 0030 0133     		adds	r3, r3, #1
 138 0032 BB60     		str	r3, [r7, #8]
 139              	.L8:
  37:.\disp.c      ****         for (col = 0; col < 24; col++){
 140              		.loc 1 37 0 is_stmt 0 discriminator 1
 141 0034 BB68     		ldr	r3, [r7, #8]
 142 0036 172B     		cmp	r3, #23
 143 0038 EEDD     		ble	.L9
  36:.\disp.c      ****         for (col = 0; col < 24; col++){
 144              		.loc 1 36 0 is_stmt 1 discriminator 2
 145 003a FB68     		ldr	r3, [r7, #12]
 146 003c 0133     		adds	r3, r3, #1
 147 003e FB60     		str	r3, [r7, #12]
 148              	.L7:
  36:.\disp.c      ****         for (col = 0; col < 24; col++){
 149              		.loc 1 36 0 is_stmt 0 discriminator 1
 150 0040 FB68     		ldr	r3, [r7, #12]
 151 0042 1F2B     		cmp	r3, #31
 152 0044 E5DD     		ble	.L10
  39:.\disp.c      ****         }
  40:.\disp.c      ****     }
  41:.\disp.c      ****     //UART_PutChar(0x03); // red
  42:.\disp.c      **** }
 153              		.loc 1 42 0 is_stmt 1
 154 0046 1437     		adds	r7, r7, #20
 155              		.cfi_def_cfa_offset 4
 156 0048 BD46     		mov	sp, r7
 157              		.cfi_def_cfa_register 13
 158              		@ sp needed
 159 004a 5DF8047B 		ldr	r7, [sp], #4
 160              		.cfi_restore 7
 161              		.cfi_def_cfa_offset 0
 162 004e 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE64:
 165              		.size	disp_grid_init, .-disp_grid_init
 166              		.section	.text.disp_grid_draw_square,"ax",%progbits
 167              		.align	2
 168              		.global	disp_grid_draw_square
 169              		.thumb
 170              		.thumb_func
 171              		.type	disp_grid_draw_square, %function
 172              	disp_grid_draw_square:
 173              	.LFB65:
  43:.\disp.c      **** 
  44:.\disp.c      **** void disp_grid_draw_square(struct disp_grid_81* disp, int x_start, int y_start, int x_width, int y_
 174              		.loc 1 44 0
 175              		.cfi_startproc
 176              		@ args = 8, pretend = 0, frame = 24
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178              		@ link register save eliminated.
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 5


 179 0000 80B4     		push	{r7}
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
 182 0002 87B0     		sub	sp, sp, #28
 183              		.cfi_def_cfa_offset 32
 184 0004 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 186 0006 F860     		str	r0, [r7, #12]
 187 0008 B960     		str	r1, [r7, #8]
 188 000a 7A60     		str	r2, [r7, #4]
 189 000c 3B60     		str	r3, [r7]
  45:.\disp.c      ****     int x,y;
  46:.\disp.c      ****     for (x = x_start; x < x_start + x_width; x++){
 190              		.loc 1 46 0
 191 000e BB68     		ldr	r3, [r7, #8]
 192 0010 7B61     		str	r3, [r7, #20]
 193 0012 1AE0     		b	.L12
 194              	.L15:
  47:.\disp.c      ****         for (y = y_start; y < y_start + y_height; y++){
 195              		.loc 1 47 0
 196 0014 7B68     		ldr	r3, [r7, #4]
 197 0016 3B61     		str	r3, [r7, #16]
 198 0018 0EE0     		b	.L13
 199              	.L14:
  48:.\disp.c      ****             disp->matrix[x][y] = color;
 200              		.loc 1 48 0 discriminator 3
 201 001a F968     		ldr	r1, [r7, #12]
 202 001c 7A69     		ldr	r2, [r7, #20]
 203 001e 1346     		mov	r3, r2
 204 0020 5B00     		lsls	r3, r3, #1
 205 0022 1344     		add	r3, r3, r2
 206 0024 DB00     		lsls	r3, r3, #3
 207 0026 3A69     		ldr	r2, [r7, #16]
 208 0028 1344     		add	r3, r3, r2
 209 002a 0B44     		add	r3, r3, r1
 210 002c 97F82420 		ldrb	r2, [r7, #36]
 211 0030 1A70     		strb	r2, [r3]
  47:.\disp.c      ****         for (y = y_start; y < y_start + y_height; y++){
 212              		.loc 1 47 0 discriminator 3
 213 0032 3B69     		ldr	r3, [r7, #16]
 214 0034 0133     		adds	r3, r3, #1
 215 0036 3B61     		str	r3, [r7, #16]
 216              	.L13:
  47:.\disp.c      ****         for (y = y_start; y < y_start + y_height; y++){
 217              		.loc 1 47 0 is_stmt 0 discriminator 1
 218 0038 7A68     		ldr	r2, [r7, #4]
 219 003a 3B6A     		ldr	r3, [r7, #32]
 220 003c 1A44     		add	r2, r2, r3
 221 003e 3B69     		ldr	r3, [r7, #16]
 222 0040 9A42     		cmp	r2, r3
 223 0042 EADC     		bgt	.L14
  46:.\disp.c      ****         for (y = y_start; y < y_start + y_height; y++){
 224              		.loc 1 46 0 is_stmt 1 discriminator 2
 225 0044 7B69     		ldr	r3, [r7, #20]
 226 0046 0133     		adds	r3, r3, #1
 227 0048 7B61     		str	r3, [r7, #20]
 228              	.L12:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 6


  46:.\disp.c      ****         for (y = y_start; y < y_start + y_height; y++){
 229              		.loc 1 46 0 is_stmt 0 discriminator 1
 230 004a BA68     		ldr	r2, [r7, #8]
 231 004c 3B68     		ldr	r3, [r7]
 232 004e 1A44     		add	r2, r2, r3
 233 0050 7B69     		ldr	r3, [r7, #20]
 234 0052 9A42     		cmp	r2, r3
 235 0054 DEDC     		bgt	.L15
  49:.\disp.c      ****         }
  50:.\disp.c      ****     }
  51:.\disp.c      **** }
 236              		.loc 1 51 0 is_stmt 1
 237 0056 1C37     		adds	r7, r7, #28
 238              		.cfi_def_cfa_offset 4
 239 0058 BD46     		mov	sp, r7
 240              		.cfi_def_cfa_register 13
 241              		@ sp needed
 242 005a 5DF8047B 		ldr	r7, [sp], #4
 243              		.cfi_restore 7
 244              		.cfi_def_cfa_offset 0
 245 005e 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE65:
 248              		.size	disp_grid_draw_square, .-disp_grid_draw_square
 249              		.section	.text.disp_grid_draw_xia,"ax",%progbits
 250              		.align	2
 251              		.global	disp_grid_draw_xia
 252              		.thumb
 253              		.thumb_func
 254              		.type	disp_grid_draw_xia, %function
 255              	disp_grid_draw_xia:
 256              	.LFB66:
  52:.\disp.c      **** 
  53:.\disp.c      **** void disp_grid_draw_xia(struct disp_grid_81* disp, int x_start, int y_start, uint8 color){ // displ
 257              		.loc 1 53 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 16
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 86B0     		sub	sp, sp, #24
 266              		.cfi_def_cfa_offset 32
 267 0004 02AF     		add	r7, sp, #8
 268              		.cfi_def_cfa 7, 24
 269 0006 F860     		str	r0, [r7, #12]
 270 0008 B960     		str	r1, [r7, #8]
 271 000a 7A60     		str	r2, [r7, #4]
 272 000c FB70     		strb	r3, [r7, #3]
  54:.\disp.c      ****     disp_grid_draw_square(disp,x_start,y_start,5,1,color);
 273              		.loc 1 54 0
 274 000e 0123     		movs	r3, #1
 275 0010 0093     		str	r3, [sp]
 276 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 277 0014 0193     		str	r3, [sp, #4]
 278 0016 F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 7


 279 0018 B968     		ldr	r1, [r7, #8]
 280 001a 7A68     		ldr	r2, [r7, #4]
 281 001c 0523     		movs	r3, #5
 282 001e FFF7FEFF 		bl	disp_grid_draw_square
  55:.\disp.c      ****     disp_grid_draw_square(disp,x_start+2,y_start+1,1,6,color);
 283              		.loc 1 55 0
 284 0022 BB68     		ldr	r3, [r7, #8]
 285 0024 991C     		adds	r1, r3, #2
 286 0026 7B68     		ldr	r3, [r7, #4]
 287 0028 5A1C     		adds	r2, r3, #1
 288 002a 0623     		movs	r3, #6
 289 002c 0093     		str	r3, [sp]
 290 002e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 291 0030 0193     		str	r3, [sp, #4]
 292 0032 F868     		ldr	r0, [r7, #12]
 293 0034 0123     		movs	r3, #1
 294 0036 FFF7FEFF 		bl	disp_grid_draw_square
  56:.\disp.c      ****     disp_grid_draw_square(disp,x_start+3,y_start+3,2,1,color);
 295              		.loc 1 56 0
 296 003a BB68     		ldr	r3, [r7, #8]
 297 003c D91C     		adds	r1, r3, #3
 298 003e 7B68     		ldr	r3, [r7, #4]
 299 0040 DA1C     		adds	r2, r3, #3
 300 0042 0123     		movs	r3, #1
 301 0044 0093     		str	r3, [sp]
 302 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 303 0048 0193     		str	r3, [sp, #4]
 304 004a F868     		ldr	r0, [r7, #12]
 305 004c 0223     		movs	r3, #2
 306 004e FFF7FEFF 		bl	disp_grid_draw_square
  57:.\disp.c      ****     disp->matrix[x_start+4][y_start+4] = color;
 307              		.loc 1 57 0
 308 0052 BB68     		ldr	r3, [r7, #8]
 309 0054 1A1D     		adds	r2, r3, #4
 310 0056 7B68     		ldr	r3, [r7, #4]
 311 0058 181D     		adds	r0, r3, #4
 312 005a F968     		ldr	r1, [r7, #12]
 313 005c 1346     		mov	r3, r2
 314 005e 5B00     		lsls	r3, r3, #1
 315 0060 1344     		add	r3, r3, r2
 316 0062 DB00     		lsls	r3, r3, #3
 317 0064 0344     		add	r3, r3, r0
 318 0066 0B44     		add	r3, r3, r1
 319 0068 FA78     		ldrb	r2, [r7, #3]
 320 006a 1A70     		strb	r2, [r3]
  58:.\disp.c      **** }
 321              		.loc 1 58 0
 322 006c 1037     		adds	r7, r7, #16
 323              		.cfi_def_cfa_offset 8
 324 006e BD46     		mov	sp, r7
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 0070 80BD     		pop	{r7, pc}
 328              		.cfi_endproc
 329              	.LFE66:
 330              		.size	disp_grid_draw_xia, .-disp_grid_draw_xia
 331 0072 00BF     		.section	.text.disp_grid_draw_hu,"ax",%progbits
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 8


 332              		.align	2
 333              		.global	disp_grid_draw_hu
 334              		.thumb
 335              		.thumb_func
 336              		.type	disp_grid_draw_hu, %function
 337              	disp_grid_draw_hu:
 338              	.LFB67:
  59:.\disp.c      **** 
  60:.\disp.c      **** void disp_grid_draw_hu(struct disp_grid_81* disp){ // draws black H U on board
 339              		.loc 1 60 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 8
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 80B5     		push	{r7, lr}
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 84B0     		sub	sp, sp, #16
 348              		.cfi_def_cfa_offset 24
 349 0004 02AF     		add	r7, sp, #8
 350              		.cfi_def_cfa 7, 16
 351 0006 7860     		str	r0, [r7, #4]
  61:.\disp.c      ****     disp_grid_draw_square(disp,5,5,2,10,0x00); //H
 352              		.loc 1 61 0
 353 0008 0A23     		movs	r3, #10
 354 000a 0093     		str	r3, [sp]
 355 000c 0023     		movs	r3, #0
 356 000e 0193     		str	r3, [sp, #4]
 357 0010 7868     		ldr	r0, [r7, #4]
 358 0012 0521     		movs	r1, #5
 359 0014 0522     		movs	r2, #5
 360 0016 0223     		movs	r3, #2
 361 0018 FFF7FEFF 		bl	disp_grid_draw_square
  62:.\disp.c      ****     disp_grid_draw_square(disp,10,5,2,10,0x00);
 362              		.loc 1 62 0
 363 001c 0A23     		movs	r3, #10
 364 001e 0093     		str	r3, [sp]
 365 0020 0023     		movs	r3, #0
 366 0022 0193     		str	r3, [sp, #4]
 367 0024 7868     		ldr	r0, [r7, #4]
 368 0026 0A21     		movs	r1, #10
 369 0028 0522     		movs	r2, #5
 370 002a 0223     		movs	r3, #2
 371 002c FFF7FEFF 		bl	disp_grid_draw_square
  63:.\disp.c      ****     disp_grid_draw_square(disp,7,10,3,2,0x00);
 372              		.loc 1 63 0
 373 0030 0223     		movs	r3, #2
 374 0032 0093     		str	r3, [sp]
 375 0034 0023     		movs	r3, #0
 376 0036 0193     		str	r3, [sp, #4]
 377 0038 7868     		ldr	r0, [r7, #4]
 378 003a 0721     		movs	r1, #7
 379 003c 0A22     		movs	r2, #10
 380 003e 0323     		movs	r3, #3
 381 0040 FFF7FEFF 		bl	disp_grid_draw_square
  64:.\disp.c      ****     disp_grid_draw_square(disp,14,5,2,10,0x00); //U
 382              		.loc 1 64 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 9


 383 0044 0A23     		movs	r3, #10
 384 0046 0093     		str	r3, [sp]
 385 0048 0023     		movs	r3, #0
 386 004a 0193     		str	r3, [sp, #4]
 387 004c 7868     		ldr	r0, [r7, #4]
 388 004e 0E21     		movs	r1, #14
 389 0050 0522     		movs	r2, #5
 390 0052 0223     		movs	r3, #2
 391 0054 FFF7FEFF 		bl	disp_grid_draw_square
  65:.\disp.c      ****     disp_grid_draw_square(disp,19,5,2,10,0x00);
 392              		.loc 1 65 0
 393 0058 0A23     		movs	r3, #10
 394 005a 0093     		str	r3, [sp]
 395 005c 0023     		movs	r3, #0
 396 005e 0193     		str	r3, [sp, #4]
 397 0060 7868     		ldr	r0, [r7, #4]
 398 0062 1321     		movs	r1, #19
 399 0064 0522     		movs	r2, #5
 400 0066 0223     		movs	r3, #2
 401 0068 FFF7FEFF 		bl	disp_grid_draw_square
  66:.\disp.c      ****     disp_grid_draw_square(disp,16,13,3,2,0x00);
 402              		.loc 1 66 0
 403 006c 0223     		movs	r3, #2
 404 006e 0093     		str	r3, [sp]
 405 0070 0023     		movs	r3, #0
 406 0072 0193     		str	r3, [sp, #4]
 407 0074 7868     		ldr	r0, [r7, #4]
 408 0076 1021     		movs	r1, #16
 409 0078 0D22     		movs	r2, #13
 410 007a 0323     		movs	r3, #3
 411 007c FFF7FEFF 		bl	disp_grid_draw_square
  67:.\disp.c      **** }
 412              		.loc 1 67 0
 413 0080 0837     		adds	r7, r7, #8
 414              		.cfi_def_cfa_offset 8
 415 0082 BD46     		mov	sp, r7
 416              		.cfi_def_cfa_register 13
 417              		@ sp needed
 418 0084 80BD     		pop	{r7, pc}
 419              		.cfi_endproc
 420              	.LFE67:
 421              		.size	disp_grid_draw_hu, .-disp_grid_draw_hu
 422 0086 00BF     		.section	.text.disp_grid_ttc_getval,"ax",%progbits
 423              		.align	2
 424              		.global	disp_grid_ttc_getval
 425              		.thumb
 426              		.thumb_func
 427              		.type	disp_grid_ttc_getval, %function
 428              	disp_grid_ttc_getval:
 429              	.LFB68:
  68:.\disp.c      **** 
  69:.\disp.c      **** uint8 disp_grid_ttc_getval(struct disp_grid_81* disp, int i){
 430              		.loc 1 69 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 24
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434              		@ link register save eliminated.
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 10


 435 0000 80B4     		push	{r7}
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 87B0     		sub	sp, sp, #28
 439              		.cfi_def_cfa_offset 32
 440 0004 00AF     		add	r7, sp, #0
 441              		.cfi_def_cfa_register 7
 442 0006 7860     		str	r0, [r7, #4]
 443 0008 3960     		str	r1, [r7]
  70:.\disp.c      ****     int x,y; // first, we want to get the x,y coords
  71:.\disp.c      ****     if (i < 16 && i >= 0){ //z = 0
 444              		.loc 1 71 0
 445 000a 3B68     		ldr	r3, [r7]
 446 000c 0F2B     		cmp	r3, #15
 447 000e 1DDC     		bgt	.L19
 448              		.loc 1 71 0 is_stmt 0 discriminator 1
 449 0010 3B68     		ldr	r3, [r7]
 450 0012 002B     		cmp	r3, #0
 451 0014 1ADB     		blt	.L19
  72:.\disp.c      ****         x = i%4;
 452              		.loc 1 72 0 is_stmt 1
 453 0016 3A68     		ldr	r2, [r7]
 454 0018 464B     		ldr	r3, .L32
 455 001a 1340     		ands	r3, r3, r2
 456 001c 002B     		cmp	r3, #0
 457 001e 03DA     		bge	.L20
 458 0020 013B     		subs	r3, r3, #1
 459 0022 63F00303 		orn	r3, r3, #3
 460 0026 0133     		adds	r3, r3, #1
 461              	.L20:
 462 0028 7B61     		str	r3, [r7, #20]
  73:.\disp.c      ****         y = (i-x)/4; // we want to start at 1,1
 463              		.loc 1 73 0
 464 002a 3A68     		ldr	r2, [r7]
 465 002c 7B69     		ldr	r3, [r7, #20]
 466 002e D31A     		subs	r3, r2, r3
 467 0030 002B     		cmp	r3, #0
 468 0032 00DA     		bge	.L21
 469 0034 0333     		adds	r3, r3, #3
 470              	.L21:
 471 0036 9B10     		asrs	r3, r3, #2
 472 0038 3B61     		str	r3, [r7, #16]
  74:.\disp.c      ****         x = 2*x + 1;
 473              		.loc 1 74 0
 474 003a 7B69     		ldr	r3, [r7, #20]
 475 003c 5B00     		lsls	r3, r3, #1
 476 003e 0133     		adds	r3, r3, #1
 477 0040 7B61     		str	r3, [r7, #20]
  75:.\disp.c      ****         y = 2*y + 1;
 478              		.loc 1 75 0
 479 0042 3B69     		ldr	r3, [r7, #16]
 480 0044 5B00     		lsls	r3, r3, #1
 481 0046 0133     		adds	r3, r3, #1
 482 0048 3B61     		str	r3, [r7, #16]
 483 004a 61E0     		b	.L22
 484              	.L19:
  76:.\disp.c      ****     }
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 11


  77:.\disp.c      ****     else if (i < 32){ // z = 1
 485              		.loc 1 77 0
 486 004c 3B68     		ldr	r3, [r7]
 487 004e 1F2B     		cmp	r3, #31
 488 0050 1DDC     		bgt	.L23
  78:.\disp.c      ****         i -= 16;
 489              		.loc 1 78 0
 490 0052 3B68     		ldr	r3, [r7]
 491 0054 103B     		subs	r3, r3, #16
 492 0056 3B60     		str	r3, [r7]
  79:.\disp.c      ****         x = i%4;
 493              		.loc 1 79 0
 494 0058 3A68     		ldr	r2, [r7]
 495 005a 364B     		ldr	r3, .L32
 496 005c 1340     		ands	r3, r3, r2
 497 005e 002B     		cmp	r3, #0
 498 0060 03DA     		bge	.L24
 499 0062 013B     		subs	r3, r3, #1
 500 0064 63F00303 		orn	r3, r3, #3
 501 0068 0133     		adds	r3, r3, #1
 502              	.L24:
 503 006a 7B61     		str	r3, [r7, #20]
  80:.\disp.c      ****         y = (i-x)/4; // we want to start at 1,11
 504              		.loc 1 80 0
 505 006c 3A68     		ldr	r2, [r7]
 506 006e 7B69     		ldr	r3, [r7, #20]
 507 0070 D31A     		subs	r3, r2, r3
 508 0072 002B     		cmp	r3, #0
 509 0074 00DA     		bge	.L25
 510 0076 0333     		adds	r3, r3, #3
 511              	.L25:
 512 0078 9B10     		asrs	r3, r3, #2
 513 007a 3B61     		str	r3, [r7, #16]
  81:.\disp.c      ****         x = 2*x + 1;
 514              		.loc 1 81 0
 515 007c 7B69     		ldr	r3, [r7, #20]
 516 007e 5B00     		lsls	r3, r3, #1
 517 0080 0133     		adds	r3, r3, #1
 518 0082 7B61     		str	r3, [r7, #20]
  82:.\disp.c      ****         y = 2*y + 11;
 519              		.loc 1 82 0
 520 0084 3B69     		ldr	r3, [r7, #16]
 521 0086 5B00     		lsls	r3, r3, #1
 522 0088 0B33     		adds	r3, r3, #11
 523 008a 3B61     		str	r3, [r7, #16]
 524 008c 40E0     		b	.L22
 525              	.L23:
  83:.\disp.c      ****     }
  84:.\disp.c      ****     else if (i < 48){ // z = 2
 526              		.loc 1 84 0
 527 008e 3B68     		ldr	r3, [r7]
 528 0090 2F2B     		cmp	r3, #47
 529 0092 1DDC     		bgt	.L26
  85:.\disp.c      ****         i -= 32;
 530              		.loc 1 85 0
 531 0094 3B68     		ldr	r3, [r7]
 532 0096 203B     		subs	r3, r3, #32
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 12


 533 0098 3B60     		str	r3, [r7]
  86:.\disp.c      ****         x = i%4;
 534              		.loc 1 86 0
 535 009a 3A68     		ldr	r2, [r7]
 536 009c 254B     		ldr	r3, .L32
 537 009e 1340     		ands	r3, r3, r2
 538 00a0 002B     		cmp	r3, #0
 539 00a2 03DA     		bge	.L27
 540 00a4 013B     		subs	r3, r3, #1
 541 00a6 63F00303 		orn	r3, r3, #3
 542 00aa 0133     		adds	r3, r3, #1
 543              	.L27:
 544 00ac 7B61     		str	r3, [r7, #20]
  87:.\disp.c      ****         y = (i-x)/4; // we want to start at 13,4
 545              		.loc 1 87 0
 546 00ae 3A68     		ldr	r2, [r7]
 547 00b0 7B69     		ldr	r3, [r7, #20]
 548 00b2 D31A     		subs	r3, r2, r3
 549 00b4 002B     		cmp	r3, #0
 550 00b6 00DA     		bge	.L28
 551 00b8 0333     		adds	r3, r3, #3
 552              	.L28:
 553 00ba 9B10     		asrs	r3, r3, #2
 554 00bc 3B61     		str	r3, [r7, #16]
  88:.\disp.c      ****         x = 2*x + 13;
 555              		.loc 1 88 0
 556 00be 7B69     		ldr	r3, [r7, #20]
 557 00c0 5B00     		lsls	r3, r3, #1
 558 00c2 0D33     		adds	r3, r3, #13
 559 00c4 7B61     		str	r3, [r7, #20]
  89:.\disp.c      ****         y = 2*y + 4;
 560              		.loc 1 89 0
 561 00c6 3B69     		ldr	r3, [r7, #16]
 562 00c8 0233     		adds	r3, r3, #2
 563 00ca 5B00     		lsls	r3, r3, #1
 564 00cc 3B61     		str	r3, [r7, #16]
 565 00ce 1FE0     		b	.L22
 566              	.L26:
  90:.\disp.c      ****     }
  91:.\disp.c      ****     else if (i < 64){ // z = 3
 567              		.loc 1 91 0
 568 00d0 3B68     		ldr	r3, [r7]
 569 00d2 3F2B     		cmp	r3, #63
 570 00d4 1CDC     		bgt	.L22
  92:.\disp.c      ****         i -= 48;
 571              		.loc 1 92 0
 572 00d6 3B68     		ldr	r3, [r7]
 573 00d8 303B     		subs	r3, r3, #48
 574 00da 3B60     		str	r3, [r7]
  93:.\disp.c      ****         x = i%4;
 575              		.loc 1 93 0
 576 00dc 3A68     		ldr	r2, [r7]
 577 00de 154B     		ldr	r3, .L32
 578 00e0 1340     		ands	r3, r3, r2
 579 00e2 002B     		cmp	r3, #0
 580 00e4 03DA     		bge	.L29
 581 00e6 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 13


 582 00e8 63F00303 		orn	r3, r3, #3
 583 00ec 0133     		adds	r3, r3, #1
 584              	.L29:
 585 00ee 7B61     		str	r3, [r7, #20]
  94:.\disp.c      ****         y = (i-x)/4; // we want to start at 13,14
 586              		.loc 1 94 0
 587 00f0 3A68     		ldr	r2, [r7]
 588 00f2 7B69     		ldr	r3, [r7, #20]
 589 00f4 D31A     		subs	r3, r2, r3
 590 00f6 002B     		cmp	r3, #0
 591 00f8 00DA     		bge	.L30
 592 00fa 0333     		adds	r3, r3, #3
 593              	.L30:
 594 00fc 9B10     		asrs	r3, r3, #2
 595 00fe 3B61     		str	r3, [r7, #16]
  95:.\disp.c      ****         x = 2*x + 13;
 596              		.loc 1 95 0
 597 0100 7B69     		ldr	r3, [r7, #20]
 598 0102 5B00     		lsls	r3, r3, #1
 599 0104 0D33     		adds	r3, r3, #13
 600 0106 7B61     		str	r3, [r7, #20]
  96:.\disp.c      ****         y = 2*y + 14;
 601              		.loc 1 96 0
 602 0108 3B69     		ldr	r3, [r7, #16]
 603 010a 0733     		adds	r3, r3, #7
 604 010c 5B00     		lsls	r3, r3, #1
 605 010e 3B61     		str	r3, [r7, #16]
 606              	.L22:
  97:.\disp.c      ****     }
  98:.\disp.c      ****     uint8 toreturn;
  99:.\disp.c      ****     toreturn = disp->matrix[x][y]; //get the value out of it
 607              		.loc 1 99 0
 608 0110 7968     		ldr	r1, [r7, #4]
 609 0112 7A69     		ldr	r2, [r7, #20]
 610 0114 1346     		mov	r3, r2
 611 0116 5B00     		lsls	r3, r3, #1
 612 0118 1344     		add	r3, r3, r2
 613 011a DB00     		lsls	r3, r3, #3
 614 011c 3A69     		ldr	r2, [r7, #16]
 615 011e 1344     		add	r3, r3, r2
 616 0120 0B44     		add	r3, r3, r1
 617 0122 1B78     		ldrb	r3, [r3]
 618 0124 FB73     		strb	r3, [r7, #15]
 100:.\disp.c      ****     return toreturn;
 619              		.loc 1 100 0
 620 0126 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 101:.\disp.c      **** }
 621              		.loc 1 101 0
 622 0128 1846     		mov	r0, r3
 623 012a 1C37     		adds	r7, r7, #28
 624              		.cfi_def_cfa_offset 4
 625 012c BD46     		mov	sp, r7
 626              		.cfi_def_cfa_register 13
 627              		@ sp needed
 628 012e 5DF8047B 		ldr	r7, [sp], #4
 629              		.cfi_restore 7
 630              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 14


 631 0132 7047     		bx	lr
 632              	.L33:
 633              		.align	2
 634              	.L32:
 635 0134 03000080 		.word	-2147483645
 636              		.cfi_endproc
 637              	.LFE68:
 638              		.size	disp_grid_ttc_getval, .-disp_grid_ttc_getval
 639              		.section	.text.disp_grid_ttc_place_value,"ax",%progbits
 640              		.align	2
 641              		.global	disp_grid_ttc_place_value
 642              		.thumb
 643              		.thumb_func
 644              		.type	disp_grid_ttc_place_value, %function
 645              	disp_grid_ttc_place_value:
 646              	.LFB69:
 102:.\disp.c      **** 
 103:.\disp.c      **** void disp_grid_ttc_place_value(struct disp_grid_81* disp, int i, uint8 value){ // place color based
 647              		.loc 1 103 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 24
 650              		@ frame_needed = 1, uses_anonymous_args = 0
 651 0000 80B5     		push	{r7, lr}
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 7, -8
 654              		.cfi_offset 14, -4
 655 0002 88B0     		sub	sp, sp, #32
 656              		.cfi_def_cfa_offset 40
 657 0004 02AF     		add	r7, sp, #8
 658              		.cfi_def_cfa 7, 32
 659 0006 F860     		str	r0, [r7, #12]
 660 0008 B960     		str	r1, [r7, #8]
 661 000a 1346     		mov	r3, r2
 662 000c FB71     		strb	r3, [r7, #7]
 104:.\disp.c      ****     int x,y; // first, we want to get the x,y coords
 105:.\disp.c      ****     if (i < 16 && i >= 0){ //z = 0
 663              		.loc 1 105 0
 664 000e BB68     		ldr	r3, [r7, #8]
 665 0010 0F2B     		cmp	r3, #15
 666 0012 1DDC     		bgt	.L35
 667              		.loc 1 105 0 is_stmt 0 discriminator 1
 668 0014 BB68     		ldr	r3, [r7, #8]
 669 0016 002B     		cmp	r3, #0
 670 0018 1ADB     		blt	.L35
 106:.\disp.c      ****         x = i%4;
 671              		.loc 1 106 0 is_stmt 1
 672 001a BA68     		ldr	r2, [r7, #8]
 673 001c 444B     		ldr	r3, .L47
 674 001e 1340     		ands	r3, r3, r2
 675 0020 002B     		cmp	r3, #0
 676 0022 03DA     		bge	.L36
 677 0024 013B     		subs	r3, r3, #1
 678 0026 63F00303 		orn	r3, r3, #3
 679 002a 0133     		adds	r3, r3, #1
 680              	.L36:
 681 002c 7B61     		str	r3, [r7, #20]
 107:.\disp.c      ****         y = (i-x)/4; // we want to start at 1,1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 15


 682              		.loc 1 107 0
 683 002e BA68     		ldr	r2, [r7, #8]
 684 0030 7B69     		ldr	r3, [r7, #20]
 685 0032 D31A     		subs	r3, r2, r3
 686 0034 002B     		cmp	r3, #0
 687 0036 00DA     		bge	.L37
 688 0038 0333     		adds	r3, r3, #3
 689              	.L37:
 690 003a 9B10     		asrs	r3, r3, #2
 691 003c 3B61     		str	r3, [r7, #16]
 108:.\disp.c      ****         x = 2*x + 1;
 692              		.loc 1 108 0
 693 003e 7B69     		ldr	r3, [r7, #20]
 694 0040 5B00     		lsls	r3, r3, #1
 695 0042 0133     		adds	r3, r3, #1
 696 0044 7B61     		str	r3, [r7, #20]
 109:.\disp.c      ****         y = 2*y + 1;
 697              		.loc 1 109 0
 698 0046 3B69     		ldr	r3, [r7, #16]
 699 0048 5B00     		lsls	r3, r3, #1
 700 004a 0133     		adds	r3, r3, #1
 701 004c 3B61     		str	r3, [r7, #16]
 702 004e 61E0     		b	.L38
 703              	.L35:
 110:.\disp.c      ****     }
 111:.\disp.c      ****     else if (i < 32){ // z = 1
 704              		.loc 1 111 0
 705 0050 BB68     		ldr	r3, [r7, #8]
 706 0052 1F2B     		cmp	r3, #31
 707 0054 1DDC     		bgt	.L39
 112:.\disp.c      ****         i -= 16;
 708              		.loc 1 112 0
 709 0056 BB68     		ldr	r3, [r7, #8]
 710 0058 103B     		subs	r3, r3, #16
 711 005a BB60     		str	r3, [r7, #8]
 113:.\disp.c      ****         x = i%4;
 712              		.loc 1 113 0
 713 005c BA68     		ldr	r2, [r7, #8]
 714 005e 344B     		ldr	r3, .L47
 715 0060 1340     		ands	r3, r3, r2
 716 0062 002B     		cmp	r3, #0
 717 0064 03DA     		bge	.L40
 718 0066 013B     		subs	r3, r3, #1
 719 0068 63F00303 		orn	r3, r3, #3
 720 006c 0133     		adds	r3, r3, #1
 721              	.L40:
 722 006e 7B61     		str	r3, [r7, #20]
 114:.\disp.c      ****         y = (i-x)/4; // we want to start at 1,11
 723              		.loc 1 114 0
 724 0070 BA68     		ldr	r2, [r7, #8]
 725 0072 7B69     		ldr	r3, [r7, #20]
 726 0074 D31A     		subs	r3, r2, r3
 727 0076 002B     		cmp	r3, #0
 728 0078 00DA     		bge	.L41
 729 007a 0333     		adds	r3, r3, #3
 730              	.L41:
 731 007c 9B10     		asrs	r3, r3, #2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 16


 732 007e 3B61     		str	r3, [r7, #16]
 115:.\disp.c      ****         x = 2*x + 1;
 733              		.loc 1 115 0
 734 0080 7B69     		ldr	r3, [r7, #20]
 735 0082 5B00     		lsls	r3, r3, #1
 736 0084 0133     		adds	r3, r3, #1
 737 0086 7B61     		str	r3, [r7, #20]
 116:.\disp.c      ****         y = 2*y + 11;
 738              		.loc 1 116 0
 739 0088 3B69     		ldr	r3, [r7, #16]
 740 008a 5B00     		lsls	r3, r3, #1
 741 008c 0B33     		adds	r3, r3, #11
 742 008e 3B61     		str	r3, [r7, #16]
 743 0090 40E0     		b	.L38
 744              	.L39:
 117:.\disp.c      ****     }
 118:.\disp.c      ****     else if (i < 48){ // z = 2
 745              		.loc 1 118 0
 746 0092 BB68     		ldr	r3, [r7, #8]
 747 0094 2F2B     		cmp	r3, #47
 748 0096 1DDC     		bgt	.L42
 119:.\disp.c      ****         i -= 32;
 749              		.loc 1 119 0
 750 0098 BB68     		ldr	r3, [r7, #8]
 751 009a 203B     		subs	r3, r3, #32
 752 009c BB60     		str	r3, [r7, #8]
 120:.\disp.c      ****         x = i%4;
 753              		.loc 1 120 0
 754 009e BA68     		ldr	r2, [r7, #8]
 755 00a0 234B     		ldr	r3, .L47
 756 00a2 1340     		ands	r3, r3, r2
 757 00a4 002B     		cmp	r3, #0
 758 00a6 03DA     		bge	.L43
 759 00a8 013B     		subs	r3, r3, #1
 760 00aa 63F00303 		orn	r3, r3, #3
 761 00ae 0133     		adds	r3, r3, #1
 762              	.L43:
 763 00b0 7B61     		str	r3, [r7, #20]
 121:.\disp.c      ****         y = (i-x)/4; // we want to start at 13,4
 764              		.loc 1 121 0
 765 00b2 BA68     		ldr	r2, [r7, #8]
 766 00b4 7B69     		ldr	r3, [r7, #20]
 767 00b6 D31A     		subs	r3, r2, r3
 768 00b8 002B     		cmp	r3, #0
 769 00ba 00DA     		bge	.L44
 770 00bc 0333     		adds	r3, r3, #3
 771              	.L44:
 772 00be 9B10     		asrs	r3, r3, #2
 773 00c0 3B61     		str	r3, [r7, #16]
 122:.\disp.c      ****         x = 2*x + 13;
 774              		.loc 1 122 0
 775 00c2 7B69     		ldr	r3, [r7, #20]
 776 00c4 5B00     		lsls	r3, r3, #1
 777 00c6 0D33     		adds	r3, r3, #13
 778 00c8 7B61     		str	r3, [r7, #20]
 123:.\disp.c      ****         y = 2*y + 4;
 779              		.loc 1 123 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 17


 780 00ca 3B69     		ldr	r3, [r7, #16]
 781 00cc 0233     		adds	r3, r3, #2
 782 00ce 5B00     		lsls	r3, r3, #1
 783 00d0 3B61     		str	r3, [r7, #16]
 784 00d2 1FE0     		b	.L38
 785              	.L42:
 124:.\disp.c      ****     }
 125:.\disp.c      ****     else if (i < 64){ // z = 3
 786              		.loc 1 125 0
 787 00d4 BB68     		ldr	r3, [r7, #8]
 788 00d6 3F2B     		cmp	r3, #63
 789 00d8 1CDC     		bgt	.L38
 126:.\disp.c      ****         i -= 48;
 790              		.loc 1 126 0
 791 00da BB68     		ldr	r3, [r7, #8]
 792 00dc 303B     		subs	r3, r3, #48
 793 00de BB60     		str	r3, [r7, #8]
 127:.\disp.c      ****         x = i%4;
 794              		.loc 1 127 0
 795 00e0 BA68     		ldr	r2, [r7, #8]
 796 00e2 134B     		ldr	r3, .L47
 797 00e4 1340     		ands	r3, r3, r2
 798 00e6 002B     		cmp	r3, #0
 799 00e8 03DA     		bge	.L45
 800 00ea 013B     		subs	r3, r3, #1
 801 00ec 63F00303 		orn	r3, r3, #3
 802 00f0 0133     		adds	r3, r3, #1
 803              	.L45:
 804 00f2 7B61     		str	r3, [r7, #20]
 128:.\disp.c      ****         y = (i-x)/4; // we want to start at 13,14
 805              		.loc 1 128 0
 806 00f4 BA68     		ldr	r2, [r7, #8]
 807 00f6 7B69     		ldr	r3, [r7, #20]
 808 00f8 D31A     		subs	r3, r2, r3
 809 00fa 002B     		cmp	r3, #0
 810 00fc 00DA     		bge	.L46
 811 00fe 0333     		adds	r3, r3, #3
 812              	.L46:
 813 0100 9B10     		asrs	r3, r3, #2
 814 0102 3B61     		str	r3, [r7, #16]
 129:.\disp.c      ****         x = 2*x + 13;
 815              		.loc 1 129 0
 816 0104 7B69     		ldr	r3, [r7, #20]
 817 0106 5B00     		lsls	r3, r3, #1
 818 0108 0D33     		adds	r3, r3, #13
 819 010a 7B61     		str	r3, [r7, #20]
 130:.\disp.c      ****         y = 2*y + 14;
 820              		.loc 1 130 0
 821 010c 3B69     		ldr	r3, [r7, #16]
 822 010e 0733     		adds	r3, r3, #7
 823 0110 5B00     		lsls	r3, r3, #1
 824 0112 3B61     		str	r3, [r7, #16]
 825              	.L38:
 131:.\disp.c      ****     }
 132:.\disp.c      ****     disp_grid_draw_square(disp,x,y,2,2,value); //dark gray
 826              		.loc 1 132 0
 827 0114 0223     		movs	r3, #2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 18


 828 0116 0093     		str	r3, [sp]
 829 0118 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 830 011a 0193     		str	r3, [sp, #4]
 831 011c F868     		ldr	r0, [r7, #12]
 832 011e 7969     		ldr	r1, [r7, #20]
 833 0120 3A69     		ldr	r2, [r7, #16]
 834 0122 0223     		movs	r3, #2
 835 0124 FFF7FEFF 		bl	disp_grid_draw_square
 133:.\disp.c      **** }
 836              		.loc 1 133 0
 837 0128 1837     		adds	r7, r7, #24
 838              		.cfi_def_cfa_offset 8
 839 012a BD46     		mov	sp, r7
 840              		.cfi_def_cfa_register 13
 841              		@ sp needed
 842 012c 80BD     		pop	{r7, pc}
 843              	.L48:
 844 012e 00BF     		.align	2
 845              	.L47:
 846 0130 03000080 		.word	-2147483645
 847              		.cfi_endproc
 848              	.LFE69:
 849              		.size	disp_grid_ttc_place_value, .-disp_grid_ttc_place_value
 850              		.section	.text.disp_grid_ttc_place,"ax",%progbits
 851              		.align	2
 852              		.global	disp_grid_ttc_place
 853              		.thumb
 854              		.thumb_func
 855              		.type	disp_grid_ttc_place, %function
 856              	disp_grid_ttc_place:
 857              	.LFB70:
 134:.\disp.c      **** 
 135:.\disp.c      **** void disp_grid_ttc_place(struct disp_grid_81* disp, int i, int value){ // place color based on 
 858              		.loc 1 135 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 24
 861              		@ frame_needed = 1, uses_anonymous_args = 0
 862 0000 80B5     		push	{r7, lr}
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 7, -8
 865              		.cfi_offset 14, -4
 866 0002 88B0     		sub	sp, sp, #32
 867              		.cfi_def_cfa_offset 40
 868 0004 02AF     		add	r7, sp, #8
 869              		.cfi_def_cfa 7, 32
 870 0006 F860     		str	r0, [r7, #12]
 871 0008 B960     		str	r1, [r7, #8]
 872 000a 7A60     		str	r2, [r7, #4]
 136:.\disp.c      ****     int x,y; // first, we want to get the x,y coords
 137:.\disp.c      ****     if (i < 16 && i >= 0){ //z = 0
 873              		.loc 1 137 0
 874 000c BB68     		ldr	r3, [r7, #8]
 875 000e 0F2B     		cmp	r3, #15
 876 0010 1DDC     		bgt	.L50
 877              		.loc 1 137 0 is_stmt 0 discriminator 1
 878 0012 BB68     		ldr	r3, [r7, #8]
 879 0014 002B     		cmp	r3, #0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 19


 880 0016 1ADB     		blt	.L50
 138:.\disp.c      ****         x = i%4;
 881              		.loc 1 138 0 is_stmt 1
 882 0018 BA68     		ldr	r2, [r7, #8]
 883 001a 594B     		ldr	r3, .L65
 884 001c 1340     		ands	r3, r3, r2
 885 001e 002B     		cmp	r3, #0
 886 0020 03DA     		bge	.L51
 887 0022 013B     		subs	r3, r3, #1
 888 0024 63F00303 		orn	r3, r3, #3
 889 0028 0133     		adds	r3, r3, #1
 890              	.L51:
 891 002a 7B61     		str	r3, [r7, #20]
 139:.\disp.c      ****         y = (i-x)/4; // we want to start at 1,1
 892              		.loc 1 139 0
 893 002c BA68     		ldr	r2, [r7, #8]
 894 002e 7B69     		ldr	r3, [r7, #20]
 895 0030 D31A     		subs	r3, r2, r3
 896 0032 002B     		cmp	r3, #0
 897 0034 00DA     		bge	.L52
 898 0036 0333     		adds	r3, r3, #3
 899              	.L52:
 900 0038 9B10     		asrs	r3, r3, #2
 901 003a 3B61     		str	r3, [r7, #16]
 140:.\disp.c      ****         x = 2*x + 1;
 902              		.loc 1 140 0
 903 003c 7B69     		ldr	r3, [r7, #20]
 904 003e 5B00     		lsls	r3, r3, #1
 905 0040 0133     		adds	r3, r3, #1
 906 0042 7B61     		str	r3, [r7, #20]
 141:.\disp.c      ****         y = 2*y + 1;
 907              		.loc 1 141 0
 908 0044 3B69     		ldr	r3, [r7, #16]
 909 0046 5B00     		lsls	r3, r3, #1
 910 0048 0133     		adds	r3, r3, #1
 911 004a 3B61     		str	r3, [r7, #16]
 912 004c 61E0     		b	.L53
 913              	.L50:
 142:.\disp.c      ****     }
 143:.\disp.c      ****     else if (i < 32){ // z = 1
 914              		.loc 1 143 0
 915 004e BB68     		ldr	r3, [r7, #8]
 916 0050 1F2B     		cmp	r3, #31
 917 0052 1DDC     		bgt	.L54
 144:.\disp.c      ****         i -= 16;
 918              		.loc 1 144 0
 919 0054 BB68     		ldr	r3, [r7, #8]
 920 0056 103B     		subs	r3, r3, #16
 921 0058 BB60     		str	r3, [r7, #8]
 145:.\disp.c      ****         x = i%4;
 922              		.loc 1 145 0
 923 005a BA68     		ldr	r2, [r7, #8]
 924 005c 484B     		ldr	r3, .L65
 925 005e 1340     		ands	r3, r3, r2
 926 0060 002B     		cmp	r3, #0
 927 0062 03DA     		bge	.L55
 928 0064 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 20


 929 0066 63F00303 		orn	r3, r3, #3
 930 006a 0133     		adds	r3, r3, #1
 931              	.L55:
 932 006c 7B61     		str	r3, [r7, #20]
 146:.\disp.c      ****         y = (i-x)/4; // we want to start at 1,11
 933              		.loc 1 146 0
 934 006e BA68     		ldr	r2, [r7, #8]
 935 0070 7B69     		ldr	r3, [r7, #20]
 936 0072 D31A     		subs	r3, r2, r3
 937 0074 002B     		cmp	r3, #0
 938 0076 00DA     		bge	.L56
 939 0078 0333     		adds	r3, r3, #3
 940              	.L56:
 941 007a 9B10     		asrs	r3, r3, #2
 942 007c 3B61     		str	r3, [r7, #16]
 147:.\disp.c      ****         x = 2*x + 1;
 943              		.loc 1 147 0
 944 007e 7B69     		ldr	r3, [r7, #20]
 945 0080 5B00     		lsls	r3, r3, #1
 946 0082 0133     		adds	r3, r3, #1
 947 0084 7B61     		str	r3, [r7, #20]
 148:.\disp.c      ****         y = 2*y + 11;
 948              		.loc 1 148 0
 949 0086 3B69     		ldr	r3, [r7, #16]
 950 0088 5B00     		lsls	r3, r3, #1
 951 008a 0B33     		adds	r3, r3, #11
 952 008c 3B61     		str	r3, [r7, #16]
 953 008e 40E0     		b	.L53
 954              	.L54:
 149:.\disp.c      ****     }
 150:.\disp.c      ****     else if (i < 48){ // z = 2
 955              		.loc 1 150 0
 956 0090 BB68     		ldr	r3, [r7, #8]
 957 0092 2F2B     		cmp	r3, #47
 958 0094 1DDC     		bgt	.L57
 151:.\disp.c      ****         i -= 32;
 959              		.loc 1 151 0
 960 0096 BB68     		ldr	r3, [r7, #8]
 961 0098 203B     		subs	r3, r3, #32
 962 009a BB60     		str	r3, [r7, #8]
 152:.\disp.c      ****         x = i%4;
 963              		.loc 1 152 0
 964 009c BA68     		ldr	r2, [r7, #8]
 965 009e 384B     		ldr	r3, .L65
 966 00a0 1340     		ands	r3, r3, r2
 967 00a2 002B     		cmp	r3, #0
 968 00a4 03DA     		bge	.L58
 969 00a6 013B     		subs	r3, r3, #1
 970 00a8 63F00303 		orn	r3, r3, #3
 971 00ac 0133     		adds	r3, r3, #1
 972              	.L58:
 973 00ae 7B61     		str	r3, [r7, #20]
 153:.\disp.c      ****         y = (i-x)/4; // we want to start at 13,4
 974              		.loc 1 153 0
 975 00b0 BA68     		ldr	r2, [r7, #8]
 976 00b2 7B69     		ldr	r3, [r7, #20]
 977 00b4 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 21


 978 00b6 002B     		cmp	r3, #0
 979 00b8 00DA     		bge	.L59
 980 00ba 0333     		adds	r3, r3, #3
 981              	.L59:
 982 00bc 9B10     		asrs	r3, r3, #2
 983 00be 3B61     		str	r3, [r7, #16]
 154:.\disp.c      ****         x = 2*x + 13;
 984              		.loc 1 154 0
 985 00c0 7B69     		ldr	r3, [r7, #20]
 986 00c2 5B00     		lsls	r3, r3, #1
 987 00c4 0D33     		adds	r3, r3, #13
 988 00c6 7B61     		str	r3, [r7, #20]
 155:.\disp.c      ****         y = 2*y + 4;
 989              		.loc 1 155 0
 990 00c8 3B69     		ldr	r3, [r7, #16]
 991 00ca 0233     		adds	r3, r3, #2
 992 00cc 5B00     		lsls	r3, r3, #1
 993 00ce 3B61     		str	r3, [r7, #16]
 994 00d0 1FE0     		b	.L53
 995              	.L57:
 156:.\disp.c      ****     }
 157:.\disp.c      ****     else if (i < 64){ // z = 3
 996              		.loc 1 157 0
 997 00d2 BB68     		ldr	r3, [r7, #8]
 998 00d4 3F2B     		cmp	r3, #63
 999 00d6 1CDC     		bgt	.L53
 158:.\disp.c      ****         i -= 48;
 1000              		.loc 1 158 0
 1001 00d8 BB68     		ldr	r3, [r7, #8]
 1002 00da 303B     		subs	r3, r3, #48
 1003 00dc BB60     		str	r3, [r7, #8]
 159:.\disp.c      ****         x = i%4;
 1004              		.loc 1 159 0
 1005 00de BA68     		ldr	r2, [r7, #8]
 1006 00e0 274B     		ldr	r3, .L65
 1007 00e2 1340     		ands	r3, r3, r2
 1008 00e4 002B     		cmp	r3, #0
 1009 00e6 03DA     		bge	.L60
 1010 00e8 013B     		subs	r3, r3, #1
 1011 00ea 63F00303 		orn	r3, r3, #3
 1012 00ee 0133     		adds	r3, r3, #1
 1013              	.L60:
 1014 00f0 7B61     		str	r3, [r7, #20]
 160:.\disp.c      ****         y = (i-x)/4; // we want to start at 13,14
 1015              		.loc 1 160 0
 1016 00f2 BA68     		ldr	r2, [r7, #8]
 1017 00f4 7B69     		ldr	r3, [r7, #20]
 1018 00f6 D31A     		subs	r3, r2, r3
 1019 00f8 002B     		cmp	r3, #0
 1020 00fa 00DA     		bge	.L61
 1021 00fc 0333     		adds	r3, r3, #3
 1022              	.L61:
 1023 00fe 9B10     		asrs	r3, r3, #2
 1024 0100 3B61     		str	r3, [r7, #16]
 161:.\disp.c      ****         x = 2*x + 13;
 1025              		.loc 1 161 0
 1026 0102 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 22


 1027 0104 5B00     		lsls	r3, r3, #1
 1028 0106 0D33     		adds	r3, r3, #13
 1029 0108 7B61     		str	r3, [r7, #20]
 162:.\disp.c      ****         y = 2*y + 14;
 1030              		.loc 1 162 0
 1031 010a 3B69     		ldr	r3, [r7, #16]
 1032 010c 0733     		adds	r3, r3, #7
 1033 010e 5B00     		lsls	r3, r3, #1
 1034 0110 3B61     		str	r3, [r7, #16]
 1035              	.L53:
 163:.\disp.c      ****     }
 164:.\disp.c      ****     if (value == 0){ //now check what color we want to change
 1036              		.loc 1 164 0
 1037 0112 7B68     		ldr	r3, [r7, #4]
 1038 0114 002B     		cmp	r3, #0
 1039 0116 14D1     		bne	.L62
 165:.\disp.c      ****         disp_grid_draw_square(disp,x,y,2,2,(i%3)); //deviations from black
 1040              		.loc 1 165 0
 1041 0118 BA68     		ldr	r2, [r7, #8]
 1042 011a 1A4B     		ldr	r3, .L65+4
 1043 011c 83FB0231 		smull	r3, r1, r3, r2
 1044 0120 D317     		asrs	r3, r2, #31
 1045 0122 C91A     		subs	r1, r1, r3
 1046 0124 0B46     		mov	r3, r1
 1047 0126 5B00     		lsls	r3, r3, #1
 1048 0128 0B44     		add	r3, r3, r1
 1049 012a D11A     		subs	r1, r2, r3
 1050 012c CBB2     		uxtb	r3, r1
 1051 012e 0222     		movs	r2, #2
 1052 0130 0092     		str	r2, [sp]
 1053 0132 0193     		str	r3, [sp, #4]
 1054 0134 F868     		ldr	r0, [r7, #12]
 1055 0136 7969     		ldr	r1, [r7, #20]
 1056 0138 3A69     		ldr	r2, [r7, #16]
 1057 013a 0223     		movs	r3, #2
 1058 013c FFF7FEFF 		bl	disp_grid_draw_square
 1059 0140 1BE0     		b	.L49
 1060              	.L62:
 166:.\disp.c      ****     }
 167:.\disp.c      ****     else if (value == 1){
 1061              		.loc 1 167 0
 1062 0142 7B68     		ldr	r3, [r7, #4]
 1063 0144 012B     		cmp	r3, #1
 1064 0146 0AD1     		bne	.L64
 168:.\disp.c      ****         disp_grid_draw_square(disp,x,y,2,2,0x2A); //light gray
 1065              		.loc 1 168 0
 1066 0148 0223     		movs	r3, #2
 1067 014a 0093     		str	r3, [sp]
 1068 014c 2A23     		movs	r3, #42
 1069 014e 0193     		str	r3, [sp, #4]
 1070 0150 F868     		ldr	r0, [r7, #12]
 1071 0152 7969     		ldr	r1, [r7, #20]
 1072 0154 3A69     		ldr	r2, [r7, #16]
 1073 0156 0223     		movs	r3, #2
 1074 0158 FFF7FEFF 		bl	disp_grid_draw_square
 1075 015c 0DE0     		b	.L49
 1076              	.L64:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 23


 169:.\disp.c      ****     }
 170:.\disp.c      ****     else if (value == -1){
 1077              		.loc 1 170 0
 1078 015e 7B68     		ldr	r3, [r7, #4]
 1079 0160 B3F1FF3F 		cmp	r3, #-1
 1080 0164 09D1     		bne	.L49
 171:.\disp.c      ****         disp_grid_draw_square(disp,x,y,2,2,0x15); //dark gray
 1081              		.loc 1 171 0
 1082 0166 0223     		movs	r3, #2
 1083 0168 0093     		str	r3, [sp]
 1084 016a 1523     		movs	r3, #21
 1085 016c 0193     		str	r3, [sp, #4]
 1086 016e F868     		ldr	r0, [r7, #12]
 1087 0170 7969     		ldr	r1, [r7, #20]
 1088 0172 3A69     		ldr	r2, [r7, #16]
 1089 0174 0223     		movs	r3, #2
 1090 0176 FFF7FEFF 		bl	disp_grid_draw_square
 1091              	.L49:
 172:.\disp.c      ****     }
 173:.\disp.c      **** }
 1092              		.loc 1 173 0
 1093 017a 1837     		adds	r7, r7, #24
 1094              		.cfi_def_cfa_offset 8
 1095 017c BD46     		mov	sp, r7
 1096              		.cfi_def_cfa_register 13
 1097              		@ sp needed
 1098 017e 80BD     		pop	{r7, pc}
 1099              	.L66:
 1100              		.align	2
 1101              	.L65:
 1102 0180 03000080 		.word	-2147483645
 1103 0184 56555555 		.word	1431655766
 1104              		.cfi_endproc
 1105              	.LFE70:
 1106              		.size	disp_grid_ttc_place, .-disp_grid_ttc_place
 1107              		.section	.text.disp_grid_init_ttc,"ax",%progbits
 1108              		.align	2
 1109              		.global	disp_grid_init_ttc
 1110              		.thumb
 1111              		.thumb_func
 1112              		.type	disp_grid_init_ttc, %function
 1113              	disp_grid_init_ttc:
 1114              	.LFB71:
 174:.\disp.c      **** 
 175:.\disp.c      **** void disp_grid_init_ttc(struct disp_grid_81* disp, int grid[64]){ // initialize the TTC board
 1115              		.loc 1 175 0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 16
 1118              		@ frame_needed = 1, uses_anonymous_args = 0
 1119 0000 80B5     		push	{r7, lr}
 1120              		.cfi_def_cfa_offset 8
 1121              		.cfi_offset 7, -8
 1122              		.cfi_offset 14, -4
 1123 0002 86B0     		sub	sp, sp, #24
 1124              		.cfi_def_cfa_offset 32
 1125 0004 02AF     		add	r7, sp, #8
 1126              		.cfi_def_cfa 7, 24
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 24


 1127 0006 7860     		str	r0, [r7, #4]
 1128 0008 3960     		str	r1, [r7]
 176:.\disp.c      ****     // tags for boards
 177:.\disp.c      ****     disp_grid_draw_square(disp,8,10,1,1,0x30); //second plane with 1 red
 1129              		.loc 1 177 0
 1130 000a 0123     		movs	r3, #1
 1131 000c 0093     		str	r3, [sp]
 1132 000e 3023     		movs	r3, #48
 1133 0010 0193     		str	r3, [sp, #4]
 1134 0012 7868     		ldr	r0, [r7, #4]
 1135 0014 0821     		movs	r1, #8
 1136 0016 0A22     		movs	r2, #10
 1137 0018 0123     		movs	r3, #1
 1138 001a FFF7FEFF 		bl	disp_grid_draw_square
 178:.\disp.c      ****     disp_grid_draw_square(disp,19,3,2,1,0x30); //third plane with 2 red
 1139              		.loc 1 178 0
 1140 001e 0123     		movs	r3, #1
 1141 0020 0093     		str	r3, [sp]
 1142 0022 3023     		movs	r3, #48
 1143 0024 0193     		str	r3, [sp, #4]
 1144 0026 7868     		ldr	r0, [r7, #4]
 1145 0028 1321     		movs	r1, #19
 1146 002a 0322     		movs	r2, #3
 1147 002c 0223     		movs	r3, #2
 1148 002e FFF7FEFF 		bl	disp_grid_draw_square
 179:.\disp.c      ****     disp_grid_draw_square(disp,18,13,3,1,0x30); //fourth plane with 3 red
 1149              		.loc 1 179 0
 1150 0032 0123     		movs	r3, #1
 1151 0034 0093     		str	r3, [sp]
 1152 0036 3023     		movs	r3, #48
 1153 0038 0193     		str	r3, [sp, #4]
 1154 003a 7868     		ldr	r0, [r7, #4]
 1155 003c 1221     		movs	r1, #18
 1156 003e 0D22     		movs	r2, #13
 1157 0040 0323     		movs	r3, #3
 1158 0042 FFF7FEFF 		bl	disp_grid_draw_square
 180:.\disp.c      ****     int i;
 181:.\disp.c      ****     for (i = 0; i < 64; i++){
 1159              		.loc 1 181 0
 1160 0046 0023     		movs	r3, #0
 1161 0048 FB60     		str	r3, [r7, #12]
 1162 004a 0CE0     		b	.L68
 1163              	.L69:
 182:.\disp.c      ****         disp_grid_ttc_place(disp,i, grid[i]);
 1164              		.loc 1 182 0 discriminator 3
 1165 004c FB68     		ldr	r3, [r7, #12]
 1166 004e 9B00     		lsls	r3, r3, #2
 1167 0050 3A68     		ldr	r2, [r7]
 1168 0052 1344     		add	r3, r3, r2
 1169 0054 1B68     		ldr	r3, [r3]
 1170 0056 7868     		ldr	r0, [r7, #4]
 1171 0058 F968     		ldr	r1, [r7, #12]
 1172 005a 1A46     		mov	r2, r3
 1173 005c FFF7FEFF 		bl	disp_grid_ttc_place
 181:.\disp.c      ****         disp_grid_ttc_place(disp,i, grid[i]);
 1174              		.loc 1 181 0 discriminator 3
 1175 0060 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 25


 1176 0062 0133     		adds	r3, r3, #1
 1177 0064 FB60     		str	r3, [r7, #12]
 1178              	.L68:
 181:.\disp.c      ****         disp_grid_ttc_place(disp,i, grid[i]);
 1179              		.loc 1 181 0 is_stmt 0 discriminator 1
 1180 0066 FB68     		ldr	r3, [r7, #12]
 1181 0068 3F2B     		cmp	r3, #63
 1182 006a EFDD     		ble	.L69
 183:.\disp.c      ****     }
 184:.\disp.c      **** }
 1183              		.loc 1 184 0 is_stmt 1
 1184 006c 1037     		adds	r7, r7, #16
 1185              		.cfi_def_cfa_offset 8
 1186 006e BD46     		mov	sp, r7
 1187              		.cfi_def_cfa_register 13
 1188              		@ sp needed
 1189 0070 80BD     		pop	{r7, pc}
 1190              		.cfi_endproc
 1191              	.LFE71:
 1192              		.size	disp_grid_init_ttc, .-disp_grid_init_ttc
 1193 0072 00BF     		.section	.text.disp_grid_transmit,"ax",%progbits
 1194              		.align	2
 1195              		.global	disp_grid_transmit
 1196              		.thumb
 1197              		.thumb_func
 1198              		.type	disp_grid_transmit, %function
 1199              	disp_grid_transmit:
 1200              	.LFB72:
 185:.\disp.c      **** 
 186:.\disp.c      **** void disp_grid_transmit (struct disp_grid_81 * disp){ // this function displays the screen
 1201              		.loc 1 186 0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 16
 1204              		@ frame_needed = 1, uses_anonymous_args = 0
 1205 0000 80B5     		push	{r7, lr}
 1206              		.cfi_def_cfa_offset 8
 1207              		.cfi_offset 7, -8
 1208              		.cfi_offset 14, -4
 1209 0002 84B0     		sub	sp, sp, #16
 1210              		.cfi_def_cfa_offset 24
 1211 0004 00AF     		add	r7, sp, #0
 1212              		.cfi_def_cfa_register 7
 1213 0006 7860     		str	r0, [r7, #4]
 187:.\disp.c      ****     int row,col;
 188:.\disp.c      ****     for (col = 0; col < 24; col++){
 1214              		.loc 1 188 0
 1215 0008 0023     		movs	r3, #0
 1216 000a BB60     		str	r3, [r7, #8]
 1217 000c 18E0     		b	.L71
 1218              	.L74:
 189:.\disp.c      ****         for (row = 0; row < 32; row++){
 1219              		.loc 1 189 0
 1220 000e 0023     		movs	r3, #0
 1221 0010 FB60     		str	r3, [r7, #12]
 1222 0012 0FE0     		b	.L72
 1223              	.L73:
 190:.\disp.c      ****             UART_PutChar(disp->matrix[row][col]); 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 26


 1224              		.loc 1 190 0 discriminator 3
 1225 0014 7968     		ldr	r1, [r7, #4]
 1226 0016 FA68     		ldr	r2, [r7, #12]
 1227 0018 1346     		mov	r3, r2
 1228 001a 5B00     		lsls	r3, r3, #1
 1229 001c 1344     		add	r3, r3, r2
 1230 001e DB00     		lsls	r3, r3, #3
 1231 0020 BA68     		ldr	r2, [r7, #8]
 1232 0022 1344     		add	r3, r3, r2
 1233 0024 0B44     		add	r3, r3, r1
 1234 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1235 0028 1846     		mov	r0, r3
 1236 002a FFF7FEFF 		bl	UART_PutChar
 189:.\disp.c      ****         for (row = 0; row < 32; row++){
 1237              		.loc 1 189 0 discriminator 3
 1238 002e FB68     		ldr	r3, [r7, #12]
 1239 0030 0133     		adds	r3, r3, #1
 1240 0032 FB60     		str	r3, [r7, #12]
 1241              	.L72:
 189:.\disp.c      ****         for (row = 0; row < 32; row++){
 1242              		.loc 1 189 0 is_stmt 0 discriminator 1
 1243 0034 FB68     		ldr	r3, [r7, #12]
 1244 0036 1F2B     		cmp	r3, #31
 1245 0038 ECDD     		ble	.L73
 188:.\disp.c      ****         for (row = 0; row < 32; row++){
 1246              		.loc 1 188 0 is_stmt 1 discriminator 2
 1247 003a BB68     		ldr	r3, [r7, #8]
 1248 003c 0133     		adds	r3, r3, #1
 1249 003e BB60     		str	r3, [r7, #8]
 1250              	.L71:
 188:.\disp.c      ****         for (row = 0; row < 32; row++){
 1251              		.loc 1 188 0 is_stmt 0 discriminator 1
 1252 0040 BB68     		ldr	r3, [r7, #8]
 1253 0042 172B     		cmp	r3, #23
 1254 0044 E3DD     		ble	.L74
 191:.\disp.c      ****             //UART_PutChar(20); // blue
 192:.\disp.c      ****         }
 193:.\disp.c      ****     }
 194:.\disp.c      ****     waiter(7); //minimum waiting time for 32x24
 1255              		.loc 1 194 0 is_stmt 1
 1256 0046 0720     		movs	r0, #7
 1257 0048 FFF7FEFF 		bl	waiter
 195:.\disp.c      **** }
 1258              		.loc 1 195 0
 1259 004c 1037     		adds	r7, r7, #16
 1260              		.cfi_def_cfa_offset 8
 1261 004e BD46     		mov	sp, r7
 1262              		.cfi_def_cfa_register 13
 1263              		@ sp needed
 1264 0050 80BD     		pop	{r7, pc}
 1265              		.cfi_endproc
 1266              	.LFE72:
 1267              		.size	disp_grid_transmit, .-disp_grid_transmit
 1268 0052 00BF     		.text
 1269              	.Letext0:
 1270              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1271              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 27


 1272              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1273              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1274              		.section	.debug_info,"",%progbits
 1275              	.Ldebug_info0:
 1276 0000 F5030000 		.4byte	0x3f5
 1277 0004 0400     		.2byte	0x4
 1278 0006 00000000 		.4byte	.Ldebug_abbrev0
 1279 000a 04       		.byte	0x4
 1280 000b 01       		.uleb128 0x1
 1281 000c B3000000 		.4byte	.LASF35
 1282 0010 01       		.byte	0x1
 1283 0011 9C010000 		.4byte	.LASF36
 1284 0015 28000000 		.4byte	.LASF37
 1285 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1286 001d 00000000 		.4byte	0
 1287 0021 00000000 		.4byte	.Ldebug_line0
 1288 0025 02       		.uleb128 0x2
 1289 0026 01       		.byte	0x1
 1290 0027 06       		.byte	0x6
 1291 0028 A5020000 		.4byte	.LASF0
 1292 002c 02       		.uleb128 0x2
 1293 002d 01       		.byte	0x1
 1294 002e 08       		.byte	0x8
 1295 002f 60010000 		.4byte	.LASF1
 1296 0033 02       		.uleb128 0x2
 1297 0034 02       		.byte	0x2
 1298 0035 05       		.byte	0x5
 1299 0036 7F020000 		.4byte	.LASF2
 1300 003a 02       		.uleb128 0x2
 1301 003b 02       		.byte	0x2
 1302 003c 07       		.byte	0x7
 1303 003d B1020000 		.4byte	.LASF3
 1304 0041 03       		.uleb128 0x3
 1305 0042 A9000000 		.4byte	.LASF9
 1306 0046 02       		.byte	0x2
 1307 0047 3F       		.byte	0x3f
 1308 0048 4C000000 		.4byte	0x4c
 1309 004c 02       		.uleb128 0x2
 1310 004d 04       		.byte	0x4
 1311 004e 05       		.byte	0x5
 1312 004f 9C020000 		.4byte	.LASF4
 1313 0053 02       		.uleb128 0x2
 1314 0054 04       		.byte	0x4
 1315 0055 07       		.byte	0x7
 1316 0056 81010000 		.4byte	.LASF5
 1317 005a 02       		.uleb128 0x2
 1318 005b 08       		.byte	0x8
 1319 005c 05       		.byte	0x5
 1320 005d 5D020000 		.4byte	.LASF6
 1321 0061 02       		.uleb128 0x2
 1322 0062 08       		.byte	0x8
 1323 0063 07       		.byte	0x7
 1324 0064 F9010000 		.4byte	.LASF7
 1325 0068 04       		.uleb128 0x4
 1326 0069 04       		.byte	0x4
 1327 006a 05       		.byte	0x5
 1328 006b 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 28


 1329 006f 02       		.uleb128 0x2
 1330 0070 04       		.byte	0x4
 1331 0071 07       		.byte	0x7
 1332 0072 EC010000 		.4byte	.LASF8
 1333 0076 03       		.uleb128 0x3
 1334 0077 38020000 		.4byte	.LASF10
 1335 007b 03       		.byte	0x3
 1336 007c 2C       		.byte	0x2c
 1337 007d 41000000 		.4byte	0x41
 1338 0081 05       		.uleb128 0x5
 1339 0082 91020000 		.4byte	.LASF11
 1340 0086 04       		.byte	0x4
 1341 0087 3801     		.2byte	0x138
 1342 0089 2C000000 		.4byte	0x2c
 1343 008d 02       		.uleb128 0x2
 1344 008e 04       		.byte	0x4
 1345 008f 04       		.byte	0x4
 1346 0090 52010000 		.4byte	.LASF12
 1347 0094 02       		.uleb128 0x2
 1348 0095 08       		.byte	0x8
 1349 0096 04       		.byte	0x4
 1350 0097 A5010000 		.4byte	.LASF13
 1351 009b 02       		.uleb128 0x2
 1352 009c 01       		.byte	0x1
 1353 009d 08       		.byte	0x8
 1354 009e 73020000 		.4byte	.LASF14
 1355 00a2 02       		.uleb128 0x2
 1356 00a3 04       		.byte	0x4
 1357 00a4 07       		.byte	0x7
 1358 00a5 40020000 		.4byte	.LASF15
 1359 00a9 06       		.uleb128 0x6
 1360 00aa 2B020000 		.4byte	.LASF38
 1361 00ae 0003     		.2byte	0x300
 1362 00b0 01       		.byte	0x1
 1363 00b1 15       		.byte	0x15
 1364 00b2 C3000000 		.4byte	0xc3
 1365 00b6 07       		.uleb128 0x7
 1366 00b7 78020000 		.4byte	.LASF39
 1367 00bb 01       		.byte	0x1
 1368 00bc 16       		.byte	0x16
 1369 00bd C3000000 		.4byte	0xc3
 1370 00c1 00       		.byte	0
 1371 00c2 00       		.byte	0
 1372 00c3 08       		.uleb128 0x8
 1373 00c4 81000000 		.4byte	0x81
 1374 00c8 D9000000 		.4byte	0xd9
 1375 00cc 09       		.uleb128 0x9
 1376 00cd A2000000 		.4byte	0xa2
 1377 00d1 1F       		.byte	0x1f
 1378 00d2 09       		.uleb128 0x9
 1379 00d3 A2000000 		.4byte	0xa2
 1380 00d7 17       		.byte	0x17
 1381 00d8 00       		.byte	0
 1382 00d9 0A       		.uleb128 0xa
 1383 00da 93000000 		.4byte	.LASF16
 1384 00de 01       		.byte	0x1
 1385 00df 1A       		.byte	0x1a
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 29


 1386 00e0 00000000 		.4byte	.LFB63
 1387 00e4 4A000000 		.4byte	.LFE63-.LFB63
 1388 00e8 01       		.uleb128 0x1
 1389 00e9 9C       		.byte	0x9c
 1390 00ea 15010000 		.4byte	0x115
 1391 00ee 0B       		.uleb128 0xb
 1392 00ef 6B020000 		.4byte	.LASF18
 1393 00f3 01       		.byte	0x1
 1394 00f4 1A       		.byte	0x1a
 1395 00f5 68000000 		.4byte	0x68
 1396 00f9 02       		.uleb128 0x2
 1397 00fa 91       		.byte	0x91
 1398 00fb 6C       		.sleb128 -20
 1399 00fc 0C       		.uleb128 0xc
 1400 00fd 6900     		.ascii	"i\000"
 1401 00ff 01       		.byte	0x1
 1402 0100 1B       		.byte	0x1b
 1403 0101 68000000 		.4byte	0x68
 1404 0105 02       		.uleb128 0x2
 1405 0106 91       		.byte	0x91
 1406 0107 74       		.sleb128 -12
 1407 0108 0C       		.uleb128 0xc
 1408 0109 6A00     		.ascii	"j\000"
 1409 010b 01       		.byte	0x1
 1410 010c 1B       		.byte	0x1b
 1411 010d 68000000 		.4byte	0x68
 1412 0111 02       		.uleb128 0x2
 1413 0112 91       		.byte	0x91
 1414 0113 70       		.sleb128 -16
 1415 0114 00       		.byte	0
 1416 0115 0A       		.uleb128 0xa
 1417 0116 9A000000 		.4byte	.LASF17
 1418 011a 01       		.byte	0x1
 1419 011b 22       		.byte	0x22
 1420 011c 00000000 		.4byte	.LFB64
 1421 0120 50000000 		.4byte	.LFE64-.LFB64
 1422 0124 01       		.uleb128 0x1
 1423 0125 9C       		.byte	0x9c
 1424 0126 63010000 		.4byte	0x163
 1425 012a 0B       		.uleb128 0xb
 1426 012b 26020000 		.4byte	.LASF19
 1427 012f 01       		.byte	0x1
 1428 0130 22       		.byte	0x22
 1429 0131 63010000 		.4byte	0x163
 1430 0135 02       		.uleb128 0x2
 1431 0136 91       		.byte	0x91
 1432 0137 6C       		.sleb128 -20
 1433 0138 0B       		.uleb128 0xb
 1434 0139 BF010000 		.4byte	.LASF20
 1435 013d 01       		.byte	0x1
 1436 013e 22       		.byte	0x22
 1437 013f 81000000 		.4byte	0x81
 1438 0143 02       		.uleb128 0x2
 1439 0144 91       		.byte	0x91
 1440 0145 6B       		.sleb128 -21
 1441 0146 0C       		.uleb128 0xc
 1442 0147 726F7700 		.ascii	"row\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 30


 1443 014b 01       		.byte	0x1
 1444 014c 23       		.byte	0x23
 1445 014d 68000000 		.4byte	0x68
 1446 0151 02       		.uleb128 0x2
 1447 0152 91       		.byte	0x91
 1448 0153 74       		.sleb128 -12
 1449 0154 0C       		.uleb128 0xc
 1450 0155 636F6C00 		.ascii	"col\000"
 1451 0159 01       		.byte	0x1
 1452 015a 23       		.byte	0x23
 1453 015b 68000000 		.4byte	0x68
 1454 015f 02       		.uleb128 0x2
 1455 0160 91       		.byte	0x91
 1456 0161 70       		.sleb128 -16
 1457 0162 00       		.byte	0
 1458 0163 0D       		.uleb128 0xd
 1459 0164 04       		.byte	0x4
 1460 0165 A9000000 		.4byte	0xa9
 1461 0169 0A       		.uleb128 0xa
 1462 016a 10020000 		.4byte	.LASF21
 1463 016e 01       		.byte	0x1
 1464 016f 2C       		.byte	0x2c
 1465 0170 00000000 		.4byte	.LFB65
 1466 0174 60000000 		.4byte	.LFE65-.LFB65
 1467 0178 01       		.uleb128 0x1
 1468 0179 9C       		.byte	0x9c
 1469 017a EB010000 		.4byte	0x1eb
 1470 017e 0B       		.uleb128 0xb
 1471 017f 26020000 		.4byte	.LASF19
 1472 0183 01       		.byte	0x1
 1473 0184 2C       		.byte	0x2c
 1474 0185 63010000 		.4byte	0x163
 1475 0189 02       		.uleb128 0x2
 1476 018a 91       		.byte	0x91
 1477 018b 6C       		.sleb128 -20
 1478 018c 0B       		.uleb128 0xb
 1479 018d 41010000 		.4byte	.LASF22
 1480 0191 01       		.byte	0x1
 1481 0192 2C       		.byte	0x2c
 1482 0193 68000000 		.4byte	0x68
 1483 0197 02       		.uleb128 0x2
 1484 0198 91       		.byte	0x91
 1485 0199 68       		.sleb128 -24
 1486 019a 0B       		.uleb128 0xb
 1487 019b 58010000 		.4byte	.LASF23
 1488 019f 01       		.byte	0x1
 1489 01a0 2C       		.byte	0x2c
 1490 01a1 68000000 		.4byte	0x68
 1491 01a5 02       		.uleb128 0x2
 1492 01a6 91       		.byte	0x91
 1493 01a7 64       		.sleb128 -28
 1494 01a8 0B       		.uleb128 0xb
 1495 01a9 89020000 		.4byte	.LASF24
 1496 01ad 01       		.byte	0x1
 1497 01ae 2C       		.byte	0x2c
 1498 01af 68000000 		.4byte	0x68
 1499 01b3 02       		.uleb128 0x2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 31


 1500 01b4 91       		.byte	0x91
 1501 01b5 60       		.sleb128 -32
 1502 01b6 0B       		.uleb128 0xb
 1503 01b7 93010000 		.4byte	.LASF25
 1504 01bb 01       		.byte	0x1
 1505 01bc 2C       		.byte	0x2c
 1506 01bd 68000000 		.4byte	0x68
 1507 01c1 02       		.uleb128 0x2
 1508 01c2 91       		.byte	0x91
 1509 01c3 00       		.sleb128 0
 1510 01c4 0B       		.uleb128 0xb
 1511 01c5 BF010000 		.4byte	.LASF20
 1512 01c9 01       		.byte	0x1
 1513 01ca 2C       		.byte	0x2c
 1514 01cb 81000000 		.4byte	0x81
 1515 01cf 02       		.uleb128 0x2
 1516 01d0 91       		.byte	0x91
 1517 01d1 04       		.sleb128 4
 1518 01d2 0C       		.uleb128 0xc
 1519 01d3 7800     		.ascii	"x\000"
 1520 01d5 01       		.byte	0x1
 1521 01d6 2D       		.byte	0x2d
 1522 01d7 68000000 		.4byte	0x68
 1523 01db 02       		.uleb128 0x2
 1524 01dc 91       		.byte	0x91
 1525 01dd 74       		.sleb128 -12
 1526 01de 0C       		.uleb128 0xc
 1527 01df 7900     		.ascii	"y\000"
 1528 01e1 01       		.byte	0x1
 1529 01e2 2D       		.byte	0x2d
 1530 01e3 68000000 		.4byte	0x68
 1531 01e7 02       		.uleb128 0x2
 1532 01e8 91       		.byte	0x91
 1533 01e9 70       		.sleb128 -16
 1534 01ea 00       		.byte	0
 1535 01eb 0E       		.uleb128 0xe
 1536 01ec 6E010000 		.4byte	.LASF26
 1537 01f0 01       		.byte	0x1
 1538 01f1 35       		.byte	0x35
 1539 01f2 00000000 		.4byte	.LFB66
 1540 01f6 72000000 		.4byte	.LFE66-.LFB66
 1541 01fa 01       		.uleb128 0x1
 1542 01fb 9C       		.byte	0x9c
 1543 01fc 39020000 		.4byte	0x239
 1544 0200 0B       		.uleb128 0xb
 1545 0201 26020000 		.4byte	.LASF19
 1546 0205 01       		.byte	0x1
 1547 0206 35       		.byte	0x35
 1548 0207 63010000 		.4byte	0x163
 1549 020b 02       		.uleb128 0x2
 1550 020c 91       		.byte	0x91
 1551 020d 74       		.sleb128 -12
 1552 020e 0B       		.uleb128 0xb
 1553 020f 41010000 		.4byte	.LASF22
 1554 0213 01       		.byte	0x1
 1555 0214 35       		.byte	0x35
 1556 0215 68000000 		.4byte	0x68
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 32


 1557 0219 02       		.uleb128 0x2
 1558 021a 91       		.byte	0x91
 1559 021b 70       		.sleb128 -16
 1560 021c 0B       		.uleb128 0xb
 1561 021d 58010000 		.4byte	.LASF23
 1562 0221 01       		.byte	0x1
 1563 0222 35       		.byte	0x35
 1564 0223 68000000 		.4byte	0x68
 1565 0227 02       		.uleb128 0x2
 1566 0228 91       		.byte	0x91
 1567 0229 6C       		.sleb128 -20
 1568 022a 0B       		.uleb128 0xb
 1569 022b BF010000 		.4byte	.LASF20
 1570 022f 01       		.byte	0x1
 1571 0230 35       		.byte	0x35
 1572 0231 81000000 		.4byte	0x81
 1573 0235 02       		.uleb128 0x2
 1574 0236 91       		.byte	0x91
 1575 0237 6B       		.sleb128 -21
 1576 0238 00       		.byte	0
 1577 0239 0E       		.uleb128 0xe
 1578 023a C4020000 		.4byte	.LASF27
 1579 023e 01       		.byte	0x1
 1580 023f 3C       		.byte	0x3c
 1581 0240 00000000 		.4byte	.LFB67
 1582 0244 86000000 		.4byte	.LFE67-.LFB67
 1583 0248 01       		.uleb128 0x1
 1584 0249 9C       		.byte	0x9c
 1585 024a 5D020000 		.4byte	0x25d
 1586 024e 0B       		.uleb128 0xb
 1587 024f 26020000 		.4byte	.LASF19
 1588 0253 01       		.byte	0x1
 1589 0254 3C       		.byte	0x3c
 1590 0255 63010000 		.4byte	0x163
 1591 0259 02       		.uleb128 0x2
 1592 025a 91       		.byte	0x91
 1593 025b 74       		.sleb128 -12
 1594 025c 00       		.byte	0
 1595 025d 0F       		.uleb128 0xf
 1596 025e 13000000 		.4byte	.LASF40
 1597 0262 01       		.byte	0x1
 1598 0263 45       		.byte	0x45
 1599 0264 81000000 		.4byte	0x81
 1600 0268 00000000 		.4byte	.LFB68
 1601 026c 38010000 		.4byte	.LFE68-.LFB68
 1602 0270 01       		.uleb128 0x1
 1603 0271 9C       		.byte	0x9c
 1604 0272 B7020000 		.4byte	0x2b7
 1605 0276 0B       		.uleb128 0xb
 1606 0277 26020000 		.4byte	.LASF19
 1607 027b 01       		.byte	0x1
 1608 027c 45       		.byte	0x45
 1609 027d 63010000 		.4byte	0x163
 1610 0281 02       		.uleb128 0x2
 1611 0282 91       		.byte	0x91
 1612 0283 64       		.sleb128 -28
 1613 0284 10       		.uleb128 0x10
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 33


 1614 0285 6900     		.ascii	"i\000"
 1615 0287 01       		.byte	0x1
 1616 0288 45       		.byte	0x45
 1617 0289 68000000 		.4byte	0x68
 1618 028d 02       		.uleb128 0x2
 1619 028e 91       		.byte	0x91
 1620 028f 60       		.sleb128 -32
 1621 0290 0C       		.uleb128 0xc
 1622 0291 7800     		.ascii	"x\000"
 1623 0293 01       		.byte	0x1
 1624 0294 46       		.byte	0x46
 1625 0295 68000000 		.4byte	0x68
 1626 0299 02       		.uleb128 0x2
 1627 029a 91       		.byte	0x91
 1628 029b 74       		.sleb128 -12
 1629 029c 0C       		.uleb128 0xc
 1630 029d 7900     		.ascii	"y\000"
 1631 029f 01       		.byte	0x1
 1632 02a0 46       		.byte	0x46
 1633 02a1 68000000 		.4byte	0x68
 1634 02a5 02       		.uleb128 0x2
 1635 02a6 91       		.byte	0x91
 1636 02a7 70       		.sleb128 -16
 1637 02a8 11       		.uleb128 0x11
 1638 02a9 49010000 		.4byte	.LASF28
 1639 02ad 01       		.byte	0x1
 1640 02ae 62       		.byte	0x62
 1641 02af 81000000 		.4byte	0x81
 1642 02b3 02       		.uleb128 0x2
 1643 02b4 91       		.byte	0x91
 1644 02b5 6F       		.sleb128 -17
 1645 02b6 00       		.byte	0
 1646 02b7 0E       		.uleb128 0xe
 1647 02b8 D2010000 		.4byte	.LASF29
 1648 02bc 01       		.byte	0x1
 1649 02bd 67       		.byte	0x67
 1650 02be 00000000 		.4byte	.LFB69
 1651 02c2 34010000 		.4byte	.LFE69-.LFB69
 1652 02c6 01       		.uleb128 0x1
 1653 02c7 9C       		.byte	0x9c
 1654 02c8 0D030000 		.4byte	0x30d
 1655 02cc 0B       		.uleb128 0xb
 1656 02cd 26020000 		.4byte	.LASF19
 1657 02d1 01       		.byte	0x1
 1658 02d2 67       		.byte	0x67
 1659 02d3 63010000 		.4byte	0x163
 1660 02d7 02       		.uleb128 0x2
 1661 02d8 91       		.byte	0x91
 1662 02d9 6C       		.sleb128 -20
 1663 02da 10       		.uleb128 0x10
 1664 02db 6900     		.ascii	"i\000"
 1665 02dd 01       		.byte	0x1
 1666 02de 67       		.byte	0x67
 1667 02df 68000000 		.4byte	0x68
 1668 02e3 02       		.uleb128 0x2
 1669 02e4 91       		.byte	0x91
 1670 02e5 68       		.sleb128 -24
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 34


 1671 02e6 0B       		.uleb128 0xb
 1672 02e7 8D000000 		.4byte	.LASF30
 1673 02eb 01       		.byte	0x1
 1674 02ec 67       		.byte	0x67
 1675 02ed 81000000 		.4byte	0x81
 1676 02f1 02       		.uleb128 0x2
 1677 02f2 91       		.byte	0x91
 1678 02f3 67       		.sleb128 -25
 1679 02f4 0C       		.uleb128 0xc
 1680 02f5 7800     		.ascii	"x\000"
 1681 02f7 01       		.byte	0x1
 1682 02f8 68       		.byte	0x68
 1683 02f9 68000000 		.4byte	0x68
 1684 02fd 02       		.uleb128 0x2
 1685 02fe 91       		.byte	0x91
 1686 02ff 74       		.sleb128 -12
 1687 0300 0C       		.uleb128 0xc
 1688 0301 7900     		.ascii	"y\000"
 1689 0303 01       		.byte	0x1
 1690 0304 68       		.byte	0x68
 1691 0305 68000000 		.4byte	0x68
 1692 0309 02       		.uleb128 0x2
 1693 030a 91       		.byte	0x91
 1694 030b 70       		.sleb128 -16
 1695 030c 00       		.byte	0
 1696 030d 0E       		.uleb128 0xe
 1697 030e 49020000 		.4byte	.LASF31
 1698 0312 01       		.byte	0x1
 1699 0313 87       		.byte	0x87
 1700 0314 00000000 		.4byte	.LFB70
 1701 0318 88010000 		.4byte	.LFE70-.LFB70
 1702 031c 01       		.uleb128 0x1
 1703 031d 9C       		.byte	0x9c
 1704 031e 63030000 		.4byte	0x363
 1705 0322 0B       		.uleb128 0xb
 1706 0323 26020000 		.4byte	.LASF19
 1707 0327 01       		.byte	0x1
 1708 0328 87       		.byte	0x87
 1709 0329 63010000 		.4byte	0x163
 1710 032d 02       		.uleb128 0x2
 1711 032e 91       		.byte	0x91
 1712 032f 6C       		.sleb128 -20
 1713 0330 10       		.uleb128 0x10
 1714 0331 6900     		.ascii	"i\000"
 1715 0333 01       		.byte	0x1
 1716 0334 87       		.byte	0x87
 1717 0335 68000000 		.4byte	0x68
 1718 0339 02       		.uleb128 0x2
 1719 033a 91       		.byte	0x91
 1720 033b 68       		.sleb128 -24
 1721 033c 0B       		.uleb128 0xb
 1722 033d 8D000000 		.4byte	.LASF30
 1723 0341 01       		.byte	0x1
 1724 0342 87       		.byte	0x87
 1725 0343 68000000 		.4byte	0x68
 1726 0347 02       		.uleb128 0x2
 1727 0348 91       		.byte	0x91
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 35


 1728 0349 64       		.sleb128 -28
 1729 034a 0C       		.uleb128 0xc
 1730 034b 7800     		.ascii	"x\000"
 1731 034d 01       		.byte	0x1
 1732 034e 88       		.byte	0x88
 1733 034f 68000000 		.4byte	0x68
 1734 0353 02       		.uleb128 0x2
 1735 0354 91       		.byte	0x91
 1736 0355 74       		.sleb128 -12
 1737 0356 0C       		.uleb128 0xc
 1738 0357 7900     		.ascii	"y\000"
 1739 0359 01       		.byte	0x1
 1740 035a 88       		.byte	0x88
 1741 035b 68000000 		.4byte	0x68
 1742 035f 02       		.uleb128 0x2
 1743 0360 91       		.byte	0x91
 1744 0361 70       		.sleb128 -16
 1745 0362 00       		.byte	0
 1746 0363 0E       		.uleb128 0xe
 1747 0364 00000000 		.4byte	.LASF32
 1748 0368 01       		.byte	0x1
 1749 0369 AF       		.byte	0xaf
 1750 036a 00000000 		.4byte	.LFB71
 1751 036e 72000000 		.4byte	.LFE71-.LFB71
 1752 0372 01       		.uleb128 0x1
 1753 0373 9C       		.byte	0x9c
 1754 0374 A1030000 		.4byte	0x3a1
 1755 0378 0B       		.uleb128 0xb
 1756 0379 26020000 		.4byte	.LASF19
 1757 037d 01       		.byte	0x1
 1758 037e AF       		.byte	0xaf
 1759 037f 63010000 		.4byte	0x163
 1760 0383 02       		.uleb128 0x2
 1761 0384 91       		.byte	0x91
 1762 0385 6C       		.sleb128 -20
 1763 0386 0B       		.uleb128 0xb
 1764 0387 97020000 		.4byte	.LASF33
 1765 038b 01       		.byte	0x1
 1766 038c AF       		.byte	0xaf
 1767 038d A1030000 		.4byte	0x3a1
 1768 0391 02       		.uleb128 0x2
 1769 0392 91       		.byte	0x91
 1770 0393 68       		.sleb128 -24
 1771 0394 0C       		.uleb128 0xc
 1772 0395 6900     		.ascii	"i\000"
 1773 0397 01       		.byte	0x1
 1774 0398 B4       		.byte	0xb4
 1775 0399 68000000 		.4byte	0x68
 1776 039d 02       		.uleb128 0x2
 1777 039e 91       		.byte	0x91
 1778 039f 74       		.sleb128 -12
 1779 03a0 00       		.byte	0
 1780 03a1 0D       		.uleb128 0xd
 1781 03a2 04       		.byte	0x4
 1782 03a3 68000000 		.4byte	0x68
 1783 03a7 0E       		.uleb128 0xe
 1784 03a8 AC010000 		.4byte	.LASF34
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 36


 1785 03ac 01       		.byte	0x1
 1786 03ad BA       		.byte	0xba
 1787 03ae 00000000 		.4byte	.LFB72
 1788 03b2 52000000 		.4byte	.LFE72-.LFB72
 1789 03b6 01       		.uleb128 0x1
 1790 03b7 9C       		.byte	0x9c
 1791 03b8 E7030000 		.4byte	0x3e7
 1792 03bc 0B       		.uleb128 0xb
 1793 03bd 26020000 		.4byte	.LASF19
 1794 03c1 01       		.byte	0x1
 1795 03c2 BA       		.byte	0xba
 1796 03c3 63010000 		.4byte	0x163
 1797 03c7 02       		.uleb128 0x2
 1798 03c8 91       		.byte	0x91
 1799 03c9 6C       		.sleb128 -20
 1800 03ca 0C       		.uleb128 0xc
 1801 03cb 726F7700 		.ascii	"row\000"
 1802 03cf 01       		.byte	0x1
 1803 03d0 BB       		.byte	0xbb
 1804 03d1 68000000 		.4byte	0x68
 1805 03d5 02       		.uleb128 0x2
 1806 03d6 91       		.byte	0x91
 1807 03d7 74       		.sleb128 -12
 1808 03d8 0C       		.uleb128 0xc
 1809 03d9 636F6C00 		.ascii	"col\000"
 1810 03dd 01       		.byte	0x1
 1811 03de BB       		.byte	0xbb
 1812 03df 68000000 		.4byte	0x68
 1813 03e3 02       		.uleb128 0x2
 1814 03e4 91       		.byte	0x91
 1815 03e5 70       		.sleb128 -16
 1816 03e6 00       		.byte	0
 1817 03e7 12       		.uleb128 0x12
 1818 03e8 C5010000 		.4byte	.LASF41
 1819 03ec 05       		.byte	0x5
 1820 03ed 5506     		.2byte	0x655
 1821 03ef F3030000 		.4byte	0x3f3
 1822 03f3 13       		.uleb128 0x13
 1823 03f4 76000000 		.4byte	0x76
 1824 03f8 00       		.byte	0
 1825              		.section	.debug_abbrev,"",%progbits
 1826              	.Ldebug_abbrev0:
 1827 0000 01       		.uleb128 0x1
 1828 0001 11       		.uleb128 0x11
 1829 0002 01       		.byte	0x1
 1830 0003 25       		.uleb128 0x25
 1831 0004 0E       		.uleb128 0xe
 1832 0005 13       		.uleb128 0x13
 1833 0006 0B       		.uleb128 0xb
 1834 0007 03       		.uleb128 0x3
 1835 0008 0E       		.uleb128 0xe
 1836 0009 1B       		.uleb128 0x1b
 1837 000a 0E       		.uleb128 0xe
 1838 000b 55       		.uleb128 0x55
 1839 000c 17       		.uleb128 0x17
 1840 000d 11       		.uleb128 0x11
 1841 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 37


 1842 000f 10       		.uleb128 0x10
 1843 0010 17       		.uleb128 0x17
 1844 0011 00       		.byte	0
 1845 0012 00       		.byte	0
 1846 0013 02       		.uleb128 0x2
 1847 0014 24       		.uleb128 0x24
 1848 0015 00       		.byte	0
 1849 0016 0B       		.uleb128 0xb
 1850 0017 0B       		.uleb128 0xb
 1851 0018 3E       		.uleb128 0x3e
 1852 0019 0B       		.uleb128 0xb
 1853 001a 03       		.uleb128 0x3
 1854 001b 0E       		.uleb128 0xe
 1855 001c 00       		.byte	0
 1856 001d 00       		.byte	0
 1857 001e 03       		.uleb128 0x3
 1858 001f 16       		.uleb128 0x16
 1859 0020 00       		.byte	0
 1860 0021 03       		.uleb128 0x3
 1861 0022 0E       		.uleb128 0xe
 1862 0023 3A       		.uleb128 0x3a
 1863 0024 0B       		.uleb128 0xb
 1864 0025 3B       		.uleb128 0x3b
 1865 0026 0B       		.uleb128 0xb
 1866 0027 49       		.uleb128 0x49
 1867 0028 13       		.uleb128 0x13
 1868 0029 00       		.byte	0
 1869 002a 00       		.byte	0
 1870 002b 04       		.uleb128 0x4
 1871 002c 24       		.uleb128 0x24
 1872 002d 00       		.byte	0
 1873 002e 0B       		.uleb128 0xb
 1874 002f 0B       		.uleb128 0xb
 1875 0030 3E       		.uleb128 0x3e
 1876 0031 0B       		.uleb128 0xb
 1877 0032 03       		.uleb128 0x3
 1878 0033 08       		.uleb128 0x8
 1879 0034 00       		.byte	0
 1880 0035 00       		.byte	0
 1881 0036 05       		.uleb128 0x5
 1882 0037 16       		.uleb128 0x16
 1883 0038 00       		.byte	0
 1884 0039 03       		.uleb128 0x3
 1885 003a 0E       		.uleb128 0xe
 1886 003b 3A       		.uleb128 0x3a
 1887 003c 0B       		.uleb128 0xb
 1888 003d 3B       		.uleb128 0x3b
 1889 003e 05       		.uleb128 0x5
 1890 003f 49       		.uleb128 0x49
 1891 0040 13       		.uleb128 0x13
 1892 0041 00       		.byte	0
 1893 0042 00       		.byte	0
 1894 0043 06       		.uleb128 0x6
 1895 0044 13       		.uleb128 0x13
 1896 0045 01       		.byte	0x1
 1897 0046 03       		.uleb128 0x3
 1898 0047 0E       		.uleb128 0xe
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 38


 1899 0048 0B       		.uleb128 0xb
 1900 0049 05       		.uleb128 0x5
 1901 004a 3A       		.uleb128 0x3a
 1902 004b 0B       		.uleb128 0xb
 1903 004c 3B       		.uleb128 0x3b
 1904 004d 0B       		.uleb128 0xb
 1905 004e 01       		.uleb128 0x1
 1906 004f 13       		.uleb128 0x13
 1907 0050 00       		.byte	0
 1908 0051 00       		.byte	0
 1909 0052 07       		.uleb128 0x7
 1910 0053 0D       		.uleb128 0xd
 1911 0054 00       		.byte	0
 1912 0055 03       		.uleb128 0x3
 1913 0056 0E       		.uleb128 0xe
 1914 0057 3A       		.uleb128 0x3a
 1915 0058 0B       		.uleb128 0xb
 1916 0059 3B       		.uleb128 0x3b
 1917 005a 0B       		.uleb128 0xb
 1918 005b 49       		.uleb128 0x49
 1919 005c 13       		.uleb128 0x13
 1920 005d 38       		.uleb128 0x38
 1921 005e 0B       		.uleb128 0xb
 1922 005f 00       		.byte	0
 1923 0060 00       		.byte	0
 1924 0061 08       		.uleb128 0x8
 1925 0062 01       		.uleb128 0x1
 1926 0063 01       		.byte	0x1
 1927 0064 49       		.uleb128 0x49
 1928 0065 13       		.uleb128 0x13
 1929 0066 01       		.uleb128 0x1
 1930 0067 13       		.uleb128 0x13
 1931 0068 00       		.byte	0
 1932 0069 00       		.byte	0
 1933 006a 09       		.uleb128 0x9
 1934 006b 21       		.uleb128 0x21
 1935 006c 00       		.byte	0
 1936 006d 49       		.uleb128 0x49
 1937 006e 13       		.uleb128 0x13
 1938 006f 2F       		.uleb128 0x2f
 1939 0070 0B       		.uleb128 0xb
 1940 0071 00       		.byte	0
 1941 0072 00       		.byte	0
 1942 0073 0A       		.uleb128 0xa
 1943 0074 2E       		.uleb128 0x2e
 1944 0075 01       		.byte	0x1
 1945 0076 3F       		.uleb128 0x3f
 1946 0077 19       		.uleb128 0x19
 1947 0078 03       		.uleb128 0x3
 1948 0079 0E       		.uleb128 0xe
 1949 007a 3A       		.uleb128 0x3a
 1950 007b 0B       		.uleb128 0xb
 1951 007c 3B       		.uleb128 0x3b
 1952 007d 0B       		.uleb128 0xb
 1953 007e 27       		.uleb128 0x27
 1954 007f 19       		.uleb128 0x19
 1955 0080 11       		.uleb128 0x11
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 39


 1956 0081 01       		.uleb128 0x1
 1957 0082 12       		.uleb128 0x12
 1958 0083 06       		.uleb128 0x6
 1959 0084 40       		.uleb128 0x40
 1960 0085 18       		.uleb128 0x18
 1961 0086 9742     		.uleb128 0x2117
 1962 0088 19       		.uleb128 0x19
 1963 0089 01       		.uleb128 0x1
 1964 008a 13       		.uleb128 0x13
 1965 008b 00       		.byte	0
 1966 008c 00       		.byte	0
 1967 008d 0B       		.uleb128 0xb
 1968 008e 05       		.uleb128 0x5
 1969 008f 00       		.byte	0
 1970 0090 03       		.uleb128 0x3
 1971 0091 0E       		.uleb128 0xe
 1972 0092 3A       		.uleb128 0x3a
 1973 0093 0B       		.uleb128 0xb
 1974 0094 3B       		.uleb128 0x3b
 1975 0095 0B       		.uleb128 0xb
 1976 0096 49       		.uleb128 0x49
 1977 0097 13       		.uleb128 0x13
 1978 0098 02       		.uleb128 0x2
 1979 0099 18       		.uleb128 0x18
 1980 009a 00       		.byte	0
 1981 009b 00       		.byte	0
 1982 009c 0C       		.uleb128 0xc
 1983 009d 34       		.uleb128 0x34
 1984 009e 00       		.byte	0
 1985 009f 03       		.uleb128 0x3
 1986 00a0 08       		.uleb128 0x8
 1987 00a1 3A       		.uleb128 0x3a
 1988 00a2 0B       		.uleb128 0xb
 1989 00a3 3B       		.uleb128 0x3b
 1990 00a4 0B       		.uleb128 0xb
 1991 00a5 49       		.uleb128 0x49
 1992 00a6 13       		.uleb128 0x13
 1993 00a7 02       		.uleb128 0x2
 1994 00a8 18       		.uleb128 0x18
 1995 00a9 00       		.byte	0
 1996 00aa 00       		.byte	0
 1997 00ab 0D       		.uleb128 0xd
 1998 00ac 0F       		.uleb128 0xf
 1999 00ad 00       		.byte	0
 2000 00ae 0B       		.uleb128 0xb
 2001 00af 0B       		.uleb128 0xb
 2002 00b0 49       		.uleb128 0x49
 2003 00b1 13       		.uleb128 0x13
 2004 00b2 00       		.byte	0
 2005 00b3 00       		.byte	0
 2006 00b4 0E       		.uleb128 0xe
 2007 00b5 2E       		.uleb128 0x2e
 2008 00b6 01       		.byte	0x1
 2009 00b7 3F       		.uleb128 0x3f
 2010 00b8 19       		.uleb128 0x19
 2011 00b9 03       		.uleb128 0x3
 2012 00ba 0E       		.uleb128 0xe
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 40


 2013 00bb 3A       		.uleb128 0x3a
 2014 00bc 0B       		.uleb128 0xb
 2015 00bd 3B       		.uleb128 0x3b
 2016 00be 0B       		.uleb128 0xb
 2017 00bf 27       		.uleb128 0x27
 2018 00c0 19       		.uleb128 0x19
 2019 00c1 11       		.uleb128 0x11
 2020 00c2 01       		.uleb128 0x1
 2021 00c3 12       		.uleb128 0x12
 2022 00c4 06       		.uleb128 0x6
 2023 00c5 40       		.uleb128 0x40
 2024 00c6 18       		.uleb128 0x18
 2025 00c7 9642     		.uleb128 0x2116
 2026 00c9 19       		.uleb128 0x19
 2027 00ca 01       		.uleb128 0x1
 2028 00cb 13       		.uleb128 0x13
 2029 00cc 00       		.byte	0
 2030 00cd 00       		.byte	0
 2031 00ce 0F       		.uleb128 0xf
 2032 00cf 2E       		.uleb128 0x2e
 2033 00d0 01       		.byte	0x1
 2034 00d1 3F       		.uleb128 0x3f
 2035 00d2 19       		.uleb128 0x19
 2036 00d3 03       		.uleb128 0x3
 2037 00d4 0E       		.uleb128 0xe
 2038 00d5 3A       		.uleb128 0x3a
 2039 00d6 0B       		.uleb128 0xb
 2040 00d7 3B       		.uleb128 0x3b
 2041 00d8 0B       		.uleb128 0xb
 2042 00d9 27       		.uleb128 0x27
 2043 00da 19       		.uleb128 0x19
 2044 00db 49       		.uleb128 0x49
 2045 00dc 13       		.uleb128 0x13
 2046 00dd 11       		.uleb128 0x11
 2047 00de 01       		.uleb128 0x1
 2048 00df 12       		.uleb128 0x12
 2049 00e0 06       		.uleb128 0x6
 2050 00e1 40       		.uleb128 0x40
 2051 00e2 18       		.uleb128 0x18
 2052 00e3 9742     		.uleb128 0x2117
 2053 00e5 19       		.uleb128 0x19
 2054 00e6 01       		.uleb128 0x1
 2055 00e7 13       		.uleb128 0x13
 2056 00e8 00       		.byte	0
 2057 00e9 00       		.byte	0
 2058 00ea 10       		.uleb128 0x10
 2059 00eb 05       		.uleb128 0x5
 2060 00ec 00       		.byte	0
 2061 00ed 03       		.uleb128 0x3
 2062 00ee 08       		.uleb128 0x8
 2063 00ef 3A       		.uleb128 0x3a
 2064 00f0 0B       		.uleb128 0xb
 2065 00f1 3B       		.uleb128 0x3b
 2066 00f2 0B       		.uleb128 0xb
 2067 00f3 49       		.uleb128 0x49
 2068 00f4 13       		.uleb128 0x13
 2069 00f5 02       		.uleb128 0x2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 41


 2070 00f6 18       		.uleb128 0x18
 2071 00f7 00       		.byte	0
 2072 00f8 00       		.byte	0
 2073 00f9 11       		.uleb128 0x11
 2074 00fa 34       		.uleb128 0x34
 2075 00fb 00       		.byte	0
 2076 00fc 03       		.uleb128 0x3
 2077 00fd 0E       		.uleb128 0xe
 2078 00fe 3A       		.uleb128 0x3a
 2079 00ff 0B       		.uleb128 0xb
 2080 0100 3B       		.uleb128 0x3b
 2081 0101 0B       		.uleb128 0xb
 2082 0102 49       		.uleb128 0x49
 2083 0103 13       		.uleb128 0x13
 2084 0104 02       		.uleb128 0x2
 2085 0105 18       		.uleb128 0x18
 2086 0106 00       		.byte	0
 2087 0107 00       		.byte	0
 2088 0108 12       		.uleb128 0x12
 2089 0109 34       		.uleb128 0x34
 2090 010a 00       		.byte	0
 2091 010b 03       		.uleb128 0x3
 2092 010c 0E       		.uleb128 0xe
 2093 010d 3A       		.uleb128 0x3a
 2094 010e 0B       		.uleb128 0xb
 2095 010f 3B       		.uleb128 0x3b
 2096 0110 05       		.uleb128 0x5
 2097 0111 49       		.uleb128 0x49
 2098 0112 13       		.uleb128 0x13
 2099 0113 3F       		.uleb128 0x3f
 2100 0114 19       		.uleb128 0x19
 2101 0115 3C       		.uleb128 0x3c
 2102 0116 19       		.uleb128 0x19
 2103 0117 00       		.byte	0
 2104 0118 00       		.byte	0
 2105 0119 13       		.uleb128 0x13
 2106 011a 35       		.uleb128 0x35
 2107 011b 00       		.byte	0
 2108 011c 49       		.uleb128 0x49
 2109 011d 13       		.uleb128 0x13
 2110 011e 00       		.byte	0
 2111 011f 00       		.byte	0
 2112 0120 00       		.byte	0
 2113              		.section	.debug_aranges,"",%progbits
 2114 0000 64000000 		.4byte	0x64
 2115 0004 0200     		.2byte	0x2
 2116 0006 00000000 		.4byte	.Ldebug_info0
 2117 000a 04       		.byte	0x4
 2118 000b 00       		.byte	0
 2119 000c 0000     		.2byte	0
 2120 000e 0000     		.2byte	0
 2121 0010 00000000 		.4byte	.LFB63
 2122 0014 4A000000 		.4byte	.LFE63-.LFB63
 2123 0018 00000000 		.4byte	.LFB64
 2124 001c 50000000 		.4byte	.LFE64-.LFB64
 2125 0020 00000000 		.4byte	.LFB65
 2126 0024 60000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 42


 2127 0028 00000000 		.4byte	.LFB66
 2128 002c 72000000 		.4byte	.LFE66-.LFB66
 2129 0030 00000000 		.4byte	.LFB67
 2130 0034 86000000 		.4byte	.LFE67-.LFB67
 2131 0038 00000000 		.4byte	.LFB68
 2132 003c 38010000 		.4byte	.LFE68-.LFB68
 2133 0040 00000000 		.4byte	.LFB69
 2134 0044 34010000 		.4byte	.LFE69-.LFB69
 2135 0048 00000000 		.4byte	.LFB70
 2136 004c 88010000 		.4byte	.LFE70-.LFB70
 2137 0050 00000000 		.4byte	.LFB71
 2138 0054 72000000 		.4byte	.LFE71-.LFB71
 2139 0058 00000000 		.4byte	.LFB72
 2140 005c 52000000 		.4byte	.LFE72-.LFB72
 2141 0060 00000000 		.4byte	0
 2142 0064 00000000 		.4byte	0
 2143              		.section	.debug_ranges,"",%progbits
 2144              	.Ldebug_ranges0:
 2145 0000 00000000 		.4byte	.LFB63
 2146 0004 4A000000 		.4byte	.LFE63
 2147 0008 00000000 		.4byte	.LFB64
 2148 000c 50000000 		.4byte	.LFE64
 2149 0010 00000000 		.4byte	.LFB65
 2150 0014 60000000 		.4byte	.LFE65
 2151 0018 00000000 		.4byte	.LFB66
 2152 001c 72000000 		.4byte	.LFE66
 2153 0020 00000000 		.4byte	.LFB67
 2154 0024 86000000 		.4byte	.LFE67
 2155 0028 00000000 		.4byte	.LFB68
 2156 002c 38010000 		.4byte	.LFE68
 2157 0030 00000000 		.4byte	.LFB69
 2158 0034 34010000 		.4byte	.LFE69
 2159 0038 00000000 		.4byte	.LFB70
 2160 003c 88010000 		.4byte	.LFE70
 2161 0040 00000000 		.4byte	.LFB71
 2162 0044 72000000 		.4byte	.LFE71
 2163 0048 00000000 		.4byte	.LFB72
 2164 004c 52000000 		.4byte	.LFE72
 2165 0050 00000000 		.4byte	0
 2166 0054 00000000 		.4byte	0
 2167              		.section	.debug_line,"",%progbits
 2168              	.Ldebug_line0:
 2169 0000 EF020000 		.section	.debug_str,"MS",%progbits,1
 2169      02004901 
 2169      00000201 
 2169      FB0E0D00 
 2169      01010101 
 2170              	.LASF32:
 2171 0000 64697370 		.ascii	"disp_grid_init_ttc\000"
 2171      5F677269 
 2171      645F696E 
 2171      69745F74 
 2171      746300
 2172              	.LASF40:
 2173 0013 64697370 		.ascii	"disp_grid_ttc_getval\000"
 2173      5F677269 
 2173      645F7474 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 43


 2173      635F6765 
 2173      7476616C 
 2174              	.LASF37:
 2175 0028 433A5C55 		.ascii	"C:\\Users\\Andrew\\Dropbox (Personal)\\MIT\\MIT 201"
 2175      73657273 
 2175      5C416E64 
 2175      7265775C 
 2175      44726F70 
 2176 0056 36205370 		.ascii	"6 Spring\\6115\\Final Project\\Code\\VGA\\Tic Tac T"
 2176      72696E67 
 2176      5C363131 
 2176      355C4669 
 2176      6E616C20 
 2177 0084 6F652E63 		.ascii	"oe.cydsn\000"
 2177      7964736E 
 2177      00
 2178              	.LASF30:
 2179 008d 76616C75 		.ascii	"value\000"
 2179      6500
 2180              	.LASF16:
 2181 0093 77616974 		.ascii	"waiter\000"
 2181      657200
 2182              	.LASF17:
 2183 009a 64697370 		.ascii	"disp_grid_init\000"
 2183      5F677269 
 2183      645F696E 
 2183      697400
 2184              	.LASF9:
 2185 00a9 5F5F696E 		.ascii	"__int32_t\000"
 2185      7433325F 
 2185      7400
 2186              	.LASF35:
 2187 00b3 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2187      4320342E 
 2187      392E3320 
 2187      32303135 
 2187      30333033 
 2188 00e6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2188      20726576 
 2188      6973696F 
 2188      6E203232 
 2188      31323230 
 2189 0119 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2189      66756E63 
 2189      74696F6E 
 2189      2D736563 
 2189      74696F6E 
 2190              	.LASF22:
 2191 0141 785F7374 		.ascii	"x_start\000"
 2191      61727400 
 2192              	.LASF28:
 2193 0149 746F7265 		.ascii	"toreturn\000"
 2193      7475726E 
 2193      00
 2194              	.LASF12:
 2195 0152 666C6F61 		.ascii	"float\000"
 2195      7400
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 44


 2196              	.LASF23:
 2197 0158 795F7374 		.ascii	"y_start\000"
 2197      61727400 
 2198              	.LASF1:
 2199 0160 756E7369 		.ascii	"unsigned char\000"
 2199      676E6564 
 2199      20636861 
 2199      7200
 2200              	.LASF26:
 2201 016e 64697370 		.ascii	"disp_grid_draw_xia\000"
 2201      5F677269 
 2201      645F6472 
 2201      61775F78 
 2201      696100
 2202              	.LASF5:
 2203 0181 6C6F6E67 		.ascii	"long unsigned int\000"
 2203      20756E73 
 2203      69676E65 
 2203      6420696E 
 2203      7400
 2204              	.LASF25:
 2205 0193 795F6865 		.ascii	"y_height\000"
 2205      69676874 
 2205      00
 2206              	.LASF36:
 2207 019c 2E5C6469 		.ascii	".\\disp.c\000"
 2207      73702E63 
 2207      00
 2208              	.LASF13:
 2209 01a5 646F7562 		.ascii	"double\000"
 2209      6C6500
 2210              	.LASF34:
 2211 01ac 64697370 		.ascii	"disp_grid_transmit\000"
 2211      5F677269 
 2211      645F7472 
 2211      616E736D 
 2211      697400
 2212              	.LASF20:
 2213 01bf 636F6C6F 		.ascii	"color\000"
 2213      7200
 2214              	.LASF41:
 2215 01c5 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2215      52784275 
 2215      66666572 
 2215      00
 2216              	.LASF29:
 2217 01d2 64697370 		.ascii	"disp_grid_ttc_place_value\000"
 2217      5F677269 
 2217      645F7474 
 2217      635F706C 
 2217      6163655F 
 2218              	.LASF8:
 2219 01ec 756E7369 		.ascii	"unsigned int\000"
 2219      676E6564 
 2219      20696E74 
 2219      00
 2220              	.LASF7:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 45


 2221 01f9 6C6F6E67 		.ascii	"long long unsigned int\000"
 2221      206C6F6E 
 2221      6720756E 
 2221      7369676E 
 2221      65642069 
 2222              	.LASF21:
 2223 0210 64697370 		.ascii	"disp_grid_draw_square\000"
 2223      5F677269 
 2223      645F6472 
 2223      61775F73 
 2223      71756172 
 2224              	.LASF19:
 2225 0226 64697370 		.ascii	"disp\000"
 2225      00
 2226              	.LASF38:
 2227 022b 64697370 		.ascii	"disp_grid_81\000"
 2227      5F677269 
 2227      645F3831 
 2227      00
 2228              	.LASF10:
 2229 0238 696E7433 		.ascii	"int32_t\000"
 2229      325F7400 
 2230              	.LASF15:
 2231 0240 73697A65 		.ascii	"sizetype\000"
 2231      74797065 
 2231      00
 2232              	.LASF31:
 2233 0249 64697370 		.ascii	"disp_grid_ttc_place\000"
 2233      5F677269 
 2233      645F7474 
 2233      635F706C 
 2233      61636500 
 2234              	.LASF6:
 2235 025d 6C6F6E67 		.ascii	"long long int\000"
 2235      206C6F6E 
 2235      6720696E 
 2235      7400
 2236              	.LASF18:
 2237 026b 7365636F 		.ascii	"seconds\000"
 2237      6E647300 
 2238              	.LASF14:
 2239 0273 63686172 		.ascii	"char\000"
 2239      00
 2240              	.LASF39:
 2241 0278 6D617472 		.ascii	"matrix\000"
 2241      697800
 2242              	.LASF2:
 2243 027f 73686F72 		.ascii	"short int\000"
 2243      7420696E 
 2243      7400
 2244              	.LASF24:
 2245 0289 785F7769 		.ascii	"x_width\000"
 2245      64746800 
 2246              	.LASF11:
 2247 0291 75696E74 		.ascii	"uint8\000"
 2247      3800
 2248              	.LASF33:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\ccY8GQy3.s 			page 46


 2249 0297 67726964 		.ascii	"grid\000"
 2249      00
 2250              	.LASF4:
 2251 029c 6C6F6E67 		.ascii	"long int\000"
 2251      20696E74 
 2251      00
 2252              	.LASF0:
 2253 02a5 7369676E 		.ascii	"signed char\000"
 2253      65642063 
 2253      68617200 
 2254              	.LASF3:
 2255 02b1 73686F72 		.ascii	"short unsigned int\000"
 2255      7420756E 
 2255      7369676E 
 2255      65642069 
 2255      6E7400
 2256              	.LASF27:
 2257 02c4 64697370 		.ascii	"disp_grid_draw_hu\000"
 2257      5F677269 
 2257      645F6472 
 2257      61775F68 
 2257      7500
 2258              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
