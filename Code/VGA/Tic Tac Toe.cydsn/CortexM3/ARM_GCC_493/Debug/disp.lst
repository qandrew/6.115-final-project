ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"disp.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.waiter,"ax",%progbits
  19              		.align	2
  20              		.global	waiter
  21              		.thumb
  22              		.thumb_func
  23              		.type	waiter, %function
  24              	waiter:
  25              	.LFB63:
  26              		.file 1 ".\\disp.c"
   1:.\disp.c      **** /* ========================================
   2:.\disp.c      ****  *
   3:.\disp.c      ****  * Copyright HUDING ENTERPRISES, 2016
   4:.\disp.c      ****  * All Rights Reserved
   5:.\disp.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\disp.c      ****  *
   7:.\disp.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\disp.c      ****  * WHICH IS THE PROPERTY OF Andrew Xia.
   9:.\disp.c      ****  *
  10:.\disp.c      ****  * ========================================
  11:.\disp.c      **** */
  12:.\disp.c      **** 
  13:.\disp.c      **** //this file contains all relevant display structures and methods
  14:.\disp.c      **** 
  15:.\disp.c      **** #ifndef DEVICE_H
  16:.\disp.c      **** #define DEVICE_H
  17:.\disp.c      **** #include <project.h>
  18:.\disp.c      **** 
  19:.\disp.c      **** #endif
  20:.\disp.c      **** 
  21:.\disp.c      **** struct disp_grid_81{ //for 32x24 grid
  22:.\disp.c      ****     uint8 matrix[32][24];
  23:.\disp.c      ****     //uint8 damn
  24:.\disp.c      **** };
  25:.\disp.c      **** 
  26:.\disp.c      **** void waiter( int seconds ){   // dumb wait
  27              		.loc 1 26 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 2


  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 85B0     		sub	sp, sp, #20
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  27:.\disp.c      ****     int i,j;
  28:.\disp.c      ****     for (i = 0; i < seconds*10; i++){
  40              		.loc 1 28 0
  41 0008 0023     		movs	r3, #0
  42 000a FB60     		str	r3, [r7, #12]
  43 000c 0FE0     		b	.L2
  44              	.L5:
  29:.\disp.c      ****         for (j = 0; j < seconds*100; j++){
  45              		.loc 1 29 0
  46 000e 0023     		movs	r3, #0
  47 0010 BB60     		str	r3, [r7, #8]
  48 0012 02E0     		b	.L3
  49              	.L4:
  50              		.loc 1 29 0 is_stmt 0 discriminator 3
  51 0014 BB68     		ldr	r3, [r7, #8]
  52 0016 0133     		adds	r3, r3, #1
  53 0018 BB60     		str	r3, [r7, #8]
  54              	.L3:
  55              		.loc 1 29 0 discriminator 1
  56 001a 7B68     		ldr	r3, [r7, #4]
  57 001c 6422     		movs	r2, #100
  58 001e 02FB03F2 		mul	r2, r2, r3
  59 0022 BB68     		ldr	r3, [r7, #8]
  60 0024 9A42     		cmp	r2, r3
  61 0026 F5DC     		bgt	.L4
  28:.\disp.c      ****         for (j = 0; j < seconds*100; j++){
  62              		.loc 1 28 0 is_stmt 1 discriminator 2
  63 0028 FB68     		ldr	r3, [r7, #12]
  64 002a 0133     		adds	r3, r3, #1
  65 002c FB60     		str	r3, [r7, #12]
  66              	.L2:
  28:.\disp.c      ****         for (j = 0; j < seconds*100; j++){
  67              		.loc 1 28 0 is_stmt 0 discriminator 1
  68 002e 7A68     		ldr	r2, [r7, #4]
  69 0030 1346     		mov	r3, r2
  70 0032 9B00     		lsls	r3, r3, #2
  71 0034 1344     		add	r3, r3, r2
  72 0036 5B00     		lsls	r3, r3, #1
  73 0038 1A46     		mov	r2, r3
  74 003a FB68     		ldr	r3, [r7, #12]
  75 003c 9A42     		cmp	r2, r3
  76 003e E6DC     		bgt	.L5
  30:.\disp.c      ****         }
  31:.\disp.c      ****     }
  32:.\disp.c      **** }
  77              		.loc 1 32 0 is_stmt 1
  78 0040 1437     		adds	r7, r7, #20
  79              		.cfi_def_cfa_offset 4
  80 0042 BD46     		mov	sp, r7
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 3


  81              		.cfi_def_cfa_register 13
  82              		@ sp needed
  83 0044 5DF8047B 		ldr	r7, [sp], #4
  84              		.cfi_restore 7
  85              		.cfi_def_cfa_offset 0
  86 0048 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE63:
  89              		.size	waiter, .-waiter
  90 004a 00BF     		.section	.text.disp_grid_init,"ax",%progbits
  91              		.align	2
  92              		.global	disp_grid_init
  93              		.thumb
  94              		.thumb_func
  95              		.type	disp_grid_init, %function
  96              	disp_grid_init:
  97              	.LFB64:
  33:.\disp.c      **** 
  34:.\disp.c      **** void disp_grid_init(struct disp_grid_81* disp, uint8 color){ 
  98              		.loc 1 34 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 16
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103 0000 80B4     		push	{r7}
 104              		.cfi_def_cfa_offset 4
 105              		.cfi_offset 7, -4
 106 0002 85B0     		sub	sp, sp, #20
 107              		.cfi_def_cfa_offset 24
 108 0004 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110 0006 7860     		str	r0, [r7, #4]
 111 0008 0B46     		mov	r3, r1
 112 000a FB70     		strb	r3, [r7, #3]
  35:.\disp.c      ****     int row,col;
  36:.\disp.c      ****     for (row = 0; row < 32; row++){
 113              		.loc 1 36 0
 114 000c 0023     		movs	r3, #0
 115 000e FB60     		str	r3, [r7, #12]
 116 0010 16E0     		b	.L7
 117              	.L10:
  37:.\disp.c      ****         for (col = 0; col < 24; col++){
 118              		.loc 1 37 0
 119 0012 0023     		movs	r3, #0
 120 0014 BB60     		str	r3, [r7, #8]
 121 0016 0DE0     		b	.L8
 122              	.L9:
  38:.\disp.c      ****             disp->matrix[row][col] = color; // init as please
 123              		.loc 1 38 0 discriminator 3
 124 0018 7968     		ldr	r1, [r7, #4]
 125 001a FA68     		ldr	r2, [r7, #12]
 126 001c 1346     		mov	r3, r2
 127 001e 5B00     		lsls	r3, r3, #1
 128 0020 1344     		add	r3, r3, r2
 129 0022 DB00     		lsls	r3, r3, #3
 130 0024 BA68     		ldr	r2, [r7, #8]
 131 0026 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 4


 132 0028 0B44     		add	r3, r3, r1
 133 002a FA78     		ldrb	r2, [r7, #3]
 134 002c 1A70     		strb	r2, [r3]
  37:.\disp.c      ****         for (col = 0; col < 24; col++){
 135              		.loc 1 37 0 discriminator 3
 136 002e BB68     		ldr	r3, [r7, #8]
 137 0030 0133     		adds	r3, r3, #1
 138 0032 BB60     		str	r3, [r7, #8]
 139              	.L8:
  37:.\disp.c      ****         for (col = 0; col < 24; col++){
 140              		.loc 1 37 0 is_stmt 0 discriminator 1
 141 0034 BB68     		ldr	r3, [r7, #8]
 142 0036 172B     		cmp	r3, #23
 143 0038 EEDD     		ble	.L9
  36:.\disp.c      ****         for (col = 0; col < 24; col++){
 144              		.loc 1 36 0 is_stmt 1 discriminator 2
 145 003a FB68     		ldr	r3, [r7, #12]
 146 003c 0133     		adds	r3, r3, #1
 147 003e FB60     		str	r3, [r7, #12]
 148              	.L7:
  36:.\disp.c      ****         for (col = 0; col < 24; col++){
 149              		.loc 1 36 0 is_stmt 0 discriminator 1
 150 0040 FB68     		ldr	r3, [r7, #12]
 151 0042 1F2B     		cmp	r3, #31
 152 0044 E5DD     		ble	.L10
  39:.\disp.c      ****         }
  40:.\disp.c      ****     }
  41:.\disp.c      ****     //UART_PutChar(0x03); // red
  42:.\disp.c      **** }
 153              		.loc 1 42 0 is_stmt 1
 154 0046 1437     		adds	r7, r7, #20
 155              		.cfi_def_cfa_offset 4
 156 0048 BD46     		mov	sp, r7
 157              		.cfi_def_cfa_register 13
 158              		@ sp needed
 159 004a 5DF8047B 		ldr	r7, [sp], #4
 160              		.cfi_restore 7
 161              		.cfi_def_cfa_offset 0
 162 004e 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE64:
 165              		.size	disp_grid_init, .-disp_grid_init
 166              		.section	.text.disp_grid_draw_square,"ax",%progbits
 167              		.align	2
 168              		.global	disp_grid_draw_square
 169              		.thumb
 170              		.thumb_func
 171              		.type	disp_grid_draw_square, %function
 172              	disp_grid_draw_square:
 173              	.LFB65:
  43:.\disp.c      **** 
  44:.\disp.c      **** void disp_grid_draw_square(struct disp_grid_81* disp, int x_start, int y_start, int x_width, int y_
 174              		.loc 1 44 0
 175              		.cfi_startproc
 176              		@ args = 8, pretend = 0, frame = 24
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178              		@ link register save eliminated.
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 5


 179 0000 80B4     		push	{r7}
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
 182 0002 87B0     		sub	sp, sp, #28
 183              		.cfi_def_cfa_offset 32
 184 0004 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 186 0006 F860     		str	r0, [r7, #12]
 187 0008 B960     		str	r1, [r7, #8]
 188 000a 7A60     		str	r2, [r7, #4]
 189 000c 3B60     		str	r3, [r7]
  45:.\disp.c      ****     int x,y;
  46:.\disp.c      ****     for (x = x_start; x < x_start + x_width; x++){
 190              		.loc 1 46 0
 191 000e BB68     		ldr	r3, [r7, #8]
 192 0010 7B61     		str	r3, [r7, #20]
 193 0012 1AE0     		b	.L12
 194              	.L15:
  47:.\disp.c      ****         for (y = y_start; y < y_start + y_height; y++){
 195              		.loc 1 47 0
 196 0014 7B68     		ldr	r3, [r7, #4]
 197 0016 3B61     		str	r3, [r7, #16]
 198 0018 0EE0     		b	.L13
 199              	.L14:
  48:.\disp.c      ****             disp->matrix[x][y] = color;
 200              		.loc 1 48 0 discriminator 3
 201 001a F968     		ldr	r1, [r7, #12]
 202 001c 7A69     		ldr	r2, [r7, #20]
 203 001e 1346     		mov	r3, r2
 204 0020 5B00     		lsls	r3, r3, #1
 205 0022 1344     		add	r3, r3, r2
 206 0024 DB00     		lsls	r3, r3, #3
 207 0026 3A69     		ldr	r2, [r7, #16]
 208 0028 1344     		add	r3, r3, r2
 209 002a 0B44     		add	r3, r3, r1
 210 002c 97F82420 		ldrb	r2, [r7, #36]
 211 0030 1A70     		strb	r2, [r3]
  47:.\disp.c      ****         for (y = y_start; y < y_start + y_height; y++){
 212              		.loc 1 47 0 discriminator 3
 213 0032 3B69     		ldr	r3, [r7, #16]
 214 0034 0133     		adds	r3, r3, #1
 215 0036 3B61     		str	r3, [r7, #16]
 216              	.L13:
  47:.\disp.c      ****         for (y = y_start; y < y_start + y_height; y++){
 217              		.loc 1 47 0 is_stmt 0 discriminator 1
 218 0038 7A68     		ldr	r2, [r7, #4]
 219 003a 3B6A     		ldr	r3, [r7, #32]
 220 003c 1A44     		add	r2, r2, r3
 221 003e 3B69     		ldr	r3, [r7, #16]
 222 0040 9A42     		cmp	r2, r3
 223 0042 EADC     		bgt	.L14
  46:.\disp.c      ****         for (y = y_start; y < y_start + y_height; y++){
 224              		.loc 1 46 0 is_stmt 1 discriminator 2
 225 0044 7B69     		ldr	r3, [r7, #20]
 226 0046 0133     		adds	r3, r3, #1
 227 0048 7B61     		str	r3, [r7, #20]
 228              	.L12:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 6


  46:.\disp.c      ****         for (y = y_start; y < y_start + y_height; y++){
 229              		.loc 1 46 0 is_stmt 0 discriminator 1
 230 004a BA68     		ldr	r2, [r7, #8]
 231 004c 3B68     		ldr	r3, [r7]
 232 004e 1A44     		add	r2, r2, r3
 233 0050 7B69     		ldr	r3, [r7, #20]
 234 0052 9A42     		cmp	r2, r3
 235 0054 DEDC     		bgt	.L15
  49:.\disp.c      ****         }
  50:.\disp.c      ****     }
  51:.\disp.c      **** }
 236              		.loc 1 51 0 is_stmt 1
 237 0056 1C37     		adds	r7, r7, #28
 238              		.cfi_def_cfa_offset 4
 239 0058 BD46     		mov	sp, r7
 240              		.cfi_def_cfa_register 13
 241              		@ sp needed
 242 005a 5DF8047B 		ldr	r7, [sp], #4
 243              		.cfi_restore 7
 244              		.cfi_def_cfa_offset 0
 245 005e 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE65:
 248              		.size	disp_grid_draw_square, .-disp_grid_draw_square
 249              		.section	.text.disp_grid_draw_xia,"ax",%progbits
 250              		.align	2
 251              		.global	disp_grid_draw_xia
 252              		.thumb
 253              		.thumb_func
 254              		.type	disp_grid_draw_xia, %function
 255              	disp_grid_draw_xia:
 256              	.LFB66:
  52:.\disp.c      **** 
  53:.\disp.c      **** void disp_grid_draw_xia(struct disp_grid_81* disp, int x_start, int y_start, uint8 color){ // displ
 257              		.loc 1 53 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 16
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 86B0     		sub	sp, sp, #24
 266              		.cfi_def_cfa_offset 32
 267 0004 02AF     		add	r7, sp, #8
 268              		.cfi_def_cfa 7, 24
 269 0006 F860     		str	r0, [r7, #12]
 270 0008 B960     		str	r1, [r7, #8]
 271 000a 7A60     		str	r2, [r7, #4]
 272 000c FB70     		strb	r3, [r7, #3]
  54:.\disp.c      ****     disp_grid_draw_square(disp,x_start,y_start,5,1,color);
 273              		.loc 1 54 0
 274 000e 0123     		movs	r3, #1
 275 0010 0093     		str	r3, [sp]
 276 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 277 0014 0193     		str	r3, [sp, #4]
 278 0016 F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 7


 279 0018 B968     		ldr	r1, [r7, #8]
 280 001a 7A68     		ldr	r2, [r7, #4]
 281 001c 0523     		movs	r3, #5
 282 001e FFF7FEFF 		bl	disp_grid_draw_square
  55:.\disp.c      ****     disp_grid_draw_square(disp,x_start+2,y_start+1,1,6,color);
 283              		.loc 1 55 0
 284 0022 BB68     		ldr	r3, [r7, #8]
 285 0024 991C     		adds	r1, r3, #2
 286 0026 7B68     		ldr	r3, [r7, #4]
 287 0028 5A1C     		adds	r2, r3, #1
 288 002a 0623     		movs	r3, #6
 289 002c 0093     		str	r3, [sp]
 290 002e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 291 0030 0193     		str	r3, [sp, #4]
 292 0032 F868     		ldr	r0, [r7, #12]
 293 0034 0123     		movs	r3, #1
 294 0036 FFF7FEFF 		bl	disp_grid_draw_square
  56:.\disp.c      ****     disp_grid_draw_square(disp,x_start+3,y_start+3,2,1,color);
 295              		.loc 1 56 0
 296 003a BB68     		ldr	r3, [r7, #8]
 297 003c D91C     		adds	r1, r3, #3
 298 003e 7B68     		ldr	r3, [r7, #4]
 299 0040 DA1C     		adds	r2, r3, #3
 300 0042 0123     		movs	r3, #1
 301 0044 0093     		str	r3, [sp]
 302 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 303 0048 0193     		str	r3, [sp, #4]
 304 004a F868     		ldr	r0, [r7, #12]
 305 004c 0223     		movs	r3, #2
 306 004e FFF7FEFF 		bl	disp_grid_draw_square
  57:.\disp.c      ****     disp->matrix[x_start+4][y_start+4] = color;
 307              		.loc 1 57 0
 308 0052 BB68     		ldr	r3, [r7, #8]
 309 0054 1A1D     		adds	r2, r3, #4
 310 0056 7B68     		ldr	r3, [r7, #4]
 311 0058 181D     		adds	r0, r3, #4
 312 005a F968     		ldr	r1, [r7, #12]
 313 005c 1346     		mov	r3, r2
 314 005e 5B00     		lsls	r3, r3, #1
 315 0060 1344     		add	r3, r3, r2
 316 0062 DB00     		lsls	r3, r3, #3
 317 0064 0344     		add	r3, r3, r0
 318 0066 0B44     		add	r3, r3, r1
 319 0068 FA78     		ldrb	r2, [r7, #3]
 320 006a 1A70     		strb	r2, [r3]
  58:.\disp.c      **** }
 321              		.loc 1 58 0
 322 006c 1037     		adds	r7, r7, #16
 323              		.cfi_def_cfa_offset 8
 324 006e BD46     		mov	sp, r7
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 0070 80BD     		pop	{r7, pc}
 328              		.cfi_endproc
 329              	.LFE66:
 330              		.size	disp_grid_draw_xia, .-disp_grid_draw_xia
 331 0072 00BF     		.section	.text.disp_grid_draw_hu,"ax",%progbits
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 8


 332              		.align	2
 333              		.global	disp_grid_draw_hu
 334              		.thumb
 335              		.thumb_func
 336              		.type	disp_grid_draw_hu, %function
 337              	disp_grid_draw_hu:
 338              	.LFB67:
  59:.\disp.c      **** 
  60:.\disp.c      **** void disp_grid_draw_hu(struct disp_grid_81* disp){ // draws black H U on board
 339              		.loc 1 60 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 8
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 80B5     		push	{r7, lr}
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 84B0     		sub	sp, sp, #16
 348              		.cfi_def_cfa_offset 24
 349 0004 02AF     		add	r7, sp, #8
 350              		.cfi_def_cfa 7, 16
 351 0006 7860     		str	r0, [r7, #4]
  61:.\disp.c      ****     disp_grid_draw_square(disp,5,5,2,10,0x00); //H
 352              		.loc 1 61 0
 353 0008 0A23     		movs	r3, #10
 354 000a 0093     		str	r3, [sp]
 355 000c 0023     		movs	r3, #0
 356 000e 0193     		str	r3, [sp, #4]
 357 0010 7868     		ldr	r0, [r7, #4]
 358 0012 0521     		movs	r1, #5
 359 0014 0522     		movs	r2, #5
 360 0016 0223     		movs	r3, #2
 361 0018 FFF7FEFF 		bl	disp_grid_draw_square
  62:.\disp.c      ****     disp_grid_draw_square(disp,10,5,2,10,0x00);
 362              		.loc 1 62 0
 363 001c 0A23     		movs	r3, #10
 364 001e 0093     		str	r3, [sp]
 365 0020 0023     		movs	r3, #0
 366 0022 0193     		str	r3, [sp, #4]
 367 0024 7868     		ldr	r0, [r7, #4]
 368 0026 0A21     		movs	r1, #10
 369 0028 0522     		movs	r2, #5
 370 002a 0223     		movs	r3, #2
 371 002c FFF7FEFF 		bl	disp_grid_draw_square
  63:.\disp.c      ****     disp_grid_draw_square(disp,7,10,3,2,0x00);
 372              		.loc 1 63 0
 373 0030 0223     		movs	r3, #2
 374 0032 0093     		str	r3, [sp]
 375 0034 0023     		movs	r3, #0
 376 0036 0193     		str	r3, [sp, #4]
 377 0038 7868     		ldr	r0, [r7, #4]
 378 003a 0721     		movs	r1, #7
 379 003c 0A22     		movs	r2, #10
 380 003e 0323     		movs	r3, #3
 381 0040 FFF7FEFF 		bl	disp_grid_draw_square
  64:.\disp.c      ****     disp_grid_draw_square(disp,14,5,2,10,0x00); //U
 382              		.loc 1 64 0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 9


 383 0044 0A23     		movs	r3, #10
 384 0046 0093     		str	r3, [sp]
 385 0048 0023     		movs	r3, #0
 386 004a 0193     		str	r3, [sp, #4]
 387 004c 7868     		ldr	r0, [r7, #4]
 388 004e 0E21     		movs	r1, #14
 389 0050 0522     		movs	r2, #5
 390 0052 0223     		movs	r3, #2
 391 0054 FFF7FEFF 		bl	disp_grid_draw_square
  65:.\disp.c      ****     disp_grid_draw_square(disp,19,5,2,10,0x00);
 392              		.loc 1 65 0
 393 0058 0A23     		movs	r3, #10
 394 005a 0093     		str	r3, [sp]
 395 005c 0023     		movs	r3, #0
 396 005e 0193     		str	r3, [sp, #4]
 397 0060 7868     		ldr	r0, [r7, #4]
 398 0062 1321     		movs	r1, #19
 399 0064 0522     		movs	r2, #5
 400 0066 0223     		movs	r3, #2
 401 0068 FFF7FEFF 		bl	disp_grid_draw_square
  66:.\disp.c      ****     disp_grid_draw_square(disp,16,13,3,2,0x00);
 402              		.loc 1 66 0
 403 006c 0223     		movs	r3, #2
 404 006e 0093     		str	r3, [sp]
 405 0070 0023     		movs	r3, #0
 406 0072 0193     		str	r3, [sp, #4]
 407 0074 7868     		ldr	r0, [r7, #4]
 408 0076 1021     		movs	r1, #16
 409 0078 0D22     		movs	r2, #13
 410 007a 0323     		movs	r3, #3
 411 007c FFF7FEFF 		bl	disp_grid_draw_square
  67:.\disp.c      **** }
 412              		.loc 1 67 0
 413 0080 0837     		adds	r7, r7, #8
 414              		.cfi_def_cfa_offset 8
 415 0082 BD46     		mov	sp, r7
 416              		.cfi_def_cfa_register 13
 417              		@ sp needed
 418 0084 80BD     		pop	{r7, pc}
 419              		.cfi_endproc
 420              	.LFE67:
 421              		.size	disp_grid_draw_hu, .-disp_grid_draw_hu
 422 0086 00BF     		.section	.text.disp_grid_ttc_place,"ax",%progbits
 423              		.align	2
 424              		.global	disp_grid_ttc_place
 425              		.thumb
 426              		.thumb_func
 427              		.type	disp_grid_ttc_place, %function
 428              	disp_grid_ttc_place:
 429              	.LFB68:
  68:.\disp.c      **** 
  69:.\disp.c      **** void disp_grid_ttc_place(struct disp_grid_81* disp, int i, int value){ // place color based on 
 430              		.loc 1 69 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 24
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 10


 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0002 88B0     		sub	sp, sp, #32
 439              		.cfi_def_cfa_offset 40
 440 0004 02AF     		add	r7, sp, #8
 441              		.cfi_def_cfa 7, 32
 442 0006 F860     		str	r0, [r7, #12]
 443 0008 B960     		str	r1, [r7, #8]
 444 000a 7A60     		str	r2, [r7, #4]
  70:.\disp.c      ****     int x,y; // first, we want to get the x,y coords
  71:.\disp.c      ****     if (i < 16 && i >= 0){ //z = 0
 445              		.loc 1 71 0
 446 000c BB68     		ldr	r3, [r7, #8]
 447 000e 0F2B     		cmp	r3, #15
 448 0010 1DDC     		bgt	.L19
 449              		.loc 1 71 0 is_stmt 0 discriminator 1
 450 0012 BB68     		ldr	r3, [r7, #8]
 451 0014 002B     		cmp	r3, #0
 452 0016 1ADB     		blt	.L19
  72:.\disp.c      ****         x = i%4;
 453              		.loc 1 72 0 is_stmt 1
 454 0018 BA68     		ldr	r2, [r7, #8]
 455 001a 594B     		ldr	r3, .L34
 456 001c 1340     		ands	r3, r3, r2
 457 001e 002B     		cmp	r3, #0
 458 0020 03DA     		bge	.L20
 459 0022 013B     		subs	r3, r3, #1
 460 0024 63F00303 		orn	r3, r3, #3
 461 0028 0133     		adds	r3, r3, #1
 462              	.L20:
 463 002a 7B61     		str	r3, [r7, #20]
  73:.\disp.c      ****         y = (i-x)/4; // we want to start at 1,1
 464              		.loc 1 73 0
 465 002c BA68     		ldr	r2, [r7, #8]
 466 002e 7B69     		ldr	r3, [r7, #20]
 467 0030 D31A     		subs	r3, r2, r3
 468 0032 002B     		cmp	r3, #0
 469 0034 00DA     		bge	.L21
 470 0036 0333     		adds	r3, r3, #3
 471              	.L21:
 472 0038 9B10     		asrs	r3, r3, #2
 473 003a 3B61     		str	r3, [r7, #16]
  74:.\disp.c      ****         x = 2*x + 1;
 474              		.loc 1 74 0
 475 003c 7B69     		ldr	r3, [r7, #20]
 476 003e 5B00     		lsls	r3, r3, #1
 477 0040 0133     		adds	r3, r3, #1
 478 0042 7B61     		str	r3, [r7, #20]
  75:.\disp.c      ****         y = 2*y + 1;
 479              		.loc 1 75 0
 480 0044 3B69     		ldr	r3, [r7, #16]
 481 0046 5B00     		lsls	r3, r3, #1
 482 0048 0133     		adds	r3, r3, #1
 483 004a 3B61     		str	r3, [r7, #16]
 484 004c 61E0     		b	.L22
 485              	.L19:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 11


  76:.\disp.c      ****     }
  77:.\disp.c      ****     else if (i < 32){ // z = 1
 486              		.loc 1 77 0
 487 004e BB68     		ldr	r3, [r7, #8]
 488 0050 1F2B     		cmp	r3, #31
 489 0052 1DDC     		bgt	.L23
  78:.\disp.c      ****         i -= 16;
 490              		.loc 1 78 0
 491 0054 BB68     		ldr	r3, [r7, #8]
 492 0056 103B     		subs	r3, r3, #16
 493 0058 BB60     		str	r3, [r7, #8]
  79:.\disp.c      ****         x = i%4;
 494              		.loc 1 79 0
 495 005a BA68     		ldr	r2, [r7, #8]
 496 005c 484B     		ldr	r3, .L34
 497 005e 1340     		ands	r3, r3, r2
 498 0060 002B     		cmp	r3, #0
 499 0062 03DA     		bge	.L24
 500 0064 013B     		subs	r3, r3, #1
 501 0066 63F00303 		orn	r3, r3, #3
 502 006a 0133     		adds	r3, r3, #1
 503              	.L24:
 504 006c 7B61     		str	r3, [r7, #20]
  80:.\disp.c      ****         y = (i-x)/4; // we want to start at 1,11
 505              		.loc 1 80 0
 506 006e BA68     		ldr	r2, [r7, #8]
 507 0070 7B69     		ldr	r3, [r7, #20]
 508 0072 D31A     		subs	r3, r2, r3
 509 0074 002B     		cmp	r3, #0
 510 0076 00DA     		bge	.L25
 511 0078 0333     		adds	r3, r3, #3
 512              	.L25:
 513 007a 9B10     		asrs	r3, r3, #2
 514 007c 3B61     		str	r3, [r7, #16]
  81:.\disp.c      ****         x = 2*x + 1;
 515              		.loc 1 81 0
 516 007e 7B69     		ldr	r3, [r7, #20]
 517 0080 5B00     		lsls	r3, r3, #1
 518 0082 0133     		adds	r3, r3, #1
 519 0084 7B61     		str	r3, [r7, #20]
  82:.\disp.c      ****         y = 2*y + 11;
 520              		.loc 1 82 0
 521 0086 3B69     		ldr	r3, [r7, #16]
 522 0088 5B00     		lsls	r3, r3, #1
 523 008a 0B33     		adds	r3, r3, #11
 524 008c 3B61     		str	r3, [r7, #16]
 525 008e 40E0     		b	.L22
 526              	.L23:
  83:.\disp.c      ****     }
  84:.\disp.c      ****     else if (i < 48){ // z = 2
 527              		.loc 1 84 0
 528 0090 BB68     		ldr	r3, [r7, #8]
 529 0092 2F2B     		cmp	r3, #47
 530 0094 1DDC     		bgt	.L26
  85:.\disp.c      ****         i -= 32;
 531              		.loc 1 85 0
 532 0096 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 12


 533 0098 203B     		subs	r3, r3, #32
 534 009a BB60     		str	r3, [r7, #8]
  86:.\disp.c      ****         x = i%4;
 535              		.loc 1 86 0
 536 009c BA68     		ldr	r2, [r7, #8]
 537 009e 384B     		ldr	r3, .L34
 538 00a0 1340     		ands	r3, r3, r2
 539 00a2 002B     		cmp	r3, #0
 540 00a4 03DA     		bge	.L27
 541 00a6 013B     		subs	r3, r3, #1
 542 00a8 63F00303 		orn	r3, r3, #3
 543 00ac 0133     		adds	r3, r3, #1
 544              	.L27:
 545 00ae 7B61     		str	r3, [r7, #20]
  87:.\disp.c      ****         y = (i-x)/4; // we want to start at 13,4
 546              		.loc 1 87 0
 547 00b0 BA68     		ldr	r2, [r7, #8]
 548 00b2 7B69     		ldr	r3, [r7, #20]
 549 00b4 D31A     		subs	r3, r2, r3
 550 00b6 002B     		cmp	r3, #0
 551 00b8 00DA     		bge	.L28
 552 00ba 0333     		adds	r3, r3, #3
 553              	.L28:
 554 00bc 9B10     		asrs	r3, r3, #2
 555 00be 3B61     		str	r3, [r7, #16]
  88:.\disp.c      ****         x = 2*x + 13;
 556              		.loc 1 88 0
 557 00c0 7B69     		ldr	r3, [r7, #20]
 558 00c2 5B00     		lsls	r3, r3, #1
 559 00c4 0D33     		adds	r3, r3, #13
 560 00c6 7B61     		str	r3, [r7, #20]
  89:.\disp.c      ****         y = 2*y + 4;
 561              		.loc 1 89 0
 562 00c8 3B69     		ldr	r3, [r7, #16]
 563 00ca 0233     		adds	r3, r3, #2
 564 00cc 5B00     		lsls	r3, r3, #1
 565 00ce 3B61     		str	r3, [r7, #16]
 566 00d0 1FE0     		b	.L22
 567              	.L26:
  90:.\disp.c      ****     }
  91:.\disp.c      ****     else if (i < 64){ // z = 3
 568              		.loc 1 91 0
 569 00d2 BB68     		ldr	r3, [r7, #8]
 570 00d4 3F2B     		cmp	r3, #63
 571 00d6 1CDC     		bgt	.L22
  92:.\disp.c      ****         i -= 48;
 572              		.loc 1 92 0
 573 00d8 BB68     		ldr	r3, [r7, #8]
 574 00da 303B     		subs	r3, r3, #48
 575 00dc BB60     		str	r3, [r7, #8]
  93:.\disp.c      ****         x = i%4;
 576              		.loc 1 93 0
 577 00de BA68     		ldr	r2, [r7, #8]
 578 00e0 274B     		ldr	r3, .L34
 579 00e2 1340     		ands	r3, r3, r2
 580 00e4 002B     		cmp	r3, #0
 581 00e6 03DA     		bge	.L29
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 13


 582 00e8 013B     		subs	r3, r3, #1
 583 00ea 63F00303 		orn	r3, r3, #3
 584 00ee 0133     		adds	r3, r3, #1
 585              	.L29:
 586 00f0 7B61     		str	r3, [r7, #20]
  94:.\disp.c      ****         y = (i-x)/4; // we want to start at 13,14
 587              		.loc 1 94 0
 588 00f2 BA68     		ldr	r2, [r7, #8]
 589 00f4 7B69     		ldr	r3, [r7, #20]
 590 00f6 D31A     		subs	r3, r2, r3
 591 00f8 002B     		cmp	r3, #0
 592 00fa 00DA     		bge	.L30
 593 00fc 0333     		adds	r3, r3, #3
 594              	.L30:
 595 00fe 9B10     		asrs	r3, r3, #2
 596 0100 3B61     		str	r3, [r7, #16]
  95:.\disp.c      ****         x = 2*x + 13;
 597              		.loc 1 95 0
 598 0102 7B69     		ldr	r3, [r7, #20]
 599 0104 5B00     		lsls	r3, r3, #1
 600 0106 0D33     		adds	r3, r3, #13
 601 0108 7B61     		str	r3, [r7, #20]
  96:.\disp.c      ****         y = 2*y + 14;
 602              		.loc 1 96 0
 603 010a 3B69     		ldr	r3, [r7, #16]
 604 010c 0733     		adds	r3, r3, #7
 605 010e 5B00     		lsls	r3, r3, #1
 606 0110 3B61     		str	r3, [r7, #16]
 607              	.L22:
  97:.\disp.c      ****     }
  98:.\disp.c      ****     if (value == 0){ //now check what color we want to change
 608              		.loc 1 98 0
 609 0112 7B68     		ldr	r3, [r7, #4]
 610 0114 002B     		cmp	r3, #0
 611 0116 14D1     		bne	.L31
  99:.\disp.c      ****         disp_grid_draw_square(disp,x,y,2,2,(i%3)); //deviations from black
 612              		.loc 1 99 0
 613 0118 BA68     		ldr	r2, [r7, #8]
 614 011a 1A4B     		ldr	r3, .L34+4
 615 011c 83FB0231 		smull	r3, r1, r3, r2
 616 0120 D317     		asrs	r3, r2, #31
 617 0122 C91A     		subs	r1, r1, r3
 618 0124 0B46     		mov	r3, r1
 619 0126 5B00     		lsls	r3, r3, #1
 620 0128 0B44     		add	r3, r3, r1
 621 012a D11A     		subs	r1, r2, r3
 622 012c CBB2     		uxtb	r3, r1
 623 012e 0222     		movs	r2, #2
 624 0130 0092     		str	r2, [sp]
 625 0132 0193     		str	r3, [sp, #4]
 626 0134 F868     		ldr	r0, [r7, #12]
 627 0136 7969     		ldr	r1, [r7, #20]
 628 0138 3A69     		ldr	r2, [r7, #16]
 629 013a 0223     		movs	r3, #2
 630 013c FFF7FEFF 		bl	disp_grid_draw_square
 631 0140 1BE0     		b	.L18
 632              	.L31:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 14


 100:.\disp.c      ****     }
 101:.\disp.c      ****     else if (value == 1){
 633              		.loc 1 101 0
 634 0142 7B68     		ldr	r3, [r7, #4]
 635 0144 012B     		cmp	r3, #1
 636 0146 0AD1     		bne	.L33
 102:.\disp.c      ****         disp_grid_draw_square(disp,x,y,2,2,0x2A); //light gray
 637              		.loc 1 102 0
 638 0148 0223     		movs	r3, #2
 639 014a 0093     		str	r3, [sp]
 640 014c 2A23     		movs	r3, #42
 641 014e 0193     		str	r3, [sp, #4]
 642 0150 F868     		ldr	r0, [r7, #12]
 643 0152 7969     		ldr	r1, [r7, #20]
 644 0154 3A69     		ldr	r2, [r7, #16]
 645 0156 0223     		movs	r3, #2
 646 0158 FFF7FEFF 		bl	disp_grid_draw_square
 647 015c 0DE0     		b	.L18
 648              	.L33:
 103:.\disp.c      ****     }
 104:.\disp.c      ****     else if (value == -1){
 649              		.loc 1 104 0
 650 015e 7B68     		ldr	r3, [r7, #4]
 651 0160 B3F1FF3F 		cmp	r3, #-1
 652 0164 09D1     		bne	.L18
 105:.\disp.c      ****         disp_grid_draw_square(disp,x,y,2,2,0x15); //dark gray
 653              		.loc 1 105 0
 654 0166 0223     		movs	r3, #2
 655 0168 0093     		str	r3, [sp]
 656 016a 1523     		movs	r3, #21
 657 016c 0193     		str	r3, [sp, #4]
 658 016e F868     		ldr	r0, [r7, #12]
 659 0170 7969     		ldr	r1, [r7, #20]
 660 0172 3A69     		ldr	r2, [r7, #16]
 661 0174 0223     		movs	r3, #2
 662 0176 FFF7FEFF 		bl	disp_grid_draw_square
 663              	.L18:
 106:.\disp.c      ****     }
 107:.\disp.c      **** }
 664              		.loc 1 107 0
 665 017a 1837     		adds	r7, r7, #24
 666              		.cfi_def_cfa_offset 8
 667 017c BD46     		mov	sp, r7
 668              		.cfi_def_cfa_register 13
 669              		@ sp needed
 670 017e 80BD     		pop	{r7, pc}
 671              	.L35:
 672              		.align	2
 673              	.L34:
 674 0180 03000080 		.word	-2147483645
 675 0184 56555555 		.word	1431655766
 676              		.cfi_endproc
 677              	.LFE68:
 678              		.size	disp_grid_ttc_place, .-disp_grid_ttc_place
 679              		.section	.text.disp_grid_init_ttc,"ax",%progbits
 680              		.align	2
 681              		.global	disp_grid_init_ttc
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 15


 682              		.thumb
 683              		.thumb_func
 684              		.type	disp_grid_init_ttc, %function
 685              	disp_grid_init_ttc:
 686              	.LFB69:
 108:.\disp.c      **** 
 109:.\disp.c      **** void disp_grid_init_ttc(struct disp_grid_81* disp, int grid[64]){ // initialize the TTC board
 687              		.loc 1 109 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 16
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691 0000 80B5     		push	{r7, lr}
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 7, -8
 694              		.cfi_offset 14, -4
 695 0002 86B0     		sub	sp, sp, #24
 696              		.cfi_def_cfa_offset 32
 697 0004 02AF     		add	r7, sp, #8
 698              		.cfi_def_cfa 7, 24
 699 0006 7860     		str	r0, [r7, #4]
 700 0008 3960     		str	r1, [r7]
 110:.\disp.c      ****     // tags for boards
 111:.\disp.c      ****     disp_grid_draw_square(disp,8,10,1,1,0x30); //second plane with 1 red
 701              		.loc 1 111 0
 702 000a 0123     		movs	r3, #1
 703 000c 0093     		str	r3, [sp]
 704 000e 3023     		movs	r3, #48
 705 0010 0193     		str	r3, [sp, #4]
 706 0012 7868     		ldr	r0, [r7, #4]
 707 0014 0821     		movs	r1, #8
 708 0016 0A22     		movs	r2, #10
 709 0018 0123     		movs	r3, #1
 710 001a FFF7FEFF 		bl	disp_grid_draw_square
 112:.\disp.c      ****     disp_grid_draw_square(disp,19,3,2,1,0x30); //third plane with 2 red
 711              		.loc 1 112 0
 712 001e 0123     		movs	r3, #1
 713 0020 0093     		str	r3, [sp]
 714 0022 3023     		movs	r3, #48
 715 0024 0193     		str	r3, [sp, #4]
 716 0026 7868     		ldr	r0, [r7, #4]
 717 0028 1321     		movs	r1, #19
 718 002a 0322     		movs	r2, #3
 719 002c 0223     		movs	r3, #2
 720 002e FFF7FEFF 		bl	disp_grid_draw_square
 113:.\disp.c      ****     disp_grid_draw_square(disp,18,13,3,1,0x30); //fourth plane with 3 red
 721              		.loc 1 113 0
 722 0032 0123     		movs	r3, #1
 723 0034 0093     		str	r3, [sp]
 724 0036 3023     		movs	r3, #48
 725 0038 0193     		str	r3, [sp, #4]
 726 003a 7868     		ldr	r0, [r7, #4]
 727 003c 1221     		movs	r1, #18
 728 003e 0D22     		movs	r2, #13
 729 0040 0323     		movs	r3, #3
 730 0042 FFF7FEFF 		bl	disp_grid_draw_square
 114:.\disp.c      ****     int i;
 115:.\disp.c      ****     for (i = 0; i < 64; i++){
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 16


 731              		.loc 1 115 0
 732 0046 0023     		movs	r3, #0
 733 0048 FB60     		str	r3, [r7, #12]
 734 004a 0CE0     		b	.L37
 735              	.L38:
 116:.\disp.c      ****         disp_grid_ttc_place(disp,i, grid[i]);
 736              		.loc 1 116 0 discriminator 3
 737 004c FB68     		ldr	r3, [r7, #12]
 738 004e 9B00     		lsls	r3, r3, #2
 739 0050 3A68     		ldr	r2, [r7]
 740 0052 1344     		add	r3, r3, r2
 741 0054 1B68     		ldr	r3, [r3]
 742 0056 7868     		ldr	r0, [r7, #4]
 743 0058 F968     		ldr	r1, [r7, #12]
 744 005a 1A46     		mov	r2, r3
 745 005c FFF7FEFF 		bl	disp_grid_ttc_place
 115:.\disp.c      ****         disp_grid_ttc_place(disp,i, grid[i]);
 746              		.loc 1 115 0 discriminator 3
 747 0060 FB68     		ldr	r3, [r7, #12]
 748 0062 0133     		adds	r3, r3, #1
 749 0064 FB60     		str	r3, [r7, #12]
 750              	.L37:
 115:.\disp.c      ****         disp_grid_ttc_place(disp,i, grid[i]);
 751              		.loc 1 115 0 is_stmt 0 discriminator 1
 752 0066 FB68     		ldr	r3, [r7, #12]
 753 0068 3F2B     		cmp	r3, #63
 754 006a EFDD     		ble	.L38
 117:.\disp.c      ****     }
 118:.\disp.c      **** }
 755              		.loc 1 118 0 is_stmt 1
 756 006c 1037     		adds	r7, r7, #16
 757              		.cfi_def_cfa_offset 8
 758 006e BD46     		mov	sp, r7
 759              		.cfi_def_cfa_register 13
 760              		@ sp needed
 761 0070 80BD     		pop	{r7, pc}
 762              		.cfi_endproc
 763              	.LFE69:
 764              		.size	disp_grid_init_ttc, .-disp_grid_init_ttc
 765 0072 00BF     		.section	.text.disp_grid_transmit,"ax",%progbits
 766              		.align	2
 767              		.global	disp_grid_transmit
 768              		.thumb
 769              		.thumb_func
 770              		.type	disp_grid_transmit, %function
 771              	disp_grid_transmit:
 772              	.LFB70:
 119:.\disp.c      **** 
 120:.\disp.c      **** void disp_grid_transmit (struct disp_grid_81 * disp){ // this function displays the screen
 773              		.loc 1 120 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 16
 776              		@ frame_needed = 1, uses_anonymous_args = 0
 777 0000 80B5     		push	{r7, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 17


 781 0002 84B0     		sub	sp, sp, #16
 782              		.cfi_def_cfa_offset 24
 783 0004 00AF     		add	r7, sp, #0
 784              		.cfi_def_cfa_register 7
 785 0006 7860     		str	r0, [r7, #4]
 121:.\disp.c      ****     int row,col;
 122:.\disp.c      ****     for (col = 0; col < 24; col++){
 786              		.loc 1 122 0
 787 0008 0023     		movs	r3, #0
 788 000a BB60     		str	r3, [r7, #8]
 789 000c 18E0     		b	.L40
 790              	.L43:
 123:.\disp.c      ****         for (row = 0; row < 32; row++){
 791              		.loc 1 123 0
 792 000e 0023     		movs	r3, #0
 793 0010 FB60     		str	r3, [r7, #12]
 794 0012 0FE0     		b	.L41
 795              	.L42:
 124:.\disp.c      ****             UART_PutChar(disp->matrix[row][col]); 
 796              		.loc 1 124 0 discriminator 3
 797 0014 7968     		ldr	r1, [r7, #4]
 798 0016 FA68     		ldr	r2, [r7, #12]
 799 0018 1346     		mov	r3, r2
 800 001a 5B00     		lsls	r3, r3, #1
 801 001c 1344     		add	r3, r3, r2
 802 001e DB00     		lsls	r3, r3, #3
 803 0020 BA68     		ldr	r2, [r7, #8]
 804 0022 1344     		add	r3, r3, r2
 805 0024 0B44     		add	r3, r3, r1
 806 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 807 0028 1846     		mov	r0, r3
 808 002a FFF7FEFF 		bl	UART_PutChar
 123:.\disp.c      ****         for (row = 0; row < 32; row++){
 809              		.loc 1 123 0 discriminator 3
 810 002e FB68     		ldr	r3, [r7, #12]
 811 0030 0133     		adds	r3, r3, #1
 812 0032 FB60     		str	r3, [r7, #12]
 813              	.L41:
 123:.\disp.c      ****         for (row = 0; row < 32; row++){
 814              		.loc 1 123 0 is_stmt 0 discriminator 1
 815 0034 FB68     		ldr	r3, [r7, #12]
 816 0036 1F2B     		cmp	r3, #31
 817 0038 ECDD     		ble	.L42
 122:.\disp.c      ****         for (row = 0; row < 32; row++){
 818              		.loc 1 122 0 is_stmt 1 discriminator 2
 819 003a BB68     		ldr	r3, [r7, #8]
 820 003c 0133     		adds	r3, r3, #1
 821 003e BB60     		str	r3, [r7, #8]
 822              	.L40:
 122:.\disp.c      ****         for (row = 0; row < 32; row++){
 823              		.loc 1 122 0 is_stmt 0 discriminator 1
 824 0040 BB68     		ldr	r3, [r7, #8]
 825 0042 172B     		cmp	r3, #23
 826 0044 E3DD     		ble	.L43
 125:.\disp.c      ****             //UART_PutChar(20); // blue
 126:.\disp.c      ****         }
 127:.\disp.c      ****     }
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 18


 128:.\disp.c      ****     waiter(7); //minimum waiting time for 32x24
 827              		.loc 1 128 0 is_stmt 1
 828 0046 0720     		movs	r0, #7
 829 0048 FFF7FEFF 		bl	waiter
 129:.\disp.c      **** }
 830              		.loc 1 129 0
 831 004c 1037     		adds	r7, r7, #16
 832              		.cfi_def_cfa_offset 8
 833 004e BD46     		mov	sp, r7
 834              		.cfi_def_cfa_register 13
 835              		@ sp needed
 836 0050 80BD     		pop	{r7, pc}
 837              		.cfi_endproc
 838              	.LFE70:
 839              		.size	disp_grid_transmit, .-disp_grid_transmit
 840 0052 00BF     		.text
 841              	.Letext0:
 842              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 843              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 844              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 845              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 846              		.section	.debug_info,"",%progbits
 847              	.Ldebug_info0:
 848 0000 45030000 		.4byte	0x345
 849 0004 0400     		.2byte	0x4
 850 0006 00000000 		.4byte	.Ldebug_abbrev0
 851 000a 04       		.byte	0x4
 852 000b 01       		.uleb128 0x1
 853 000c A3000000 		.4byte	.LASF33
 854 0010 01       		.byte	0x1
 855 0011 83010000 		.4byte	.LASF34
 856 0015 18000000 		.4byte	.LASF35
 857 0019 00000000 		.4byte	.Ldebug_ranges0+0
 858 001d 00000000 		.4byte	0
 859 0021 00000000 		.4byte	.Ldebug_line0
 860 0025 02       		.uleb128 0x2
 861 0026 01       		.byte	0x1
 862 0027 06       		.byte	0x6
 863 0028 6D020000 		.4byte	.LASF0
 864 002c 02       		.uleb128 0x2
 865 002d 01       		.byte	0x1
 866 002e 08       		.byte	0x8
 867 002f 47010000 		.4byte	.LASF1
 868 0033 02       		.uleb128 0x2
 869 0034 02       		.byte	0x2
 870 0035 05       		.byte	0x5
 871 0036 4C020000 		.4byte	.LASF2
 872 003a 02       		.uleb128 0x2
 873 003b 02       		.byte	0x2
 874 003c 07       		.byte	0x7
 875 003d 79020000 		.4byte	.LASF3
 876 0041 03       		.uleb128 0x3
 877 0042 99000000 		.4byte	.LASF9
 878 0046 02       		.byte	0x2
 879 0047 3F       		.byte	0x3f
 880 0048 4C000000 		.4byte	0x4c
 881 004c 02       		.uleb128 0x2
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 19


 882 004d 04       		.byte	0x4
 883 004e 05       		.byte	0x5
 884 004f 64020000 		.4byte	.LASF4
 885 0053 02       		.uleb128 0x2
 886 0054 04       		.byte	0x4
 887 0055 07       		.byte	0x7
 888 0056 68010000 		.4byte	.LASF5
 889 005a 02       		.uleb128 0x2
 890 005b 08       		.byte	0x8
 891 005c 05       		.byte	0x5
 892 005d 2A020000 		.4byte	.LASF6
 893 0061 02       		.uleb128 0x2
 894 0062 08       		.byte	0x8
 895 0063 07       		.byte	0x7
 896 0064 C6010000 		.4byte	.LASF7
 897 0068 04       		.uleb128 0x4
 898 0069 04       		.byte	0x4
 899 006a 05       		.byte	0x5
 900 006b 696E7400 		.ascii	"int\000"
 901 006f 02       		.uleb128 0x2
 902 0070 04       		.byte	0x4
 903 0071 07       		.byte	0x7
 904 0072 B9010000 		.4byte	.LASF8
 905 0076 03       		.uleb128 0x3
 906 0077 05020000 		.4byte	.LASF10
 907 007b 03       		.byte	0x3
 908 007c 2C       		.byte	0x2c
 909 007d 41000000 		.4byte	0x41
 910 0081 05       		.uleb128 0x5
 911 0082 5E020000 		.4byte	.LASF11
 912 0086 04       		.byte	0x4
 913 0087 3801     		.2byte	0x138
 914 0089 2C000000 		.4byte	0x2c
 915 008d 02       		.uleb128 0x2
 916 008e 04       		.byte	0x4
 917 008f 04       		.byte	0x4
 918 0090 39010000 		.4byte	.LASF12
 919 0094 02       		.uleb128 0x2
 920 0095 08       		.byte	0x8
 921 0096 04       		.byte	0x4
 922 0097 8C010000 		.4byte	.LASF13
 923 009b 02       		.uleb128 0x2
 924 009c 01       		.byte	0x1
 925 009d 08       		.byte	0x8
 926 009e 40020000 		.4byte	.LASF14
 927 00a2 02       		.uleb128 0x2
 928 00a3 04       		.byte	0x4
 929 00a4 07       		.byte	0x7
 930 00a5 0D020000 		.4byte	.LASF15
 931 00a9 06       		.uleb128 0x6
 932 00aa F8010000 		.4byte	.LASF36
 933 00ae 0003     		.2byte	0x300
 934 00b0 01       		.byte	0x1
 935 00b1 15       		.byte	0x15
 936 00b2 C3000000 		.4byte	0xc3
 937 00b6 07       		.uleb128 0x7
 938 00b7 45020000 		.4byte	.LASF37
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 20


 939 00bb 01       		.byte	0x1
 940 00bc 16       		.byte	0x16
 941 00bd C3000000 		.4byte	0xc3
 942 00c1 00       		.byte	0
 943 00c2 00       		.byte	0
 944 00c3 08       		.uleb128 0x8
 945 00c4 81000000 		.4byte	0x81
 946 00c8 D9000000 		.4byte	0xd9
 947 00cc 09       		.uleb128 0x9
 948 00cd A2000000 		.4byte	0xa2
 949 00d1 1F       		.byte	0x1f
 950 00d2 09       		.uleb128 0x9
 951 00d3 A2000000 		.4byte	0xa2
 952 00d7 17       		.byte	0x17
 953 00d8 00       		.byte	0
 954 00d9 0A       		.uleb128 0xa
 955 00da 83000000 		.4byte	.LASF16
 956 00de 01       		.byte	0x1
 957 00df 1A       		.byte	0x1a
 958 00e0 00000000 		.4byte	.LFB63
 959 00e4 4A000000 		.4byte	.LFE63-.LFB63
 960 00e8 01       		.uleb128 0x1
 961 00e9 9C       		.byte	0x9c
 962 00ea 15010000 		.4byte	0x115
 963 00ee 0B       		.uleb128 0xb
 964 00ef 38020000 		.4byte	.LASF18
 965 00f3 01       		.byte	0x1
 966 00f4 1A       		.byte	0x1a
 967 00f5 68000000 		.4byte	0x68
 968 00f9 02       		.uleb128 0x2
 969 00fa 91       		.byte	0x91
 970 00fb 6C       		.sleb128 -20
 971 00fc 0C       		.uleb128 0xc
 972 00fd 6900     		.ascii	"i\000"
 973 00ff 01       		.byte	0x1
 974 0100 1B       		.byte	0x1b
 975 0101 68000000 		.4byte	0x68
 976 0105 02       		.uleb128 0x2
 977 0106 91       		.byte	0x91
 978 0107 74       		.sleb128 -12
 979 0108 0C       		.uleb128 0xc
 980 0109 6A00     		.ascii	"j\000"
 981 010b 01       		.byte	0x1
 982 010c 1B       		.byte	0x1b
 983 010d 68000000 		.4byte	0x68
 984 0111 02       		.uleb128 0x2
 985 0112 91       		.byte	0x91
 986 0113 70       		.sleb128 -16
 987 0114 00       		.byte	0
 988 0115 0A       		.uleb128 0xa
 989 0116 8A000000 		.4byte	.LASF17
 990 011a 01       		.byte	0x1
 991 011b 22       		.byte	0x22
 992 011c 00000000 		.4byte	.LFB64
 993 0120 50000000 		.4byte	.LFE64-.LFB64
 994 0124 01       		.uleb128 0x1
 995 0125 9C       		.byte	0x9c
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 21


 996 0126 63010000 		.4byte	0x163
 997 012a 0B       		.uleb128 0xb
 998 012b F3010000 		.4byte	.LASF19
 999 012f 01       		.byte	0x1
 1000 0130 22       		.byte	0x22
 1001 0131 63010000 		.4byte	0x163
 1002 0135 02       		.uleb128 0x2
 1003 0136 91       		.byte	0x91
 1004 0137 6C       		.sleb128 -20
 1005 0138 0B       		.uleb128 0xb
 1006 0139 A6010000 		.4byte	.LASF20
 1007 013d 01       		.byte	0x1
 1008 013e 22       		.byte	0x22
 1009 013f 81000000 		.4byte	0x81
 1010 0143 02       		.uleb128 0x2
 1011 0144 91       		.byte	0x91
 1012 0145 6B       		.sleb128 -21
 1013 0146 0C       		.uleb128 0xc
 1014 0147 726F7700 		.ascii	"row\000"
 1015 014b 01       		.byte	0x1
 1016 014c 23       		.byte	0x23
 1017 014d 68000000 		.4byte	0x68
 1018 0151 02       		.uleb128 0x2
 1019 0152 91       		.byte	0x91
 1020 0153 74       		.sleb128 -12
 1021 0154 0C       		.uleb128 0xc
 1022 0155 636F6C00 		.ascii	"col\000"
 1023 0159 01       		.byte	0x1
 1024 015a 23       		.byte	0x23
 1025 015b 68000000 		.4byte	0x68
 1026 015f 02       		.uleb128 0x2
 1027 0160 91       		.byte	0x91
 1028 0161 70       		.sleb128 -16
 1029 0162 00       		.byte	0
 1030 0163 0D       		.uleb128 0xd
 1031 0164 04       		.byte	0x4
 1032 0165 A9000000 		.4byte	0xa9
 1033 0169 0A       		.uleb128 0xa
 1034 016a DD010000 		.4byte	.LASF21
 1035 016e 01       		.byte	0x1
 1036 016f 2C       		.byte	0x2c
 1037 0170 00000000 		.4byte	.LFB65
 1038 0174 60000000 		.4byte	.LFE65-.LFB65
 1039 0178 01       		.uleb128 0x1
 1040 0179 9C       		.byte	0x9c
 1041 017a EB010000 		.4byte	0x1eb
 1042 017e 0B       		.uleb128 0xb
 1043 017f F3010000 		.4byte	.LASF19
 1044 0183 01       		.byte	0x1
 1045 0184 2C       		.byte	0x2c
 1046 0185 63010000 		.4byte	0x163
 1047 0189 02       		.uleb128 0x2
 1048 018a 91       		.byte	0x91
 1049 018b 6C       		.sleb128 -20
 1050 018c 0B       		.uleb128 0xb
 1051 018d 31010000 		.4byte	.LASF22
 1052 0191 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 22


 1053 0192 2C       		.byte	0x2c
 1054 0193 68000000 		.4byte	0x68
 1055 0197 02       		.uleb128 0x2
 1056 0198 91       		.byte	0x91
 1057 0199 68       		.sleb128 -24
 1058 019a 0B       		.uleb128 0xb
 1059 019b 3F010000 		.4byte	.LASF23
 1060 019f 01       		.byte	0x1
 1061 01a0 2C       		.byte	0x2c
 1062 01a1 68000000 		.4byte	0x68
 1063 01a5 02       		.uleb128 0x2
 1064 01a6 91       		.byte	0x91
 1065 01a7 64       		.sleb128 -28
 1066 01a8 0B       		.uleb128 0xb
 1067 01a9 56020000 		.4byte	.LASF24
 1068 01ad 01       		.byte	0x1
 1069 01ae 2C       		.byte	0x2c
 1070 01af 68000000 		.4byte	0x68
 1071 01b3 02       		.uleb128 0x2
 1072 01b4 91       		.byte	0x91
 1073 01b5 60       		.sleb128 -32
 1074 01b6 0B       		.uleb128 0xb
 1075 01b7 7A010000 		.4byte	.LASF25
 1076 01bb 01       		.byte	0x1
 1077 01bc 2C       		.byte	0x2c
 1078 01bd 68000000 		.4byte	0x68
 1079 01c1 02       		.uleb128 0x2
 1080 01c2 91       		.byte	0x91
 1081 01c3 00       		.sleb128 0
 1082 01c4 0B       		.uleb128 0xb
 1083 01c5 A6010000 		.4byte	.LASF20
 1084 01c9 01       		.byte	0x1
 1085 01ca 2C       		.byte	0x2c
 1086 01cb 81000000 		.4byte	0x81
 1087 01cf 02       		.uleb128 0x2
 1088 01d0 91       		.byte	0x91
 1089 01d1 04       		.sleb128 4
 1090 01d2 0C       		.uleb128 0xc
 1091 01d3 7800     		.ascii	"x\000"
 1092 01d5 01       		.byte	0x1
 1093 01d6 2D       		.byte	0x2d
 1094 01d7 68000000 		.4byte	0x68
 1095 01db 02       		.uleb128 0x2
 1096 01dc 91       		.byte	0x91
 1097 01dd 74       		.sleb128 -12
 1098 01de 0C       		.uleb128 0xc
 1099 01df 7900     		.ascii	"y\000"
 1100 01e1 01       		.byte	0x1
 1101 01e2 2D       		.byte	0x2d
 1102 01e3 68000000 		.4byte	0x68
 1103 01e7 02       		.uleb128 0x2
 1104 01e8 91       		.byte	0x91
 1105 01e9 70       		.sleb128 -16
 1106 01ea 00       		.byte	0
 1107 01eb 0E       		.uleb128 0xe
 1108 01ec 55010000 		.4byte	.LASF26
 1109 01f0 01       		.byte	0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 23


 1110 01f1 35       		.byte	0x35
 1111 01f2 00000000 		.4byte	.LFB66
 1112 01f6 72000000 		.4byte	.LFE66-.LFB66
 1113 01fa 01       		.uleb128 0x1
 1114 01fb 9C       		.byte	0x9c
 1115 01fc 39020000 		.4byte	0x239
 1116 0200 0B       		.uleb128 0xb
 1117 0201 F3010000 		.4byte	.LASF19
 1118 0205 01       		.byte	0x1
 1119 0206 35       		.byte	0x35
 1120 0207 63010000 		.4byte	0x163
 1121 020b 02       		.uleb128 0x2
 1122 020c 91       		.byte	0x91
 1123 020d 74       		.sleb128 -12
 1124 020e 0B       		.uleb128 0xb
 1125 020f 31010000 		.4byte	.LASF22
 1126 0213 01       		.byte	0x1
 1127 0214 35       		.byte	0x35
 1128 0215 68000000 		.4byte	0x68
 1129 0219 02       		.uleb128 0x2
 1130 021a 91       		.byte	0x91
 1131 021b 70       		.sleb128 -16
 1132 021c 0B       		.uleb128 0xb
 1133 021d 3F010000 		.4byte	.LASF23
 1134 0221 01       		.byte	0x1
 1135 0222 35       		.byte	0x35
 1136 0223 68000000 		.4byte	0x68
 1137 0227 02       		.uleb128 0x2
 1138 0228 91       		.byte	0x91
 1139 0229 6C       		.sleb128 -20
 1140 022a 0B       		.uleb128 0xb
 1141 022b A6010000 		.4byte	.LASF20
 1142 022f 01       		.byte	0x1
 1143 0230 35       		.byte	0x35
 1144 0231 81000000 		.4byte	0x81
 1145 0235 02       		.uleb128 0x2
 1146 0236 91       		.byte	0x91
 1147 0237 6B       		.sleb128 -21
 1148 0238 00       		.byte	0
 1149 0239 0E       		.uleb128 0xe
 1150 023a 8C020000 		.4byte	.LASF27
 1151 023e 01       		.byte	0x1
 1152 023f 3C       		.byte	0x3c
 1153 0240 00000000 		.4byte	.LFB67
 1154 0244 86000000 		.4byte	.LFE67-.LFB67
 1155 0248 01       		.uleb128 0x1
 1156 0249 9C       		.byte	0x9c
 1157 024a 5D020000 		.4byte	0x25d
 1158 024e 0B       		.uleb128 0xb
 1159 024f F3010000 		.4byte	.LASF19
 1160 0253 01       		.byte	0x1
 1161 0254 3C       		.byte	0x3c
 1162 0255 63010000 		.4byte	0x163
 1163 0259 02       		.uleb128 0x2
 1164 025a 91       		.byte	0x91
 1165 025b 74       		.sleb128 -12
 1166 025c 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 24


 1167 025d 0E       		.uleb128 0xe
 1168 025e 16020000 		.4byte	.LASF28
 1169 0262 01       		.byte	0x1
 1170 0263 45       		.byte	0x45
 1171 0264 00000000 		.4byte	.LFB68
 1172 0268 88010000 		.4byte	.LFE68-.LFB68
 1173 026c 01       		.uleb128 0x1
 1174 026d 9C       		.byte	0x9c
 1175 026e B3020000 		.4byte	0x2b3
 1176 0272 0B       		.uleb128 0xb
 1177 0273 F3010000 		.4byte	.LASF19
 1178 0277 01       		.byte	0x1
 1179 0278 45       		.byte	0x45
 1180 0279 63010000 		.4byte	0x163
 1181 027d 02       		.uleb128 0x2
 1182 027e 91       		.byte	0x91
 1183 027f 6C       		.sleb128 -20
 1184 0280 0F       		.uleb128 0xf
 1185 0281 6900     		.ascii	"i\000"
 1186 0283 01       		.byte	0x1
 1187 0284 45       		.byte	0x45
 1188 0285 68000000 		.4byte	0x68
 1189 0289 02       		.uleb128 0x2
 1190 028a 91       		.byte	0x91
 1191 028b 68       		.sleb128 -24
 1192 028c 0B       		.uleb128 0xb
 1193 028d 7D000000 		.4byte	.LASF29
 1194 0291 01       		.byte	0x1
 1195 0292 45       		.byte	0x45
 1196 0293 68000000 		.4byte	0x68
 1197 0297 02       		.uleb128 0x2
 1198 0298 91       		.byte	0x91
 1199 0299 64       		.sleb128 -28
 1200 029a 0C       		.uleb128 0xc
 1201 029b 7800     		.ascii	"x\000"
 1202 029d 01       		.byte	0x1
 1203 029e 46       		.byte	0x46
 1204 029f 68000000 		.4byte	0x68
 1205 02a3 02       		.uleb128 0x2
 1206 02a4 91       		.byte	0x91
 1207 02a5 74       		.sleb128 -12
 1208 02a6 0C       		.uleb128 0xc
 1209 02a7 7900     		.ascii	"y\000"
 1210 02a9 01       		.byte	0x1
 1211 02aa 46       		.byte	0x46
 1212 02ab 68000000 		.4byte	0x68
 1213 02af 02       		.uleb128 0x2
 1214 02b0 91       		.byte	0x91
 1215 02b1 70       		.sleb128 -16
 1216 02b2 00       		.byte	0
 1217 02b3 0E       		.uleb128 0xe
 1218 02b4 00000000 		.4byte	.LASF30
 1219 02b8 01       		.byte	0x1
 1220 02b9 6D       		.byte	0x6d
 1221 02ba 00000000 		.4byte	.LFB69
 1222 02be 72000000 		.4byte	.LFE69-.LFB69
 1223 02c2 01       		.uleb128 0x1
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 25


 1224 02c3 9C       		.byte	0x9c
 1225 02c4 F1020000 		.4byte	0x2f1
 1226 02c8 0B       		.uleb128 0xb
 1227 02c9 F3010000 		.4byte	.LASF19
 1228 02cd 01       		.byte	0x1
 1229 02ce 6D       		.byte	0x6d
 1230 02cf 63010000 		.4byte	0x163
 1231 02d3 02       		.uleb128 0x2
 1232 02d4 91       		.byte	0x91
 1233 02d5 6C       		.sleb128 -20
 1234 02d6 0B       		.uleb128 0xb
 1235 02d7 13000000 		.4byte	.LASF31
 1236 02db 01       		.byte	0x1
 1237 02dc 6D       		.byte	0x6d
 1238 02dd F1020000 		.4byte	0x2f1
 1239 02e1 02       		.uleb128 0x2
 1240 02e2 91       		.byte	0x91
 1241 02e3 68       		.sleb128 -24
 1242 02e4 0C       		.uleb128 0xc
 1243 02e5 6900     		.ascii	"i\000"
 1244 02e7 01       		.byte	0x1
 1245 02e8 72       		.byte	0x72
 1246 02e9 68000000 		.4byte	0x68
 1247 02ed 02       		.uleb128 0x2
 1248 02ee 91       		.byte	0x91
 1249 02ef 74       		.sleb128 -12
 1250 02f0 00       		.byte	0
 1251 02f1 0D       		.uleb128 0xd
 1252 02f2 04       		.byte	0x4
 1253 02f3 68000000 		.4byte	0x68
 1254 02f7 0E       		.uleb128 0xe
 1255 02f8 93010000 		.4byte	.LASF32
 1256 02fc 01       		.byte	0x1
 1257 02fd 78       		.byte	0x78
 1258 02fe 00000000 		.4byte	.LFB70
 1259 0302 52000000 		.4byte	.LFE70-.LFB70
 1260 0306 01       		.uleb128 0x1
 1261 0307 9C       		.byte	0x9c
 1262 0308 37030000 		.4byte	0x337
 1263 030c 0B       		.uleb128 0xb
 1264 030d F3010000 		.4byte	.LASF19
 1265 0311 01       		.byte	0x1
 1266 0312 78       		.byte	0x78
 1267 0313 63010000 		.4byte	0x163
 1268 0317 02       		.uleb128 0x2
 1269 0318 91       		.byte	0x91
 1270 0319 6C       		.sleb128 -20
 1271 031a 0C       		.uleb128 0xc
 1272 031b 726F7700 		.ascii	"row\000"
 1273 031f 01       		.byte	0x1
 1274 0320 79       		.byte	0x79
 1275 0321 68000000 		.4byte	0x68
 1276 0325 02       		.uleb128 0x2
 1277 0326 91       		.byte	0x91
 1278 0327 74       		.sleb128 -12
 1279 0328 0C       		.uleb128 0xc
 1280 0329 636F6C00 		.ascii	"col\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 26


 1281 032d 01       		.byte	0x1
 1282 032e 79       		.byte	0x79
 1283 032f 68000000 		.4byte	0x68
 1284 0333 02       		.uleb128 0x2
 1285 0334 91       		.byte	0x91
 1286 0335 70       		.sleb128 -16
 1287 0336 00       		.byte	0
 1288 0337 10       		.uleb128 0x10
 1289 0338 AC010000 		.4byte	.LASF38
 1290 033c 05       		.byte	0x5
 1291 033d 5506     		.2byte	0x655
 1292 033f 43030000 		.4byte	0x343
 1293 0343 11       		.uleb128 0x11
 1294 0344 76000000 		.4byte	0x76
 1295 0348 00       		.byte	0
 1296              		.section	.debug_abbrev,"",%progbits
 1297              	.Ldebug_abbrev0:
 1298 0000 01       		.uleb128 0x1
 1299 0001 11       		.uleb128 0x11
 1300 0002 01       		.byte	0x1
 1301 0003 25       		.uleb128 0x25
 1302 0004 0E       		.uleb128 0xe
 1303 0005 13       		.uleb128 0x13
 1304 0006 0B       		.uleb128 0xb
 1305 0007 03       		.uleb128 0x3
 1306 0008 0E       		.uleb128 0xe
 1307 0009 1B       		.uleb128 0x1b
 1308 000a 0E       		.uleb128 0xe
 1309 000b 55       		.uleb128 0x55
 1310 000c 17       		.uleb128 0x17
 1311 000d 11       		.uleb128 0x11
 1312 000e 01       		.uleb128 0x1
 1313 000f 10       		.uleb128 0x10
 1314 0010 17       		.uleb128 0x17
 1315 0011 00       		.byte	0
 1316 0012 00       		.byte	0
 1317 0013 02       		.uleb128 0x2
 1318 0014 24       		.uleb128 0x24
 1319 0015 00       		.byte	0
 1320 0016 0B       		.uleb128 0xb
 1321 0017 0B       		.uleb128 0xb
 1322 0018 3E       		.uleb128 0x3e
 1323 0019 0B       		.uleb128 0xb
 1324 001a 03       		.uleb128 0x3
 1325 001b 0E       		.uleb128 0xe
 1326 001c 00       		.byte	0
 1327 001d 00       		.byte	0
 1328 001e 03       		.uleb128 0x3
 1329 001f 16       		.uleb128 0x16
 1330 0020 00       		.byte	0
 1331 0021 03       		.uleb128 0x3
 1332 0022 0E       		.uleb128 0xe
 1333 0023 3A       		.uleb128 0x3a
 1334 0024 0B       		.uleb128 0xb
 1335 0025 3B       		.uleb128 0x3b
 1336 0026 0B       		.uleb128 0xb
 1337 0027 49       		.uleb128 0x49
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 27


 1338 0028 13       		.uleb128 0x13
 1339 0029 00       		.byte	0
 1340 002a 00       		.byte	0
 1341 002b 04       		.uleb128 0x4
 1342 002c 24       		.uleb128 0x24
 1343 002d 00       		.byte	0
 1344 002e 0B       		.uleb128 0xb
 1345 002f 0B       		.uleb128 0xb
 1346 0030 3E       		.uleb128 0x3e
 1347 0031 0B       		.uleb128 0xb
 1348 0032 03       		.uleb128 0x3
 1349 0033 08       		.uleb128 0x8
 1350 0034 00       		.byte	0
 1351 0035 00       		.byte	0
 1352 0036 05       		.uleb128 0x5
 1353 0037 16       		.uleb128 0x16
 1354 0038 00       		.byte	0
 1355 0039 03       		.uleb128 0x3
 1356 003a 0E       		.uleb128 0xe
 1357 003b 3A       		.uleb128 0x3a
 1358 003c 0B       		.uleb128 0xb
 1359 003d 3B       		.uleb128 0x3b
 1360 003e 05       		.uleb128 0x5
 1361 003f 49       		.uleb128 0x49
 1362 0040 13       		.uleb128 0x13
 1363 0041 00       		.byte	0
 1364 0042 00       		.byte	0
 1365 0043 06       		.uleb128 0x6
 1366 0044 13       		.uleb128 0x13
 1367 0045 01       		.byte	0x1
 1368 0046 03       		.uleb128 0x3
 1369 0047 0E       		.uleb128 0xe
 1370 0048 0B       		.uleb128 0xb
 1371 0049 05       		.uleb128 0x5
 1372 004a 3A       		.uleb128 0x3a
 1373 004b 0B       		.uleb128 0xb
 1374 004c 3B       		.uleb128 0x3b
 1375 004d 0B       		.uleb128 0xb
 1376 004e 01       		.uleb128 0x1
 1377 004f 13       		.uleb128 0x13
 1378 0050 00       		.byte	0
 1379 0051 00       		.byte	0
 1380 0052 07       		.uleb128 0x7
 1381 0053 0D       		.uleb128 0xd
 1382 0054 00       		.byte	0
 1383 0055 03       		.uleb128 0x3
 1384 0056 0E       		.uleb128 0xe
 1385 0057 3A       		.uleb128 0x3a
 1386 0058 0B       		.uleb128 0xb
 1387 0059 3B       		.uleb128 0x3b
 1388 005a 0B       		.uleb128 0xb
 1389 005b 49       		.uleb128 0x49
 1390 005c 13       		.uleb128 0x13
 1391 005d 38       		.uleb128 0x38
 1392 005e 0B       		.uleb128 0xb
 1393 005f 00       		.byte	0
 1394 0060 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 28


 1395 0061 08       		.uleb128 0x8
 1396 0062 01       		.uleb128 0x1
 1397 0063 01       		.byte	0x1
 1398 0064 49       		.uleb128 0x49
 1399 0065 13       		.uleb128 0x13
 1400 0066 01       		.uleb128 0x1
 1401 0067 13       		.uleb128 0x13
 1402 0068 00       		.byte	0
 1403 0069 00       		.byte	0
 1404 006a 09       		.uleb128 0x9
 1405 006b 21       		.uleb128 0x21
 1406 006c 00       		.byte	0
 1407 006d 49       		.uleb128 0x49
 1408 006e 13       		.uleb128 0x13
 1409 006f 2F       		.uleb128 0x2f
 1410 0070 0B       		.uleb128 0xb
 1411 0071 00       		.byte	0
 1412 0072 00       		.byte	0
 1413 0073 0A       		.uleb128 0xa
 1414 0074 2E       		.uleb128 0x2e
 1415 0075 01       		.byte	0x1
 1416 0076 3F       		.uleb128 0x3f
 1417 0077 19       		.uleb128 0x19
 1418 0078 03       		.uleb128 0x3
 1419 0079 0E       		.uleb128 0xe
 1420 007a 3A       		.uleb128 0x3a
 1421 007b 0B       		.uleb128 0xb
 1422 007c 3B       		.uleb128 0x3b
 1423 007d 0B       		.uleb128 0xb
 1424 007e 27       		.uleb128 0x27
 1425 007f 19       		.uleb128 0x19
 1426 0080 11       		.uleb128 0x11
 1427 0081 01       		.uleb128 0x1
 1428 0082 12       		.uleb128 0x12
 1429 0083 06       		.uleb128 0x6
 1430 0084 40       		.uleb128 0x40
 1431 0085 18       		.uleb128 0x18
 1432 0086 9742     		.uleb128 0x2117
 1433 0088 19       		.uleb128 0x19
 1434 0089 01       		.uleb128 0x1
 1435 008a 13       		.uleb128 0x13
 1436 008b 00       		.byte	0
 1437 008c 00       		.byte	0
 1438 008d 0B       		.uleb128 0xb
 1439 008e 05       		.uleb128 0x5
 1440 008f 00       		.byte	0
 1441 0090 03       		.uleb128 0x3
 1442 0091 0E       		.uleb128 0xe
 1443 0092 3A       		.uleb128 0x3a
 1444 0093 0B       		.uleb128 0xb
 1445 0094 3B       		.uleb128 0x3b
 1446 0095 0B       		.uleb128 0xb
 1447 0096 49       		.uleb128 0x49
 1448 0097 13       		.uleb128 0x13
 1449 0098 02       		.uleb128 0x2
 1450 0099 18       		.uleb128 0x18
 1451 009a 00       		.byte	0
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 29


 1452 009b 00       		.byte	0
 1453 009c 0C       		.uleb128 0xc
 1454 009d 34       		.uleb128 0x34
 1455 009e 00       		.byte	0
 1456 009f 03       		.uleb128 0x3
 1457 00a0 08       		.uleb128 0x8
 1458 00a1 3A       		.uleb128 0x3a
 1459 00a2 0B       		.uleb128 0xb
 1460 00a3 3B       		.uleb128 0x3b
 1461 00a4 0B       		.uleb128 0xb
 1462 00a5 49       		.uleb128 0x49
 1463 00a6 13       		.uleb128 0x13
 1464 00a7 02       		.uleb128 0x2
 1465 00a8 18       		.uleb128 0x18
 1466 00a9 00       		.byte	0
 1467 00aa 00       		.byte	0
 1468 00ab 0D       		.uleb128 0xd
 1469 00ac 0F       		.uleb128 0xf
 1470 00ad 00       		.byte	0
 1471 00ae 0B       		.uleb128 0xb
 1472 00af 0B       		.uleb128 0xb
 1473 00b0 49       		.uleb128 0x49
 1474 00b1 13       		.uleb128 0x13
 1475 00b2 00       		.byte	0
 1476 00b3 00       		.byte	0
 1477 00b4 0E       		.uleb128 0xe
 1478 00b5 2E       		.uleb128 0x2e
 1479 00b6 01       		.byte	0x1
 1480 00b7 3F       		.uleb128 0x3f
 1481 00b8 19       		.uleb128 0x19
 1482 00b9 03       		.uleb128 0x3
 1483 00ba 0E       		.uleb128 0xe
 1484 00bb 3A       		.uleb128 0x3a
 1485 00bc 0B       		.uleb128 0xb
 1486 00bd 3B       		.uleb128 0x3b
 1487 00be 0B       		.uleb128 0xb
 1488 00bf 27       		.uleb128 0x27
 1489 00c0 19       		.uleb128 0x19
 1490 00c1 11       		.uleb128 0x11
 1491 00c2 01       		.uleb128 0x1
 1492 00c3 12       		.uleb128 0x12
 1493 00c4 06       		.uleb128 0x6
 1494 00c5 40       		.uleb128 0x40
 1495 00c6 18       		.uleb128 0x18
 1496 00c7 9642     		.uleb128 0x2116
 1497 00c9 19       		.uleb128 0x19
 1498 00ca 01       		.uleb128 0x1
 1499 00cb 13       		.uleb128 0x13
 1500 00cc 00       		.byte	0
 1501 00cd 00       		.byte	0
 1502 00ce 0F       		.uleb128 0xf
 1503 00cf 05       		.uleb128 0x5
 1504 00d0 00       		.byte	0
 1505 00d1 03       		.uleb128 0x3
 1506 00d2 08       		.uleb128 0x8
 1507 00d3 3A       		.uleb128 0x3a
 1508 00d4 0B       		.uleb128 0xb
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 30


 1509 00d5 3B       		.uleb128 0x3b
 1510 00d6 0B       		.uleb128 0xb
 1511 00d7 49       		.uleb128 0x49
 1512 00d8 13       		.uleb128 0x13
 1513 00d9 02       		.uleb128 0x2
 1514 00da 18       		.uleb128 0x18
 1515 00db 00       		.byte	0
 1516 00dc 00       		.byte	0
 1517 00dd 10       		.uleb128 0x10
 1518 00de 34       		.uleb128 0x34
 1519 00df 00       		.byte	0
 1520 00e0 03       		.uleb128 0x3
 1521 00e1 0E       		.uleb128 0xe
 1522 00e2 3A       		.uleb128 0x3a
 1523 00e3 0B       		.uleb128 0xb
 1524 00e4 3B       		.uleb128 0x3b
 1525 00e5 05       		.uleb128 0x5
 1526 00e6 49       		.uleb128 0x49
 1527 00e7 13       		.uleb128 0x13
 1528 00e8 3F       		.uleb128 0x3f
 1529 00e9 19       		.uleb128 0x19
 1530 00ea 3C       		.uleb128 0x3c
 1531 00eb 19       		.uleb128 0x19
 1532 00ec 00       		.byte	0
 1533 00ed 00       		.byte	0
 1534 00ee 11       		.uleb128 0x11
 1535 00ef 35       		.uleb128 0x35
 1536 00f0 00       		.byte	0
 1537 00f1 49       		.uleb128 0x49
 1538 00f2 13       		.uleb128 0x13
 1539 00f3 00       		.byte	0
 1540 00f4 00       		.byte	0
 1541 00f5 00       		.byte	0
 1542              		.section	.debug_aranges,"",%progbits
 1543 0000 54000000 		.4byte	0x54
 1544 0004 0200     		.2byte	0x2
 1545 0006 00000000 		.4byte	.Ldebug_info0
 1546 000a 04       		.byte	0x4
 1547 000b 00       		.byte	0
 1548 000c 0000     		.2byte	0
 1549 000e 0000     		.2byte	0
 1550 0010 00000000 		.4byte	.LFB63
 1551 0014 4A000000 		.4byte	.LFE63-.LFB63
 1552 0018 00000000 		.4byte	.LFB64
 1553 001c 50000000 		.4byte	.LFE64-.LFB64
 1554 0020 00000000 		.4byte	.LFB65
 1555 0024 60000000 		.4byte	.LFE65-.LFB65
 1556 0028 00000000 		.4byte	.LFB66
 1557 002c 72000000 		.4byte	.LFE66-.LFB66
 1558 0030 00000000 		.4byte	.LFB67
 1559 0034 86000000 		.4byte	.LFE67-.LFB67
 1560 0038 00000000 		.4byte	.LFB68
 1561 003c 88010000 		.4byte	.LFE68-.LFB68
 1562 0040 00000000 		.4byte	.LFB69
 1563 0044 72000000 		.4byte	.LFE69-.LFB69
 1564 0048 00000000 		.4byte	.LFB70
 1565 004c 52000000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 31


 1566 0050 00000000 		.4byte	0
 1567 0054 00000000 		.4byte	0
 1568              		.section	.debug_ranges,"",%progbits
 1569              	.Ldebug_ranges0:
 1570 0000 00000000 		.4byte	.LFB63
 1571 0004 4A000000 		.4byte	.LFE63
 1572 0008 00000000 		.4byte	.LFB64
 1573 000c 50000000 		.4byte	.LFE64
 1574 0010 00000000 		.4byte	.LFB65
 1575 0014 60000000 		.4byte	.LFE65
 1576 0018 00000000 		.4byte	.LFB66
 1577 001c 72000000 		.4byte	.LFE66
 1578 0020 00000000 		.4byte	.LFB67
 1579 0024 86000000 		.4byte	.LFE67
 1580 0028 00000000 		.4byte	.LFB68
 1581 002c 88010000 		.4byte	.LFE68
 1582 0030 00000000 		.4byte	.LFB69
 1583 0034 72000000 		.4byte	.LFE69
 1584 0038 00000000 		.4byte	.LFB70
 1585 003c 52000000 		.4byte	.LFE70
 1586 0040 00000000 		.4byte	0
 1587 0044 00000000 		.4byte	0
 1588              		.section	.debug_line,"",%progbits
 1589              	.Ldebug_line0:
 1590 0000 8E020000 		.section	.debug_str,"MS",%progbits,1
 1590      02004901 
 1590      00000201 
 1590      FB0E0D00 
 1590      01010101 
 1591              	.LASF30:
 1592 0000 64697370 		.ascii	"disp_grid_init_ttc\000"
 1592      5F677269 
 1592      645F696E 
 1592      69745F74 
 1592      746300
 1593              	.LASF31:
 1594 0013 67726964 		.ascii	"grid\000"
 1594      00
 1595              	.LASF35:
 1596 0018 433A5C55 		.ascii	"C:\\Users\\Andrew\\Dropbox (Personal)\\MIT\\MIT 201"
 1596      73657273 
 1596      5C416E64 
 1596      7265775C 
 1596      44726F70 
 1597 0046 36205370 		.ascii	"6 Spring\\6115\\Final Project\\Code\\VGA\\Tic Tac T"
 1597      72696E67 
 1597      5C363131 
 1597      355C4669 
 1597      6E616C20 
 1598 0074 6F652E63 		.ascii	"oe.cydsn\000"
 1598      7964736E 
 1598      00
 1599              	.LASF29:
 1600 007d 76616C75 		.ascii	"value\000"
 1600      6500
 1601              	.LASF16:
 1602 0083 77616974 		.ascii	"waiter\000"
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 32


 1602      657200
 1603              	.LASF17:
 1604 008a 64697370 		.ascii	"disp_grid_init\000"
 1604      5F677269 
 1604      645F696E 
 1604      697400
 1605              	.LASF9:
 1606 0099 5F5F696E 		.ascii	"__int32_t\000"
 1606      7433325F 
 1606      7400
 1607              	.LASF33:
 1608 00a3 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1608      4320342E 
 1608      392E3320 
 1608      32303135 
 1608      30333033 
 1609 00d6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1609      20726576 
 1609      6973696F 
 1609      6E203232 
 1609      31323230 
 1610 0109 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1610      66756E63 
 1610      74696F6E 
 1610      2D736563 
 1610      74696F6E 
 1611              	.LASF22:
 1612 0131 785F7374 		.ascii	"x_start\000"
 1612      61727400 
 1613              	.LASF12:
 1614 0139 666C6F61 		.ascii	"float\000"
 1614      7400
 1615              	.LASF23:
 1616 013f 795F7374 		.ascii	"y_start\000"
 1616      61727400 
 1617              	.LASF1:
 1618 0147 756E7369 		.ascii	"unsigned char\000"
 1618      676E6564 
 1618      20636861 
 1618      7200
 1619              	.LASF26:
 1620 0155 64697370 		.ascii	"disp_grid_draw_xia\000"
 1620      5F677269 
 1620      645F6472 
 1620      61775F78 
 1620      696100
 1621              	.LASF5:
 1622 0168 6C6F6E67 		.ascii	"long unsigned int\000"
 1622      20756E73 
 1622      69676E65 
 1622      6420696E 
 1622      7400
 1623              	.LASF25:
 1624 017a 795F6865 		.ascii	"y_height\000"
 1624      69676874 
 1624      00
 1625              	.LASF34:
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 33


 1626 0183 2E5C6469 		.ascii	".\\disp.c\000"
 1626      73702E63 
 1626      00
 1627              	.LASF13:
 1628 018c 646F7562 		.ascii	"double\000"
 1628      6C6500
 1629              	.LASF32:
 1630 0193 64697370 		.ascii	"disp_grid_transmit\000"
 1630      5F677269 
 1630      645F7472 
 1630      616E736D 
 1630      697400
 1631              	.LASF20:
 1632 01a6 636F6C6F 		.ascii	"color\000"
 1632      7200
 1633              	.LASF38:
 1634 01ac 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1634      52784275 
 1634      66666572 
 1634      00
 1635              	.LASF8:
 1636 01b9 756E7369 		.ascii	"unsigned int\000"
 1636      676E6564 
 1636      20696E74 
 1636      00
 1637              	.LASF7:
 1638 01c6 6C6F6E67 		.ascii	"long long unsigned int\000"
 1638      206C6F6E 
 1638      6720756E 
 1638      7369676E 
 1638      65642069 
 1639              	.LASF21:
 1640 01dd 64697370 		.ascii	"disp_grid_draw_square\000"
 1640      5F677269 
 1640      645F6472 
 1640      61775F73 
 1640      71756172 
 1641              	.LASF19:
 1642 01f3 64697370 		.ascii	"disp\000"
 1642      00
 1643              	.LASF36:
 1644 01f8 64697370 		.ascii	"disp_grid_81\000"
 1644      5F677269 
 1644      645F3831 
 1644      00
 1645              	.LASF10:
 1646 0205 696E7433 		.ascii	"int32_t\000"
 1646      325F7400 
 1647              	.LASF15:
 1648 020d 73697A65 		.ascii	"sizetype\000"
 1648      74797065 
 1648      00
 1649              	.LASF28:
 1650 0216 64697370 		.ascii	"disp_grid_ttc_place\000"
 1650      5F677269 
 1650      645F7474 
 1650      635F706C 
ARM GAS  C:\Users\Andrew\AppData\Local\Temp\cclIkbzJ.s 			page 34


 1650      61636500 
 1651              	.LASF6:
 1652 022a 6C6F6E67 		.ascii	"long long int\000"
 1652      206C6F6E 
 1652      6720696E 
 1652      7400
 1653              	.LASF18:
 1654 0238 7365636F 		.ascii	"seconds\000"
 1654      6E647300 
 1655              	.LASF14:
 1656 0240 63686172 		.ascii	"char\000"
 1656      00
 1657              	.LASF37:
 1658 0245 6D617472 		.ascii	"matrix\000"
 1658      697800
 1659              	.LASF2:
 1660 024c 73686F72 		.ascii	"short int\000"
 1660      7420696E 
 1660      7400
 1661              	.LASF24:
 1662 0256 785F7769 		.ascii	"x_width\000"
 1662      64746800 
 1663              	.LASF11:
 1664 025e 75696E74 		.ascii	"uint8\000"
 1664      3800
 1665              	.LASF4:
 1666 0264 6C6F6E67 		.ascii	"long int\000"
 1666      20696E74 
 1666      00
 1667              	.LASF0:
 1668 026d 7369676E 		.ascii	"signed char\000"
 1668      65642063 
 1668      68617200 
 1669              	.LASF3:
 1670 0279 73686F72 		.ascii	"short unsigned int\000"
 1670      7420756E 
 1670      7369676E 
 1670      65642069 
 1670      6E7400
 1671              	.LASF27:
 1672 028c 64697370 		.ascii	"disp_grid_draw_hu\000"
 1672      5F677269 
 1672      645F6472 
 1672      61775F68 
 1672      7500
 1673              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
